#define _CRT_SECURE_NO_WARNINGS
#include <direct.h>

#include "src/kknd.h"

#include "src/_unsorted_functions.h"
#include "src/_unsorted_data.h"

#include "src/File.h"
#include "src/Random.h"
#include "src/Render.h"
#include "src/stru29.h"
#include "src/Script.h"
#include "src/ScriptEvent.h"
#include "src/Cursor.h"
#include "src/Entity.h"
#include "src/Input.h"
#include "src/Coroutine.h"

#pragma comment(lib, "Winmm.lib") // timeGetTime
#pragma comment(lib, "ddraw.lib") // DirectDrawCreate
#pragma comment(lib, "Dsound.lib") // DirectSoundCreate


void __stdcall nullsub_2(int, int) {}
void nullsub_1(void) {}


bool map_is_same_tile(int coord1, int coord2)
{
    return !map_is_different_tile(coord1, coord2);
}

bool map_is_different_tile(int coord1, int coord2)
{
    // original code, equivalent to global2map(coord1) != global2map(coord2)
    return (coord1 ^ coord2) & 0xFFFFE000;
}

int global2map(int coordinate)
{
    return coordinate >> 13;
}

int map2global(int coordinate)
{
    return coordinate << 13;
}

SOUND_ID get_unit_move_confirmation_sound(UNIT_ID unit_id, bool experienced)
{
    if (is_21st_century(unit_id))
    {
        return _4689C0_sound_ids[kknd_rand() % 22];
    }
    else if (unit_id == UNIT_STATS_SURV_SCOUT)
    {
        return SOUND_SURV_UNIT_SCOUT_192;
    }
    else if (unit_id == UNIT_STATS_MUTE_MISSILE_CRAB)
    {
        return SOUND_MUTE_UNIT_MISSILE_CRAB_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_GIANT_BEETLE)
    {
        return SOUND_MUTE_UNIT_GIANT_BEETLE_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_WAR_MASTADONT)
    {
        return SOUND_MUTE_UNIT_WAR_MASTADONT_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_GIANT_SCORPION)
    {
        return SOUND_MUTE_UNIT_GIANT_SCORPION_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_DIRE_WOLF)
    {
        return SOUND_MUTE_UNIT_DIRE_WOLF_2;
    }
    else
    {
        if (!is_player_faction_evolved())
        {
            if (experienced)
            {
                int v13 = kknd_rand();
                return _468A48_sound_ids[(((unsigned __int64)v13 >> 32) ^ abs(v13) & 1) - ((unsigned __int64)v13 >> 32)];
            }
            else
            {
                return _468A28_sound_ids[kknd_rand() % 3];
            }
        }
        else
        {
            if (experienced)
            {
                int v14 = kknd_rand();
                return _468A50_sound_ids[(((unsigned __int64)v14 >> 32) ^ abs(v14) & 1) - ((unsigned __int64)v14 >> 32)];
            }
            else
            {
                return _468A38_sound_ids[kknd_rand() % 3];
            }
        }
    }
}


SOUND_ID get_unit_attack_confirmation_sound(UNIT_ID unit_id, bool experienced)
{
    if (is_21st_century(unit_id))
    {
        return _4689B0_sound_ids[kknd_rand() % 3];
    }
    else if (unit_id == UNIT_STATS_MUTE_MISSILE_CRAB)
    {
        return SOUND_MUTE_UNIT_MISSILE_CRAB_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_GIANT_BEETLE)
    {
        return SOUND_MUTE_UNIT_GIANT_BEETLE_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_WAR_MASTADONT)
    {
        return SOUND_MUTE_UNIT_WAR_MASTADONT_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_GIANT_SCORPION)
    {
        return SOUND_MUTE_UNIT_GIANT_SCORPION_2;
    }
    else if (unit_id == UNIT_STATS_MUTE_DIRE_WOLF)
    {
        return SOUND_MUTE_UNIT_DIRE_WOLF_2;
    }
    else if (unit_id == UNIT_STATS_SURV_SCOUT)
    {
        return SOUND_SURV_UNIT_SCOUT_192;
    }
    else
    {
        if (experienced)
        {
            if (is_player_faction_evolved())
                return SOUND_153;
            else
                return SOUND_73;
        }
        else
        {
            if (!is_player_faction_evolved())
            {
                if ((char)kknd_rand() % -2)
                {
                    return SOUND_59;
                }
                else
                {
                    return SOUND_48;
                }
            }
            else
            {
                if ((char)kknd_rand() % -2)
                {
                    return SOUND_92;
                }
                else
                {
                    return SOUND_119;
                }
            }
        }
    }
}


SOUND_ID get_unit_ready_sound(UNIT_ID unit_id)
{
    switch (unit_id)
    {
        case UNIT_STATS_MUTE_DIRE_WOLF:
            return SOUND_MUTE_UNIT_DIRE_WOLF_READY;

        case UNIT_STATS_MUTE_GIANT_BEETLE:
            return SOUND_MUTE_UNIT_GIANT_BEETLE_READY;

        case UNIT_STATS_MUTE_GIANT_SCORPION:
            return SOUND_MUTE_UNIT_GIANT_SCORPION_READY;

        case UNIT_STATS_MUTE_MISSILE_CRAB:
            return SOUND_MUTE_UNIT_MISSILE_CRAB_READY;

        case UNIT_STATS_MUTE_WAR_MASTADONT:
            return SOUND_MUTE_UNIT_WAR_MASTADONT_READY;

        default:
        {
            int v14 = kknd_rand();
            if (is_player_faction_evolved())
            {
                return _468998_sound_ids[(((unsigned __int64)v14 >> 32) ^ abs(v14) & 3) - ((unsigned __int64)v14 >> 32)];
            }
            else
            {
                return _468988_sound_ids[(((unsigned __int64)v14 >> 32) ^ abs(v14) & 3) - ((unsigned __int64)v14 >> 32)];
            }
        }
    }
}



bool mobile_base_can_deploy(Entity *entity)
{
    UNIT_ID unit_id = entity->unit_id;

    entity->unit_id = unit_id == UNIT_STATS_SURV_MOBILE_OUTPOST ? UNIT_STATS_SURV_OUTPOST : UNIT_STATS_MUTE_CLANHALL;

    bool result = entity_40DBF0_boxd_does_unit_fit(entity);
    entity->unit_id = unit_id;

    return result;
}

//----- (00401000) --------------------------------------------------------
int stru31_list_alloc()
{
	stru31 *v0; // eax@1
	int v1; // ecx@2
	int result; // eax@4

	v0 = (stru31 *)malloc(0x2D0u);
	stru31_list = v0;
	if (v0)
	{
		stru31_list_free_pool = v0;
		v1 = 0;
		do
		{
			*(char **)((char *)&v0->next + v1) = (char *)v0 + v1 + 12;
			v0 = stru31_list;
			v1 += 12;
		} while (v1 < 708);
		stru31_list[25].param__entity__int = 0;
		stru31_list_477300 = (stru31 *)&stru31_list_477300;
		stru31_list_477304 = (stru31 *)&stru31_list_477300;
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00401060) --------------------------------------------------------
void stru31_list_free()
{
	free(stru31_list);
}

//----- (00401070) --------------------------------------------------------
void entity_401070_stru31(Entity *a1)
{
	stru31 *v1; // eax@1

	v1 = stru31_list_free_pool;
	if (stru31_list_free_pool)
		stru31_list_free_pool = stru31_list_free_pool->next;
	else
		v1 = 0;
	if (v1)
	{
		v1->param__entity__int = a1;
		v1->next = stru31_list_477300;
		v1->prev = (stru31 *)&stru31_list_477300;
		stru31_list_477300->prev = v1;
		stru31_list_477300 = v1;
	}
}

//----- (004010B0) --------------------------------------------------------
void UNIT_AttachHandler_DockPoint(Script *self)
{
	(*((void(**)(void))self->param + 4))();
}

//----- (004010C0) --------------------------------------------------------
void EntityTowerAttachment_handler_4010C0(EntityTurret *a1)
{
	int v1; // eax@1

	v1 = a1->entity->current_mobd_lookup_idx;
	a1->mobd_lookup_id = v1;
	sprite_4272E0_load_mobd_item(
		a1->turret_sprite,
		a1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[v1 + 1]);
}

//----- (004010E0) --------------------------------------------------------
void EntityTowerAttachment_handler_4010E0(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1

	v1 = a1;
	sprite_4272E0_load_mobd_item(
		a1->turret_sprite,
		a1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[a1->mobd_lookup_id + 1]);
	v1->handler = EntityTowerAttachment_handler_4010C0;
}

//----- (004019A0) --------------------------------------------------------
void Task_context_0_4019A0(Task_context_0 *a1)
{
	int v1; // eax@2
	int v2; // eax@5

	if (a1->field_4 > 0)
	{
		a1->sprite_1->pstru7 = _4640E0_stru7_array;
		a1->sprite_1->drawjob->flags &= 0xBFFFFFFF;
		v1 = a1->field_4;
		a1->handler = Task_context_0_401A80;
		if (v1 > 0)
		{
			if (v1 <= 1)
			{
				a1->sprite_2->drawjob->flags |= 0x40000000u;
			}
			else
			{
				a1->sprite_2->drawjob->flags &= 0xBFFFFFFF;
				v2 = a1->field_4;
				if (v2 <= 9)
					sprite_4272E0_load_mobd_item(a1->sprite_2, 2276, v2 - 1);
				else
					sprite_4272E0_load_mobd_item(a1->sprite_2, 2276, 8);
			}
		}
		else
		{
			a1->field_4 = 0;
			a1->handler = Task_context_0_401A40;
		}
	}
}

//----- (00401A40) --------------------------------------------------------
void Task_context_0_401A40(Task_context_0 *a1)
{
	a1->sprite_1->pstru7 = &_479D48_stru7;
	a1->sprite_1->drawjob->flags |= 0x40000000u;
	a1->sprite_2->drawjob->flags |= 0x40000000u;
	a1->handler = Task_context_0_4019A0;
}

//----- (00401A80) --------------------------------------------------------
void Task_context_0_401A80(Task_context_0 *a1)
{
	int v1; // eax@1
	int v2; // eax@4

	v1 = a1->field_4;
	if (v1 > 0)
	{
		if (v1 <= 1)
		{
			a1->sprite_2->drawjob->flags |= 0x40000000u;
		}
		else
		{
			a1->sprite_2->drawjob->flags &= 0xBFFFFFFF;
			v2 = a1->field_4;
			if (v2 <= 9)
				sprite_4272E0_load_mobd_item(a1->sprite_2, 2276, v2 - 1);
			else
				sprite_4272E0_load_mobd_item(a1->sprite_2, 2276, 8);
		}
	}
	else
	{
		a1->field_4 = 0;
		a1->handler = Task_context_0_401A40;
	}
}

//----- (00401AF0) --------------------------------------------------------
void Task_context_0_401AF0(Task_context_0 *a1)
{
	int v1; // eax@1
	int v2; // eax@4

	a1->sprite_1->pstru7 = _4640E0_stru7_array;
	a1->sprite_1->drawjob->flags &= 0xBFFFFFFF;
	v1 = a1->field_4;
	a1->handler = Task_context_0_401A80;
	if (v1 > 0)
	{
		if (v1 <= 1)
		{
			a1->sprite_2->drawjob->flags |= 0x40000000u;
		}
		else
		{
			a1->sprite_2->drawjob->flags &= 0xBFFFFFFF;
			v2 = a1->field_4;
			if (v2 <= 9)
				sprite_4272E0_load_mobd_item(a1->sprite_2, 2276, v2 - 1);
			else
				sprite_4272E0_load_mobd_item(a1->sprite_2, 2276, 8);
		}
	}
	else
	{
		a1->field_4 = 0;
		a1->handler = Task_context_0_401A40;
	}
}

//----- (00401B80) --------------------------------------------------------
void EventHandler_401B80(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Task_context_0 *v4; // eax@1
	int v5; // ecx@5
	int v6; // ecx@8

	v4 = (Task_context_0 *)receiver->param;
	switch (event)
	{
	case EVT_MSG_1548_sidebar:
		if (v4->field_4 > 0)
		{
			do
			{
				if (UNIT_num_player_units > 0)
					--UNIT_num_player_units;
				v5 = v4->field_4 - 1;
				v4->field_4 = v5;
			} while (v5 > 0);
		}
		goto LABEL_6;
	case EVT_MSG_1514:
	LABEL_6:
		v4->field_4 = 0;
		v4->handler = Task_context_0_401A40;
		break;
	case EVT_MSG_1511_sidebar_click_category:
		++v4->field_4;
		break;
	case EVT_SHOW_UI_CONTROL:
		v6 = v4->field_4;
		if (v6 > 0)
			v4->field_4 = v6 - 1;
		break;
	default:
		return;
	}
}
// 47DCC8: using guessed type int UNIT_num_player_units;

//----- (00401C30) --------------------------------------------------------
void script_401C30_sidebar(Script *a1)
{
	Task_context_0 *v1; // edi@1
	Sprite *v2; // esi@3
	Sprite *v3; // ebx@3
	DrawJob *v4; // ecx@3

	v1 = (Task_context_0 *)a1->param;
	if (!v1)
	{
		v1 = (Task_context_0 *)script_create_local_object(a1, 20);
		if (v1)
		{
			v2 = a1->sprite;
			v3 = _47CA08_sidebar_buttons[1]->sprite;
			a1->param = v1;
			v1->sprite_1 = v3;
			v1->field_4 = 0;
			v1->sprite_2 = v2;
			v1->task = a1;
			v1->handler = Task_context_0_401A40;
			a1->event_handler = EventHandler_401B80;
			is_player_faction_evolved();
			v3->x = 0x26000;
			v3->field_88_unused = 1;
			v3->y = 0x12000;
			v3->z_index = 2;
			v4 = v2->drawjob;
			v2->x = 0x26400;
			v2->field_88_unused = 1;
			v2->y = 0x13800;
			v2->z_index = 3;
			v4->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
			v2->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[player_side]];
			v2->drawjob->flags |= 0x10000000u;
			sprite_4272E0_load_mobd_item(v2, 2276, 0);
		}
	}
	(v1->handler)(v1);
}

//----- (00401D10) --------------------------------------------------------
void Task_context_1_BomberDmgHandler_401D10(Task_context_1_BomberDmgHandler *a1)
{
	Task_context_1_BomberDmgHandler *v1; // esi@1

	v1 = a1;
	--_47C048_unit_bomberdmg;
	sprite_list_remove(a1->sprite);
	script_yield(v1->task);
}
// 47C048: using guessed type int _47C048_unit_bomberdmg;

//----- (00401D30) --------------------------------------------------------
void Task_context_1_BomberDmgHandler_401D30(Task_context_1_BomberDmgHandler *a1)
{
	Task_context_1_BomberDmgHandler *v1; // ebx@1
	Sprite *v2; // esi@1
	void *v3; // edi@1
	Script *v4; // ST00_4@3

	v1 = a1;
	v2 = a1->sprite;
	v3 = v2->param;
	v2->x_speed = 0;
	v2->y_speed = 0;
	v2->z_speed = 0;
	v2->z_speed_factor_2 = 0;
	v2->z_index = 1;
	if (*((_DWORD *)v3 + 3) != -1)
	{
		v2->z_index = 255;
		sprite_408800_play_sound(v2, SOUND_GENERIC_PROJECTILE_DMG_2, _4690A8_unit_sounds_volume, 0);
		v2->mobd_id = MOBD_EXPLOSIONS;
		sprite_load_mobd(v2, *((_DWORD *)v3 + 3));
		v2->_60_mobd_anim_speed = 0x20000000;
		v2->z_index = 768;
		sprite_439180_add_explosions(v2);
		sprite_40D8B0_dmg(v2, *((_DWORD *)v3 + 8));
	}
	v4 = v1->task;
	v1->handler = Task_context_1_BomberDmgHandler_401D10;
	script_445370_yield_to_main_thread(v4, 0x10000000, 0);
}

//----- (00401DC0) --------------------------------------------------------
void Task_context_1_BomberDmgHandler_401DC0(Task_context_1_BomberDmgHandler *a1)
{
	if (a1->sprite->z_index <= 0)
		a1->handler = Task_context_1_BomberDmgHandler_401D30;
}

//----- (00401DE0) --------------------------------------------------------
void Task_context_1_BomberDmgHandler_401DE0(Task_context_1_BomberDmgHandler *a1)
{
	Task_context_1_BomberDmgHandler *v1; // esi@1
	Sprite *v2; // ecx@1

	v1 = a1;
	v2 = a1->sprite;
	v2->pstru7 = &_479D48_stru7;
	v2->z_speed = 512;
	v2->z_speed_limit = 512;
	v2->z_speed_factor_2 = -34;
	sprite_408800_play_sound(v2, SOUND_163, _4690A8_unit_sounds_volume, 0);
	v1->handler = Task_context_1_BomberDmgHandler_401DC0;
}

//----- (00401E20) --------------------------------------------------------
void UNIT_DmgHandler_Bomber(Script *a1)
{
	Task_context_1_BomberDmgHandler *v1; // eax@1
	Sprite *v2; // ecx@3

	v1 = (Task_context_1_BomberDmgHandler *)a1->param;
	if (!v1)
	{
		v1 = (Task_context_1_BomberDmgHandler *)script_create_local_object(a1, 12);
		if (v1)
		{
			v2 = a1->sprite;
			a1->param = v1;
			v1->sprite = v2;
			v1->task = a1;
			v1->handler = Task_context_1_BomberDmgHandler_401DE0;
		}
	}
	(v1->handler)(v1);
}

//----- (00401E60) --------------------------------------------------------
bool BeastEnclosureAllowsNuke()
{
	return max_beastenclosure_level >= 4;
}
// 47733C: using guessed type int max_beastenclosure_level;

//----- (00401E70) --------------------------------------------------------
void EventHandler_BeastEnclosure(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Script *v4; // edi@1
	Script *v5; // ebx@1
	Entity *v6; // esi@1
	EntityBuildingState *v7; // eax@14
	ProductionGroup *v8; // ecx@14
	int v9; // edx@14
	bool v10; // sf@14
	int tech_level; // eax@19
	int v12; // eax@20
	int v13; // eax@22

	v4 = receiver;
	v5 = sender;
	v6 = (Entity *)receiver->param;
	if (!v6->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_DESTROY:
			entity_402E40_destroy(v6, entity_mode_beastenclosure_on_death);
			return;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage(v6, param, entity_mode_beastenclosure_on_death);
			entity_410520_update_healthbar_color(v6);
			return;
		case EVT_MSG_SABOTAGE:
			entity_sabotage(v6, param, entity_mode_beastenclosure_on_death);
			return;
		case EVT_MSG_PRODUCTION_READY:
			v6->sprite->field_88_unused = 1;
			if (spawn_unit(
				(enum UNIT_ID)(int)param,
				v6->stru60.pstru4->x_offset + v6->sprite->x,
				v6->stru60.pstru4->y_offset + v6->sprite->y,
				v6->player_side)
				&& player_side == v6->player_side)
			{
				show_message_ex(0, aUnitReady);
				switch ((int)param)
				{
				case UNIT_STATS_MUTE_DIRE_WOLF:     // Dire Wolf
					sound_play(SOUND_MUTE_UNIT_DIRE_WOLF_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					break;
				case UNIT_STATS_MUTE_GIANT_BEETLE:  // Giant Beetle
					sound_play(SOUND_MUTE_UNIT_GIANT_BEETLE_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					break;
				case UNIT_STATS_MUTE_GIANT_SCORPION:// Giant Scorpion
					sound_play(SOUND_MUTE_UNIT_GIANT_SCORPION_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					break;
				case UNIT_STATS_MUTE_MISSILE_CRAB:  // Missile Crab
					sound_play(SOUND_MUTE_UNIT_MISSILE_CRAB_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					break;
				case UNIT_STATS_MUTE_WAR_MASTADONT: // War Mastadont
					sound_play(SOUND_MUTE_UNIT_WAR_MASTADONT_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					break;
				default:
					return;
				}
			}
			return;
		case EVT_MSG_UPGRADE_COMPLETE:            // -- INLINED entity_beastclosure_upgrade_complete(a1, a2, message, param)
			v7 = (EntityBuildingState *)v6->state;
			v8 = v7->production_group;
			v9 = v7->num_upgrades + 1;
			v10 = v7->num_upgrades - 3 < 0;
			v7->num_upgrades = v9;
			if (!((unsigned __int8)(v10 ^ __OFSUB__(v9, 4)) | (v9 == 4)))
				v7->num_upgrades = 4;
			if (v6->player_side != player_side)
				goto LABEL_26;
			--__477318_beastenclosure_negindex[v7->num_upgrades];
			++_477318_beastenclosure.num_buildings_by_level[v7->num_upgrades];
			if (v7->num_upgrades > max_beastenclosure_level)
				max_beastenclosure_level = v7->num_upgrades;
			tech_level = v7->num_upgrades - 2;
			if (tech_level)
			{
				v12 = tech_level - 1;
				if (v12)
				{
					if (v12 == 1)
					{
						production_group_enable(v8, UNIT_STATS_MUTE_MISSILE_CRAB, 2504);
						LOBYTE_HEXRAYS(v13) = is_clanhall_maxed();
						if (v13)
						{
							attempt_unlock_aircraft();
							entity_4109A0_status_bar(v6);
							EventHandler_DefaultBuildingsHandler(v4, v5, event, param);
							return;
						}
					}
				}
				else
				{
					production_group_enable(v8, UNIT_STATS_MUTE_GIANT_BEETLE, 2512);
				}
			}
			else
			{
				production_group_enable(v8, UNIT_STATS_MUTE_WAR_MASTADONT, 2520);
			}
		LABEL_26:
			entity_4109A0_status_bar(v6);
			EventHandler_DefaultBuildingsHandler(v4, v5, event, param);
			break;
		default:
			EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
			return;
		}
	}
}
// 477314: using guessed type int __477318_beastenclosure_negindex[];
// 47733C: using guessed type int max_beastenclosure_level;

//----- (00402150) --------------------------------------------------------
void entity_402150_beastenclosure(Entity *a1)
{
	EntityBuildingState *v1; // esi@1

	v1 = (EntityBuildingState *)a1->state;
	v1->same_buildings_count = 0;
	script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_MUTE_BEAST_ENCLOSURE_HANDLER);
	if (!v1->same_buildings_count)
	{
		memset(&_477318_beastenclosure, 0, sizeof(_477318_beastenclosure));
		max_beastenclosure_level = 1;
	}
}
// 47733C: using guessed type int max_beastenclosure_level;

//----- (004021A0) --------------------------------------------------------
void UNIT_Handler_BeastEnclosure(Script *a1)
{
	Entity *v1; // esi@1
	EntityBuildingState *v2; // edi@3

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			v1->script->event_handler = EventHandler_BeastEnclosure;
			entity_initialize_building(
				v1,
				2,
				entity_mode_402350_beastenclosure,
				entity_mode_beastenclosure_set_default_production);
			v2 = (EntityBuildingState *)v1->state;
			v2->same_buildings_count = 0;
			script_trigger_event_group(v1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_MUTE_BEAST_ENCLOSURE_HANDLER);
			if (!v2->same_buildings_count)
			{
				max_beastenclosure_level = 1;
				memset(&_477318_beastenclosure, 0, sizeof(_477318_beastenclosure));
			}
			if (!v1->sprite->cplc_ptr1_pstru20)
			{
				entity_402BB0_set_arrive_handler(v1, entity_mode_402440_beastenclosure);
				(v1->mode)(v1);
				return;
			}
			v1->mode = entity_mode_402440_beastenclosure;
		}
		(v1->mode)(v1);
	}
}

//----- (00402250) --------------------------------------------------------
void entity_mode_beastenclosure_set_default_production(Entity *a1)
{
	Entity *v1; // esi@1
	enum PLAYER_SIDE v2; // eax@1
	EntityBuildingState *v3; // ebx@1
	ProductionGroup *v4; // eax@8
	ProductionGroup *v5; // esi@8
	enum LEVEL_ID v6; // eax@8
	unsigned int v7; // edx@8

	v1 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (player_side == v2)
	{
		if (a1->mode_arrive == entity_mode_beastenclosure_set_default_production)
		{
			v3->same_buildings_count = 0;
			script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_MUTE_BEAST_ENCLOSURE_HANDLER);
			if (!v3->same_buildings_count)
			{
				max_beastenclosure_level = 1;
				memset(&_477318_beastenclosure, 0, sizeof(_477318_beastenclosure));
			}
			v1->mode_arrive = 0;
			v1->mode = entity_mode_403650_building;
		}
		if (!v1->sprite->cplc_ptr1_pstru20)
			show_message_ex(0, aBuildingCompleted);
		v4 = entity_building_create_production_group(v1, PRODUCTION_GROUP_VEHICLES);
		v5 = v4;
		v3->production_group = v4;
		v6 = current_level_idx;
		v7 = levels[current_level_idx].disabled_units_mask;
		if (!(BYTE1(v7) & 0x80))
		{
			production_group_enable(v5, UNIT_STATS_MUTE_DIRE_WOLF, 2552);
			v6 = current_level_idx;
		}
		if (!(levels[v6].disabled_units_mask & 0x10000))
			production_group_enable(v5, UNIT_STATS_MUTE_GIANT_SCORPION, 2528);
		++_477318_beastenclosure.num_buildings_by_level[1];
	}
	else if (v2 == 0)
	{
		a1->mode_arrive = entity_mode_beastenclosure_set_default_production;
	}
}
// 47733C: using guessed type int max_beastenclosure_level;

//----- (00402350) --------------------------------------------------------
void entity_mode_402350_beastenclosure(Entity *a1)
{
	void *v1; // esi@1
	int v2; // edx@2
	int v3; // eax@2
	char *v4; // ecx@5
	int v5; // edx@6
	ProductionGroup *v6; // ecx@9

	v1 = a1->state;
	if (player_side == a1->player_side)
	{
		v2 = max_beastenclosure_level;
		--_477318_beastenclosure.num_buildings_by_level[*((_DWORD *)v1 + 1)];
		v3 = *((_DWORD *)v1 + 1);
		if (v3 == v2 && !_477318_beastenclosure.num_buildings_by_level[v3])
		{
			if (v3 > 0)
			{
				v4 = (char *) & _477318_beastenclosure + 4 * v3;
				do
				{
					v5 = *((_DWORD *)v4 - 1);
					v4 -= 4;
					--v3;
				} while (!v5 && v3 > 0);
			}
			max_beastenclosure_level = v3;
		}
		v6 = (ProductionGroup *)*((_DWORD *)v1 + 4);
		if (v6)
		{
			production_group_446860(v6);
			*((_DWORD *)v1 + 4) = 0;
		}
	}
}
// 47733C: using guessed type int max_beastenclosure_level;

//----- (004023C0) --------------------------------------------------------
void entity_mode_beastenclosure_on_death(Entity *a1)
{
	Entity *v1; // edi@1
	void *v2; // esi@1
	int v3; // edx@2
	int v4; // eax@2
	char *v5; // ecx@5
	int v6; // edx@6
	ProductionGroup *v7; // ecx@9

	v1 = a1;
	v2 = a1->state;
	if (player_side == a1->player_side)
	{
		v3 = max_beastenclosure_level;
		--_477318_beastenclosure.num_buildings_by_level[*((_DWORD *)v2 + 1)];
		v4 = *((_DWORD *)v2 + 1);
		if (v4 == v3 && !_477318_beastenclosure.num_buildings_by_level[v4])
		{
			if (v4 > 0)
			{
				v5 = (char *) & _477318_beastenclosure + 4 * v4;
				do
				{
					v6 = *((_DWORD *)v5 - 1);
					v5 -= 4;
					--v4;
				} while (!v6 && v4 > 0);
			}
			max_beastenclosure_level = v4;
		}
		v7 = (ProductionGroup *)*((_DWORD *)v2 + 4);
		if (v7)
		{
			production_group_446860(v7);
			*((_DWORD *)v2 + 4) = 0;
		}
	}
	entity_mode_building_default_on_death(v1);
}
// 47733C: using guessed type int max_beastenclosure_level;

//----- (00402440) --------------------------------------------------------
void entity_mode_402440_beastenclosure(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1

	v1 = a1;
	a1->mode_arrive = 0;
	entity_mode_beastenclosure_set_default_production(a1);
	v2 = v1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (player_side == v1->player_side && !v1->sprite->cplc_ptr1_pstru20)
		sound_play(SOUND_MUTE_BUILDING_COMPLETED, 0, _4690A8_unit_sounds_volume, 16, 0);
	v1->script->event_handler = EventHandler_BeastEnclosure;
	v1->script->script_type = SCRIPT_MUTE_BEAST_ENCLOSURE_HANDLER;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (004024D0) --------------------------------------------------------
void entity_blacksmith_on_upgrade_complete(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Script *v4; // edi@1
	Script *v5; // ebx@1
	Entity *v6; // esi@1
	EntityBuildingState *v7; // eax@1
	ProductionGroup *v8; // ecx@1
	int v9; // edx@1
	bool v10; // sf@1
	int v11; // eax@4

	v4 = receiver;
	v5 = sender;
	v6 = (Entity *)receiver->param;
	v7 = (EntityBuildingState *)v6->state;
	v8 = v7->production_group;
	v9 = v7->num_upgrades + 1;
	v10 = v7->num_upgrades - 2 < 0;
	v7->num_upgrades = v9;
	if (!((unsigned __int8)(v10 ^ __OFSUB__(v9, 3)) | (v9 == 3)))
		v7->num_upgrades = 3;
	if (v6->player_side == player_side)
	{
		v11 = v7->num_upgrades - 2;
		if (v11)
		{
			if (v11 == 1)
				production_group_enable(v8, UNIT_STATS_MUTE_TANKER, 2608);
		}
		else
		{
			production_group_enable(v8, UNIT_STATS_MONSTER_TRUCK, 2536);
		}
	}
	entity_4109A0_status_bar(v6);
	EventHandler_DefaultBuildingsHandler(v4, v5, event, param);
}

//----- (00402550) --------------------------------------------------------
void MessageHandler_Blacksmith(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Script *v4; // edi@1
	Script *v5; // ebx@1
	void *v6; // esi@1
	EntityBuildingState *v7; // eax@9
	ProductionGroup *v8; // ecx@9
	int v9; // edx@9
	bool v10; // sf@9
	int v11; // eax@12

	v4 = receiver;
	v5 = sender;
	v6 = receiver->param;
	if (!*((_DWORD *)v6 + 35))
	{
		switch (event)
		{
		case EVT_MSG_DESTROY:
			entity_402E40_destroy((Entity *)v6, entity_mode_blacksmith_on_death);
			break;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage((Entity *)v6, param, entity_mode_blacksmith_on_death);
			entity_410520_update_healthbar_color((Entity *)v6);
			break;
		case EVT_MSG_SABOTAGE:
			entity_sabotage((Entity *)v6, param, entity_mode_blacksmith_on_death);
			break;
		case EVT_MSG_PRODUCTION_READY:
			*(_DWORD *)(*((_DWORD *)v6 + 23) + 136) = 1;
			if (spawn_unit(
				(enum UNIT_ID)(int)param,
				*(_DWORD *)(*((_DWORD *)v6 + 25) + 4) + *(_DWORD *)(*((_DWORD *)v6 + 23) + 16),
				*(_DWORD *)(*((_DWORD *)v6 + 25) + 8) + *(_DWORD *)(*((_DWORD *)v6 + 23) + 20),
				*((enum PLAYER_SIDE *)v6 + 5)))
			{
				if (player_side == *((_DWORD *)v6 + 5))
				{
					sound_play(SOUND_MUTE_UNIT_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					show_message_ex(0, aUnitReady);
				}
			}
			break;
		case EVT_MSG_UPGRADE_COMPLETE:
			v7 = (EntityBuildingState *)*((_DWORD *)v6 + 8);
			v8 = v7->production_group;
			v9 = v7->num_upgrades + 1;
			v10 = v7->num_upgrades - 2 < 0;
			v7->num_upgrades = v9;
			if (!((unsigned __int8)(v10 ^ __OFSUB__(v9, 3)) | (v9 == 3)))
				v7->num_upgrades = 3;
			if (*((_DWORD *)v6 + 5) == player_side)
			{
				v11 = v7->num_upgrades - 2;
				if (v11)
				{
					if (v11 == 1)
						production_group_enable(v8, UNIT_STATS_MUTE_TANKER, 2608);
				}
				else
				{
					production_group_enable(v8, UNIT_STATS_MONSTER_TRUCK, 2536);
				}
			}
			entity_4109A0_status_bar((Entity *)v6);
			EventHandler_DefaultBuildingsHandler(v4, v5, event, param);
			break;
		default:
			EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
			break;
		}
	}
}

//----- (00402710) --------------------------------------------------------
void UNIT_Handler_Blacksmith(Script *a1)
{
	Entity *v1; // esi@1

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			v1->script->event_handler = MessageHandler_Blacksmith;
			entity_initialize_building(v1, 2, entity_mode_402840_blacksmith, entity_mode_402780_blacksmith);
			if (!v1->sprite->cplc_ptr1_pstru20)
			{
				entity_402BB0_set_arrive_handler(v1, entity_mode_402870_blacksmith);
				(v1->mode)(v1);
				return;
			}
			v1->mode = entity_mode_402870_blacksmith;
		}
		(v1->mode)(v1);
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (00402780) --------------------------------------------------------
void entity_mode_402780_blacksmith(Entity *a1)
{
	Entity *v1; // esi@1
	enum PLAYER_SIDE v2; // eax@1
	EntityBuildingState *v3; // edi@1
	ProductionGroup *v4; // eax@6
	ProductionGroup *v5; // esi@6
	enum LEVEL_ID v6; // eax@6
	unsigned int v7; // edx@6

	v1 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (player_side == v2)
	{
		if (a1->mode_arrive == entity_mode_402780_blacksmith)
		{
			a1->mode_arrive = 0;
			a1->mode = entity_mode_403650_building;
		}
		if (!a1->sprite->cplc_ptr1_pstru20)
			show_message_ex(0, aBuildingCompleted);
		v4 = entity_building_create_production_group(v1, PRODUCTION_GROUP_VEHICLES);
		v5 = v4;
		v3->production_group = v4;
		v6 = current_level_idx;
		v7 = levels[current_level_idx].disabled_units_mask;
		if (!(BYTE1(v7) & 0x40))
		{
			production_group_enable(v5, UNIT_STATS_MUTE_BIKE_AND_SIDECAR, 2544);
			v6 = current_level_idx;
		}
		if (!(levels[v6].disabled_units_mask & 0x20000))
			production_group_enable(v5, UNIT_STATS_MUTE_MOBILE_DERRICK, 2220);
	}
	else if (v2 == 0)
	{
		a1->mode_arrive = entity_mode_402780_blacksmith;
	}
}

//----- (00402840) --------------------------------------------------------
void entity_mode_402840_blacksmith(Entity *a1)
{
	void *v1; // esi@1
	ProductionGroup *v2; // ecx@2

	v1 = a1->state;
	if (player_side == a1->player_side)
	{
		v2 = (ProductionGroup *)*((_DWORD *)v1 + 4);
		if (v2)
		{
			production_group_446860(v2);
			*((_DWORD *)v1 + 4) = 0;
		}
	}
}

//----- (00402870) --------------------------------------------------------
void entity_mode_402870_blacksmith(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1

	v1 = a1;
	a1->mode_arrive = 0;
	entity_mode_402780_blacksmith(a1);
	v2 = v1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (player_side == v1->player_side && !v1->sprite->cplc_ptr1_pstru20)
		sound_play(SOUND_MUTE_BUILDING_COMPLETED, 0, _4690A8_unit_sounds_volume, 16, 0);
	v1->script->script_type = SCRIPT_MUTE_BLACKSMITH_HANDLER;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00402900) --------------------------------------------------------
void entity_mode_blacksmith_on_death(Entity *a1)
{
    entity_mode_building_default_on_death(a1);
}

//----- (00402A30) --------------------------------------------------------
int script_execute(Script *self)
{
	self->handler(self);
	return 0;
}

//----- (00402AB0) --------------------------------------------------------
void entity_mode_402AB0(Entity *a1)
{
	dword_477358 = 76354;
}
// 477358: using guessed type int dword_477358;

//----- (00402AC0) --------------------------------------------------------
bool entity_402AC0_is_mode_402AB0(Entity *a1)
{
	return a1->mode == entity_mode_402AB0;
}

//----- (00402AD0) --------------------------------------------------------
void entity_attach_docking_point(Entity *a1)
{
	Entity *v1; // ebx@1
	EntityTurret *v2; // esi@1
	Sprite *v3; // eax@2
	Script *v4; // eax@2

	v1 = a1;
	v2 = (EntityTurret *)script_create_local_object(a1->script, 56);
	if (v2)
	{
		memset(v2, 0, sizeof(EntityTurret));
		v3 = sprite_create_scripted(
			v1->stats->attach->mobd_id,
			v1->sprite,
			UNIT_AttachHandler_DockPoint,
			SCRIPT_FUNCTION,
			v1->stru60.ptr_0);
		v2->turret_sprite = v3;
		v3->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_44BDC0_entity_turret;
		v2->turret_sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[v1->player_side]];
		v2->turret_sprite->drawjob->flags |= 0x10000000u;
		v2->turret_sprite->drawjob->flags |= 0x40000000u;
		v4 = v2->turret_sprite->script;
		v2->sprite_task = v4;
		v4->param = v2;
		v2->turret_sprite->param = v2;
		v2->sprite_task->event_handler = MessageHandler_EntityScript;
		v2->entity = v1;
		v2->_C_entity = 0;
		v2->handler = EntityTurret_44BF00_handler;
		v2->field_18 = 0;
		v2->mobd_lookup_id = v1->current_mobd_lookup_idx;
		v2->stats_attachment_point = v1->stats->attach;
	}
	v1->turret = v2;
}

//----- (00402BB0) --------------------------------------------------------
DrawJob *entity_402BB0_set_arrive_handler(Entity *a1, void(*mode_arrive)(Entity *))
{
	Entity *v2; // esi@1
	void(*mOde_arrive)(Entity *); // edi@1
	Sprite *v4; // eax@3
	DataMobdItem_stru1 *v5; // eax@3
	int i; // ecx@4
	DrawJob *result; // eax@8

	v2 = a1;
	mOde_arrive = mode_arrive;
	sprite_4272E0_load_mobd_item(a1->sprite, a1->stats->mobd_lookup_offset_attack, 0);
	if (v2->player_side == player_side)
		script_trigger_event(v2->script, EVT_MSG_1529_ai, v2, task_mobd17_cursor);
	v4 = v2->sprite;
	v2->mode_arrive = mOde_arrive;
	v5 = v4->_54_inside_mobd_ptr4->field_18;
	if (v5)
	{
		for (i = v5->field_0; i != -1; v5 = (DataMobdItem_stru1 *)((char *)v5 + 16))
		{
			if (i == 3)
				v2->stru60.ptr_C = v5;
			i = v5->field_10;
		}
	}
	entity_40DD00_boxd(v2);
	result = v2->sprite->drawjob;
	result->flags &= 0xBFFFFFFF;
	v2->mode = entity_mode_402AB0;
	return result;
}

//----- (00402C40) --------------------------------------------------------
void entity_402C40_lower_hp_mute09_surv21(Entity *a1)
{
	if (a1->player_side == 0
		&& (current_level_idx == LEVEL_MUTE_09_FIGHT_FOR_TERRITORY || current_level_idx == LEVEL_SURV_21))
	{
		a1->hitpoints = a1->stats->hitpoints / 5 - 1;
	}
}

//----- (00402C80) --------------------------------------------------------
void entity_initialize_building(Entity *a1, __int16 sabotage_points, void(*mode_turn_return)(Entity *), void(*mode_return)(Entity *))
{
	Entity *v4; // esi@1
	__int16 v5; // bx@1
	EntityBuildingState *v6; // eax@1

	v4 = a1;
	v5 = sabotage_points;
	v6 = (EntityBuildingState *)script_create_local_object(a1->script, 40);
	v4->state = v6;
	v6->oilspot_for_drillrig__task_for_researchlab = 0;
	v6->num_upgrades = 1;
	v6->field_8__0_for_repstation = 0;
	v6->sabotage_points = v5;
	v6->same_buildings_count = 0;
	v6->production_group = 0;
	v6->field_18 = 0;
	v6->field_1C = 0;
	v6->field_20 = 0;
	v6->field_24 = 0;
	if (v4->player_side == player_side)
		building_limits_on_new_building(v4->unit_id);
	if (v4->sprite->cplc_ptr1_pstru20
		&& v4->player_side == 0
		&& (current_level_idx == LEVEL_MUTE_09_FIGHT_FOR_TERRITORY || current_level_idx == LEVEL_SURV_21))
	{
		v4->hitpoints = v4->stats->hitpoints / 5 - 1;// allied buildings are damaged in these missions
	}
	if (v4->stats->attach)
		entity_attach_docking_point(v4);
	entity_410DC0_building(v4);
	v4->mode_turn_return = mode_turn_return;
	v4->mode_return = mode_return;
}

//----- (00402D40) --------------------------------------------------------
bool entity_sabotage(Entity *a1, void *param, void(*on_death_mode)(Entity *))
{
	int v3; // edi@1
	Entity *v4; // esi@1
	int sabotageur_side; // eax@1
	enum PLAYER_SIDE sabotage_target_side; // ecx@1
	EntityBuildingState *v7; // ebx@1
	__int16 v8; // ax@2
	enum SOUND_ID v10; // ecx@7
	__int16 v11; // ax@14
	int v12; // [sp-Ch] [bp-18h]@7

	v3 = (int)param;
	v4 = a1;
	sabotageur_side = *((_DWORD *)param + 5);
	sabotage_target_side = a1->player_side;
	v7 = (EntityBuildingState *)v4->state;
	if (sabotageur_side == sabotage_target_side)// reinforce
	{
		v8 = v7->sabotage_points;
		if (v8 < 5)
		{
			v7->sabotage_points = v8 + 1;
			entity_update_sabotage_bar(v4);
			return 0;
		}
		return 0;
	}
	if (sabotageur_side == player_side)
	{
		if (sabotage_target_side != player_side)
		{
			show_message_ex(v4, aBuildingSabotaged);
			if (*(_DWORD *)(v3 + 16) == 10)
			{
				v12 = _4690A8_unit_sounds_volume;
				v10 = SOUND_40_sabotage;
			}
			else
			{
				v12 = _4690A8_unit_sounds_volume;
				v10 = SOUND_105_sabotage;
			}
		LABEL_13:
			sound_play(v10, 0, v12, 16, 0);
			goto LABEL_14;
		}
	}
	else if (sabotage_target_side == player_side)
	{
		show_message_ex(v4, aBuildingSabotaged);
		if (*(_DWORD *)(v3 + 16) == 10)
		{
			v10 = SOUND_26_sabotage;
			v12 = _4690A8_unit_sounds_volume;
		}
		else
		{
			v12 = _4690A8_unit_sounds_volume;
			v10 = SOUND_93_sabotage;
		}
		goto LABEL_13;
	}
LABEL_14:
	v11 = v7->sabotage_points;
	if (!v11)
	{
		game_globals_per_player.cash[*(_DWORD *)(v3 + 20)] += v4->stats->cost;
		v4->mode = on_death_mode;
		return 0;
	}
	v7->sabotage_points = v11 - 1;
	entity_update_sabotage_bar(v4);
	return 0;
}

//----- (00402E40) --------------------------------------------------------
int entity_402E40_destroy(Entity *a1, void(*new_mode)(Entity *))
{
	Entity *v2; // esi@1
	void(*nEw_mode)(Entity *); // edi@1
	int result; // eax@1
	Script *v5; // ST00_4@2

	v2 = a1;
	nEw_mode = new_mode;
	result = a1->hitpoints;
	if (result > 0)
	{
		v5 = a1->script;
		a1->hitpoints = 0;
		result = script_445370_yield_to_main_thread(v5, 0x80000000, 1);
		v2->hitpoints = 0;
		v2->mode = nEw_mode;
		v2->destroyed = 1;
	}
	return result;
}

//----- (00402E90) --------------------------------------------------------
void entity_402E90_on_damage(Entity *a1, void *param, void(*on_death_mode)(Entity *))
{
	Entity *v3; // esi@1
	void *damage_amount; // edi@2
	int v5; // eax@4
	Script *v6; // eax@6
	int v7; // eax@8

	v3 = a1;
	if (param)
	{
		damage_amount = (void *)*((_WORD *)param + 72);
		if (a1->hitpoints > 0)
		{
			if (a1->stats->field_54)
			{
				v5 = *((_DWORD *)param + 32);
				if (v5)
				{
					if (*(_DWORD *)(v5 + 304) == *((_DWORD *)param + 33))
					{
						v6 = *(Script **)(v5 + 12);
						if (v6)
							script_trigger_event(a1->script, EVT_MSG_1505, damage_amount, v6);
					}
				}
			}
			v7 = v3->hitpoints - (_DWORD)damage_amount;
			v3->hitpoints = v7;
			if (v7 <= 0)
			{
				script_445370_yield_to_main_thread(v3->script, 0x80000000, 1);
				v3->hitpoints = 0;
				v3->mode = on_death_mode;
				v3->destroyed = 1;
			}
		}
	}
}

//----- (00403B70) --------------------------------------------------------
int sub_403B70(CHAR a1)
{
	int v1; // eax@3
	int v2; // ecx@4
	int result; // eax@7
	CHAR RootPathName[4]; // [sp+0h] [bp-4h]@1

	strcpy(RootPathName, "#:\\");
	RootPathName[0] = a1;

	v2 = GetDriveTypeA(RootPathName);

	switch (v2)
	{
	case 5:
		result = 1;
		break;
	case 0:
	case 1:
		result = -1;
		break;
	default:
		result = 0;
		break;
	}
	return result;
}

//----- (00403C20) --------------------------------------------------------
int get_max_clanhall_level()
{
	return max_clanhall_level;
}

//----- (00403C30) --------------------------------------------------------
bool is_clanhall_maxed()
{
	return max_clanhall_level >= 5;
}

//----- (00403C40) --------------------------------------------------------
void entity_clanhall_on_upgrade_complete(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Script *v4; // ebp@1
	Entity *v5; // ebx@1
	EntityBuildingState *v6; // eax@1
	ProductionGroup *v7; // edi@1
	int v8; // ecx@1
	int can_unlock_towers; // esi@4
	unsigned int v10; // ecx@10
	enum LEVEL_ID v11; // eax@12
	unsigned int v12; // ecx@17
	enum LEVEL_ID v13; // eax@19
	unsigned int v14; // eax@22
	int v15; // eax@26
	Script *a2a; // [sp+10h] [bp-4h]@1

	v4 = receiver;
	a2a = sender;
	v5 = (Entity *)receiver->param;
	v6 = (EntityBuildingState *)v5->state;
	v7 = v6->production_group;
	v8 = v6->num_upgrades + 1;
	v6->num_upgrades = v8;
	if (v8 > 5)
		v6->num_upgrades = 5;
	if (v5->player_side == player_side)
	{
		can_unlock_towers = 0;
		*(&building_limits_list_free_pool           // DECOMPILATION ERROR __477378_clanhall negindex
			+ v6->num_upgrades) = (BuildingLimits *)((char *)*(&building_limits_list_free_pool
				+ v6->num_upgrades) - 1);
		++_477378_clanhall.num_buildings_by_level[v6->num_upgrades];
		if (v6->num_upgrades > max_clanhall_level)
		{
			max_clanhall_level = v6->num_upgrades;
			can_unlock_towers = 1;
		}
		switch (v6->num_upgrades)
		{
		case 2:
			if (!(levels[current_level_idx].disabled_units_mask & 0x200000))
				production_group_enable(v7, UNIT_STATS_MUTE_PYROMANIAC, 2800);
			if (can_unlock_towers)
			{
				sub_447000();
				v10 = levels[current_level_idx].disabled_units_mask;
				if (!(BYTE1(v10) & 8))
					production_group_enable(_47B3B8_tower_production_group, UNIT_STATS_MUTE_MACHINEGUN_NEST, 2432);
			}
			break;
		case 3:
			v11 = current_level_idx;
			if (!(levels[current_level_idx].disabled_units_mask & 0x400000))
			{
				production_group_enable(v7, UNIT_STATS_MUTE_VANDAL, 2760);
				v11 = current_level_idx;
			}
			if (!(levels[v11].disabled_units_mask & 0x800000))
			{
				production_group_enable(v7, UNIT_STATS_MUTE_RIOTER, 2784);
				v11 = current_level_idx;
			}
			if (can_unlock_towers)
			{
				v12 = levels[v11].disabled_units_mask;
				if (!(BYTE1(v12) & 2))
					production_group_enable(_47B3B8_tower_production_group, UNIT_STATS_MUTE_GRAPESHOT_TOWER, 2424);
			}
			break;
		case 4:
			v13 = current_level_idx;
			if (!(levels[current_level_idx].disabled_units_mask & 0x1000000))
			{
				production_group_enable(v7, UNIT_STATS_MUTE_BAZOOKA, 2768);
				v13 = current_level_idx;
			}
			if (can_unlock_towers)
			{
				v14 = levels[v13].disabled_units_mask;
				if (!(BYTE1(v14) & 0x10))
					production_group_enable(_47B3B8_tower_production_group, UNIT_STATS_MUTE_ROTARY_CANNON, 2408);
			}
			break;
		case 5:
			if (!(levels[current_level_idx].disabled_units_mask & 0x2000000))
				production_group_enable(v7, UNIT_STATS_MUTE_CRAZY_HARRY, 2752);
			if (BeastEnclosureAllowsNuke())
				attempt_unlock_aircraft();
			break;
		default:
			break;
		}
	}
	entity_4109A0_status_bar(v5);
	EventHandler_DefaultBuildingsHandler(v4, a2a, event, param);
}

//----- (00403E90) --------------------------------------------------------
void EventHandler_Clanhall(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	switch (event)
	{
	case EVT_MSG_DESTROY:
		entity_402E40_destroy((Entity *)receiver->param, entity_mode_clanhall_on_death);
		break;
	case EVT_MSG_PRODUCTION_READY:
		if (param == (void *)UNIT_STATS_MUTE_WASP)// wasp
		{
			if (v4->player_side == player_side)
			{
				show_message_ex(0, aAirStrikeReady);
				on_airstrike_ready();
			}
		}
		else
		{
			v4->sprite->field_88_unused = 1;
			if (spawn_unit(
				(enum UNIT_ID)(int)param,
				v4->stru60.pstru4->x_offset + v4->sprite->x,
				v4->stru60.pstru4->y_offset + v4->sprite->y,
				v4->player_side))
			{
				if (v4->player_side == player_side)
				{
					show_message_ex(0, aUnitReady);
					sound_play(SOUND_MUTE_UNIT_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
				}
			}
			else
			{
				show_message_ex(0, aCouldntCreateNewUnit);
			}
		}
		break;
	case EVT_MSG_DAMAGE:
		entity_402E90_on_damage(v4, param, entity_mode_clanhall_on_death);
		entity_410520_update_healthbar_color(v4);
		break;
	case EVT_MSG_SABOTAGE:
		if (v4->player_side == player_side)
			show_message_ex((Entity *)receiver->param, aBuildingSabotaged);
		entity_sabotage(v4, param, entity_mode_clanhall_on_death);
		break;
	case EVT_MSG_UPGRADE_COMPLETE:
		entity_clanhall_on_upgrade_complete(receiver, sender, event, param);
		break;
	default:
		EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
		break;
	}
}

//----- (00404040) --------------------------------------------------------
void entity_mode_clanhall_set_default_production(Entity *a1)
{
	Entity *v1; // edi@1
	EntityBuildingState *v2; // esi@2
	enum LEVEL_ID v3; // eax@7
	int *v4; // esi@7

	v1 = a1;
	if (player_side == a1->player_side)
	{
		v2 = (EntityBuildingState *)a1->state;
		v2->same_buildings_count = 0;
		script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_MUTE_CLANHALL_HANDLER);
		if (!v2->same_buildings_count)
		{
			if (!_47B3E0_unit_int_outpost_clanhall && !_47B3D0_building_production_group)
				_47B3D0_building_production_group = entity_building_create_production_group(v1, PRODUCTION_GROUP_BUILDINGS);
			if (!_47B3B8_tower_production_group)
			{
				_47B3B8_tower_production_group = entity_building_create_production_group(v1, PRODUCTION_GROUP_TOWERS);
				v3 = current_level_idx;
				v4 = &mute_default_buildings[0].mobd_lookup_table_offset;
				do
				{
					if (!(levels[v3].disabled_units_mask & *(v4 - 2)))
					{
						production_group_enable(_47B3D0_building_production_group, (enum UNIT_ID)*(v4 - 1), *v4);
						v3 = current_level_idx;
					}
					v4 += 3;
				} while ((int)v4 < (int)&mute_default_infantry[0].mobd_lookup_table_offset);
				if (!_47B3D4_aircraft_production_group)
					_47B3D4_aircraft_production_group = entity_building_create_production_group(v1, PRODUCTION_GROUP_AIRCRAFT);
				max_clanhall_level = 1;
				memset(&_477378_clanhall, 0, sizeof(_477378_clanhall));
			}
		}
	}
}

//----- (00404130) --------------------------------------------------------
void UNIT_Handler_Clanhall(Script *task)
{
	Entity *v1; // esi@1
	void *v2; // eax@8

	v1 = (Entity *)task->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(task);
			if (v1->player_side == player_side)
				entity_register_player_main_building(v1);
			v1->script->event_handler = EventHandler_Clanhall;
			v1->script->script_type = SCRIPT_MUTE_CLANHALL_HANDLER;
			entity_44B100_buildings__mess_with_fog_of_war(v1);
			entity_initialize_building(
				v1,
				3,
				entity_mode_clanhall_on_death_reset_production_options,
				entity_mode_clanhall_on_building_completed);
			entity_mode_clanhall_set_default_production(v1);
			if (v1->sprite->cplc_ptr1_pstru20)
				v1->mode = entity_mode_4042A0_clanhall;
			else
				entity_402BB0_set_arrive_handler(v1, entity_mode_4042A0_clanhall);
			v2 = task->sprite->_80_entity__stru29__sprite__initial_hitpoints;
			if (v2)
			{
				v1->hitpoints = (int)v2;
				entity_410520_update_healthbar_color(v1);
			}
		}
		(v1->mode)(v1);
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (004041F0) --------------------------------------------------------
void entity_mode_clanhall_on_building_completed(Entity *a1)
{
	Entity *v1; // esi@1
	enum PLAYER_SIDE v2; // eax@1
	EntityBuildingState *v3; // ebx@1
	ProductionGroup *v4; // eax@6
	ProductionGroup *v5; // edi@6
	int *v6; // esi@6
	enum LEVEL_ID v7; // eax@6

	v1 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (v2 == player_side)
	{
		if (a1->mode_arrive == entity_mode_clanhall_on_building_completed)
		{
			entity_mode_clanhall_set_default_production(a1);
			v1->mode_arrive = 0;
			v1->mode = entity_mode_403650_building;
		}
		if (!v1->sprite->cplc_ptr1_pstru20)
			show_message_ex(0, aBuildingCompleted);
		v4 = entity_building_create_production_group(v1, PRODUCTION_GROUP_INFANTRY);
		v5 = v4;
		v6 = &mute_default_infantry[0].mobd_lookup_table_offset;
		v3->production_group = v4;
		v7 = current_level_idx;
		do
		{
			if (!(levels[v7].disabled_units_mask & *(v6 - 2)))
			{
				production_group_enable(v5, (enum UNIT_ID)*(v6 - 1), *v6);
				v7 = current_level_idx;
			}
			v6 += 3;
		} while ((int)v6 < (int)&_4640E0_stru7_array[0]._4_psprite_pstru7_idx);
		++_477378_clanhall.num_buildings_by_level[1];
	}
	else if (v2 == 0)
	{
		a1->mode_arrive = entity_mode_clanhall_on_building_completed;
	}
}

//----- (004042A0) --------------------------------------------------------
void entity_mode_4042A0_clanhall(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1

	v1 = a1;
	a1->mode_arrive = 0;
	entity_mode_clanhall_on_building_completed(a1);
	v2 = v1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (player_side == v1->player_side && !v1->sprite->cplc_ptr1_pstru20)
		sound_play(SOUND_MUTE_BUILDING_COMPLETED, 0, _4690A8_unit_sounds_volume, 16, 0);
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00404320) --------------------------------------------------------
void entity_mode_clanhall_on_death_reset_production_options(Entity *a1)
{
	Entity *v1; // edi@1
	enum PLAYER_SIDE v2; // edx@1
	EntityBuildingState *v3; // ecx@1
	int v4; // esi@2
	enum LEVEL_ID v5; // ecx@5
	enum UNIT_ID v6; // edx@13
	int v7; // eax@18
	Entity *v8; // [sp+10h] [bp-4h]@1

	v1 = a1;
	v8 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (player_side != v2)
		return;
	--_477378_clanhall.num_buildings_by_level[v3->num_upgrades];
	v4 = v3->num_upgrades;
	if (v4 != max_clanhall_level || _477378_clanhall.num_buildings_by_level[v4])
		goto LABEL_22;
	if (v4 <= 0)
		goto LABEL_21;
	v5 = current_level_idx;
	do
	{
		if (v4 == 2)
		{
			if (levels[v5].disabled_units_mask & 0x800)
				goto LABEL_18;
			v6 = UNIT_STATS_MUTE_MACHINEGUN_NEST;
			goto LABEL_16;
		}
		if (v4 == 3)
		{
			if (levels[v5].disabled_units_mask & 0x200)
				goto LABEL_18;
			v6 = UNIT_STATS_MUTE_GRAPESHOT_TOWER;
		LABEL_16:
			production_group_disable(_47B3B8_tower_production_group, v6);
		LABEL_17:
			v5 = current_level_idx;
			goto LABEL_18;
		}
		if (v4 == 4)
		{
			if (!(levels[v5].disabled_units_mask & 0x1000))
				production_group_disable(_47B3B8_tower_production_group, UNIT_STATS_MUTE_ROTARY_CANNON);
			_447250_toggle_aircraft();
			goto LABEL_17;
		}
	LABEL_18:
		v7 = (int)*(&building_limits_list_free_pool + v4--);
	} while (!v7 && v4 > 0);
	v1 = v8;
LABEL_21:
	max_clanhall_level = v4;
LABEL_22:
	if (building_limits_count(v1->unit_id) == 1)
	{
		if (_47B3D0_building_production_group)
		{
			production_group_4467E0(_47B3D0_building_production_group, UNIT_STATS_MUTE_CLANHALL);
			_47B3E0_unit_int_outpost_clanhall = 1;
		}
		production_group_446860(_47B3B8_tower_production_group);
		_447250_toggle_aircraft();
		production_group_446860(_47B3D4_aircraft_production_group);
		_47B3D4_aircraft_production_group = 0;
		_47B3B8_tower_production_group = 0;
		disable_minimap();
	}
	else
	{
		if (max_clanhall_level < 2)
			disable_minimap();
		entity_430F90_clanhall(v1);
	}
}

//----- (00404490) --------------------------------------------------------
bool is_tower_available(enum UNIT_ID unit_id)
{
	ProductionOption *v1; // eax@2
	BOOL result; // eax@5

	if (_47B3B8_tower_production_group
		&& (v1 = _47B3B8_tower_production_group->next_option,
		(ProductionOption **)v1 != &_47B3B8_tower_production_group->next_option))
	{
		while (v1->unit_id != unit_id)
		{
			v1 = v1->next;
			if ((ProductionOption **)v1 == &_47B3B8_tower_production_group->next_option)
				return 0;
		}
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (004044C0) --------------------------------------------------------
bool is_building_available(enum UNIT_ID a1)
{
	ProductionGroup *v1; // eax@2
	BOOL result; // eax@5

	if (_47B3D0_building_production_group
		&& (v1 = (ProductionGroup *)_47B3D0_building_production_group->next_option,
		(ProductionOption **)v1 != &_47B3D0_building_production_group->next_option))
	{
		while (v1->_C_entity != (Entity *)a1)
		{
			v1 = v1->next;
			if ((ProductionOption **)v1 == &_47B3D0_building_production_group->next_option)
				return 0;
		}
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (004044F0) --------------------------------------------------------
void entity_mode_clanhall_on_death(Entity *a1)
{
	Entity *v1; // esi@1

	v1 = a1;
	entity_mode_clanhall_on_death_reset_production_options(a1);
	entity_mode_building_default_on_death(v1);
}

//----- (00404510) --------------------------------------------------------
void copy_player_sprite_palette_aligned(unsigned __int8 *palette, unsigned __int8 *aligned)
{
	unsigned __int8 *v2; // eax@1
	int v3; // edx@1
	int v4; // eax@1

	v2 = aligned + 255;
	LOBYTE_HEXRAYS(v2) = 0;
	v3 = 64;
	v4 = v2 - palette;
	do
	{
		*(_DWORD *)&palette[v4] = *(_DWORD *)palette;
		palette += 4;
		--v3;
	} while (v3);
}

//----- (00404530) --------------------------------------------------------
bool sub_404530(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // eax@2
	BOOL result; // eax@3
	int v7; // edx@4
	int v8; // esi@6
	Script *v9; // eax@6
	int v10; // esi@7
	int v11; // eax@8
	int v12; // edx@10
	int v13; // esi@12
	Script *v14; // eax@12
	int v15; // edx@13
	int v16; // eax@14
	int v17; // edx@16
	int v18; // esi@18
	int v19; // eax@20
	int v20; // edx@22
	int v21; // esi@24
	int v22; // eax@26
	int v23; // edx@28
	int v24; // esi@30
	int v25; // eax@33
	int v26; // edx@35
	int v27; // esi@37

	switch (a3)
	{
	case 0:
		v5 = *((_DWORD *)a5 + 1);
		if (*((_DWORD *)a4 + 1) < v5)
		{
			v7 = *((_DWORD *)a4 + 4);
			if (v7 < *((_DWORD *)a5 + 4))
			{
				v8 = v5 - v7 + a1->x;
				v9 = a1->script;
				a1->x = v8;
				if (!v9)
					goto LABEL_40;
				v10 = v9->flags_20 | 0x1000000;
				goto LABEL_32;
			}
			result = 0;
		}
		else
		{
			result = 0;
		}
		break;
	case 1:
		v11 = *((_DWORD *)a5 + 4);
		if (*((_DWORD *)a4 + 4) > v11)
		{
			v12 = *((_DWORD *)a4 + 1);
			if (v12 > *((_DWORD *)a5 + 1))
			{
				v13 = v11 - v12 + a1->x;
				v14 = a1->script;
				a1->x = v13;
				if (!v14)
					goto LABEL_40;
				v15 = v14->flags_20 | 0x800000;
				goto LABEL_39;
			}
			result = 0;
		}
		else
		{
			result = 0;
		}
		break;
	case 2:
		v16 = *((_DWORD *)a5 + 2);
		if (*((_DWORD *)a4 + 2) < v16)
		{
			v17 = *((_DWORD *)a4 + 5);
			if (v17 < *((_DWORD *)a5 + 5))
			{
				v18 = v16 - v17 + a1->y;
				v9 = a1->script;
				a1->y = v18;
				a1->y_speed = 0;
				if (!v9)
					goto LABEL_40;
				v10 = v9->flags_20 | 0x400000;
				goto LABEL_32;
			}
			result = 0;
		}
		else
		{
			result = 0;
		}
		break;
	case 3:
		v19 = *((_DWORD *)a5 + 5);
		if (*((_DWORD *)a4 + 5) > v19)
		{
			v20 = *((_DWORD *)a4 + 2);
			if (v20 > *((_DWORD *)a5 + 2))
			{
				v21 = v19 - v20 + a1->y;
				v14 = a1->script;
				a1->y = v21;
				a1->y_speed = 0;
				if (!v14)
					goto LABEL_40;
				v15 = v14->flags_20 | 0x200000;
				goto LABEL_39;
			}
			result = 0;
		}
		else
		{
			result = 0;
		}
		break;
	case 4:
		v22 = *((_DWORD *)a5 + 3);
		if (*((_DWORD *)a4 + 3) < v22)
		{
			v23 = *((_DWORD *)a4 + 6);
			if (v23 < *((_DWORD *)a5 + 6))
			{
				v24 = v22 - v23 + a1->z_index;
				v9 = a1->script;
				a1->z_index = v24;
				if (!v9)
					goto LABEL_40;
				v10 = v9->flags_20 | 0x100000;
			LABEL_32:
				v9->flags_20 = v10;
				result = 1;
				a1->script->field_24 |= a1->script->flags_20;
			}
			else
			{
				result = 0;
			}
		}
		else
		{
			result = 0;
		}
		break;
	case 5:
		v25 = *((_DWORD *)a5 + 6);
		if (*((_DWORD *)a4 + 6) > v25)
		{
			v26 = *((_DWORD *)a4 + 3);
			if (v26 > *((_DWORD *)a5 + 3))
			{
				v27 = v25 - v26 + a1->z_index;
				v14 = a1->script;
				a1->z_index = v27;
				if (v14)
				{
					v15 = v14->flags_20 | 0x80000;
				LABEL_39:
					v14->flags_20 = v15;
					a1->script->field_24 |= a1->script->flags_20;
				}
				goto LABEL_40;
			}
			result = 0;
		}
		else
		{
			result = 0;
		}
		break;
	default:
	LABEL_40:
		result = 1;
		break;
	}
	return result;
}

//----- (00404760) --------------------------------------------------------
bool sub_404760(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // edx@2
	int v6; // edx@4
	int v7; // esi@5
	Script *v8; // eax@7
	BOOL result; // eax@9

	if (a3 != 2
		|| (v5 = a1->x, v5 > *((_DWORD *)a5 + 4))
		|| v5 < *((_DWORD *)a5 + 1)
		|| (v6 = *((_DWORD *)a5 + 2), *((_DWORD *)a4 + 2) >= v6)
		|| (v7 = *((_DWORD *)a4 + 5), v7 >= *((_DWORD *)a5 + 5))
		|| v7 >= v6 + 2048)
	{
		result = 0;
	}
	else
	{
		v8 = a1->script;
		a1->y = v6;
		a1->y_speed = 0;
		if (v8)
		{
			v8->flags_20 |= 0x400000;
			a1->script->field_24 |= a1->script->flags_20;
		}
		result = 1;
	}
	return result;
}

//----- (004047E0) --------------------------------------------------------
bool sub_4047E0(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // edx@2
	int v6; // esi@2
	int v7; // edi@3
	int v8; // ebx@4
	int v9; // eax@5
	Script *v10; // eax@6
	BOOL result; // eax@8

	if (a3 == 1
		|| (v5 = a1->x, v6 = *((_DWORD *)a5 + 4), v5 > v6)
		|| (v7 = *((_DWORD *)a5 + 1), v5 < v7)
		|| (v8 = *((_DWORD *)a5 + 5), *((_DWORD *)a4 + 5) > v8 + 2048)
		|| (v9 = v8 + (v5 - v7) * (*((_DWORD *)a5 + 2) - v8) / (v6 - v7), v9 >= a1->y))
	{
		result = 0;
	}
	else
	{
		a1->y = v9;
		v10 = a1->script;
		a1->y_speed = 0;
		if (v10)
		{
			v10->flags_20 |= 0x400000;
			a1->script->field_24 |= a1->script->flags_20;
		}
		result = 1;
	}
	return result;
}

//----- (00404870) --------------------------------------------------------
bool sub_404870(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // edx@2
	int v6; // edi@2
	int v7; // esi@3
	int v8; // ebx@4
	int v9; // eax@5
	Script *v10; // eax@6
	BOOL result; // eax@8

	if (a3
		&& (v5 = a1->x, v6 = *((_DWORD *)a5 + 4), v5 <= v6)
		&& (v7 = *((_DWORD *)a5 + 1), v5 >= v7)
		&& (v8 = *((_DWORD *)a5 + 5), *((_DWORD *)a4 + 5) <= v8 + 2048)
		&& (v9 = v8 + (v5 - v6) * (*((_DWORD *)a5 + 2) - v8) / (v7 - v6), v9 < a1->y))
	{
		a1->y = v9;
		v10 = a1->script;
		a1->y_speed = 0;
		if (v10)
		{
			v10->flags_20 |= 0x400000;
			a1->script->field_24 |= a1->script->flags_20;
		}
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00404900) --------------------------------------------------------
bool sub_404900(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // edi@1
	int v6; // eax@1
	int v8; // edx@3
	int v9; // ebx@3
	int v10; // eax@4
	Script *v11; // eax@8

	v5 = *((_DWORD *)a4 + 2);
	v6 = *((_DWORD *)a5 + 2);
	if (v5 < v6 - 2048)
		return 0;
	v8 = *((_DWORD *)a4 + 1);
	v9 = *((_DWORD *)a5 + 1);
	if (v8 < v9)
	{
		a1->y += *((_DWORD *)a5 + 5) - v5;
		if (a3 > 1)
			a1->y_speed = 0;
		if (!a1)
			return 1;
		v11 = a1->script;
		if (!v11)
			return 1;
		goto LABEL_15;
	}
	v10 = *((_DWORD *)a5 + 5) + (v8 - v9) * (v6 - *((_DWORD *)a5 + 5)) / (*((_DWORD *)a5 + 4) - v9);
	if (v10 <= v5)
		return 0;
	a1->y += v10 - v5;
	if (a3 > 1)
		a1->y_speed = 0;
	if (a1)
	{
		v11 = a1->script;
		if (v11)
		{
		LABEL_15:
			v11->flags_20 |= 0x200000;
			a1->script->field_24 |= a1->script->flags_20;
			return 1;
		}
	}
	return 1;
}

//----- (004049D0) --------------------------------------------------------
bool sub_4049D0(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // edi@1
	int v6; // eax@1
	int v8; // edx@3
	int v9; // ebx@3
	int v10; // eax@4
	Script *v11; // eax@8

	v5 = *((_DWORD *)a4 + 2);
	v6 = *((_DWORD *)a5 + 2);
	if (v5 < v6 - 2048)
		return 0;
	v8 = *((_DWORD *)a4 + 4);
	v9 = *((_DWORD *)a5 + 4);
	if (v8 > v9)
	{
		a1->y += *((_DWORD *)a5 + 5) - v5;
		if (a3 > 1)
			a1->y_speed = 0;
		if (!a1)
			return 1;
		v11 = a1->script;
		if (!v11)
			return 1;
		goto LABEL_15;
	}
	v10 = *((_DWORD *)a5 + 5) + (v8 - v9) * (v6 - *((_DWORD *)a5 + 5)) / (*((_DWORD *)a5 + 1) - v9);
	if (v10 <= v5)
		return 0;
	a1->y += v10 - v5;
	if (a3 > 1)
		a1->y_speed = 0;
	if (a1)
	{
		v11 = a1->script;
		if (v11)
		{
		LABEL_15:
			v11->flags_20 |= 0x200000;
			a1->script->field_24 |= a1->script->flags_20;
			return 1;
		}
	}
	return 1;
}

//----- (00404AA0) --------------------------------------------------------
bool sub_404AA0(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // eax@4
	Script *v7; // eax@8
	int v8; // eax@10
	int v9; // edx@12
	int v10; // esi@14
	Script *v11; // eax@14

	if (a3 != 1)
	{
		if (a3 == 2 && a1->x >= *((_DWORD *)a5 + 1))
		{
			v5 = *((_DWORD *)a5 + 2);
			if (*((_DWORD *)a4 + 2) >= v5)
				return 0;
			if (*((_DWORD *)a4 + 5) >= *((_DWORD *)a5 + 5))
				return 0;
			a1->y = v5;
			v7 = a1->script;
			a1->y_speed = 0;
			if (v7)
			{
				v7->flags_20 |= 0x400000;
				a1->script->field_24 |= a1->script->flags_20;
				return 1;
			}
			return 1;
		}
		return 0;
	}
	v8 = *((_DWORD *)a5 + 4);
	if (*((_DWORD *)a4 + 4) <= v8)
		return 0;
	v9 = *((_DWORD *)a4 + 1);
	if (v9 <= *((_DWORD *)a5 + 1))
		return 0;
	v10 = v8 - v9 + a1->x;
	v11 = a1->script;
	a1->x = v10;
	if (v11)
	{
		v11->flags_20 |= 0x800000;
		a1->script->field_24 |= a1->script->flags_20;
	}
	return 1;
}

//----- (00404B80) --------------------------------------------------------
bool sub_404B80(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	int v5; // eax@4
	Script *v7; // eax@8
	int v8; // eax@10
	int v9; // edx@12
	int v10; // esi@14
	Script *v11; // eax@14

	if (a3)
	{
		if (a3 == 2 && a1->x <= *((_DWORD *)a5 + 4))
		{
			v5 = *((_DWORD *)a5 + 2);
			if (*((_DWORD *)a4 + 2) >= v5)
				return 0;
			if (*((_DWORD *)a4 + 5) >= *((_DWORD *)a5 + 5))
				return 0;
			a1->y = v5;
			v7 = a1->script;
			a1->y_speed = 0;
			if (v7)
			{
				v7->flags_20 |= 0x400000;
				a1->script->field_24 |= a1->script->flags_20;
				return 1;
			}
			return 1;
		}
		return 0;
	}
	v8 = *((_DWORD *)a5 + 1);
	if (*((_DWORD *)a4 + 1) >= v8)
		return 0;
	v9 = *((_DWORD *)a4 + 4);
	if (v9 >= *((_DWORD *)a5 + 4))
		return 0;
	v10 = v8 - v9 + a1->x;
	v11 = a1->script;
	a1->x = v10;
	if (v11)
	{
		v11->flags_20 |= 0x1000000;
		a1->script->field_24 |= a1->script->flags_20;
	}
	return 1;
}

//----- (00404C60) --------------------------------------------------------
bool sub_404C60(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	Script *v5; // eax@1

	v5 = a1->script;
	if (v5 && v5->field_28 & 0x40000000)
		script_trigger_event(0, EVT_MOUSE_HOVER, a2, a1->script);
	return 0;
}

//----- (00404C90) --------------------------------------------------------
bool boxd_init()
{
	BOOL result; // eax@2

	currently_running_lvl_boxd_valid = 0;
	currently_running_lvl_boxd = (DataBoxd *)LVL_FindSection(BOXD);
	if (currently_running_lvl_boxd)
	{
		result = (BOOL)malloc(0x17700u);            // 8000 items
		_4773C0_boxd_array = (Boxd_stru0 *)result;
		if (result)
		{
			_4773B0_boxd_item0_things = 0;
			_4773A0_boxd_item0_num_things = currently_running_lvl_boxd->items->field_0_num_things;
			_4773AC_boxd_item0_map_x_scale = currently_running_lvl_boxd->items->some_map_width_scale;
			_4773B8_boxd_item0_map_y_scale = currently_running_lvl_boxd->items->some_map_height_scale;
			_4773C8_boxd_item0_map_num_x_tiles = currently_running_lvl_boxd->items->map_num_x_tiles;
			_4773B4_boxd_item0_map_num_y_tiles = currently_running_lvl_boxd->items->map_num_y_tiles;
			_4773C4_boxd_item0_map_tiles = currently_running_lvl_boxd->items->map_tiles;
			_4773B0_boxd_item0_things = (Boxd_stru0 **)malloc(4 * _4773A0_boxd_item0_num_things);
			if (_4773B0_boxd_item0_things)
			{
				result = 1;
				currently_running_lvl_boxd_valid = 1;
			}
			else
			{
				free(_4773C0_boxd_array);
				result = 0;
			}
		}
	}
	else
	{
		result = 1;
	}
	return result;
}

//----- (00404D50) --------------------------------------------------------
void bodx_404D50_sprite_list(Sprite *list)
{
	Sprite *v1; // edx@1
	Sprite *v2; // edi@5
	Script *v3; // eax@7
	signed __int16 v4; // cx@8
	Sprite_stru58 *v5; // eax@10
	Sprite_stru58_stru0 *v6; // esi@12
	int v7; // eax@12
	int v8; // ebx@16
	int v9; // eax@16
	int v10; // edx@16
	char v11; // cl@17
	int v12; // edx@17
	int v13; // ebx@19
	int v14; // ebx@23
	int v15; // eax@25
	int v16; // ebp@25
	bool v17; // sf@25
	int v18; // eax@25
	int v19; // eax@26
	int v20; // esi@28
	int v21; // esi@32
	Boxd_stru0 **v22; // edx@34
	Boxd_stru0 **v23; // eax@36
	int v24; // ecx@37
	int v25; // [sp+10h] [bp-Ch]@25
	int v26; // [sp+10h] [bp-Ch]@35
	Sprite_stru58 *v27; // [sp+14h] [bp-8h]@10
	Sprite *v28; // [sp+18h] [bp-4h]@1

	v1 = list;
	v28 = list;
	if (currently_running_lvl_boxd_valid)
	{
		if (_4773B0_boxd_item0_things && _4773A0_boxd_item0_num_things)
			memset(_4773B0_boxd_item0_things, 0, 4 * _4773A0_boxd_item0_num_things);
		_4773A8_boxd_parray = _4773C0_boxd_array;
		v2 = list->next;
		if (list->next != list)
		{
			do
			{
				if (is_coroutine_list_initialization_failed && (v3 = v2->script) != 0)
					v4 = v3->field_1C & 1;
				else
					v4 = 1;
				v5 = v2->pstru58;
				v27 = v2->pstru58;
				if (v5 && v4)
				{
					v6 = v5->pstru0;
					v7 = v5->pstru0->psrite_pstru7_idx;
					if (v7 >= 0)
					{
						if (v2->pstru7[v7]._4_psprite_pstru7_idx)
						{
						LABEL_16:
							v8 = v2->x_speed;
							v9 = v2->x;
							v10 = v6->x;
							if (v8 < 0)
							{
								v11 = _4773AC_boxd_item0_map_x_scale;
								v12 = (v8 + v9 + v10) >> _4773AC_boxd_item0_map_x_scale;
								if (v12 < 0)
									v12 = 0;
								v13 = v6->z + v9 - 1;
							}
							else
							{
								v11 = _4773AC_boxd_item0_map_x_scale;
								v12 = (v9 + v10) >> _4773AC_boxd_item0_map_x_scale;
								if (v12 < 0)
									v12 = 0;
								v13 = v9 + v6->z + v8 - 1;
							}
							v14 = (v13 >> v11) - v12;
							if (v12 + v14 >= _4773C8_boxd_item0_map_num_x_tiles)
								v14 = _4773C8_boxd_item0_map_num_x_tiles - v12 - 1;
							v15 = v2->y_speed;
							v16 = v2->y;
							v25 = v15;
							v17 = v15 < 0;
							v18 = v6->y;
							if (v17)
							{
								v19 = (v2->y_speed + v16 + v18) >> _4773B8_boxd_item0_map_y_scale;
								if (v19 < 0)
									v19 = 0;
								v20 = v6->w + v16 - 1;
							}
							else
							{
								v19 = (v16 + v18) >> _4773B8_boxd_item0_map_y_scale;
								if (v19 < 0)
									v19 = 0;
								v20 = v16 + v6->w + v25 - 1;
							}
							v21 = (v20 >> _4773B8_boxd_item0_map_y_scale) - v19;
							if (v19 + v21 >= _4773B4_boxd_item0_map_num_y_tiles)
								v21 = _4773B4_boxd_item0_map_num_y_tiles - v19 - 1;
							v22 = &_4773B0_boxd_item0_things[v12 + _4773C8_boxd_item0_map_num_x_tiles * v19];
							if (v21 >= 0)
							{
								v26 = v21 + 1;
								do
								{
									v23 = v22;
									if (v14 >= 0)
									{
										v24 = v14 + 1;
										do
										{
											++v23;
											_4773A8_boxd_parray->sprite_pstru58 = v27;
											_4773A8_boxd_parray->sprite = v2;
											_4773A8_boxd_parray->ptr_8 = *(v23 - 1);
											*(v23 - 1) = _4773A8_boxd_parray;
											--v24;
											++_4773A8_boxd_parray;
										} while (v24);
									}
									v22 += _4773C8_boxd_item0_map_num_x_tiles;
									--v26;
								} while (v26);
							}
							v1 = v28;
							goto LABEL_41;
						}
					}
					else if (v7 != -2)
					{
						goto LABEL_16;
					}
				}
			LABEL_41:
				v2 = v2->next;
			} while (v2 != v1);
		}
	}
}

//----- (00404F40) --------------------------------------------------------
void boxd_404F40_sprite(Sprite *a1, int a2, int a3)
{
	Sprite *v3; // esi@1
	Script *v4; // eax@3
	signed __int16 v5; // ax@4
	Sprite_stru58 *v6; // ecx@6
	Sprite_stru58_stru0 *v7; // edi@8
	int v8; // eax@8
	Sprite_stru58 *v16; // ecx@28
	int v17; // eax@30
	int v18; // ebp@38
	stru7 *v19; // ecx@41
	bool (*v20)(Sprite *, Sprite *, int, void *, void *); // eax@41
	Sprite_stru58 *v24; // eax@45
	Sprite_stru58_stru0 *v25; // eax@45
	stru7 *v26; // ebp@46
	int v27; // ecx@47
	int v28; // ecx@49
	int(*v29)(Sprite *, void *, int, int *, int *); // eax@51
	Sprite_stru58 *v33; // eax@56
	Sprite_stru58 *v36; // [sp+10h] [bp-8Ch]@28
	Sprite_stru58 *v37; // [sp+14h] [bp-88h]@8
	Sprite_stru58 *v38; // [sp+14h] [bp-88h]@45
	int v45; // [sp+24h] [bp-78h]@31
	int v46; // [sp+28h] [bp-74h]@28
	int v48; // [sp+30h] [bp-6Ch]@9
	int v51; // [sp+3Ch] [bp-60h]@1
	int v58; // [sp+60h] [bp-3Ch]@46
	int v59; // [sp+64h] [bp-38h]@34
	int v60; // [sp+68h] [bp-34h]@34
	int v61; // [sp+6Ch] [bp-30h]@36
	int v62; // [sp+74h] [bp-28h]@35
	int v63; // [sp+78h] [bp-24h]@37
	int v64; // [sp+80h] [bp-1Ch]@47
	int v65; // [sp+84h] [bp-18h]@47
	int v66; // [sp+88h] [bp-14h]@49
	int v67; // [sp+90h] [bp-Ch]@48
	int v68; // [sp+94h] [bp-8h]@50

	v51 = a2;
	v3 = a1;
	if (currently_running_lvl_boxd_valid)
	{
		if (is_coroutine_list_initialization_failed && (v4 = a1->script) != 0)
			v5 = v4->field_1C & 1;
		else
			v5 = 1;
		v6 = a1->pstru58;
		if (v6)
		{
			if (v5)
			{
				v7 = v6->pstru0;
				v37 = v3->pstru58;
				v8 = v6->pstru0->psrite_pstru7_idx;
				if (v8 < 0)
				{
					if (v8 == -3)
						return;
					v48 = -1;
				}
				else
				{
					v48 = v3->pstru7[v8].field_0;
					if (!v48)
						return;
				}

                int z = v3->x + v7->z;
                int y_y = v3->y + v7->w;

                int x = v3->x + v7->x;
                int y = v3->y + v7->y;

				int v53 = v6->pstru0->psrite_pstru7_idx;

				int x_scaled = x >> _4773AC_boxd_item0_map_x_scale;
				if (x_scaled < 0)
                    x_scaled = 0;

                int z_scaled = (z - 1) >> _4773AC_boxd_item0_map_x_scale;
                if (z_scaled >= _4773C8_boxd_item0_map_num_x_tiles)
                    z_scaled = _4773C8_boxd_item0_map_num_x_tiles - 1;

				int width_scaled = z_scaled - x_scaled;

				int y_scaled = y >> _4773B8_boxd_item0_map_y_scale;
				if (y_scaled < 0)
                    y_scaled = 0;

                int w_scaled = (y_y - 1) >> _4773B8_boxd_item0_map_y_scale;
				if (w_scaled >= _4773B4_boxd_item0_map_num_y_tiles)
                    w_scaled = _4773B4_boxd_item0_map_num_y_tiles - 1;

                int height_scaled = w_scaled - y_scaled;


                for (int k = 0; k <= height_scaled; ++k)
                {
                    for (int j = 0; j <= width_scaled; ++j)
                    {
                        int tile_idx = (x_scaled + j) + (y_scaled + k) * _4773C8_boxd_item0_map_num_x_tiles;
                        BoxdTile **tile = &_4773C4_boxd_item0_map_tiles[tile_idx];
                        Boxd_stru0 **tile_extra = &_4773B0_boxd_item0_things[tile_idx];

                        for (Boxd_stru0 *i = *tile_extra; i; i = i->ptr_8)
                        {
                            if (i->sprite != v3)
                            {
                                v16 = i->sprite_pstru58;
                                v46 = 1;
                                v36 = i->sprite_pstru58;
                                do
                                {
                                    if (!v16->pstru0)
                                        break;
                                    v17 = v16->pstru0->psrite_pstru7_idx;
                                    if (v17 >= 0)
                                    {
                                        v45 = v3->pstru7[v17]._4_psprite_pstru7_idx;
                                        v16 = v36;
                                    }
                                    else
                                    {
                                        v46 = 0;
                                        v45 = -1;
                                    }
                                    if (v48 & v45)
                                    {
                                        v59 = v17;
                                        v60 = i->sprite->x + v16->pstru0->x;
                                        if (v60 < z)
                                        {
                                            v62 = i->sprite->x + v16->pstru0->z;
                                            if (v62 > x)
                                            {
                                                v61 = i->sprite->y + v16->pstru0->y;
                                                if (v61 < y_y)
                                                {
                                                    v63 = i->sprite->y + v16->pstru0->w;
                                                    if (v63 > y)
                                                    {
                                                        v18 = v16->pstru0->psrite_pstru7_idx;
                                                        if (v18 >= 0)
                                                        {
                                                            if (v7->psrite_pstru7_idx < 0)
                                                            {
                                                                v24 = v37 + 1;
                                                                v38 = v24;
                                                                v25 = v24->pstru0;
                                                                if (v25)
                                                                {
                                                                    do
                                                                    {
                                                                        v26 = v3->pstru7;
                                                                        v58 = v25->psrite_pstru7_idx;
                                                                        if (v45 & v26[v58].field_0)
                                                                        {
                                                                            v27 = v3->x;
                                                                            v64 = v58;
                                                                            v65 = v27 + v38->pstru0->x;
                                                                            if (v65 < v62)
                                                                            {
                                                                                v67 = v27 + v38->pstru0->z;
                                                                                if (v67 > v60)
                                                                                {
                                                                                    v28 = v3->y;
                                                                                    v66 = v28 + v38->pstru0->y;
                                                                                    if (v66 < v63)
                                                                                    {
                                                                                        v68 = v28 + v38->pstru0->w;
                                                                                        if (v68 > v61)
                                                                                        {
                                                                                            v29 = (int(*)(Sprite *, void *, int, int *, int *))v26[v38->pstru0->psrite_pstru7_idx].pfn_8_ui_hint_box;
                                                                                            if (v29
                                                                                                || (v29 = (int(*)(Sprite *, void *, int, int *, int *))v26[v36->pstru0->psrite_pstru7_idx].pfn_C) != 0)
                                                                                            {
                                                                                                if (v29(v3, i->sprite, v51, &v64, &v59))
                                                                                                {
                                                                                                    x = v3->x + v7->x;
                                                                                                    y = v3->y + v7->y;

                                                                                                    z = v3->x + v7->z;
                                                                                                    y_y = v3->y + v7->w;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        v33 = v38 + 1;
                                                                        v38 = v33;
                                                                        v25 = v33->pstru0;
                                                                    } while (v25);
                                                                    v16 = v36;
                                                                }
                                                                v37 = v3->pstru58;
                                                            }
                                                            else
                                                            {
                                                                v19 = v3->pstru7;
                                                                v20 = v19[v7->psrite_pstru7_idx].pfn_8_ui_hint_box;
                                                                if (v20 || (v20 = v19[v18].pfn_C) != 0)
                                                                {
                                                                    if (v20(v3, i->sprite, v51, &v53, &v59))
                                                                    {
                                                                        x = v3->x + v7->x;
                                                                        y = v3->y + v7->y;

                                                                        z = v3->x + v7->z;
                                                                        y_y = v3->y + v7->w;
                                                                    }
                                                                }
                                                                v16 = v36;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            v46 = 1;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    ++v16;
                                    v36 = v16;
                                } while (v46);
                            }
                        }
                        ++_4773A8_boxd_parray;
                    }
                }
			}
		}
	}
}

//----- (00405430) --------------------------------------------------------
void boxd_free()
{
	if (currently_running_lvl_boxd_valid)
	{
		if (_4773B0_boxd_item0_things)
			free(_4773B0_boxd_item0_things);
		if (_4773C0_boxd_array)
			free(_4773C0_boxd_array);
	}
}
// 4773BC: using guessed type int currently_running_lvl_boxd_valid;

//----- (00405460) --------------------------------------------------------
void entity_show_hint(Entity *a1)
{
	Entity *v1; // esi@1
	enum PLAYER_SIDE v2; // eax@3

	v1 = a1;
	_4657C8_hint_entity_id = a1->entity_id;
	if (single_player_game)
	{
		show_message_ex(a1, a1->stats->name);
	}
	else
	{
		v2 = a1->player_side;
		if (v2)
		{
			sprintf(byte_4773D0, aSSS, netz_47A740[v2 + 1].player_name, a1->stats->name);
			show_message_ex(v1, byte_4773D0);
		}
	}
}

//----- (004054D0) --------------------------------------------------------
void entity_4054D0_tanker_convoy(Entity *a1)
{
	Entity *v1; // esi@1
	UnitStat *v2; // eax@2
	int v3; // edi@2
	int v4; // eax@3
	unsigned int v5; // ecx@5
	UnitStat *v6; // eax@5
	int v7; // eax@6
	unsigned int v8; // edx@8

	v1 = a1;
	if (entity_405750_tanker_convoy(a1))
	{
		v2 = v1->stats;
		v1->_DC_order = ENTITY_ORDER_6_tanker;
		v1->_E0_current_attack_target = 0;
		v1->_E4_prev_attack_target = 0;
		v1->_134_param__unitstats_after_mobile_outpost_plant = 5;
		v3 = (int)v1->state;
		if (v2->is_infantry)
			v4 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v4 = v2->field_4C != 128 ? 7424 : 4096;
		v5 = v4 + (*(_DWORD *)v3 & 0xFFFFE000);
		v6 = v1->stats;
		v1->sprite_x_2 = v5;
		if (v6->is_infantry)
			v7 = entity_40F100_get_dy(v1, v1->field_A4);
		else
			v7 = v6->field_4C != 128 ? 7424 : 4096;
		v8 = *(_DWORD *)(v3 + 4) & 0xFFFFE000;
		v1->entity_8 = 0;
		v1->mode_return = entity_mode_move_attack;
		v1->sprite_y_2 = v7 + v8;
		entity_mode_move_attack(v1);
	}
	else
	{
		v1->_DC_order = ENTITY_ORDER_0;
	}
}

//----- (004055B0) --------------------------------------------------------
void EventHandler_TankerConvoy(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_DAMAGE:
			entity_41A610_evt1503(v4, param);
			entity_410710_status_bar(v4);
			break;
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v4);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v4);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v4);
			break;
		case EVT_MSG_1507_stru11:
			entity_41A850_evt1507_mess_with_stru11(v4, param);
			break;
		case EVT_MSG_1509_stru11:
			entity_41A980_evt1509_unset_stru11(v4, param);
			break;
		case EVT_MSG_1497:
			entity_41A6D0_evt1497(v4, (Entity *)param);
			break;
		default:
			return;
		}
	}
}

//----- (00405680) --------------------------------------------------------
void entity_mode_405680_tanker_convoy(Entity *a1)
{
	dword_477358 = 2371645;
}
// 477358: using guessed type int dword_477358;

//----- (00405690) --------------------------------------------------------
void entity_mode_405690(Entity *a1)
{
	Entity *v1; // esi@1

	v1 = a1;
	if (!a1->_134_param__unitstats_after_mobile_outpost_plant)
	{
		entity_40DEC0_boxd(a1, a1->sprite_map_x, a1->sprite_map_y, a1->field_A4);
		v1->sprite->x_speed = 0;
		v1->sprite->y_speed = 0;
		v1->mode = entity_mode_405680_tanker_convoy;
	}
}

//----- (004056E0) --------------------------------------------------------
void entity_4056E0_tanker_convoy_update_checkpoint(int x, EntityTankerConvoyAttachment *a2)
{
	int v2; // eax@3
	int v3; // eax@7

	if (current_level_idx == LEVEL_SURV_07_PROTECT_THE_CONVOY)
	{
		if (a2->checkpoint < 18)
		{
			while (1)
			{
				v3 = a2->checkpoint;
				a2->x = _464230_tankerconvoy_checkpoints_surv07[v3].x << 8;
				a2->y = _464230_tankerconvoy_checkpoints_surv07[v3].y << 8;
				if (a2->x <= x)
					break;
				a2->checkpoint = v3 + 1;
			}
		}
	}
	else if (current_level_idx == LEVEL_MUTE_08_SMASH_THE_CONVOY)
	{
		v2 = a2->checkpoint;
		if (v2 < 15)
		{
			a2->x = _4642C0_tankerconvoy_checkpoints_mute08[v2].x << 8;
			a2->y = _4642C0_tankerconvoy_checkpoints_mute08[v2].y << 8;
		}
	}
}

//----- (00405750) --------------------------------------------------------
bool entity_405750_tanker_convoy(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTankerConvoyAttachment *v2; // eax@1
	int v3; // ecx@1
	Sprite *v5; // edx@7

	v1 = a1;
	v2 = (EntityTankerConvoyAttachment *)a1->state;
	v3 = v2->checkpoint + 1;
	v2->checkpoint = v3;
	if (current_level_idx == LEVEL_SURV_07_PROTECT_THE_CONVOY)// INLINED 4056E0
	{
		if (v3 < 18)
		{
			v2->x = _464230_tankerconvoy_checkpoints_surv07[v3].x << 8;
			v2->y = _464230_tankerconvoy_checkpoints_surv07[v3].y << 8;
			return 1;
		}
	}
	else if (current_level_idx == LEVEL_MUTE_08_SMASH_THE_CONVOY && v3 < 15)
	{
		v2->x = _4642C0_tankerconvoy_checkpoints_mute08[v3].x << 8;
		v2->y = _4642C0_tankerconvoy_checkpoints_mute08[v3].y << 8;
		return 1;
	}
	v5 = v1->sprite;
	v1->mode = entity_mode_405690;
	v1->mode_return = entity_mode_405690;
    entity_load_idle_mobd(v1, 192);
	v1->_134_param__unitstats_after_mobile_outpost_plant = 600;
	v5->x_speed = -64;
	v1->sprite->y_speed = 0;
	v1->mode_arrive = entity_mode_405680_tanker_convoy;
	++_47A3D8_num_convoy_tankers_still_to_arrive;
	if (current_level_idx == LEVEL_SURV_07_PROTECT_THE_CONVOY)
	{
		if (6 - _47A3D4_tanker_convoy_units_left >= 4
			&& _47A3D8_num_convoy_tankers_still_to_arrive == 6 - _47A3D4_tanker_convoy_units_left)
		{
			_424CC0_script_47A3CC_evttrigger();
		}
	}
	else if (current_level_idx == LEVEL_MUTE_08_SMASH_THE_CONVOY)
	{
		_424CA0_script_47A3CC_evttrigger();
		return 0;
	}
	return 0;
}

//----- (00405850) --------------------------------------------------------
void UNIT_Handler_OilTankerConvoy(Script *a1)
{
	Entity *v1; // esi@1
	DataCplcItem_ptr1_stru20 *v2; // ebx@2
	Script *v3; // edx@2
	EntityTankerConvoyAttachment *v4; // eax@2
	int v14; // eax@13

	v1 = (Entity *)a1->param;
	if (!v1)
	{
		v2 = a1->sprite->cplc_ptr1_pstru20;
		v1 = entity_list_create(a1);
		entity_init_infantry(v1);
		entity_set_draw_handlers(v1);
		v1->script->event_handler = EventHandler_TankerConvoy;
		v3 = v1->script;
		v3->script_type = SCRIPT_TANKER_CONVOY_HANDLER;
		v4 = (EntityTankerConvoyAttachment *)script_create_local_object(v1->script, 12);
		if (v4)
		{
			v1->state = v4;
			if (LOWORD_HEXRAYS(v2->_1C_oilspot_oil_units__or__param) >= 0xFu)
				v4->checkpoint = 0;
			else
				v4->checkpoint = LOWORD_HEXRAYS(v2->_1C_oilspot_oil_units__or__param);
			entity_4056E0_tanker_convoy_update_checkpoint(v1->sprite->x, v4);

			v1->_DC_order = ENTITY_ORDER_6_tanker;
			v1->_E0_current_attack_target = 0;
			v1->_E4_prev_attack_target = 0;
			v1->_134_param__unitstats_after_mobile_outpost_plant = 600;
			v1->sprite_x_2 = entity_transform_x(v1, v4->x);
            v1->sprite_y_2 = entity_transform_y(v1, v4->y);
			v1->entity_8 = 0;
			v1->mode_arrive = 0;
            entity_load_idle_mobd(v1, 192);
			entity_mode_move_attack(v1);
		}
	}
	(v1->mode)(v1);
	v14 = v1->_134_param__unitstats_after_mobile_outpost_plant;
	if (v14)
		v1->_134_param__unitstats_after_mobile_outpost_plant = v14 - 1;
}

//----- (004059C0) --------------------------------------------------------
bool render_string_4059C0(RenderString *a1, int a2, int a3)
{
	int v3; // edi@1
	BOOL result; // eax@1
	stru8 *v5; // esi@1
	int i; // edx@1
	int v7; // ebx@5
	DrawJob *v8; // edx@7
	int v9; // ebp@7
	int v10; // ebp@8

	v3 = a1->field_C;
	result = 0;
	v5 = a1->pstru8;
	for (i = v3 * (a2 + 1) + 1; i; --i)
		v5 = v5->next;
	if (v5->drawjob->job_details.y < -10)
		result = 1;
	v7 = 0;
	if (v3 > 0)
	{
		do
		{
			--v5->drawjob->job_details.y;
			if (a3)
			{
				v8 = v5->drawjob;
				v9 = v8->job_details.x;
				if (a3 >= 0)
					v10 = v9 + 1;
				else
					v10 = v9 - 1;
				v8->job_details.x = v10;
			}
			v5 = v5->next;
			++v7;
		} while (v7 < a1->field_C);
	}
	return result;
}

//----- (00405A20) --------------------------------------------------------
void render_string_405A20(RenderString *a1, int a2, int y)
{
	int v3; // esi@1
	stru8 *v4; // eax@1
	int i; // edx@1
	int v6; // edx@3

	v3 = a1->field_C;
	v4 = a1->pstru8;
	for (i = v3 * (a2 + 1) + 1; i; --i)
		v4 = v4->next;
	v6 = 0;
	if (v3 > 0)
	{
		do
		{
			++v6;
			v4->drawjob->job_details.y = y;
			v4 = v4->next;
		} while (v6 < a1->field_C);
	}
}

//----- (00405A60) --------------------------------------------------------
void render_string_405A60(RenderString *a1, const char *str, DataMobdItem *custom_font, int y)
{
	RenderString *v4; // edi@1
	const char *v5; // ebp@1
	DrawJob *v6; // ecx@1
	int x; // esi@1
	int v8; // ebx@2
	int v9; // ecx@5
	int v10; // eax@6
	stru8 *v11; // ecx@6
	int v12; // edx@6
    DataMobdItem_stru0 *v13; // eax@13
    DataMobdItem_stru1 *v14; // eax@15
	bool v15; // zf@18
	int v16; // [sp+Ch] [bp-8h]@11
	int v17; // [sp+10h] [bp-4h]@1

	v4 = a1;
	v5 = str;
	v6 = a1->pstru8->drawjob;
	x = v6->job_details.x + 14;
	v17 = v6->job_details.x + 14;
	while (*v5)
	{
		v8 = _443D60_strlen_before_newline(v5);
		if (!v8)
			v8 = 1;
		if (*v5 == '\n')
		{
			x = v17;
			v9 = v4->num_lines + 1;
			v4->field_18 = 0;
			v4->num_lines = v9;
			++v5;
		}
		else
		{
			v10 = v4->field_18;
			v11 = v4->pstru8;
			v12 = v4->field_C * (v4->num_lines + 1) + v10 + 1;
			if (v4->field_C * (v4->num_lines + 1) + v10 != -1)
			{
				do
				{
					v11 = v11->next;
					--v12;
				} while (v12);
			}
			if (v10 > 1)
				x = v11->drawjob->job_details.x;
			if (v8)
			{
				v16 = v8;
				do
				{
					if (custom_font)
						v13 = custom_font->_[*v5 + 1];
					else
						v13 = v4->mobd_font__see_sub405A60->_[1 + *v5];
					v11->drawjob->job_details.image = v13->sprt;
					v11->drawjob->job_details.y = y - v13->y_offset;
					v11->drawjob->job_details.x = x - v13->x_offset;
					v14 = v13->field_18;
					if (v14)
						x = v11->drawjob->job_details.x + (v14->x_offset >> 8);
					else
						x = v11->drawjob->job_details.x + 14;
					v11 = v11->next;
					++v5;
					v11->drawjob->job_details.x = x;
					v15 = v16 == 1;
					++v4->field_18;
					--v16;
				} while (!v15);
			}
		}
	}
}

//----- (00405B80) --------------------------------------------------------
void script_credits_or_custom_mission_briefing_loop(Script *a1)
{
	int v1; // esi@3
	RenderString *v2; // eax@3
	char **v3; // ebx@4
	const char *v4; // edx@5
	int v5; // edi@5
	int v6; // ebp@14
	int v7; // edx@18
	char **v8; // edi@18
	char *v9; // eax@20
	char **v10; // edi@24
	RenderString *v11; // edi@31
	int v12; // ebx@31
	char *v13; // edx@31
	stru8 *v14; // ecx@31
	int v15; // eax@31
	int v16; // eax@33
	int v17; // eax@37
	bool v18; // sf@40
	unsigned __int8 v19; // of@40
	int v20; // [sp+0h] [bp-20h]@14
	int v21; // [sp+4h] [bp-1Ch]@3
	int v22; // [sp+8h] [bp-18h]@20
	int v23; // [sp+Ch] [bp-14h]@14
	int v24; // [sp+10h] [bp-10h]@14
	char *str; // [sp+14h] [bp-Ch]@24
	char **v26; // [sp+18h] [bp-8h]@24
	int v27; // [sp+1Ch] [bp-4h]@18

	if (netz_47C6C0_mapd_idx == 12)
	{
		a1->script_type = SCRIPT_TYPE_17;
		v21 = 0;
		v1 = 480;
		v2 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 84, 84, 39, 19, 90, 14, 16);
		_47C65C_render_string = v2;
		dword_477410 = 0;
		if (v2)
		{
			render_string_445AE0(v2);
			v21 = 17;
			_47C65C_render_string->field_18 = 0;
			_47C65C_render_string->num_lines = 0;
			v3 = credits;
			do
			{
				v4 = *v3;
				v5 = 0;
				if (**v3 == '%')
				{
					v5 = 1;
					++v4;
				}
				if (v5 && v3 != credits)
					v1 += 100;
				render_string_405A60(_47C65C_render_string, v4, 0, v1);
				render_string_405A60(_47C65C_render_string, asc_464C88, 0, v1);
				if (v5)
					v1 += 30;
				else
					v1 += 20;
				++v3;
			} while ((int)v3 < (int)off_464ACC);
		}
		v6 = 16;
		v20 = v1;
		v23 = 480;
		v24 = 0;
		while (!(script_445370_yield_to_main_thread(a1, 0xC0000000, 2) & 0x40000000))
		{
			++dword_477410;
			if (v24)
			{
				if (--v23 < 0)
					break;
			}
			v7 = 0;
			v27 = 0;
			v8 = &credits[v21];
			do
			{
				if (render_string_4059C0(_47C65C_render_string, v7, 0))
				{
					v9 = *v8;
					v22 = 0;
					if (*v8)
					{
						v10 = v8 + 1;
						str = v9;
						++v21;
						v26 = v10;
						if (*v9 == '%')
						{
							v22 = 1;
							str = v9 + 1;
						}
						if (++v6 == 17)
							v6 = 0;
						_47C65C_render_string->num_lines = v6;
						if (v22 && v10 != credits)
							v20 += 100;
						v11 = _47C65C_render_string;
						v12 = _47C65C_render_string->field_C;
						v13 = (char *) & _47C65C_render_string->field_C;
						v1 = v20 - dword_477410;
						v14 = _47C65C_render_string->pstru8;
						v15 = v12 * (v6 + 1) + 1;
						if (v12 * (v6 + 1) != -1)
						{
							do
							{
								v14 = v14->next;
								--v15;
							} while (v15);
						}
						v16 = 0;
						if (v12 > 0)
						{
							do
							{
								++v16;
								v14->drawjob->job_details.y = v1;
								v14 = v14->next;
							} while (v16 < *(_DWORD *)v13);
							v11 = _47C65C_render_string;
						}
						v11->field_18 = 0;
						render_string_405A60(_47C65C_render_string, asc_464C60, 0, v1);
						_47C65C_render_string->field_18 = 0;
						render_string_405A60(_47C65C_render_string, str, 0, v1);
						render_string_405A60(_47C65C_render_string, asc_464C88, 0, v1);
						if (v22)
							v17 = v20 + 30;
						else
							v17 = v20 + 20;
						v8 = v26;
						v20 = v17;
					}
					else
					{
						++v6;
						v24 = 1;
						if (v6 == 17)
							v6 = 0;
						_47C65C_render_string->num_lines = v6;
						_47C65C_render_string->field_18 = 0;
						render_string_405A60(_47C65C_render_string, asc_464C60, 0, v1);
					}
				}
				v7 = v27 + 1;
				v19 = __OFSUB__(v27 + 1, 17);
				v18 = v27++ - 16 < 0;
			} while (v18 ^ v19);
		}
		render_string_list_remove(_47C65C_render_string);
		_47C65C_render_string = 0;
		a1->sprite->script = 0;
		sprite_list_remove(a1->sprite);
		script_443C40(a1, 0);
	}
	else
	{
		script_custom_mission_briefing_loop(a1);
	}
}

//----- (00405E60) --------------------------------------------------------
bool cplc_init()
{
	BOOL result; // eax@2
	DataCplcItem *v1; // eax@3
	void *v2; // eax@3
	DataCplcItem *v3; // esi@4
	char v4; // dl@4
	int v8; // edx@4
	DataCplc_stru0 *v9; // eax@4
	DataCplcItem_ptr1 *v10; // eax@6
	DataCplcItem_ptr1 *v11; // eax@6
	DataCplcItem_ptr1 *v12; // ecx@6
	int v13; // eax@9
					// wait.lvl cpcl:
					// items[0]
					// 
					// item = 0:
					// 00000004: 00 00 00 44    item size
					// 00000008: 00 00 00 18    ptr1
					// 0000000C: 00 00 00 18    ptr2
					// 00000010: 00 00 00 18    ptr3
					// 00000014: 00 00 00 18    ptr4
					// 
					// 00000018: 00 00 00 54    ptr#.field_0
					//           00 00 00 00    ptr#.field_4
					//           00 00 01 00    ptr#.field_8
					//           00 00 00 00    ptr#.field_C
					//           00 00 00 00    ptr#.field_10
					//           00 00 00 00    ptr#.field_14
					//           00 00 00 00    ptr#.field_18
					//           00 00 00 00
					//           00 00 00 14
					//           00 00 00 00
					//           00 00 00 00
					//           00 00 00 00
	currently_running_lvl_cplc_valid = 0;
	currently_running_lvl_cplc = (DataCplc *)LVL_FindSection(CPLC);
	if (currently_running_lvl_cplc)
	{
		result = (BOOL)malloc(0x5DC0u);
		cplc_stru0_list = (DataCplc_stru0 *)result;
		if (!result)
			return result;
		currently_running_lvl_cplc_data = 0;
		v1 = currently_running_lvl_cplc->items;
		currently_running_lvl_cplc_item = v1;
		currently_running_lvl_cplc_data_size = v1->size + 4;
		v2 = malloc(currently_running_lvl_cplc_data_size);
		currently_running_lvl_cplc_data = v2;
		if (!v2)
			goto LABEL_9;
		v3 = currently_running_lvl_cplc_item;
		v4 = currently_running_lvl_cplc_data_size;
        memcpy(v2, currently_running_lvl_cplc_item, currently_running_lvl_cplc_data_size);
		v8 = 1999;
		v9 = cplc_stru0_list;
		cplc_stru0_list_free_pool = cplc_stru0_list;
		do
		{
			--v8;
			v9->next = v9 + 1;
			++v9;
		} while (v8);
		v9->next = 0;
		cplc_stru0_list_477464 = 0;
		v10 = currently_running_lvl_cplc_item->ptr1;
		_477430_cplc_item0_ptr1 = v10;
		_477420_cplc_next1 = v10;
		_47746C_cplc_prev1 = currently_running_lvl_cplc_item->ptr2;
		v11 = currently_running_lvl_cplc_item->ptr3;
		_477414_cplc_next2 = v11;
		_477438_cplc_item0_ptr3 = v11;
		v12 = currently_running_lvl_cplc_item->ptr4;
		_47744C_cplc_item0_ptr4 = v11;
		_477458_cplc_prev2 = v12;
		if (v11)
		{
			while (v11->script_handler_id != 84)    // //  46EE08  Script4  MOBD_20
			{
				v11 = v11->next2;
				_47744C_cplc_item0_ptr4 = v11;
				if (!v11)
					goto LABEL_9;
			}
			_47C380_mapd.mapd_cplc_render_x = v11->x;
			_47C380_mapd.mapd_cplc_render_y = v11->y;
			_47C380_mapd.mapd_cplc_item0_ptr_field_C = v11->z_index;
			__47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF = _47C380_mapd.mapd_cplc_render_x - 0x3FFF;
			_47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF = _47C380_mapd.mapd_cplc_render_y - 0x3FFF;
			v13 = 1;
		}
		else
		{
		LABEL_9:
			v13 = 0;
		}
		if (!v13)
		{
			free(cplc_stru0_list);
			return 0;
		}
		currently_running_lvl_cplc_valid = 1;
	}
	return 1;
}

//----- (00405FD0) --------------------------------------------------------
bool cplc_select(int id)
{
	size_t v1; // eax@1
	DataCplcItem *v2; // eax@3
	DataCplcItem *v3; // esi@4
	char v4; // dl@4
	int v8; // edx@4
	DataCplc_stru0 *v9; // eax@4
	DataCplcItem_ptr1 *v10; // eax@6
	DataCplcItem_ptr1 *v11; // eax@6
	DataCplcItem_ptr1 *v12; // ecx@6

	currently_running_lvl_cplc_item = currently_running_lvl_cplc[id].items;
	v1 = currently_running_lvl_cplc_item->size + 4;
	currently_running_lvl_cplc_data_size = currently_running_lvl_cplc_item->size + 4;
	if (currently_running_lvl_cplc_data)
	{
		free(currently_running_lvl_cplc_data);
		v1 = currently_running_lvl_cplc_data_size;
	}
	v2 = (DataCplcItem *)malloc(v1);
	currently_running_lvl_cplc_data = v2;
	if (!v2)
		goto LABEL_15;
	v3 = currently_running_lvl_cplc_item;
	v4 = currently_running_lvl_cplc_data_size;
    memcpy(v2, currently_running_lvl_cplc_item, currently_running_lvl_cplc_data_size);
	v8 = 1999;
	v9 = cplc_stru0_list;
	cplc_stru0_list_free_pool = cplc_stru0_list;
	do
	{
		--v8;
		v9->next = v9 + 1;
		++v9;
	} while (v8);
	v9->next = 0;
	cplc_stru0_list_477464 = 0;
	v10 = currently_running_lvl_cplc_item->ptr1;
	_477430_cplc_item0_ptr1 = v10;
	_477420_cplc_next1 = v10;
	_47746C_cplc_prev1 = currently_running_lvl_cplc_item->ptr2;
	v11 = currently_running_lvl_cplc_item->ptr3;
	_477414_cplc_next2 = v11;
	_477438_cplc_item0_ptr3 = v11;
	v12 = currently_running_lvl_cplc_item->ptr4;
	_47744C_cplc_item0_ptr4 = v11;
	_477458_cplc_prev2 = v12;
	if (v11)
	{
		while (v11->script_handler_id != 84)      // //  46EE08  Script4  MOBD_20
		{
			v11 = v11->next2;
			_47744C_cplc_item0_ptr4 = v11;
			if (!v11)
				return (unsigned int)v11;
		}
		_47C380_mapd.mapd_cplc_render_x = v11->x;
		_47C380_mapd.mapd_cplc_render_y = v11->y;
		_47C380_mapd.mapd_cplc_item0_ptr_field_C = v11->z_index;
		__47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF = _47C380_mapd.mapd_cplc_render_x - 0x3FFF;
		_47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF = _47C380_mapd.mapd_cplc_render_y - 0x3FFF;
		return 1;
	}
	else
	{
	LABEL_15:
		return 0;
	}
}

//----- (004060F0) --------------------------------------------------------
void cplc_4060F0()
{
	char *v0; // esi@1
	DataCplcItem *v1; // edi@2
	int v3; // edx@2
	DataCplc_stru0 *v5; // eax@2
	DataCplcItem_ptr1 *v6; // eax@4
	DataCplcItem_ptr1 *v7; // eax@4
	DataCplcItem_ptr1 *v8; // ecx@4

	v0 = (char *)currently_running_lvl_cplc_data;
	if (currently_running_lvl_cplc_data)
	{
		v1 = currently_running_lvl_cplc_item;
		v3 = 1999;

        memcpy(currently_running_lvl_cplc_item, currently_running_lvl_cplc_data, currently_running_lvl_cplc_data_size);

		v5 = cplc_stru0_list;
		cplc_stru0_list_free_pool = cplc_stru0_list;
		do
		{
			--v3;
			v5->next = v5 + 1;
			++v5;
		} while (v3);
		v5->next = 0;
		cplc_stru0_list_477464 = 0;
		v6 = currently_running_lvl_cplc_item->ptr1;
		_477430_cplc_item0_ptr1 = v6;
		_477420_cplc_next1 = v6;
		_47746C_cplc_prev1 = currently_running_lvl_cplc_item->ptr2;
		v7 = currently_running_lvl_cplc_item->ptr3;
		_477414_cplc_next2 = v7;
		_477438_cplc_item0_ptr3 = v7;
		v8 = currently_running_lvl_cplc_item->ptr4;
		_47744C_cplc_item0_ptr4 = v7;
		_477458_cplc_prev2 = v8;
		if (v7)
		{
			while (v7->script_handler_id != 84)
			{
				v7 = v7->next2;
				_47744C_cplc_item0_ptr4 = v7;
				if (!v7)
					return;
			}
			_47C380_mapd.mapd_cplc_render_x = v7->x;
			_47C380_mapd.mapd_cplc_render_y = v7->y;
			_47C380_mapd.mapd_cplc_item0_ptr_field_C = v7->z_index;
			__47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF = _47C380_mapd.mapd_cplc_render_x - 0x3FFF;
			_47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF = _47C380_mapd.mapd_cplc_render_y - 0x3FFF;
		}
	}
}
// 477428: using guessed type int __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF;
// 477434: using guessed type int _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF;
// 477468: using guessed type int currently_running_lvl_cplc_data_size;

//----- (004061D0) --------------------------------------------------------
void cplc_create_sprite_script(DataCplcItem_ptr1 *a1)
{
	DataCplcItem_ptr1 *v1; // esi@1
	DataCplcItem_ptr1 *v2; // eax@1
	DataCplcItem_ptr1 *v3; // eax@4
	DataCplcItem_ptr1 *v4; // eax@6
	DataCplcItem_ptr1 *v5; // eax@9
	Script4 *v6; // eax@12
	void(*v7)(Script *); // edx@12
	Script *v8; // eax@14
	enum MOBD_ID v9; // ecx@18
	Sprite *v10; // eax@19
	DataCplc_stru0 *v11; // eax@19

	v1 = a1;
	v2 = a1->prev1;
	if (v2)
		v2->next1 = a1->next1;
	else
		_477430_cplc_item0_ptr1 = a1->next1;
	v3 = a1->next1;
	if (v3)
		v3->prev1 = a1->prev1;
	v4 = a1->prev2;
	if (v4)
		v4->next2 = a1->next2;
	else
		_477438_cplc_item0_ptr3 = a1->next2;
	v5 = a1->next2;
	if (v5)
		v5->prev2 = a1->prev2;
	if (!a1->_20_stru20.field_C)
	{
		v6 = scripts[a1->script_handler_id];
		v7 = v6->script_handler;
		if (v7)
			v8 = v6->script_type == SCRIPT_FUNCTION ? script_create_function(SCRIPT_TYPE_INVALID, v7) : script_create_coroutine(SCRIPT_TYPE_INVALID, v7, 0);
		else
			v8 = 0;
		if (v1->script_handler_id >= 0)
		{
			v9 = scripts[v1->script_handler_id]->mobd_id;
			if ((v9 & 0x80000000) == 0)
			{
				v10 = sprite_create(v9, v8, 0);
				v10->cplc_ptr1 = v1;
				v10->x = v1->x;
				v10->y = v1->y;
				v10->z_index = v1->z_index;
				v10->cplc_ptr1_pstru20 = &v1->_20_stru20;
				v1->_20_stru20.sprite = v10;
				v10->cplc_stru0 = cplc_stru0_list_free_pool;
				cplc_stru0_list_free_pool->sprite = v10;
				v11 = cplc_stru0_list_free_pool;
				cplc_stru0_list_free_pool->prev = 0;
				cplc_stru0_list_free_pool = cplc_stru0_list_free_pool->next;
				v11->next = cplc_stru0_list_477464;
				if (cplc_stru0_list_477464)
					cplc_stru0_list_477464->prev = v11;
				cplc_stru0_list_477464 = v11;
			}
		}
	}
}

//----- (004062E0) --------------------------------------------------------
void cplc_4062E0_stru0_list_remove(DataCplc_stru0 *a1)
{
	DataCplc_stru0 *v1; // eax@1

	a1->sprite->cplc_stru0 = 0;
	v1 = a1->prev;
	if (v1)
		v1->next = a1->next;
	else
		cplc_stru0_list_477464 = a1->next;
	if (a1->next)
		a1->next->prev = a1->prev;
	a1->next = cplc_stru0_list_free_pool;
	cplc_stru0_list_free_pool = a1;
}

//----- (00406320) --------------------------------------------------------
void cplc_406320()
{
	int v0; // ebx@2
	int v1; // edi@2
	int v2; // edx@2
	DataCplc_stru0 *v3; // ecx@2
	int v4; // esi@2
	Sprite *v5; // eax@3
	int v6; // edi@3
	int v7; // edi@5
	Script *v8; // eax@8
	DataCplc_stru0 *v9; // eax@10
	DataCplc_stru0 **v10; // edx@10
	DataCplcItem_ptr1 *v11; // eax@19
	DataCplcItem_ptr1 *v12; // ebx@19
	DataCplcItem_ptr1 *v13; // ecx@19
	DataCplcItem_ptr1 *v14; // edi@19
	int v15; // ebp@19
	int v16; // esi@20
	int v17; // edx@21
	DataCplcItem_ptr1 *v18; // edx@42
	DataCplcItem_ptr1 *v19; // eax@47
	DataCplcItem_ptr1 *v20; // edi@51
	DataCplcItem_ptr1 *v21; // eax@51
	int v22; // ebp@51
	int v23; // esi@52
	int v24; // edx@53
	DataCplcItem_ptr1 *v25; // edx@74
	DataCplcItem_ptr1 *v26; // eax@79
	int v27; // edi@83
	int v28; // esi@84
	int v29; // edx@86
	int v30; // eax@87
	DataCplcItem_ptr1 *v31; // eax@92
	DataCplcItem_ptr1 *v32; // eax@106
	DataCplcItem_ptr1 *v33; // eax@111
	int v34; // esi@115
	int v35; // edx@116
	int v36; // eax@117
	DataCplcItem_ptr1 *v37; // eax@126
	DataCplcItem_ptr1 *v38; // eax@136
	DataCplcItem_ptr1 *v39; // eax@141
	int v40; // [sp+10h] [bp-4h]@2

	if (currently_running_lvl_cplc_valid)
	{
		v0 = __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF;
		v1 = _47C380_mapd.mapd_cplc_render_x - 0x4000;
		__47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF = _47C380_mapd.mapd_cplc_render_x - 0x4000;
		dword_47745C = _47C380_mapd.mapd_cplc_render_x + ((render_width + 64) << 8);
		_477448_cplc_x = _47C380_mapd.mapd_cplc_render_x - 24576;
		v2 = _47C380_mapd.mapd_cplc_render_x + ((render_width + 96) << 8);
		v40 = _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF;
		dword_477440 = _47C380_mapd.mapd_cplc_render_x + ((render_width + 96) << 8);
		_47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF = _47C380_mapd.mapd_cplc_render_y - 0x4000;
		dword_477460 = _47C380_mapd.mapd_cplc_render_y + ((render_height - 64) << 8);
		_477454_cplc_y = _47C380_mapd.mapd_cplc_render_y - 24576;
		v3 = cplc_stru0_list_477464;
		v4 = _47C380_mapd.mapd_cplc_render_y + ((render_height - 32) << 8);
		dword_47743C = _47C380_mapd.mapd_cplc_render_y + ((render_height - 32) << 8);
		if (cplc_stru0_list_477464)
		{
			do
			{
				v5 = v3->sprite;
				v6 = v5->x;
				if (v6 < _477448_cplc_x || v6 > v2 || (v7 = v5->y, v7 < _477454_cplc_y) || v7 > v4)
				{
					v8 = v5->script;
					if (v8)
					{
						v8->flags_20 |= 0x20000;
						v3->sprite->script->field_24 |= v3->sprite->script->flags_20;
					}
					v9 = v3;
					v3 = v3->next;
					v9->sprite->cplc_stru0 = 0;
					v10 = &v9->prev->next;
					if (v10)
						*v10 = v9->next;
					else
						cplc_stru0_list_477464 = v9->next;
					if (v9->next)
						v9->next->prev = v9->prev;
					v9->next = cplc_stru0_list_free_pool;
					v2 = dword_477440;
					v4 = dword_47743C;
					cplc_stru0_list_free_pool = v9;
				}
				else
				{
					v3 = v3->next;
				}
			} while (v3);
			v1 = __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF;
		}
		if (v1 >= v0)
		{
			if (v1 <= v0)
			{
				v12 = _477458_cplc_prev2;
				v13 = _477414_cplc_next2;
			}
			else
			{
				v20 = _47746C_cplc_prev1;
				v12 = _477458_cplc_prev2;
				v13 = _477414_cplc_next2;
				v21 = _477420_cplc_next1;
				v22 = 0;
				do
				{
					v23 = v21->x;
					if (v23 > dword_47745C)
						break;
					v24 = v21->y;
					if (v24 >= _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF
						&& v24 <= dword_477460
						&& v23 >= __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF
						&& v21->script_handler_id != 84)
					{
						cplc_create_sprite_script(v21);
						v21 = _477420_cplc_next1;
						v12 = _477458_cplc_prev2;
						if (_477420_cplc_next1 == _477458_cplc_prev2)
						{
							if (_477458_cplc_prev2->prev2)
								v12 = _477458_cplc_prev2->prev2;
							else
								v12 = _477458_cplc_prev2->next2;
							_477458_cplc_prev2 = v12;
						}
						v13 = _477414_cplc_next2;
						if (_477420_cplc_next1 == _477414_cplc_next2)
						{
							if (_477414_cplc_next2->next2)
								v13 = _477414_cplc_next2->next2;
							else
								v13 = _477414_cplc_next2->prev2;
							_477414_cplc_next2 = v13;
						}
						v20 = _47746C_cplc_prev1;
						if (_477420_cplc_next1 == _47746C_cplc_prev1)
						{
							if (_47746C_cplc_prev1->next1)
								v20 = _47746C_cplc_prev1->next1;
							else
								v20 = _47746C_cplc_prev1->prev1;
							_47746C_cplc_prev1 = v20;
						}
						if (!_477420_cplc_next1->next1)
						{
							v21 = _477420_cplc_next1->prev1;
							_477420_cplc_next1 = _477420_cplc_next1->prev1;
						}
					}
					v25 = v21->next1;
					if (v25)
					{
						v21 = v21->next1;
						_477420_cplc_next1 = v25;
					}
					else
					{
						v22 = 1;
					}
				} while (!v22);
				if (v20->x <= __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF)
				{
					do
					{
						v26 = v20->next1;
						if (!v26)
							break;
						v20 = v20->next1;
						_47746C_cplc_prev1 = v26;
					} while (v26->x <= __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF);
				}
			}
		}
		else
		{
			v11 = _47746C_cplc_prev1;
			v12 = _477458_cplc_prev2;
			v13 = _477414_cplc_next2;
			v14 = _477420_cplc_next1;
			v15 = 0;
			do
			{
				v16 = v11->x;
				if (v16 < __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF)
					break;
				v17 = v11->y;
				if (v17 >= _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF
					&& v17 <= dword_477460
					&& v16 <= dword_47745C
					&& v11->script_handler_id != 84)
				{
					cplc_create_sprite_script(v11);
					v11 = _47746C_cplc_prev1;
					v12 = _477458_cplc_prev2;
					if (_47746C_cplc_prev1 == _477458_cplc_prev2)
					{
						if (_477458_cplc_prev2->prev2)
							v12 = _477458_cplc_prev2->prev2;
						else
							v12 = _477458_cplc_prev2->next2;
						_477458_cplc_prev2 = v12;
					}
					v13 = _477414_cplc_next2;
					if (_47746C_cplc_prev1 == _477414_cplc_next2)
					{
						if (_477414_cplc_next2->next2)
							v13 = _477414_cplc_next2->next2;
						else
							v13 = _477414_cplc_next2->prev2;
						_477414_cplc_next2 = v13;
					}
					v14 = _477420_cplc_next1;
					if (_47746C_cplc_prev1 == _477420_cplc_next1)
					{
						if (_477420_cplc_next1->prev1)
							v14 = _477420_cplc_next1->prev1;
						else
							v14 = _477420_cplc_next1->next1;
						_477420_cplc_next1 = v14;
					}
					if (!_47746C_cplc_prev1->prev1)
					{
						v11 = _47746C_cplc_prev1->next1;
						_47746C_cplc_prev1 = _47746C_cplc_prev1->next1;
					}
				}
				v18 = v11->prev1;
				if (v18)
				{
					v11 = v11->prev1;
					_47746C_cplc_prev1 = v18;
				}
				else
				{
					v15 = 1;
				}
			} while (!v15);
			if (v14->x >= dword_47745C)
			{
				do
				{
					v19 = v14->prev1;
					if (!v19)
						break;
					v14 = v14->prev1;
					_477420_cplc_next1 = v19;
				} while (v19->x >= dword_47745C);
			}
		}
		v27 = _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF;
		if (_47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF >= v40)
		{
			if (_47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF > v40)
			{
				v34 = 0;
				do
				{
					v35 = v13->y;
					if (v35 > dword_477460)
						break;
					v36 = v13->x;
					if (v36 >= __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF
						&& v36 <= dword_47745C
						&& v35 >= v27
						&& v13->script_handler_id != 84)
					{
						cplc_create_sprite_script(v13);
						v13 = _477414_cplc_next2;
						if (_477414_cplc_next2 == _47746C_cplc_prev1)
						{
							if (_47746C_cplc_prev1->prev1)
								_47746C_cplc_prev1 = _47746C_cplc_prev1->prev1;
							else
								_47746C_cplc_prev1 = _47746C_cplc_prev1->next1;
						}
						if (_477414_cplc_next2 == _477420_cplc_next1)
						{
							v37 = _477420_cplc_next1->next1;
							if (!v37)
								v37 = _477420_cplc_next1->prev1;
							_477420_cplc_next1 = v37;
						}
						v12 = _477458_cplc_prev2;
						if (_477414_cplc_next2 == _477458_cplc_prev2)
						{
							if (_477458_cplc_prev2->next2)
								v12 = _477458_cplc_prev2->next2;
							else
								v12 = _477458_cplc_prev2->prev2;
							_477458_cplc_prev2 = v12;
						}
						if (!_477414_cplc_next2->next2)
						{
							v13 = _477414_cplc_next2->prev2;
							_477414_cplc_next2 = _477414_cplc_next2->prev2;
						}
					}
					v38 = v13->next2;
					if (v38)
					{
						v13 = v13->next2;
						_477414_cplc_next2 = v38;
					}
					else
					{
						v34 = 1;
					}
					v27 = _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF;
				} while (!v34);
				if (v12->y <= v27)
				{
					do
					{
						v39 = v12->next2;
						if (!v39)
							break;
						v12 = v12->next2;
						_477458_cplc_prev2 = v39;
					} while (v39->y <= v27);
				}
			}
		}
		else
		{
			v28 = 0;
			while (1)
			{
				v29 = v12->y;
				if (v29 < v27)
					break;
				v30 = v12->x;
				if (v30 >= __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF
					&& v30 <= dword_47745C
					&& v29 <= dword_477460
					&& v12->script_handler_id != 84)
				{
					cplc_create_sprite_script(v12);
					v12 = _477458_cplc_prev2;
					if (_477458_cplc_prev2 == _47746C_cplc_prev1)
					{
						v31 = _47746C_cplc_prev1->prev1;
						if (!v31)
							v31 = _47746C_cplc_prev1->next1;
						_47746C_cplc_prev1 = v31;
					}
					if (_477458_cplc_prev2 == _477420_cplc_next1)
					{
						if (_477420_cplc_next1->next1)
							_477420_cplc_next1 = _477420_cplc_next1->next1;
						else
							_477420_cplc_next1 = _477420_cplc_next1->prev1;
					}
					v13 = _477414_cplc_next2;
					if (_477458_cplc_prev2 == _477414_cplc_next2)
					{
						if (_477414_cplc_next2->prev2)
							v13 = _477414_cplc_next2->prev2;
						else
							v13 = _477414_cplc_next2->next2;
						_477414_cplc_next2 = v13;
					}
					if (!_477458_cplc_prev2->prev2)
					{
						v12 = _477458_cplc_prev2->next2;
						_477458_cplc_prev2 = _477458_cplc_prev2->next2;
					}
				}
				v32 = v12->prev2;
				if (v32)
				{
					v12 = v12->prev2;
					_477458_cplc_prev2 = v32;
				}
				else
				{
					v28 = 1;
				}
				if (v28)
					break;
				v27 = _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF;
			}
			if (v13->y >= dword_477460)
			{
				do
				{
					v33 = v13->prev2;
					if (!v33)
						break;
					v13 = v13->prev2;
					_477414_cplc_next2 = v33;
				} while (v33->y >= dword_477460);
			}
		}
	}
}
// 477418: using guessed type int currently_running_lvl_cplc_valid;
// 477428: using guessed type int __47C380_mapd_cplc_item0_ptr_field_4_minus_3FFF;
// 477434: using guessed type int _47C384_mapd_cplc_item0_ptr_field_8_minus_3FFF;
// 47743C: using guessed type int dword_47743C;
// 477440: using guessed type int dword_477440;
// 477448: using guessed type int _477448_cplc_x;
// 477454: using guessed type int _477454_cplc_y;
// 47745C: using guessed type int dword_47745C;
// 477460: using guessed type int dword_477460;

//----- (004068B0) --------------------------------------------------------
void cplc_init_script_do_reinit(int a1)
{
	cplc_init_script(a1, 1);
}

//----- (004068C0) --------------------------------------------------------
void cplc_init_script(int handler_id, bool reinit_ptrs)
{
	BOOL v2; // ebp@1
	DataCplcItem_ptr1 *v3; // esi@2
	DataCplcItem_ptr1 *v4; // edx@3
	DataCplcItem_ptr1 *v5; // ecx@3
	DataCplcItem_ptr1 *v6; // edi@3
	DataCplcItem_ptr1 *v7; // ebx@3
	int handler_1d; // [sp+0h] [bp-4h]@1

	v2 = reinit_ptrs;
	handler_1d = handler_id;
	if (currently_running_lvl_cplc_valid)
	{
		v3 = _477430_cplc_item0_ptr1;
		if (_477430_cplc_item0_ptr1)
		{
			v4 = _477458_cplc_prev2;
			v5 = _477414_cplc_next2;
			v6 = _477420_cplc_next1;
			v7 = _47746C_cplc_prev1;
			do
			{
				if (v3->script_handler_id == handler_1d)
				{
					if (v2)
					{
						cplc_create_sprite_script(v3);
						v7 = _47746C_cplc_prev1;
						v6 = _477420_cplc_next1;
						v4 = _477458_cplc_prev2;
						v5 = _477414_cplc_next2;
					}
					if (v3 == v7)
					{
						if (v7->prev1)
							v7 = v7->prev1;
						else
							v7 = v7->next1;
						_47746C_cplc_prev1 = v7;
					}
					if (v3 == v6)
					{
						if (v6->next1)
							v6 = v6->next1;
						else
							v6 = v6->prev1;
						_477420_cplc_next1 = v6;
					}
					if (v3 == v4)
					{
						if (v4->prev2)
							v4 = v4->prev2;
						else
							v4 = v4->next2;
						_477458_cplc_prev2 = v4;
					}
					if (v3 == v5)
					{
						if (v5->next2)
							v5 = v5->next2;
						else
							v5 = v5->prev2;
						_477414_cplc_next2 = v5;
					}
				}
				v3 = v3->next1;
			} while (v3);
		}
	}
}
// 477418: using guessed type int currently_running_lvl_cplc_valid;

//----- (004069A0) --------------------------------------------------------
void cplc_init_script_dont_reinit(int a1)
{
	cplc_init_script(a1, 0);
}

//----- (004069B0) --------------------------------------------------------
void cplc_free()
{
	if (currently_running_lvl_cplc_valid)
	{
		if (cplc_stru0_list)
		{
			free(cplc_stru0_list);
			if (currently_running_lvl_cplc_data)
				free(currently_running_lvl_cplc_data);
		}
	}
	currently_running_lvl_cplc_valid = 0;
}
// 477418: using guessed type int currently_running_lvl_cplc_valid;

//----- (004069F0) --------------------------------------------------------
void UNIT_Handler_MobileDerrick(Script *a1)
{
	Entity *v1; // esi@2
	int v2; // eax@4

	if (!_47C6DC_dont_execute_unit_handlers)
	{
		v1 = (Entity *)a1->param;
		if (!v1)
		{
			v1 = entity_list_create(a1);
			entity_initialize_mobile_derrick(v1);
			entity_set_draw_handlers(v1);
		}
		(v1->mode)(v1);
		v2 = v1->_134_param__unitstats_after_mobile_outpost_plant;
		if (v2)
			v1->_134_param__unitstats_after_mobile_outpost_plant = v2 - 1;
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (00406A40) --------------------------------------------------------
void entity_initialize_mobile_derrick(Entity *a1)
{
	Entity *v1; // esi@1
	Script *v2; // eax@1
	UnitStat *v3; // eax@2
	int v4; // eax@3
	UnitStat *v5; // eax@5
	int v6; // eax@6
	UnitStat *v7; // eax@8
	int v8; // edi@9
	UnitStat *v9; // eax@11
	int v10; // eax@12
	int v11; // eax@14
	Sprite *v12; // ecx@15
	int v13; // edx@15
	Script *v14; // edx@15
	UnitStat *v15; // eax@18
	int v16; // eax@19
	int v17; // ecx@21
	UnitStat *v18; // eax@21
	int v19; // eax@22
	int v20; // ecx@24
	int v21; // eax@24
	Script *v22; // edx@24

	v1 = a1;
	v2 = a1->script;
	a1->mode_arrive = entity_mode_406DC0_mobilederrick;
	v2->script_type = SCRIPT_MOBILE_DERRICK_HANDLER;
	if (a1->sprite->cplc_ptr1)
	{
		v3 = a1->stats;
		if (v3->is_infantry)
			v4 = entity_40F0A0_get_dx(a1, a1->field_A4);
		else
			v4 = v3->field_4C != 128 ? 7424 : 4096;
		v1->sprite->x = v4 + (v1->sprite->x & 0xFFFFE000);
		v5 = v1->stats;
		if (v5->is_infantry)
			v6 = entity_40F100_get_dy(v1, v1->field_A4);
		else
			v6 = v5->field_4C != 128 ? 7424 : 4096;
		v1->sprite->y = v6 + (v1->sprite->y & 0xFFFFE000);
		v7 = v1->stats;
		v1->field_A4 = 0;
		if (v7->is_infantry)
			v8 = entity_40F100_get_dy(v1, 0);
		else
			v8 = v7->field_4C != 128 ? 7424 : 4096;
		v9 = v1->stats;
		if (v9->is_infantry)
			v10 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v10 = v9->field_4C != 128 ? 7424 : 4096;
		v11 = entity_40DE80_boxd(v1, v10 + (v1->sprite->x & 0xFFFFE000), v8 + (v1->sprite->y & 0xFFFFE000), 0);
		if (v11 != 5)
		{
			v12 = v1->sprite;
			v1->sprite_x = v12->x;
			v1->sprite_y = v12->y;
			v1->sprite_x_2 = v1->sprite_x;
			v13 = v1->sprite_y;
			v1->_DC_order = ENTITY_ORDER_MOVE;
			v1->sprite_y_2 = v13;
			v1->field_A4 = v11;
			v14 = v1->script;
			v1->sprite_map_x = v12->x >> 13;
			v1->sprite_map_y = v12->y >> 13;
			v14->event_handler = EventHandler_MobileDerrick;
			entity_mode_415540_infantry(v1);
			return;
		}
		goto LABEL_17;
	}
	if (!entity_413860_boxd(a1))
	{
	LABEL_17:
		entity_mode_419760_infantry_destroyed(v1);
		return;
	}
	v15 = v1->stats;
	if (v15->is_infantry)
		v16 = entity_40F0A0_get_dx(v1, v1->field_A4);
	else
		v16 = v15->field_4C != 128 ? 7424 : 4096;
	v17 = v16 + (v1->sprite_map_x << 13);
	v18 = v1->stats;
	v1->sprite_x = v17;
	if (v18->is_infantry)
		v19 = entity_40F100_get_dy(v1, v1->field_A4);
	else
		v19 = v18->field_4C != 128 ? 7424 : 4096;
	v20 = v1->sprite_x;
	v21 = (v1->sprite_map_y << 13) + v19;
	v22 = v1->script;
	v1->sprite_y = v21;
	v1->_DC_order = ENTITY_ORDER_MOVE;
	v1->sprite_x_2 = v20;
	v1->sprite_y_2 = v21;
	v1->_134_param__unitstats_after_mobile_outpost_plant = 0;
	v1->_98_465610_accuracy_dmg_bonus_idx = 0;
	v22->event_handler = EventHandler_General_Scout;
	v1->mode_return = entity_mode_406CC0_mobilederrick;
	entity_4172D0(v1);
}

//----- (00406CC0) --------------------------------------------------------
void entity_mode_406CC0_mobilederrick(Entity *a1)
{
	a1->script->event_handler = EventHandler_MobileDerrick;
	entity_mode_415540_infantry(a1);
}

//----- (00406CD0) --------------------------------------------------------
void EventHandler_MobileDerrick(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v4);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v4);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v4);
			break;
		case EVT_ENTITY_MOVE:
			entity_move(v4, (_47CAF0_task_attachment1_move_task *)param);
			break;

		case EVT_MSG_1507_stru11:
			entity_41A850_evt1507_mess_with_stru11(v4, param);
			break;
		case EVT_MSG_1509_stru11:
			entity_41A980_evt1509_unset_stru11(v4, param);
			break;
		case EVT_MSG_DAMAGE:
			entity_41A610_evt1503(v4, param);
			entity_410710_status_bar(v4);
			break;
		case EVT_MSG_1497:
			entity_41A6D0_evt1497(v4, (Entity *)param);
			break;
		default:
			return;
		}
	}
}

//----- (00406DC0) --------------------------------------------------------
void entity_mode_406DC0_mobilederrick(Entity *a1)
{
	Entity *v1; // esi@1
	OilDeposit *v2; // ecx@1
	Sprite *v3; // edi@2
	Sprite *v4; // eax@3

	v1 = a1;
	a1->sprite->field_88_unused = 1;
	v2 = oilspot_list_head;
	if ((OilDeposit **)oilspot_list_head == &oilspot_list_head)
	{
	LABEL_7:
		v2 = 0;
	}
	else
	{
		v3 = v1->sprite;
		while (1)
		{
			v4 = v2->sprite;
			if (!((v3->x ^ v4->x) & 0xFFFFE000) && !((v3->y ^ v4->y) & 0xFFFFE000) && !(v4->drawjob->flags & 0x40000000))
				break;
			v2 = v2->next;
			if ((OilDeposit **)v2 == &oilspot_list_head)
				goto LABEL_7;
		}
	}
	v1->state = v2;
	if (v2)
	{
		v1->sprite->x_speed = 0;
		v1->sprite->y_speed = 0;
        entity_load_idle_mobd(v1);
		if (!entity_advance_mobd_rotation(&v1->current_mobd_lookup_idx, 160, v1->stats->turning_speed))
			v1->mode = entity_mode_plant_mobile_derrick;
		script_445370_yield_to_main_thread(v1->script, 0xC0000000, 1);
	}
	else
	{
		entity_mode_415540_infantry(v1);
		script_445370_yield_to_main_thread(v1->script, 0xC0000000, 1);
	}
}

//----- (00406EB0) --------------------------------------------------------
void entity_mode_plant_mobile_derrick(Entity *a1)
{
	Entity *v1; // esi@1
	Sprite *v2; // eax@1
	Sprite *v3; // eax@2
	Script *v4; // ST00_4@6
	enum PLAYER_SIDE v5; // [sp-4h] [bp-8h]@1

	v1 = a1;
	a1->script->event_handler = EventHandler_General_Scout;
	entity_40DEC0_boxd(a1, a1->sprite_map_x, a1->sprite_map_y, a1->field_A4);
	v2 = v1->sprite;
	v5 = v1->player_side;
	if (v1->unit_id == UNIT_STATS_SURV_MOBILE_DERRICK)
		v3 = spawn_unit(UNIT_STATS_SURV_DRILL_RIG, v2->x, v2->y - 4096, v5);
	else
		v3 = spawn_unit(UNIT_STATS_MUTE_DRILL_RIG, v2->x, v2->y, v5);
	if (v3)
		v3->_80_entity__stru29__sprite__initial_hitpoints = (void *)v1->hitpoints;
	v4 = v1->script;
	v1->mode = entity_remove_unit_after_mobile_derrick_outpost_clanhall_plant;
	script_445370_yield_to_main_thread(v4, 0x80000000, 5);
}

//----- (00406F40) --------------------------------------------------------
void entity_remove_unit_after_mobile_derrick_outpost_clanhall_plant(Entity *a1)
{
	Entity *v1; // esi@1
	Script *v2; // eax@1
	Sprite *v3; // ecx@1

	v1 = a1;
	v2 = a1->script;
	a1->destroyed = 1;
	v2->field_24 &= 0xEFFFFFFF;
	script_trigger_event(a1->script, EVT_SHOW_UI_CONTROL, 0, task_mobd17_cursor);
	script_trigger_event_group(v1->script, EVT_SHOW_UI_CONTROL, v1, SCRIPT_TYPE_39030);
	entity_40DEC0_boxd(v1, v1->sprite_map_x, v1->sprite_map_y, v1->field_A4);
	v1->script->script_type = SCRIPT_TYPE_INVALID;
	v3 = v1->sprite;
	v1->entity_id = 0;
	sprite_list_remove(v3);
	script_yield(v1->script);
	entity_list_remove(v1);
}

//----- (00406FD0) --------------------------------------------------------
bool oilspot_list_alloc()
{
	OilDeposit *v0; // eax@1
	int v1; // ecx@2
	BOOL result; // eax@4

	v0 = (OilDeposit *)malloc(0x1800u);
	oilspot_list = v0;
	if (v0)
	{
		oilspot_list_free_pool = v0;
		v1 = 0;
		do
		{
			v0[v1].next = &v0[v1 + 1];
			v0 = oilspot_list;
			++v1;
		} while (v1 < 255);
		oilspot_list[255].next = 0;
		oilspot_list_head = (OilDeposit *)&oilspot_list_head;
		oildeposit_list_end = (OilDeposit *)&oilspot_list_head;
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00407030) --------------------------------------------------------
void oilspot_list_free()
{
	free(oilspot_list);
}

//----- (00407040) --------------------------------------------------------
OilDeposit *oilspot_list_407040_find_by_coordinates(int x, int y)
{
	OilDeposit *result; // eax@1
	Sprite *v3; // esi@2

	result = oilspot_list_head;
	if ((OilDeposit **)oilspot_list_head == &oilspot_list_head)
	{
	LABEL_6:
		result = 0;
	}
	else
	{
		while (1)
		{
			v3 = result->sprite;
			if (!((x ^ v3->x) & 0xFFFFE000) && !((y ^ v3->y) & 0xFFFFE000) && !(v3->drawjob->flags & 0x40000000))
				break;
			result = result->next;
			if ((OilDeposit **)result == &oilspot_list_head)
				goto LABEL_6;
		}
	}
	return result;
}

//----- (00407090) --------------------------------------------------------
OilDeposit *oilspot_list_407090_find_by_sprite_coordinates(int x, int y)
{
	OilDeposit *v2; // ebp@1
	int v3; // eax@1
	OilDeposit *i; // edx@1
	Sprite *v5; // ebx@2
	int v6; // esi@2
	int v7; // ebx@4
	int v8; // edi@4
	int v9; // esi@6
	int v11; // [sp+4h] [bp-4h]@1

	v2 = oilspot_list_head;
	v11 = y;
	v3 = 81920;
	for (i = 0; (OilDeposit **)v2 != &oilspot_list_head; v2 = v2->next)
	{
		v5 = v2->sprite;
		v6 = v5->x - x;
		if (v6 <= 0)
			v6 = x - v5->x;
		v7 = v5->y;
		v8 = v7 - v11;
		if (v7 - v11 <= 0)
			v8 = v11 - v7;
		v9 = v8 + v6;
		if (v9 < v3)
		{
			i = v2;
			v3 = v9;
		}
	}
	return i;
}

//----- (004070F0) --------------------------------------------------------
int oilspot_subtract_oil(OilDeposit *a1, int amount)
{
	int v2; // esi@1
	int result; // eax@1
	Sprite *v4; // esi@2
	Entity *v5; // esi@2
	EntityTurret *v6; // esi@4
	Sprite *v7; // esi@5

	v2 = a1->oil_left;
	result = amount;
	if (v2 > amount)
	{
		a1->oil_left = v2 - amount;
	}
	else
	{
		result = a1->oil_left;
		v4 = a1->sprite;
		a1->oil_left = 0;
		v4->script->flags_20 |= 1u;
		a1->sprite->script->field_24 |= a1->sprite->script->flags_20;
		v5 = a1->drillrig;
		if (v5)
		{
			if (v5->entity_id == a1->drillrig_entity_id)
			{
				v6 = v5->turret;
				if (v6)
				{
					v7 = v6->turret_sprite;
					if (v7)
						v7->_60_mobd_anim_speed = 0;
				}
			}
		}
	}
	return result;
}

//----- (00407160) --------------------------------------------------------
void UNIT_Handler_OilPatch(Script *a1)
{
	Sprite *v1; // esi@1
	DataCplcItem_ptr1 *v2; // eax@1
	unsigned int v3; // edx@1
	OilDeposit *v4; // edi@2
	unsigned __int16 v5; // ax@5
	int v6; // eax@7
	char *v7; // eax@7

	v1 = a1->sprite;
	v1->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_448600_oilspot;
	sprite_load_mobd(v1, 0);
	v2 = v1->cplc_ptr1;
	v3 = v1->y & 0xFFFFE000;
	v1->x = (v1->x & 0xFFFFE000) + 4096;
	v1->field_88_unused = 1;
	v1->y = v3 + 4096;
	if (v2)
	{
		v4 = oilspot_list_free_pool;
		if (oilspot_list_free_pool)
			oilspot_list_free_pool = oilspot_list_free_pool->next;
		else
			v4 = 0;
		v4->sprite = v1;
		v5 = v1->cplc_ptr1_pstru20->_1C_oilspot_oil_units__or__param;
		v4->drillrig = 0;
		v4->drillrig_entity_id = 0;
		v4->oil_left = 500 * v5;
		v4->next = oilspot_list_head;
		v4->prev = (OilDeposit *)&oilspot_list_head;
		oilspot_list_head->prev = v4;
		oilspot_list_head = v4;
	}
	else
	{
		v4 = (OilDeposit *)a1->param;
	}
	v6 = v1->y;
	v1->field_88_unused = 1;
	v7 = &_478AA8_boxd_stru0_array[v1->x >> 13].flags2 + 24 * _4793F8_map_width * (v6 >> 13);
	*v7 |= 0x80u;
	script_445370_yield_to_main_thread(a1, 1, 0);
	v1->drawjob->flags |= 0x40000000u;
	if (a1)
	{
		while (1)
			script_445370_yield_to_main_thread(a1, 0x80000000, 1000);
	}
	v4->next->prev = v4->prev;
	v4->prev->next = v4->next;
	v4->next = oilspot_list_free_pool;
	oilspot_list_free_pool = v4;
	sprite_list_remove(v1);
}

//----- (00407FD0) --------------------------------------------------------
void EventHandler_DrillRig(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1497:
			if (player_side == v4->player_side && !v4->_12C_prison_bunker_spawn_type)
			{
				v4->_12C_prison_bunker_spawn_type = 1500;
				if (is_player_faction_evolved())
					sound_play(SOUND_MUTE_UNIT_DRILL_RIG, 0, _4690A8_unit_sounds_volume, 16, 0);
				else
					sound_play(SOUND_SURV_UNIT_DRILL_RIG, 0, _4690A8_unit_sounds_volume, 16, 0);
			}
			break;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage(v4, param, entity_mode_drillrig_on_death);
			entity_410520_update_healthbar_color(v4);
			break;
		case EVT_MSG_DESTROY:
			entity_402E40_destroy((Entity *)receiver->param, entity_mode_drillrig_on_death);
			break;
		default:
			if (event != 1523)
				EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
			break;
		}
	}
}

//----- (004080A0) --------------------------------------------------------
void UNIT_Handler_DrillRig(Script *a1)
{
	Entity *v1; // esi@1
	Entity *v2; // eax@3
	OilDeposit *v3; // eax@3
	void *v4; // eax@8
	int v5; // eax@11

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v2 = entity_list_create(a1);
			v1 = v2;
			v2->script->event_handler = EventHandler_DrillRig;
			entity_44B100_buildings__mess_with_fog_of_war(v2);
			v1->script->script_type = SCRIPT_DRILLRIG_HANDLER;
			entity_initialize_building(v1, 2, 0, 0);
			v1->sprite->field_88_unused = 1;
			v3 = oilspot_list_407090_find_by_sprite_coordinates(v1->sprite->x, v1->sprite->y);
			if (v3)
			{
				v1->sprite->x = (v3->sprite->x & 0xFFFFE000) + 4096;
				v1->sprite->y = (v3->sprite->y & 0xFFFFE000) + 4096;
			}
			v1->_11C__infantry_sprite_y___drillrig_oil_spot = (int)v3;
			v1->sprite->field_88_unused = 1;
			*(_DWORD *)v1->state = (int)oilspot_list_407040_find_by_coordinates(v1->sprite->x, v1->sprite->y);
			if (v1->sprite->cplc_ptr1_pstru20)
				v1->mode = entity_mode_408240_drillrig;
			else
				v1->mode = entity_mode_4081C0_drillrig;
			v4 = a1->sprite->_80_entity__stru29__sprite__initial_hitpoints;
			if (v4)
			{
				v1->hitpoints = (int)v4;
				entity_410520_update_healthbar_color(v1);
			}
			v1->_12C_prison_bunker_spawn_type = 0;
		}
		(v1->mode)(v1);
		v5 = v1->_12C_prison_bunker_spawn_type;
		if (v5)
			v1->_12C_prison_bunker_spawn_type = v5 - 1;
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (004081C0) --------------------------------------------------------
void entity_mode_4081C0_drillrig(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1
	Script *v3; // ecx@3

	v1 = a1;
	a1->sprite->x_speed = 0;
	a1->sprite->y_speed = 0;
	v2 = a1->turret;
	if (v2)
	{
		v2->turret_sprite->drawjob->flags |= 0x40000000u;
        entity_load_attack_mobd(a1);
		v3 = v1->script;
		v1->mode = entity_mode_408260_drillrig;
		script_445370_yield_to_main_thread(v3, 0x10000000, 0);
	}
	else
	{
		script_445370_yield_to_main_thread(a1->script, 0x80000000, 1);
	}
}

//----- (00408240) --------------------------------------------------------
void entity_mode_408240_drillrig(Entity *a1)
{
	Script *v1; // ST00_4@1

	v1 = a1->script;
	a1->mode = entity_mode_408260_drillrig;
	script_445370_yield_to_main_thread(v1, 0x80000000, 1);
}

//----- (00408260) --------------------------------------------------------
void entity_mode_408260_drillrig(Entity *a1)
{
	Entity *v1; // esi@1
	OilDeposit *v2; // eax@2
	EntityTurret *v3; // eax@4

	v1 = a1;
	if (!a1->_11C__infantry_sprite_y___drillrig_oil_spot)
	{
		a1->sprite->field_88_unused = 1;
		v2 = oilspot_list_407090_find_by_sprite_coordinates(a1->sprite->x, a1->sprite->y);
		if (v2)
		{
			v1->sprite->x = (v2->sprite->x & 0xFFFFE000) + 4096;
			v1->sprite->y = (v2->sprite->y & 0xFFFFE000) + 4096;
		}
	}
	v3 = v1->turret;
	if (v3)
		v3->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_40DD00_boxd(v1);
	}
	v1->sprite->field_88_unused = 1;
	*(_DWORD *)v1->state = (int)oilspot_list_407040_find_by_coordinates(v1->sprite->x, v1->sprite->y);
	*(_DWORD *)(*(_DWORD *)v1->state + 16) = (int)v1;
	*(_DWORD *)(*(_DWORD *)v1->state + 20) = v1->entity_id;
	entity_mode_403650_building(v1);
}

//----- (00408330) --------------------------------------------------------
void entity_mode_drillrig_on_death(Entity *a1)
{
	Entity *v1; // esi@1
	Script *v2; // eax@1

	v1 = a1;
	script_trigger_event_group(a1->script, EVT_MSG_1540, 0, SCRIPT_TANKER_CONVOY_HANDLER);
	v2 = v1->script;
	v1->destroyed = 1;
	v1->mode = entity_mode_building_default_on_death;
	script_445370_yield_to_main_thread(v2, 0x80000000, 1);
}

//----- (00408370) --------------------------------------------------------
void script_408370(Script *a1)
{
	int v1; // eax@1
	int *v2; // esi@2

	v1 = dword_464D38;
	if (dword_464D38)
	{
		v2 = dword_464D3C;
		do
		{
			dword_477890 = v1 << 8;
			script_445370_yield_to_main_thread(a1, 0x80000000, 1);
			v1 = *v2;
			++v2;
		} while (v1);
	}
	dword_477890 = 0;
	dword_477894 = 0;
	dword_477898 = 0;
	dword_47789C = 0;
	script_yield(a1);
}

//----- (004083D0) --------------------------------------------------------
void sub_4083D0()
{
	if (!dword_477890 && !dword_477894)
		script_create_coroutine(SCRIPT_TYPE_INVALID, script_408370, 0);
}

//----- (00408400) --------------------------------------------------------
int sub_408400()
{
	return dword_4778AC;
}

//----- (00408410) --------------------------------------------------------
void _408410_palettes()
{
	PALETTEENTRY *v0; // eax@1
	int v1; // ecx@1
	int v2; // ecx@3
	BYTE v3; // dl@4

	v0 = palette_4778A4;
	dword_4778A8 = 1;
	v1 = 0;
	do
	{
		*(&palette_477490[0].peRed + v1) = v0->peRed >> 1;
		v0 = (PALETTEENTRY *)((char *)v0 + 1);
		++v1;
	} while (v1 < 960);
	v2 = 960;
	do
	{
		v3 = v0->peRed;
		v0 = (PALETTEENTRY *)((char *)v0 + 1);
		*(&palette_477490[0].peRed + v2++) = v3;
	} while (v2 < 1024);
	_40E400_set_palette(palette_477490);
}
// 4778A8: using guessed type int dword_4778A8;

//----- (00408460) --------------------------------------------------------
void sub_408460()
{
	_40E400_set_palette(palette_4778A4);
	dword_4778A8 = 0;
}
// 4778A8: using guessed type int dword_4778A8;

//----- (00408480) --------------------------------------------------------
void stru1_408480_reset_animation()
{
	dword_4778A0 = 0;
	stru1_set_animation(0, 0, 0, 0);
}
// 4778A0: using guessed type int dword_4778A0;

//----- (004084A0) --------------------------------------------------------
void script_4084A0_animation(Script *a1)
{
	Script *v1; // esi@1

	v1 = a1;
	if (!dword_4778A0)
	{
		dword_4778A0 = 0;
		stru1_set_animation(0, 0, 0, 0);
		dword_4778A0 = 1;
		stru1_set_animation(0, 0, 0x80000000, 30);
		script_445370_yield_to_main_thread(v1, 0x80000000, 30);
		dword_4778A0 = 0;
	}
}
// 4778A0: using guessed type int dword_4778A0;

//----- (00408500) --------------------------------------------------------
void script_408500_anim(Script *a1)
{
	Script *v1; // esi@1

	v1 = a1;
	dword_4778A0 = 1;
	stru1_set_animation(0, 0x80000000, 0, 30);
	script_445370_yield_to_main_thread(v1, 0x80000000, 30);
	dword_4778A0 = 0;
	stru1_set_animation(0, 0, 0, 0);
	dword_4778A0 = 0;
}
// 4778A0: using guessed type int dword_4778A0;

//----- (00408550) --------------------------------------------------------
void _408550_multi_pal()
{
	FILE *v0; // edi@2
	int v1; // esi@3
	BYTE v2; // al@4
	BYTE v3; // cl@4
	char v4; // bl@6
	int v5; // ebp@6
	int v6; // eax@6
	FILE *v7; // edi@10
	int v8; // esi@11
	BYTE v9; // dl@12
	BYTE v10; // al@12
	int v11; // ebp@14
	PALETTEENTRY *v12; // ebx@14
	char *v13; // edx@14
	int *v14; // eax@14
	int v15; // ecx@16
	BYTE v16; // [sp+10h] [bp-45Ch]@4
	BYTE v17; // [sp+14h] [bp-458h]@4
	BYTE v18; // [sp+18h] [bp-454h]@4
	char v19[80]; // [sp+1Ch] [bp-450h]@2
	PALETTEENTRY v20[256]; // [sp+6Ch] [bp-400h]@4

	palette_4778A4 = sub_40E550();
	if (_47C6D8_use__466098_cost_multipliers)
	{
		sprintf(v19, aSLevelsMulti_p, game_data_installation_dir);
		v0 = fopen(v19, aR);
		if (v0)
		{
			v1 = 0;
			do
			{
				fscanf(v0, aDDD, &v17, &v18, &v16);
				v2 = v18;
				v3 = v16;
				v20[v1].peRed = v17;
				v20[v1].peGreen = v2;
				v20[v1].peBlue = v3;
				v20[v1].peFlags = 0;
				++v1;
			} while (v1 < 256);
			fclose(v0);
		}
		v4 = byte_47C654;
		memcpy(palette_477490, palette_4778A4, sizeof(palette_477490));
		v5 = player_sprite_color_by_player_side[player_side];
		v6 = byte_47C654 << 6;
        memcpy(&palette_477490[16 * player_sprite_color_by_player_side[player_side]], (char *)v20 + v6, 0x40u);
		if (v4 < 7 && v4 != v5)
            memcpy((char *)palette_477490 + v6, &v20[112], 0x40u);
	}
	else
	{
		if (single_player_game)
			return;
		sprintf(v19, aSLevelsMulti_p, game_data_installation_dir);
		v7 = fopen(v19, aR);
		if (v7)
		{
			v8 = 0;
			do
			{
				fscanf(v7, aDDD, &v16, &v18, &v17);
				v9 = v18;
				v10 = v17;
				v20[v8].peRed = v16;
				v20[v8].peGreen = v9;
				v20[v8].peBlue = v10;
				v20[v8].peFlags = 0;
				++v8;
			} while (v8 < 256);
			fclose(v7);
		}
		v11 = 0;
        memcpy(palette_477490, palette_4778A4, sizeof(palette_477490));
		v12 = palette_477490;
		v13 = &netz_47A740[2].field_9;
		v14 = &player_sprite_color_by_player_side[1];
		do
		{
			if (*(v13 - 1))
			{
				v15 = *v13 << 6;
				*v14 = v11;
				memcpy(v12, (char *)v20 + v15, 0x40u);
			}
			++v14;
			++v11;
			v13 += 28;
			v12 += 16;
		} while ((int)v14 < (int) & _47DCC4_entity_id_counter);
	}
    memcpy(palette_4778A4, palette_477490, 0x400u);
	_40E400_set_palette(palette_477490);
}

//----- (00408780) --------------------------------------------------------
bool stru1_init_anim()
{
	render_default_stru1->anim_pos = 0x80000000;
	_4087A0_stru1_should_animate = 0;
	return 1;
}
// 4778B8: using guessed type int _4087A0_stru1_should_animate;

//----- (004087A0) --------------------------------------------------------
void stru1_set_animation(stru1_draw_params *a1, int start, int end, int length)
{
	if (!a1)
		a1 = render_default_stru1;
	if (length)
	{
		__4778C0_stru1_anim_length = length;
		_4778C0_stru1_anim_t = length;
		__4778C0_stru1_anim_start = start;
		__4778C0_stru1_anim_end = end;
		_4778C0_stru1_anim = a1;
		a1->anim_pos = start;
		_4087A0_stru1_should_animate = 1;
	}
	else
	{
		a1->anim_pos = end;
		_4087A0_stru1_should_animate = 0;
	}
}
// 4778B0: using guessed type int __4778C0_stru1_anim_length;
// 4778B4: using guessed type int __4778C0_stru1_anim_start;
// 4778B8: using guessed type int _4087A0_stru1_should_animate;
// 4778BC: using guessed type int __4778C0_stru1_anim_end;
// 4778C4: using guessed type int _4778C0_stru1_anim_t;

//----- (00408800) --------------------------------------------------------
void sprite_408800_play_sound(Sprite *a1, enum SOUND_ID sound, int volume, Script *script)
{
	DrawJob *v4; // eax@1
	enum SOUND_ID s0und; // ebp@1
	stru1_draw_params *v6; // ebx@2
	int v7; // esi@4
	int v8; // edx@6
	int v9; // edx@6
	int v10; // edi@7
	int v11; // edx@7
	bool v12; // zf@14
	bool v13; // sf@14
	int v14; // esi@17
	int v15; // ecx@17
	int v16; // eax@18

	v4 = a1->drawjob;
	s0und = sound;
	if (!v4 || (v6 = v4->job_details.params) == 0)
		v6 = render_default_stru1;
	v7 = v6->clip_z << 7;
	if (v7 < 256)
		v7 = 256;
	v8 = a1->x;
	a1->field_88_unused = 1;
	v9 = v8 - _47C380_mapd.mapd_cplc_render_x - v7;
	if (v9 <= v7)
	{
		if (v9 >= -v7)
		{
			if (v9 < 0)
				v10 = 16 - 16 * (-v9 >> 8) / (v7 >> 8);
			else
				v10 = 16 * (v9 >> 8) / (v7 >> 8) + 16;
			v11 = volume;
		}
		else
		{
			v10 = 0;
			v11 = volume * (v9 + 2 * v7) / v7;
		}
	}
	else
	{
		v10 = 32;
		v11 = volume * (2 * v7 - v9) / v7;
	}
	v12 = v11 == 0;
	v13 = v11 < 0;
	if (v11 < 0)
	{
		v11 = 0;
		v12 = 1;
		v13 = 0;
	}
	if (!v13 && !v12)
	{
		v14 = v6->clip_w << 7;
		v15 = a1->y - _47C380_mapd.mapd_cplc_render_y - v14;
		if (v15 <= v14)
		{
			if (v15 >= -128 * v6->clip_w)
				goto LABEL_22;
			v16 = v15 + (v6->clip_w << 8);
		}
		else
		{
			v16 = (v6->clip_w << 8) - v15;
		}
		v11 = v11 * v16 / v14;
	LABEL_22:
		if (v11 < 0)
			v11 = 0;
	}
	if (v11 < 2)
		v11 = 2;
	if (v11 > _4690A8_unit_sounds_volume)
		v11 = _4690A8_unit_sounds_volume;
	if (script || v11)
		sound_play(s0und, 0, v11, v10, script);
}

//----- (00408930) --------------------------------------------------------
void stru1_animate()
{
	int v0; // esi@2

	if (_4087A0_stru1_should_animate)
	{
		v0 = _4778C0_stru1_anim_t-- - 1;
		if (_4778C0_stru1_anim_t)
		{
			if (__4778C0_stru1_anim_end <= (unsigned int)__4778C0_stru1_anim_start)
				_4778C0_stru1_anim->anim_pos = __4778C0_stru1_anim_end
				+ v0
				* ((__4778C0_stru1_anim_start - __4778C0_stru1_anim_end)
					/ (unsigned int)__4778C0_stru1_anim_length);
			else
				_4778C0_stru1_anim->anim_pos = __4778C0_stru1_anim_end
				- v0
				* ((__4778C0_stru1_anim_end - __4778C0_stru1_anim_start)
					/ (unsigned int)__4778C0_stru1_anim_length);
		}
		else
		{
			_4778C0_stru1_anim->anim_pos = __4778C0_stru1_anim_end;
			_4087A0_stru1_should_animate = 0;
		}
	}
}

//----- (0040CAE0) --------------------------------------------------------
int VIDEO_IsAllocated()
{
	int result; // eax@2

	if (video)
	{
		result = 0;
	}
	else
	{
		video_477DF0 = 0;
		result = 1;
	}
	return result;
}

//----- (0040CB00) --------------------------------------------------------
int VIDEO_ReadAndAllocDrawJob(const char *a1, int x, int y, int z_index)
{
	int v4; // esi@1
	int result; // eax@1
	DrawJob *v6; // eax@2

	v4 = x;
	result = (int)VIDEO_ReadFile(a1);
	video = (VideoFile *)result;
	if (result)
	{
		v6 = draw_list_add(0, 0);
		video_477978_draw_job = v6;
		if (v6)
		{
			v6->job_details.x = v4;
			video_477978_draw_job->job_details.y = y;
			video_477978_draw_job->job_details.z_index = z_index;
			video_477978_draw_job->job_details.image = &_477948_video_draw_details;
			_477970_video_header_field_6 = video->header.field_6;
			_477974_video_header_field_8 = video->header.field_8;
			_477948_video_draw_details.width = video->header.width;
			result = 1;
			_477948_video_draw_details.height = video->header.height;
			_477948_video_draw_details.handler = render_video_draw_handler;
			_477948_video_draw_details.field_14 = 1;
			video_477DC0 = 0;
			video_477DF0 = 0;
		}
		else
		{
			VIDEO_Clean(video);
			video = 0;
			result = 0;
		}
	}
	return result;
}

//----- (0040CBD0) --------------------------------------------------------
int VIDEO_DoFrame()
{
	VideoFile *v0; // ecx@1
	VideoFile *v1; // edi@4
	signed __int64 v2; // rax@5
	int v3; // ecx@6
	int v4; // esi@6
	int v5; // eax@9
	int result; // eax@19
	int v7; // eax@20
	VideoFile *v8; // ebx@21
	DWORD v9; // eax@24
	DWORD v10; // ecx@26
	DWORD v11; // ecx@33
	char *v12; // eax@35
	DWORD v13; // eax@41
	VideoFile *v14; // edi@45
	signed __int64 v15; // rax@46
	int v16; // ecx@47
	int v17; // esi@47
	int v18; // eax@50
	VideoFile *v19; // eax@57
	int v20; // edx@60
	int v21; // ecx@60
	int v22; // esi@60
	char v23; // dl@61
	int v24; // ecx@64
	unsigned int v25; // [sp+68h] [bp-10h]@23
	void *v26; // [sp+6Ch] [bp-Ch]@23
	char *v27; // [sp+70h] [bp-8h]@8
	__int16 *current_play_position; // [sp+74h] [bp-4h]@8

	v0 = video;
	if (!video)
		return 0;
	if (!dword_477DF4)
	{
		if (video->header.current_frame >= video->header.num_frames - 1)
		{
			v1 = video;
			if (video_477DEC_is_sound_playing)
			{
				v3 = video->header.field_18;
				v4 = ((_BYTE)v3 != 8) + 1;
				if (BYTE1(v3) & 1)
					v4 *= 2;
				if (video_477DE4_dsb->GetCurrentPosition(
					(LPDWORD)&current_play_position,
					(LPDWORD)&v27))
				{
					v5 = 0;
					goto LABEL_14;
				}
				if ((int)current_play_position < video_477DC4_current_sound_position)
					dword_477DC8 += 0x10000;
				video_477DC4_current_sound_position = (int)current_play_position;
				current_play_position = (__int16 *)(((int)current_play_position + dword_477DC8) / v4);
				v2 = (signed __int64)((double)(int)current_play_position * 1000.0 / (double)v1->header._14_looks_like_fps);
			}
			else
			{
				LODWORD(v2) = timeGetTime();
			}
			v5 = (unsigned int)v2 < dword_477940;
		LABEL_14:
			if (!v5 && video)
			{
				if (video_477DEC_is_sound_playing)
				{
					video_477DE4_dsb->Stop();
					video_477DE4_dsb->Release();
					video_477DEC_is_sound_playing = 0;
				}
				VIDEO_Clean(video);
				video = 0;
				video_477978_draw_job->job_details.image = 0;
				video_477978_draw_job->flags |= 0x80000000;
				video_477978_draw_job = 0;
				if (video_477DC0)
				{
					video_477DC0->job_details.image = 0;
					video_477DC0->flags |= 0x80000000;
					video_477DC0 = 0;
					return 0;
				}
			}
			return 0;
		}
		VIDEO_ReadNextFrame(video);
		v0 = video;
		v7 = video->header.num_sound_bytes;
		if (v7)
		{
			v8 = video;
			if (video_477DEC_is_sound_playing)
			{
				if (!video_477DE4_dsb->Lock(
					(((unsigned __int64)dword_477944 >> 32) ^ abs(dword_477944)) - ((unsigned __int64)dword_477944 >> 32),
					v7,
					(LPVOID *)&current_play_position,
					(LPDWORD)&v25,
					(LPVOID *)&v27,
					(LPDWORD)&v26,
					0))
				{
					v9 = v25;
					if (v25)
					{
						memcpy(current_play_position, v8->header.ptr_20, v25);
						v9 = v25;
					}
					v10 = (DWORD)v26;
					if (v26)
					{
						memcpy(v27, (char *)v8->header.ptr_20 + v9, (unsigned int)v26);
						v10 = (DWORD)v26;
						v9 = v25;
					}
					dword_477944 += v8->header.num_sound_bytes;
					video_477DE4_dsb->Unlock(current_play_position, v9, v27, v10);
				}
			}
			else
			{
				VIDEO_40D090(video);
			}
			v0 = video;
		}
		if (v0->header.current_frame >= v0->header.num_frames - 1 && video_477DEC_is_sound_playing)
		{
			if (!video_477DE4_dsb->Lock(
				(((unsigned __int64)dword_477944 >> 32) ^ abs(dword_477944)) - ((unsigned __int64)dword_477944 >> 32),
				0x10000,
				&v26,
				(LPDWORD)&v25,
				(LPVOID *)&v27,
				(LPDWORD)&current_play_position,
				0))
			{
				v11 = v25;
				if (v25)
				{
					memset(v26, 0x80u, v25);
					v11 = v25;
				}
				v12 = (char *)current_play_position;
				if (current_play_position)
				{
					memset(v27, 0x80u, (unsigned int)current_play_position);
					v12 = (char *)current_play_position;
					v11 = v25;
				}
				dword_477944 += (int)&v12[v11];
				video_477DE4_dsb->Unlock(v26, v11, v27, (DWORD)v12);
			}
			v0 = video;
		}
		if (v0->header.current_frame)
		{
			video_477DF0 = 1;
		}
		else if (video_477DEC_is_sound_playing)
		{
			dword_477940 = 0;
		}
		else
		{
			v13 = timeGetTime();
			v0 = video;
			dword_477940 = v13;
		}
		dword_477DF4 = 1;
	}
	v14 = v0;
	if (video_477DEC_is_sound_playing)
	{
		v16 = v0->header.field_18;
		v17 = ((_BYTE)v16 != 8) + 1;
		if (BYTE1(v16) & 1)
			v17 *= 2;
		if (video_477DE4_dsb->GetCurrentPosition((LPDWORD)&current_play_position, (LPDWORD)&v27))
		{
			v18 = 0;
			goto LABEL_55;
		}
		if ((int)current_play_position < video_477DC4_current_sound_position)
			dword_477DC8 += 0x10000;
		video_477DC4_current_sound_position = (int)current_play_position;
		current_play_position = (__int16 *)(((int)current_play_position + dword_477DC8) / v17);
		v15 = (signed __int64)((double)(int)current_play_position * 1000.0 / (double)v14->header._14_looks_like_fps);
	}
	else
	{
		LODWORD(v15) = timeGetTime();
	}
	v18 = (unsigned int)v15 < dword_477940;
LABEL_55:
	if (v18)
	{
		video_477DF0 = 0;
		return 0;
	}
	v19 = video;
	dword_477DF4 = 0;
	dword_477940 += video->header.field_E;
	if (video->field_330 & 0x40)
	{
		VIDEO_40D450((char *)video->header.field_28, video->header.field_24);
		v19 = video;
	}
	if (*(_WORD *)&v19->gap2C[0])
	{
		v20 = *(_WORD *)&v19->gap2C[2];
		v21 = 3 * v20;
		v22 = 4 * v20 + 4684177;
		do
		{
			v23 = v19->gap2C[v21 + 4];
			v21 += 3;
			*(_BYTE *)(v22 - 1) = v23;
			*(_BYTE *)v22 = v19->gap2C[v21 + 2];
			*(_BYTE *)(v22 + 1) = v19->gap2C[v21 + 3];
			--*(_WORD *)&v19->gap2C[0];
			v19 = video;
			v22 += 4;
		} while (*(_WORD *)&video->gap2C[0]);
		_40E400_set_palette(&stru_477990);
		v19 = video;
	}
	if (!video_477DF0)
	{
		_477948_video_draw_details._18_img_data = (void *)v19->header.field_10;
		v24 = v19->header.field_10;
		result = 1;
		stru_477D90._18_img_data = (void *)(v24 + _477948_video_draw_details.height * _477948_video_draw_details.width);
		return result;
	}
	return 0;
}
// 477940: using guessed type int dword_477940;
// 477944: using guessed type int dword_477944;
// 477D90: using guessed type DetailedDrawHandler_VideoPlayer stru_477D90;
// 477DC4: using guessed type int video_477DC4_current_sound_position;
// 477DC8: using guessed type int dword_477DC8;
// 477DEC: using guessed type int video_477DEC_is_sound_playing;
// 477DF0: using guessed type int video_477DF0;
// 477DF4: using guessed type int dword_477DF4;

//----- (0040D090) --------------------------------------------------------
void VIDEO_40D090(VideoFile *a1)
{
	VideoFile *v1; // ebx@1
	int v2; // ecx@1
	__int16 v3; // ax@1
	__int16 *v4; // [sp+30h] [bp-10h]@5
	DWORD v5; // [sp+34h] [bp-Ch]@5
	void *v6; // [sp+38h] [bp-8h]@5
	DWORD v7; // [sp+3Ch] [bp-4h]@5

	v1 = a1;
	v2 = a1->header.field_18;
	v3 = ((_BYTE)v2 != 8) + 1;
	if (BYTE1(v2) & 1)
		v3 *= 2;
	video_477DE4_dsb_waveformatex = 0;
	video_477DE4_dsb_waveformatex = 1;
	qword_477984 = 0i64;
	unk_47798C = 0;
	unk_477982 = (unsigned __int16)(((v1->header.field_18 & 0x100) != 0) + 1);
	LODWORD(qword_477984) = v1->header._14_looks_like_fps;
	unk_47798C = v3;
	HIDWORD(qword_477984) = v1->header._14_looks_like_fps * v3;
	unk_47798E = (unsigned __int8)v1->header.field_18 != 8 ? 16 : 8;
	video_477DE4_dsb_desc.dwReserved = 0;
	video_477DE4_dsb_desc.dwSize = 20;
	video_477DE4_dsb_desc.dwFlags = 0;
	video_477DE4_dsb_desc.dwBufferBytes = 0x10000;
	video_477DE4_dsb_desc.lpwfxFormat = (LPWAVEFORMATEX)&video_477DE4_dsb_waveformatex;
	if (pds
		&& !pds->CreateSoundBuffer(&video_477DE4_dsb_desc, &video_477DE4_dsb, 0)
		&& !video_477DE4_dsb->Lock(0, 0x10000, (LPVOID *)&v4, &v7, &v6, &v5, 0))
	{
		memcpy(v4, v1->header.ptr_20, v1->header.num_sound_bytes);
		dword_477944 = v1->header.num_sound_bytes;
		dword_477DC8 = 0;
		video_477DC4_current_sound_position = 0;
		video_477DE4_dsb->Unlock(v4, v7, v6, v5);
		video_477DE4_dsb->Play(0, 0, 1);
		video_477DEC_is_sound_playing = 1;
	}
}

//----- (0040D230) --------------------------------------------------------
void VIDEO_free()
{
	if (video)
	{
		if (video_477DEC_is_sound_playing)
		{
			video_477DE4_dsb->Stop();
			video_477DE4_dsb->Release();
			video_477DEC_is_sound_playing = 0;
		}
		VIDEO_Clean(video);
		video = 0;
		video_477978_draw_job->job_details.image = 0;
		video_477978_draw_job->flags |= 0x80000000;
		video_477978_draw_job = 0;
		if (video_477DC0)
		{
			video_477DC0->job_details.image = 0;
			video_477DC0->flags |= 0x80000000;
			video_477DC0 = 0;
		}
	}
}

//----- (0040D2C0) --------------------------------------------------------
bool VIDEO_IsVideoInvalid()
{
	return video == 0;
}

//----- (0040D2D0) --------------------------------------------------------
bool VIDEO_ReadAndAllocDrawJob_2(const char *a1, stru1_draw_params *a2, stru1_draw_params *a3, RenderString *a4, int width, int height, int z_index)
{
	stru1_draw_params *v7; // ebx@1
	BOOL result; // eax@2
	DrawJob *v9; // eax@5
	int v10; // ecx@8

	v7 = a2;
	video = VIDEO_ReadFile(a1);
	if (video)
	{
		if (a3)
			video_477DC0 = draw_list_add(0, 0);
		v9 = draw_list_add(0, 0);
		video_477978_draw_job = v9;
		if (v9)
		{
			v9->job_details.params = v7;
			video_477978_draw_job->job_details.x = 0;
			video_477978_draw_job->job_details.y = 0;
			video_477978_draw_job->job_details.z_index = z_index;
			video_477978_draw_job->job_details.image = &_477948_video_draw_details;
			_477970_video_header_field_6 = video->header.field_6;
			_477974_video_header_field_8 = video->header.field_8;
			_477948_video_draw_details.width = width;
			_477948_video_draw_details.height = height;
			_477948_video_draw_details.handler = render_video_draw_handler;
			_477948_video_draw_details.field_14 = 0;
			if (a3)
			{
				video_477DC0->job_details.params = a3;
				video_477DC0->job_details.x = 0;
				video_477DC0->job_details.y = 0;
				video_477DC0->job_details.z_index = z_index;
				video_477DC0->job_details.image = &stru_477D90;
				dword_477DB8 = 0;
				dword_477DBC = 0;
				stru_477D90.width = video->header.width;
				v10 = video->header.height - height;
				stru_477D90.handler = render_video_draw_handler;
				stru_477D90.height = v10;
				stru_477D90.field_14 = 0;
			}
			else
			{
				video_477DC0 = 0;
			}
			if (a4)
				VIDEO_40D430(a4);
			video_477DF0 = 0;
			result = 1;
		}
		else
		{
			VIDEO_Clean(video);
			video = 0;
			result = 0;
		}
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (0040D430) --------------------------------------------------------
void VIDEO_40D430(RenderString *a1)
{
	video_4780F8_subtitles = a1;
	video_4780F0 = 0;
	video_4780F4 = 0;
	video_4780EC = 0;
}

//----- (0040D450) --------------------------------------------------------
void VIDEO_40D450(char *a1, int a2)
{
	char *v2; // esi@1
	int v3; // edi@3
	char v4; // al@4
	bool v5; // sf@6
	unsigned __int8 v6; // of@6
	char *v7; // eax@10

	v2 = a1;
	if (video_4780F8_subtitles && a2 > 0)
	{
		v3 = a2;
		do
		{
			v4 = *v2++;
			if (v4 >= 32 && v4 < 127)
			{
				video_477DF8_subtitles[video_4780F0++] = v4;
				v6 = __OFSUB__(video_4780F4 + 1, 23);
				v5 = video_4780F4++ - 22 < 0;
				if (!(v5 ^ v6))
					v4 = '\n';
			}
			if (v4 == '\n')
			{
				++video_4780EC;
				video_477DF8_subtitles[video_4780F0++] = '\n';
				video_4780F4 = 0;
				if (video_4780EC >= 26)
				{
					v7 = strchr(video_477DF8_subtitles, '\n') + 1;
					video_4780F0 -= v7 - video_477DF8_subtitles;
					--video_4780EC;
					memcpy(video_477DF8_subtitles, v7, 675 - (v7 - video_477DF8_subtitles));
					render_string_445AE0(video_4780F8_subtitles);
				}
			}
			video_477DF8_subtitles[video_4780F0] = 0;
			video_4780F8_subtitles->field_18 = 0;
			video_4780F8_subtitles->num_lines = 0;
			render_string_445770(video_4780F8_subtitles, video_477DF8_subtitles, 0);
			--v3;
		} while (v3);
	}
}

//----- (0040D580) --------------------------------------------------------
int timer_init(unsigned int fps)
{
	int result; // eax@1

	timer_delta_ms = 1000 / fps;
	result = 1;
	timer_delta_updated = 1;
	return result;
}

//----- (0040D5A0) --------------------------------------------------------
void TimedMessagePump()
{
	DWORD v0; // eax@3

	if (timer_delta_updated)
	{
		timer_delta_updated = 0;
		timer_time = timer_delta_ms + timeGetTime();
	}
	else
	{
		v0 = timeGetTime();
		if ((int)(timer_time - v0) > 0)
			Sleep(timer_time - v0);
		timer_time += timer_delta_ms;
		message_pump();
	}
}

//----- (0040D600) --------------------------------------------------------
int entity_40D600_infantry_get_new_movement_orientation(Entity *a1, int sprite_width, int sprite_height, int a4)
{
	Sprite *v4; // esi@1
	int v5; // ebp@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // ecx@1
	int v9; // edi@1
	int v10; // eax@1
	int v11; // ebx@3
	int v12; // edx@5
	int v13; // esi@8
	int v14; // edx@12
	int result; // eax@16
	int v16; // [sp+18h] [bp-4h]@1

	v4 = a1->sprite;
	v5 = sprite_width;
	v6 = v4->x;
	v7 = v4->y;
	v8 = sprite_width - v6;
	v9 = sprite_height - v7;
	v16 = v6;
	v10 = sprite_width - v6;
	if (v10 <= 0)
		v10 = -v10;
	v11 = sprite_height - v7;
	if (v9 <= 0)
		v11 = -v9;
	v12 = a4;
	if (v10 > a4)
		goto LABEL_22;
	if (v11 <= a4)
		return -1;
	if (v10 >= a4)
	{
	LABEL_22:
		v13 = -1;
	}
	else
	{
		v12 = a4;
		v13 = v7 >= sprite_height ? 0 : 0x80;
	}
	if (v11 < v12)
		v13 = v16 >= v5 ? 192 : 64;
	v14 = v10 - v11;
	if (v10 - v11 <= 0)
		v14 = v11 - v10;
	if (v14 >= a4)
		return v13;
	if (v8 <= 0)
		result = v9 <= 0 ? 224 : 160;
	else
		result = v9 <= 0 ? 32 : 96;
	return result;
}

//----- (0040D6F0) --------------------------------------------------------
int entity_40D6F0_vehicle_get_new_movement_orientation(Entity *a1, int sprite_width, int sprite_height, int a4)
{
	Sprite *v4; // ecx@1
	int v7; // edi@1
	int v8; // ebp@1
	int v9; // ebx@1
	int v10; // esi@3
	int result; // eax@8
	int v12; // eax@11
	int v13; // ecx@12
	int v14; // eax@17
	int v15; // edx@18
	int v16; // eax@23
	int v17; // ecx@24
	int v18; // ecx@25
	int v19; // eax@30

	v4 = a1->sprite;
	v7 = sprite_height - v4->y;
	v8 = sprite_width - v4->x;
	v9 = sprite_width - v4->x;
	if (sprite_width - v4->x <= 0)
		v9 = -v9;
	v10 = sprite_height - v4->y;
	if (v7 <= 0)
		v10 = -v7;
	if (v9 > a4)
		goto LABEL_34;
	if (v10 <= a4)
		return -1;
    if (v9 >= a4)
    {
    LABEL_34:
        result = -1;
    }
	else
		result = v4->y >= sprite_height ? 0 : 0x80;
	if (v10 < a4)
	{
		v12 = v4->x < sprite_width;
		LOBYTE_HEXRAYS(v12) = v4->x >= sprite_width;
		--v12;
		LOBYTE_HEXRAYS(v12) = v12 & 0x80;
		result = v12 + 192;
	}
	v13 = v9 - v10;
	if (v9 - v10 <= 0)
		v13 = v10 - v9;
	if (v13 < a4)
	{
		if (v8 <= 0)
		{
			v14 = v7 < 0;
			LOBYTE_HEXRAYS(v14) = v7 <= 0;
			--v14;
			LOBYTE_HEXRAYS(v14) = v14 & 0xC0;
			result = v14 + 224;
		}
		else
		{
			result = v7 <= 0 ? 32 : 96;
		}
	}
	v15 = (618 * v9 / 256) - v10;
	if (v15 <= 0)
		v15 = v10 - (618 * v9 / 256);
	if (v15 < a4)
	{
		if (v8 <= 0)
		{
			v16 = v7 < 0;
			LOBYTE_HEXRAYS(v16) = v7 <= 0;
			--v16;
			LOBYTE_HEXRAYS(v16) = v16 & 0xA0;
			result = v16 + 240;
		}
		else
		{
			result = v7 <= 0 ? 16 : 112;
		}
	}
	v17 = 618 * v10 / 256;
	if (v9 - v17 <= 0)
		v18 = v17 - v9;
	else
		v18 = v9 - v17;
	if (v18 < a4)
	{
		if (v8 <= 0)
		{
			v19 = v7 < 0;
			LOBYTE_HEXRAYS(v19) = v7 <= 0;
			--v19;
			LOBYTE_HEXRAYS(v19) = v19 & 0xE0;
			result = v19 + 208;
		}
		else
		{
			result = v7 <= 0 ? 48 : 80;
		}
	}
	return result;
}

//----- (0040D860) --------------------------------------------------------
bool _40D860_prolly_sprite_distance(Sprite *a1, Sprite *a2, int a3)
{
	int v3; // esi@1

	a2->field_88_unused = 1;
	v3 = a1->x;
	a1->field_88_unused = 1;
	return ((a2->y - a1->y) >> 8) * ((a2->y - a1->y) >> 8) + ((a2->x - v3) >> 8) * ((a2->x - v3) >> 8) <= a3 * a3;
}

//----- (0040D8B0) --------------------------------------------------------
int sprite_40D8B0_dmg(Sprite *a1, int a2)
{
	int v2; // ebp@1
	Sprite *v3; // esi@1
	int v4; // ebx@1
	int v5; // edx@1
	int v6; // ecx@1
	int result; // eax@1
	int v8; // edi@1
	int v9; // edx@5
	int v10; // edi@9
	DataBoxd_stru0_per_map_unit *v11; // eax@9
	Entity **v12; // ebx@10
	Entity **v13; // edi@12
	Sprite *v14; // ecx@14
	int v15; // edx@14
	int v16; // eax@14
	int v17; // ecx@14
	Entity *v18; // edx@15
	int v19; // eax@17
	Entity **v20; // ecx@18
	bool v21; // sf@25
	unsigned __int8 v22; // of@25
	int v23; // [sp+10h] [bp-28h]@1
	int v24; // [sp+14h] [bp-24h]@1
	int v25; // [sp+18h] [bp-20h]@5
	int v26; // [sp+1Ch] [bp-1Ch]@1
	int v27; // [sp+20h] [bp-18h]@1
	int v28; // [sp+24h] [bp-14h]@12
	int v29; // [sp+28h] [bp-10h]@9
	Entity **v30; // [sp+2Ch] [bp-Ch]@10
	int v31; // [sp+30h] [bp-8h]@9
	int v32; // [sp+34h] [bp-4h]@5

	v2 = a2;
	v3 = a1;
	v4 = (a2 >> 4) + 1;
	v5 = a2 >> 5;
	v6 = (a1->x >> 13) - v5;
	result = (v3->y >> 13) - v5;
	v27 = v2;
	v23 = 0;
	v26 = v4;
	v8 = v4;
	v24 = v6;
	if (v6 < 0)
	{
		v4 += v6;
		v24 = 0;
		v6 = 0;
		v26 = v4;
	}
	if (result < 0)
	{
		v8 += result;
		result = 0;
	}
	v9 = result;
	v25 = result;
	v32 = result + v8;
	if (result < result + v8)
	{
		while (v9 < _478AAC_map_height)
		{
			v10 = v6;
			v29 = v6;
			v11 = &_478AA8_boxd_stru0_array[v6 + _4793F8_map_width * v9];
			v31 = v4 + v6;
			if (v6 < v4 + v6)
			{
				v12 = v11->_4_entities;
				v30 = v11->_4_entities;
				do
				{
					if (v10 >= _4793F8_map_width)
						break;
					v28 = 0;
					v13 = &dword_478108[v23];
					do
					{
						if (*v12)
						{
							v14 = (*v12)->sprite;
							v14->field_88_unused = 1;
							v15 = v3->x;
							v3->field_88_unused = 1;
							v16 = v14->x;
							v17 = (v14->y - v3->y) >> 8;
							if (v17 * v17 + ((v16 - v15) >> 8) * ((v16 - v15) >> 8) <= v2 * v2)
							{
								v18 = *v12;
								if (!(*v12)->destroyed)
								{
									if (v18->script)
									{
										v19 = 0;
										if ((int)v13 > (int)dword_478108)
										{
											v20 = dword_478108;
											do
											{
												if (*v20 == v18)
													break;
												++v19;
												++v20;
											} while (v19 < v23);
										}
										if (v19 >= v23)
										{
											result = script_trigger_event(v3->script, EVT_MSG_DAMAGE, v3, v18->script);
											*v13 = *v12;
											++v13;
											++v23;
											if ((int *)v13 == &j_render_nullsub_2)
												return result;
										}
									}
									v2 = v27;
								}
							}
							v6 = v24;
						}
						++v12;
						v22 = __OFSUB__(v28 + 1, 5);
						v21 = v28++ - 4 < 0;
					} while (v21 ^ v22);
					v10 = v29 + 1;
					v12 = v30 + 6;
					v22 = __OFSUB__(v29 + 1, v31);
					v21 = v29++ + 1 - v31 < 0;
					v30 += 6;
				} while (v21 ^ v22);
			}
			result = v25++ + 1;
			if (v25 >= v32)
				break;
			v4 = v26;
			v9 = v25;
		}
	}
	return result;
}

//----- (0040DA90) --------------------------------------------------------
int entity_40DA90_update_tile_info(Entity *a1)
{
	Entity *v1; // edi@1
	Sprite *v2; // eax@1
	int v5; // esi@2
	int v6; // ebx@2
	int v7; // ebp@2
	int v8; // eax@2
	int v9; // esi@2
	int v10; // ebx@2
	int result; // eax@7
	int v12; // esi@7
	int v15; // ebp@11
	int i; // [sp+10h] [bp-8h]@2
	int v17; // [sp+14h] [bp-4h]@2

	v1 = a1;
	v2 = a1->sprite;
    if (entity_is_xl_vehicle(a1))
    {
        v5 = v2->x - 4096;
        v6 = v2->x + 4096;
        v7 = (v2->y - 4096) >> 13;
        v8 = (v2->y + 4096) >> 13;
        v9 = v5 >> 13;
        v10 = v6 >> 13;
        v17 = v9;
        for (i = (v2->y + 4096) >> 13; v7 <= v8; ++v7)
        {
            if (v9 <= v10)
            {
                do
                    boxd_40F160(v1, v9++, v7, 0);
                while (v9 <= v10);
                v8 = i;
                v9 = v17;
            }
        }
        result = entity_40E1B0_boxd(
            v1,
            v1->sprite->x_speed + v1->sprite->x,
            v1->sprite->y + v1->sprite->y_speed,
            1);
        v12 = result;
        if (result != 4)
        {
            entity_40E1B0_boxd(v1, v1->sprite->x, v1->sprite->y, 1);
            result = v12;
        }
        return result;
    }
    else
	{
		int new_map_x = global2map(v2->x + v2->x_speed);
        int new_map_y = global2map(v2->y + v2->y_speed);
		if (new_map_x != a1->sprite_map_x || new_map_y != a1->sprite_map_y)
		{
			v15 = boxd_40EEB0(a1, new_map_x, new_map_y, 1);
			if (v15 == 5)
				return boxd_40EA50(v1, new_map_x, new_map_y, &_478AA8_boxd_stru0_array[new_map_x + _4793F8_map_width * new_map_y]);
			boxd_40F160(v1, v1->sprite_map_x, v1->sprite_map_y, v1->field_A4);
			v1->field_A4 = v15;
			v1->sprite_map_x = new_map_x;
			v1->sprite_map_y = new_map_y;
		}
		return 4;
	}
}
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0040DBF0) --------------------------------------------------------
bool entity_40DBF0_boxd_does_unit_fit(Entity *a1)
{
	enum UNIT_ID v1; // eax@1
	stru196 *v2; // edx@1
	enum UNIT_ID v3; // esi@1
	Sprite *v4; // eax@4
	int v5; // esi@4
	int v6; // edi@4
	int v7; // eax@4
	int v8; // ebx@6
	int v9; // edx@7
	int v10; // edx@9
	DataBoxd_stru0_per_map_unit *v11; // ebp@9
	DataBoxd_stru0_per_map_unit *v12; // eax@10
	int v13; // esi@10
	Entity *v14; // edx@12
	int v16; // [sp+10h] [bp-Ch]@8
	int v17; // [sp+18h] [bp-4h]@7

	v1 = array_4701D8[0].unit_id;
	v2 = array_4701D8;
	v3 = a1->unit_id;
	if (array_4701D8[0].unit_id == v3)
	{
	LABEL_4:
		v4 = a1->sprite;
		v5 = (int)&a1->stru60.ptr_C->field_0;
		v6 = (*(_DWORD *)(v5 + 4) + v4->x) >> 13;
		v7 = (*(_DWORD *)(v5 + 8) + v4->y) >> 13;
		if (v6 >= 0 && v7 >= 0)
		{
			v8 = v2->_4_x + v6;
			if (v8 - 1 < _4793F8_map_width)
			{
				v9 = v7 + v2->_8_y;
				v17 = v9;
				if (v9 - 1 < _478AAC_map_height)
				{
					v16 = v7;
					if (v7 >= v9)
						return 1;
					v10 = 24 * _4793F8_map_width;
					v11 = &_478AA8_boxd_stru0_array[v6 + _4793F8_map_width * v7];
					while (1)
					{
						v12 = v11;
						v13 = v6;
						if (v6 < v8)
							break;
					LABEL_17:
						v11 = (DataBoxd_stru0_per_map_unit *)((char *)v11 + v10);
						if (++v16 >= v17)
							return 1;
					}
					while (1)
					{
						if (v12->flags & 0x1F)
						{
							v14 = v12->_4_entities[0];
							if (!v14 || v14->entity_id != a1->entity_id)
								break;
						}
						if (v12->flags2 & 0x40)
							break;
						++v12;
						if (++v13 >= v8)
						{
							v10 = 24 * _4793F8_map_width;
							goto LABEL_17;
						}
					}
				}
			}
		}
	}
	else
	{
		while (v1 != -1)
		{
			v1 = v2[1].unit_id;
			++v2;
			if (v1 == v3)
				goto LABEL_4;
		}
	}
	return 0;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0040DD00) --------------------------------------------------------
bool entity_40DD00_boxd(Entity *a1)
{
	enum UNIT_ID v1; // edx@1
	enum UNIT_ID v2; // eax@1
	stru196 *v3; // ebx@1
	DataMobdItem_stru1 *v4; // eax@4
	Sprite *v5; // ecx@4
	int v6; // edx@4
	int v7; // ebp@4
	int v8; // eax@4
	int v9; // edx@4
	int v10; // edi@4
	int i; // ebp@4
	int v12; // esi@5
	BOOL result; // eax@13
	unsigned int v14; // [sp+10h] [bp-Ch]@1
	Entity *a1a; // [sp+14h] [bp-8h]@1
	int v16; // [sp+18h] [bp-4h]@4

	v1 = a1->unit_id;
	v2 = array_4701D8[0].unit_id;
	a1a = a1;
	v14 = 0x80000000;
	v3 = array_4701D8;
	if (array_4701D8[0].unit_id == v1)
	{
	LABEL_4:
		v4 = a1->stru60.ptr_C;
		v5 = a1->sprite;
		v6 = v4->y_offset + v5->y;
		v7 = v4->x_offset + v5->x;
		v8 = 0;
		v9 = v6 >> 13;
		v16 = v9;
		v10 = v9;
		for (i = v7 >> 13; v10 < v3->_8_y + v9; ++v10)
		{
			v12 = i;
			if (i < v3->_4_x + i)
			{
				do
				{
					if (v14 & v3->field_14)
						v8 = boxd_40EEB0(a1a, v12, v10, 0);
					else
						v8 = boxd_40EEB0(a1a, v12, v10, 64);
					v14 >>= 1;
					++v12;
				} while (v12 < v3->_4_x + i);
				v9 = v16;
			}
			if (v8 == 5)
				break;
		}
		result = 1;
	}
	else
	{
		while (v2 != -1)
		{
			v2 = v3[1].unit_id;
			++v3;
			if (v2 == v1)
				goto LABEL_4;
		}
		result = 0;
	}
	return result;
}

//----- (0040DDD0) --------------------------------------------------------
int entity_40DDD0_boxd(Entity *a1)
{
	enum UNIT_ID v1; // edx@1
	int result; // eax@1
	stru196 *v3; // ebx@1
	Sprite *v4; // eax@4
	DataMobdItem_stru1 *v5; // ecx@4
	int v6; // edi@4
	int v7; // ebp@4
	int i; // edi@4
	int v9; // esi@5
	int v10; // [sp+10h] [bp-Ch]@1
	Entity *v11; // [sp+14h] [bp-8h]@1
	int v12; // [sp+18h] [bp-4h]@4

	v1 = a1->unit_id;
	result = array_4701D8[0].unit_id;
	v11 = a1;
	v10 = 0x80000000;
	v3 = array_4701D8;
	if (array_4701D8[0].unit_id == v1)
	{
	LABEL_4:
		v4 = a1->sprite;
		v5 = a1->stru60.ptr_C;
		v6 = v5->x_offset + v4->x;
		result = (v5->y_offset + v4->y) >> 13;
		v12 = result;
		v7 = result;
		for (i = v6 >> 13; v7 < v3->_8_y + result; ++v7)
		{
			v9 = i;
			if (i < v3->_4_x + i)
			{
				do
				{
					boxd_40F160(v11, v9++, v7, 0);
					v10 >>= 1;
				} while (v9 < v3->_4_x + i);
				result = v12;
			}
		}
	}
	else
	{
		while (result != -1)
		{
			result = v3[1].unit_id;
			++v3;
			if (result == v1)
				goto LABEL_4;
		}
	}
	return result;
}

//----- (0040DE80) --------------------------------------------------------
int entity_40DE80_boxd(Entity *a1, int x, int y, int a3)
{
	int result; // eax@2

	if (entity_is_xl_vehicle(a1))
		result = entity_40E1B0_boxd(a1, x, y, a3) != 4 ? 5 : 0;
	else
		result = boxd_40EEB0(a1, x >> 13, y >> 13, a3);
	return result;
}

//----- (0040DEC0) --------------------------------------------------------
char *entity_40DEC0_boxd(Entity *a1, int a2, int a3, int a4)
{
	Entity *v4; // ebp@1
	char *result; // eax@2
	Sprite *v6; // eax@3
	int v7; // ecx@3
	int v8; // eax@3
	int v9; // esi@3
	int v10; // edi@3
	int v11; // ebx@3
	int v12; // esi@3
	int v13; // edi@3
	char *i; // [sp+14h] [bp+4h]@3
	int v15; // [sp+18h] [bp+8h]@3

	v4 = a1;
	if (entity_is_xl_vehicle(a1))
	{
		v6 = a1->sprite;
		v7 = v6->y;
		v8 = v6->x;
		v9 = v8 - 4096;
		v10 = v8 + 4096;
		v11 = (v7 - 4096) >> 13;
		result = (char *)((v7 + 4096) >> 13);
		v12 = v9 >> 13;
		v13 = v10 >> 13;
		v15 = v12;
		for (i = (char *)((v7 + 4096) >> 13); v11 <= (int)result; ++v11)
		{
			if (v12 <= v13)
			{
				do
					boxd_40F160(v4, v12++, v11, 0);
				while (v12 <= v13);
				v12 = v15;
				result = i;
			}
		}
	}
	else
	{
		result = (char *)boxd_40F160(a1, a2, a3, a4);
	}
	return result;
}

//----- (0040DF50) --------------------------------------------------------
void entity_40DF50_boxd_update_map_tile(Entity *a1, int a2)
{
	Entity *v2; // ebp@1
    int v3;
	int v7; // ebx@3
	int v8; // esi@3
	int v9; // edi@3
	int v11; // [sp+14h] [bp-8h]@3

	v2 = a1;
	if (entity_is_xl_vehicle(a1))
	{
		v7 = global2map(a1->sprite->y - 16 * 256);
		v3 = global2map(a1->sprite->y + 16 * 256);
		v8 = global2map(a1->sprite->x - 16 * 256);
		v9 = global2map(a1->sprite->x + 16 * 256);
		for (v7; v7 <= v3; ++v7)
		{
            for (v11 = v8; v11 <= v9; ++v11)
			{
                boxd_40F230_update_map_tile(v2, v11++, v7, 0, a2);
			}
		}
	}
	else
	{
		boxd_40F230_update_map_tile(a1, a1->sprite_map_x, a1->sprite_map_y, a1->field_A4, a2);
	}
}

//----- (0040E000) --------------------------------------------------------
int entity_40E000_boxd(Entity *a1, int a2, int a3)
{
	Entity *v3; // edi@1
	DataBoxd_stru0_per_map_unit *v4; // ebx@1
	DataBoxd_stru0_per_map_unit *v5; // esi@2
	int result; // eax@2
	int v7; // ecx@4
	Entity **v8; // edx@4
	int v9; // edi@9
	int v10; // ebp@9
	int v11; // esi@9
	int v12; // edx@9
	int v13; // edi@9
	int v14; // ebp@9
	int v15; // ecx@9
	int v16; // ebx@10
	DataBoxd_stru0_per_map_unit *v17; // esi@10
	int v18; // eax@11
	int v19; // eax@12
	int v20; // eax@24
	Entity **v21; // ecx@24
	int v22; // eax@29
	DataBoxd_stru0_per_map_unit *v23; // [sp+10h] [bp-14h]@1
	int v24; // [sp+14h] [bp-10h]@9
	int v25; // [sp+18h] [bp-Ch]@9
	Entity *a1a; // [sp+1Ch] [bp-8h]@1
	int v27; // [sp+20h] [bp-4h]@9
	int v28; // [sp+28h] [bp+4h]@9

	v3 = a1;
	v4 = 0;
	a1a = a1;
	v23 = 0;
	if (a1->stats->field_4C != 4096)
	{
		v5 = &_478AA8_boxd_stru0_array[(a2 >> 13) + _4793F8_map_width * (a3 >> 13)];
		result = boxd_40ED00(a1, v5);
		if (result == 1 || result == 3)
		{
			v7 = 0;
			v8 = v5->_4_entities;
			while (!*v8)
			{
				++v7;
				++v8;
				if (v7 >= 5)
					return result;
			}
			v3->entity_27C = v5->_4_entities[v7];
			v3->entity_27C_entity_id = v5->_4_entities[v7]->entity_id;
		}
		return result;
	}
	v9 = a2 - 4096;
	v10 = a2 + 4096;
	v11 = 0;
	v12 = (a3 + 4096) >> 13;
	v13 = v9 >> 13;
	v14 = v10 >> 13;
	v27 = (a3 + 4096) >> 13;
	v25 = 0;
	v24 = 0;
	v28 = (a3 - 4096) >> 13;
	v15 = v28;
	if (v28 <= v12)
	{
		do
		{
			v16 = v13;
			v17 = &_478AA8_boxd_stru0_array[v13 + _4793F8_map_width * v15];
			if (v13 <= v14)
			{
				while (1)
				{
					v18 = boxd_40ED00(a1a, v17);
					if (!v18)
						return 0;
					v19 = v18 - 1;
					if (!v19)
						break;
					if (v19 == 2)
					{
						++v25;
					LABEL_16:
						v23 = v17;
					}
					++v16;
					++v17;
					if (v16 > v14)
					{
						v15 = v28;
						v12 = v27;
						goto LABEL_19;
					}
				}
				++v24;
				goto LABEL_16;
			}
		LABEL_19:
			v28 = ++v15;
		} while (v15 <= v12);
		v4 = v23;
		v11 = v24;
	}
	if (v11 || v25)
	{
		v20 = 0;
		v21 = v4->_4_entities;
		while (!*v21)
		{
			++v20;
			++v21;
			if (v20 >= 5)
				goto LABEL_29;
		}
		a1a->entity_27C = v4->_4_entities[v20];
		a1a->entity_27C_entity_id = v4->_4_entities[v20]->entity_id;
	LABEL_29:
		v22 = -(v11 != 0);
		LOBYTE_HEXRAYS(v22) = v22 & 0xFE;
		result = v22 + 3;
	}
	else
	{
		result = 2;
	}
	return result;
}
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0040E1B0) --------------------------------------------------------
int entity_40E1B0_boxd(Entity *a1, int x, int y, int a4)
{
	Entity *v4; // edi@1
	int v5; // esi@1
	int v6; // eax@1
	int v7; // ecx@1
	int v8; // ebp@1
	int v9; // ebx@1
	int v11; // eax@9
	int v12; // ebp@9
	int i; // esi@10
	int a2a; // [sp+10h] [bp-8h]@1
	int v15; // [sp+14h] [bp-4h]@1
	int ya; // [sp+1Ch] [bp+4h]@1
	int a4a; // [sp+20h] [bp+8h]@9

	v4 = a1;
	v5 = -1;
	v6 = -1;
	v7 = a1->stats->field_4C;
	a2a = (x - v7) >> 13;
	v8 = (y - v7) >> 13;
	v9 = (v7 + x) >> 13;
	v15 = v8;
	ya = (y + v7) >> 13;
	if (v8 > ya)
	{
	LABEL_7:
		if (v6 != 5)
		{
			v4->field_A4 = 0;
			return 4;
		}
	}
	else
	{
		while (1)
		{
			v5 = a2a;
			if (a2a <= v9)
				break;
		LABEL_5:
			if (v6 == 5)
				goto LABEL_9;
			if (++v8 > ya)
				goto LABEL_7;
		}
		while (1)
		{
			v6 = boxd_40EEB0(v4, v5, v8, a4);
			if (v6 == 5)
				break;
			if (++v5 > v9)
				goto LABEL_5;
		}
	}
LABEL_9:
	v11 = boxd_40EA50(v4, v5, v8, &_478AA8_boxd_stru0_array[v5 + _4793F8_map_width * v8]);
	v12 = v15;
	for (a4a = v11; v12 <= ya; ++v12)
	{
		for (i = a2a; i <= v9; ++i)
			boxd_40F160(v4, i, v12, 0);
	}
	return a4a;
}

//----- (0040E390) --------------------------------------------------------
bool GAME_SetResolution()
{
	_478A00_fullscreen_unused = 1;
	_4785E8_game_width_unused = 640;
	_478A80_game_height_unused = 480;
	if (_478AA0_game_width != 640 || _478A84_game_height != 480)
	{
		_478AA0_game_width = 640;
		_478A84_game_height = 480;
	}
	return 1;
}

//----- (0040E3E0) --------------------------------------------------------
char *get_resource_res_subfolder()
{
	char *result; // eax@1

	result = _465650_display_modes[1].name;
	if (_478AA0_game_width >= 640)
		result = _465650_display_modes[2].name;
	return result;
}
// 478AA0: using guessed type int _478AA0_game_width;

//----- (0040E400) --------------------------------------------------------
void _40E400_set_palette(PALETTEENTRY *palette)
{
    render_current_palette = palette;

	ppalette_4785C0 = palette;
	_4785DC_syscolors_palette_entries = palette;
	_478A14_prev_stru1_palette_entries = -1;
	_40E430_update_palette(render_default_stru1->anim_pos);
}
// 478A14: using guessed type int _478A14_prev_stru1_palette_entries;

//----- (0040E430) --------------------------------------------------------
void _40E430_update_palette(unsigned int a1)
{
	unsigned int v1; // esi@1
	PALETTEENTRY *v2; // edx@7
	PALETTEENTRY *v3; // eax@7
	int v4; // edi@7
	BYTE *v5; // edx@8
	BYTE *v6; // eax@8
	__int16 v7; // cx@8
	unsigned int v8; // ecx@10
	BYTE *v9; // edx@13
	BYTE *v10; // eax@13
	unsigned int v11; // ecx@13
	BYTE *v12; // edx@16
	BYTE *v13; // eax@16
	unsigned int v14; // ecx@16

	v1 = a1 >> 23;
	if (a1 >> 23)
	{
		if (_4785DC_syscolors_palette_entries && v1 != _478A14_prev_stru1_palette_entries)
		{
			_478A14_prev_stru1_palette_entries = a1 >> 23;
			if (v1 == 256)
			{
				ppalette_4785C0 = _4785DC_syscolors_palette_entries;
				_431980_update_primary_palette(_4785DC_syscolors_palette_entries);
			}
			else
			{
				v2 = _4785DC_syscolors_palette_entries;
				v3 = palette_4785F0;
				v4 = 256;
				if (a1 > 0x100)
				{
					do
					{
						v8 = v1 * v2->peRed >> 8;
						if ((unsigned __int8)v8 > 0xFFu)
							v3->peRed = -1;
						else
							v3->peRed = v8;
						v9 = &v2->peGreen;
						v10 = &v3->peGreen;
						v11 = v1 * *v9 >> 8;
						if ((unsigned __int8)v11 > 0xFFu)
							*v10 = -1;
						else
							*v10 = v11;
						v12 = v9 + 1;
						v13 = v10 + 1;
						v14 = v1 * *v12 >> 8;
						if ((unsigned __int8)v14 > 0xFFu)
							*v13 = -1;
						else
							*v13 = v14;
						v2 = (PALETTEENTRY *)(v12 + 2);
						v3 = (PALETTEENTRY *)(v13 + 2);
						--v4;
					} while (v4);
				}
				else
				{
					do
					{
						v3->peRed = (unsigned __int16)(v1 * v2->peRed) >> 8;
						v5 = &v2->peGreen;
						v6 = &v3->peGreen;
						*v6++ = (unsigned __int16)(v1 * *v5++) >> 8;
						v7 = *v5;
						v2 = (PALETTEENTRY *)(v5 + 2);
						*v6 = (unsigned __int16)(v1 * v7) >> 8;
						v3 = (PALETTEENTRY *)(v6 + 2);
						--v4;
					} while (v4);
				}
				ppalette_4785C0 = palette_4785F0;
				_431980_update_primary_palette(palette_4785F0);
			}
		}
	}
	else
	{
        REND_DirectDrawClearScreen(0);
	}
}

//----- (0040E530) --------------------------------------------------------
void RENDER_SetViewportAndClear()
{
	p_render_set_clip(0, 0, render_width, render_height);
    REND_DirectDrawClearScreen(0);
}

//----- (0040E550) --------------------------------------------------------
PALETTEENTRY *sub_40E550()
{
	return _4785DC_syscolors_palette_entries;
}

//----- (0040E560) --------------------------------------------------------
void _40E560_flip_gdi_update_syscolors()
{
	unsigned int v0; // esi@3
	unsigned int v1; // eax@6
	int v2; // ebp@7
	COLORREF v3; // edi@7
	char *v4; // esi@7
	int v5; // eax@8
	int v6; // ecx@9
	unsigned __int16 v7; // dx@13
	int v8; // [sp+4h] [bp-78h]@7
	int v9; // [sp+8h] [bp-74h]@7
	int v10; // [sp+Ch] [bp-70h]@7
	unsigned int v11; // [sp+10h] [bp-6Ch]@6
	int v12; // [sp+14h] [bp-68h]@7
	COLORREF aRgbValues[25]; // [sp+18h] [bp-64h]@13

	if (global_fullscreen == 1)
	{
		pdd->FlipToGDISurface();
		if (_465680_get_sys_colors)
		{
			v0 = 0;
			do
			{
				sys_colors[v0] = GetSysColor(*(int *)((char *)&sys_colors_elements + v0 * 4));
				++v0;
			} while (v0 < 25);
			_465680_get_sys_colors = 0;
		}
		v1 = 0;
		v11 = 0;
		do
		{
			v2 = *((_BYTE *)&sys_colors[0] + v1 + 1);
			v10 = 0;
			v9 = 195075;
			v8 = 0;
			v12 = *((_BYTE *)sys_colors + v1);
			v3 = (*(COLORREF *)((char *)sys_colors + v1) >> 16) & 0xFF;
			v4 = (char *)&RenderDD_primary_palette_values[0].peGreen;
			do
			{
				v5 = (v3 - (unsigned __int8)v4[1]) * (v3 - (unsigned __int8)v4[1])
					+ (v2 - (unsigned __int8)*v4) * (v2 - (unsigned __int8)*v4)
					+ (v12 - (unsigned __int8)*(v4 - 1)) * (v12 - (unsigned __int8)*(v4 - 1));
				if (v5 >= v9)
				{
					v6 = v10;
				}
				else
				{
					v6 = v8;
					v10 = v8;
					if (!v5)
						break;
					v9 = (v3 - (unsigned __int8)v4[1]) * (v3 - (unsigned __int8)v4[1])
						+ (v2 - (unsigned __int8)*v4) * (v2 - (unsigned __int8)*v4)
						+ (v12 - (unsigned __int8)*(v4 - 1)) * (v12 - (unsigned __int8)*(v4 - 1));
				}
				v4 += 4;
				++v8;
			} while ((int)v4 < (int)&render_sw_hdc + 1);
			LOBYTE_HEXRAYS(v7) = RenderDD_primary_palette_values[v6].peGreen;
			HIBYTE_HEXRAYS(v7) = RenderDD_primary_palette_values[v6].peBlue;
			*(COLORREF *)((char *)aRgbValues + v11) = RenderDD_primary_palette_values[v6].peRed | (v7 << 8);
			v1 = v11 + 4;
			v11 = v1;
		} while (v1 < 0x64);
		SetSysColors(25, &sys_colors_elements, aRgbValues);
	}
}
// 465680: using guessed type int _465680_get_sys_colors;
// 4798AC: using guessed type int global_fullscreen;

//----- (0040E6B0) --------------------------------------------------------
void _40E6B0_set_sys_colors()
{
	if (global_fullscreen == 1)
	{
		SetSysColors(25, &sys_colors_elements, sys_colors);
		_431980_update_primary_palette(_4785DC_syscolors_palette_entries);
	}
}
// 4798AC: using guessed type int global_fullscreen;

//----- (0040E6E0) --------------------------------------------------------
bool boxd_40E6E0()
{
	DataBoxd *v0; // eax@1
	DataBoxdItem *v1; // ebx@2
	int v2; // edi@2
	int v3; // eax@2
	DataBoxd_stru0_per_map_unit *v4; // eax@2
	BOOL result; // eax@3
	int v6; // esi@4
	int v7; // ecx@5
	int v8; // eax@6
	int v9; // edx@6
	BoxdTile *ptile; // edx@12
	BoxdTile_stru0 *ptilE; // eax@12
	int v12; // eax@13
	DataBoxd_stru0_per_map_unit *v13; // esi@16
	int v14; // edi@16
	int v15; // ebp@16
	int v16; // edx@17
	int v17; // edi@19
	int v18; // ebp@19
	int v19; // eax@21
	BoxdTile_stru0 *v20; // ecx@21
	int v21; // edx@21
	int v22; // ecx@25
	int v23; // ecx@26
	DataBoxd_stru0_per_map_unit *v24; // [sp+10h] [bp-34h]@9
	BoxdTile *pt1le; // [sp+14h] [bp-30h]@12
	int j; // [sp+18h] [bp-2Ch]@10
	BoxdTile **tiles; // [sp+1Ch] [bp-28h]@4
	int i; // [sp+20h] [bp-24h]@9
	int v29; // [sp+24h] [bp-20h]@19
	DataBoxdItem *v30; // [sp+28h] [bp-1Ch]@2
	int v31; // [sp+2Ch] [bp-18h]@16
	int v32; // [sp+30h] [bp-14h]@2
	int v33; // [sp+34h] [bp-10h]@2
	int v34; // [sp+38h] [bp-Ch]@19

	byte_478C08 = 0;
	kknd_srand_3(0);
	dword_478FF4 = 0;
	dword_47953C = 0;
	dword_47952C = 0;
	dword_478AB0 = 0;
	v0 = (DataBoxd *)LVL_FindSection(BOXD);
	if (v0)
	{
		v1 = v0->items;
		v30 = v1;
		v2 = v0->items->some_map_width_scale - 13;
		v32 = v0->items->some_map_width_scale - 13;
		_4793F8_map_width = v0->items->map_num_x_tiles << v32;
		v33 = v1->some_map_height_scale - 13;
		v3 = v1->map_num_y_tiles << v33;
		_478AB4_map_width_shl_13 = _4793F8_map_width << 13;
		_478AAC_map_height = v3;
		_478FF0_map_height_shl_13 = v3 << 13;
		v4 = (DataBoxd_stru0_per_map_unit *)malloc(24 * _4793F8_map_width * v3);
		_478AA8_boxd_stru0_array = v4;
		if (!v4)
			return 0;
		tiles = v1->map_tiles;
		v6 = 0;
		if (_4793F8_map_width * _478AAC_map_height > 0)
		{
			v7 = 0;
			do
			{
				v4[v7].flags = 0;
				v8 = v7 * 24 + 4;
				_478AA8_boxd_stru0_array[v7].flags2 = 0;
				v9 = 5;
				do
				{
					v8 += 4;
					--v9;
					*(_DWORD *)((char *)_478AA8_boxd_stru0_array + v8 - 4) = 0;// array_4 (5 bytes)
				} while (v9);
				++v6;
				++v7;
				v4 = _478AA8_boxd_stru0_array;
			} while (v6 < _4793F8_map_width * _478AAC_map_height);
		}
		v24 = v4;
		for (i = 0; i < v1->map_num_y_tiles; ++i)
		{
			for (j = 0; j < v1->map_num_x_tiles; ++j)
			{
				if (*tiles)
				{
					ptile = *tiles;
					pt1le = *tiles;
					ptilE = (*tiles)->pstru0;
					if (ptilE)
					{
						do
						{
							v12 = ptilE->type;
							if (v12 == 6 || v12 == 7 || v12 == 8)
							{
								v13 = v24;
								v14 = 0;
								v15 = 1 << v33;
								v31 = 0;
								if (1 << v33 > 0)
								{
									v16 = 1 << v32;
									do
									{
										if (v16 > 0)
										{
											v17 = v14 << 13;
											v34 = v17;
											v18 = 0;
											v29 = v16;
											while (1)
											{
												v19 = v18 + (j << v1->some_map_width_scale);
												v20 = pt1le->pstru0;
												v21 = v17 + (i << v1->some_map_height_scale);
												if (pt1le->pstru0->_4_x < v19 + 0x2000
													&& v20->_10_z > v19
													&& v20->_8_y < v21 + 0x2000
													&& v20->_14_w > v21)
												{
													v22 = v20->type - 6;
													if (v22)
													{
														v23 = v22 - 1;
														if (v23)
														{
															if (v23 == 1)
															{
																v13->flags = 0;
																v13->flags2 = 64;
															}
														}
														else
														{
															v13->flags = 63;
														}
													}
													else
													{
														v13->flags = 95;
													}
												}
												v1 = v30;
												v18 += 0x2000;
												++v13;
												if (!--v29)
													break;
												v17 = v34;
											}
											v14 = v31;
											v15 = 1 << v33;
											v16 = 1 << v32;
										}
										v31 = ++v14;
										v13 += _4793F8_map_width - v16;
									} while (v14 < v15);
									ptile = pt1le;
								}
							}
							ptilE = (BoxdTile_stru0 *)ptile->ptr_4;
							ptile = (BoxdTile *)((char *)ptile + 4);
							pt1le = ptile;
						} while (ptilE);
						LOBYTE_HEXRAYS(v2) = v32;
					}
				}
				v24 += 1 << v2;
				++tiles;
			}
			v24 += _4793F8_map_width * ((1 << v33) - 1);
		}
	}
	else
	{
		_478AAC_map_height = 0;
		_4793F8_map_width = 0;
		_478AA8_boxd_stru0_array = 0;
	}
	result = 1;
	_478BE8_map_info__see40E6E0[0] = -_4793F8_map_width;
	_478BE8_map_info__see40E6E0[1] = 1 - _4793F8_map_width;
	_478BE8_map_info__see40E6E0[3] = _4793F8_map_width + 1;
	_478BE8_map_info__see40E6E0[5] = _4793F8_map_width - 1;
	_478BE8_map_info__see40E6E0[2] = 1;
	_478BE8_map_info__see40E6E0[4] = _4793F8_map_width;
	_478BE8_map_info__see40E6E0[6] = -1;
	_478BE8_map_info__see40E6E0[7] = -1 - _4793F8_map_width;
	return result;
}

//----- (0040EA20) --------------------------------------------------------
void boxd_40EA20()
{
	++dword_47953C;
}
// 47953C: using guessed type int dword_47953C;

//----- (0040EA30) --------------------------------------------------------
void boxd_40EA30_cleanup()
{
	free(_478AA8_boxd_stru0_array);
	_478AA8_boxd_stru0_array = 0;
}

//----- (0040EA50) --------------------------------------------------------
int boxd_40EA50(Entity *a1, int map_x, int map_y, DataBoxd_stru0_per_map_unit *a4)
{
	int v4; // eax@1
	int v5; // edx@2
	int v6; // eax@5
	int v7; // eax@8
	int v8; // edi@8
	DataBoxd_stru0_per_map_unit *v9; // ebx@13
	char v10; // al@13
	enum PLAYER_SIDE v11; // ebp@24
	int v12; // edi@24
	Entity **v13; // esi@24
	int result; // eax@37
	char v15; // al@39
	char v16; // al@44
	Entity **v17; // esi@46
	enum PLAYER_SIDE v18; // ebx@51
	int v19; // edi@51
	int v20; // eax@57
	int v21; // [sp+10h] [bp-1Ch]@8
	int v22; // [sp+14h] [bp-18h]@8
	int v23; // [sp+18h] [bp-14h]@8
	int v24; // [sp+1Ch] [bp-10h]@8
	Entity *v25; // [sp+20h] [bp-Ch]@1
	int v26; // [sp+24h] [bp-8h]@8
	int v27; // [sp+28h] [bp-4h]@1

	v4 = map_x;
	v27 = map_x;
	v25 = a1;
	if (map_x < 0)
		return 0;
	v5 = _4793F8_map_width;
	if (v4 >= _4793F8_map_width || map_y < 0 || map_y >= _478AAC_map_height)
		return 0;
	v6 = a1->stats->field_4C;
    if (v6 == 128)
    {
        v16 = a4->flags;
        if (a4->flags & 0x60 && !(v16 & 0x80))
            return 0;
        v17 = a4->_4_entities;
        if (a4->_4_entities[0] == a1)
        {
            result = 2;
        }
        else if (v16 & 0x1F)
        {
            if (!(v16 & 0x80))
            {
                v18 = a1->player_side;
                v19 = 0;
                while (!*v17 || is_enemy(v18, *v17))
                {
                    ++v19;
                    ++v17;
                    if (v19 >= 5)
                    {
                        if (!v25->stats->field_2C)
                            break;
                        return 2;
                    }
                }
            }
            v20 = -(((a4->flags ^ a4->flags2) & 0x1F) != 0);
            LOBYTE_HEXRAYS(v20) = v20 & 0xFE;
            result = v20 + 3;
        }
        else
        {
            result = 2;
        }
        return result;
    }
    else if (v6 == 512)
    {
        v15 = a4->flags;
        if (!(a4->flags & 0x60) || v15 & 0x80)
        {
            if ((v15 & 0x1F) == 31)
                result = (a4->flags2 & 0x1F) != 0 ? 3 : 1;
            else
                result = 2;
            return result;
        }
    }
    else if (entity_is_xl_vehicle(a1))
    {
        v7 = 0;
        v8 = 0;
        v23 = 0;
        v24 = 0;
        v26 = 0;
        v22 = 0;
        v21 = 0;
        while (v8 + v27 < v5 && v7 + map_y < _478AAC_map_height)
        {
            v9 = &a4[v8 + (v7 != 0 ? v5 : 0)];
            v10 = v9->flags;
            if (v9->flags & 0x60 && !(v10 & 0x80))
                v26 = 1;
            if (v10 & 0x80 && v9->_4_entities[0] != v25)
            {
                if ((v9->flags2 & 0x1F) == 31)
                    v24 = 1;
                else
                    v23 = 1;
            }
            if (!(v10 & 0x80) && v10 & 0x1F)
            {
                if (v25->stats->field_2C)
                {
                    v11 = v25->player_side;
                    v12 = 0;
                    v13 = v9->_4_entities;
                    while (!*v13 || is_enemy(v11, *v13))
                    {
                        ++v12;
                        ++v13;
                        if (v12 >= 5)
                        {
                            v8 = v21;
                            goto LABEL_33;
                        }
                    }
                    v8 = v21;
                }
                if ((v9->flags ^ v9->flags2) & 0x1F)
                    v23 = 1;
                else
                    v24 = 1;
            }
        LABEL_33:
            v7 = v22;
            v21 = ++v8;
            if (v8 < 2)
            {
                v5 = _4793F8_map_width;
            }
            else
            {
                v7 = v22 + 1;
                v22 = v7;
                if (v7 >= 2)
                {
                    if (v26)
                        return 0;
                    if (v23)
                        result = 1;
                    else
                        result = (v24 != 0) + 2;
                    return result;
                }
                v5 = _4793F8_map_width;
                v8 = 0;
                v21 = 0;
            }
        }
    }
	return 0;
}

//----- (0040ED00) --------------------------------------------------------
int boxd_40ED00(Entity *a1, DataBoxd_stru0_per_map_unit *a2)
{
	Entity *v2; // ebp@1
	int v3; // eax@1
	int result; // eax@4
	char v5; // al@5
	char v6; // al@11
	Entity **v7; // esi@14
	enum PLAYER_SIDE v8; // ebx@19
	int v9; // edi@19
	int v10; // eax@26
	DataBoxd_stru0_per_map_unit *v11; // [sp+10h] [bp-4h]@1

	v2 = a1;
	v11 = a2;
	v3 = a1->stats->field_4C;
	if (v3 != 128)
	{
		if (v3 == 512)
		{
			v5 = a2->flags;
			if (!(a2->flags & 0x60) || v5 & 0x80)
			{
				if ((v5 & 0x1F) == 31)
					result = (a2->flags2 & 0x1F) != 0 ? 3 : 1;
				else
					result = 2;
			}
			else
			{
				result = 0;
			}
			return result;
		}
		if (v3 != 4096)
			return 0;
	}
	v6 = a2->flags;
	if (!(a2->flags & 0x60) || v6 & 0x80)
	{
		v7 = a2->_4_entities;
		if (a2->_4_entities[0] == a1)
		{
			result = 2;
		}
		else if (v6 & 0x1F)
		{
			if (!(v6 & 0x80))
			{
				v8 = a1->player_side;
				v9 = 0;
				while (!*v7 || is_enemy(v8, *v7))
				{
					++v9;
					++v7;
					if (v9 >= 5)
					{
						if (v2->stats->field_2C)
							return 2;
						break;
					}
				}
				a2 = v11;
			}
			v10 = -(((a2->flags ^ a2->flags2) & 0x1F) != 0);
			LOBYTE_HEXRAYS(v10) = v10 & 0xFE;
			result = v10 + 3;
		}
		else
		{
			result = 2;
		}
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (0040EDF0) --------------------------------------------------------
bool boxd_40EDF0(DataBoxd_stru0_per_map_unit *a1, Entity *a2, Entity *a3)
{
	Entity *v3; // eax@2
	BOOL result; // eax@4

	result = 1;
	if (a1->flags & 0x40)
	{
		v3 = a1->_4_entities[0];
		if (v3 != a2 && v3 != a3)
			result = 0;
	}
	return result;
}

//----- (0040EE10) --------------------------------------------------------
Entity *boxd_40EE10_prolly_get_building(int map_x, int map_y)
{
	DataBoxd_stru0_per_map_unit *v2; // eax@5
	Entity *v3; // ecx@6
	int v4; // ecx@7
	Entity *result; // eax@9
	enum UNIT_ID v6; // ecx@11

	if (map_x < 0 || map_y < 1 || map_x >= _4793F8_map_width || map_y >= _478AAC_map_height)
		goto LABEL_16;
	v2 = &_478AA8_boxd_stru0_array[map_x + _4793F8_map_width * map_y];
	if (v2->flags2 & 0x40)
	{
		v3 = v2[-1]._4_entities[0];
		if (v3)
		{
			v4 = v3->unit_id;
			if (v4 >= (int)UNIT_STATS_SURV_DRILL_RIG && v4 <= (int)UNIT_STATS_MUTE_ALCHEMY_HALL)
				return v2[-1]._4_entities[0];
		}
	}
	result = v2->_4_entities[0];
	if (!result
		|| (v6 = result->unit_id, (int)v6 < (int)UNIT_STATS_SURV_DRILL_RIG)
		|| (int)v6 >(int)UNIT_STATS_MUTE_ALCHEMY_HALL)
	{
	LABEL_16:
		result = 0;
	}
	return result;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0040EE70) --------------------------------------------------------
int boxd_40EE70(int map_x, int map_y)
{
	DataBoxd_stru0_per_map_unit *v2; // eax@5
	int result; // eax@7

	result = 0;
	if (map_x >= 0 && map_y >= 1 && map_x < _4793F8_map_width && map_y < _478AAC_map_height)
	{
		v2 = &_478AA8_boxd_stru0_array[map_x + _4793F8_map_width * map_y];
		if (!(v2->flags & 0x1F) && !(v2->flags2 & 0x40))
			result = 1;
	}
	return result;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0040EEB0) --------------------------------------------------------
int boxd_40EEB0(Entity *a1, int map_x, int map_y, int a4)
{
	Entity *v4; // ebx@1
	DataBoxd_stru0_per_map_unit *v5; // ebp@5
	UnitStat *v6; // ecx@5
	char v7; // al@5
	int v8; // edx@5
	int v9; // esi@7
	char v10; // cl@10
	int result; // eax@10
	char v12; // cl@19
	char v13; // cl@20
	Entity **v14; // esi@25
	int v15; // edi@30
	Entity *v16; // esi@34
	int v17; // edi@34
	char v18; // al@39
	char v19; // al@40
	enum PLAYER_SIDE player_side; // [sp+10h] [bp-4h]@30

	v4 = a1;
	if (map_x < 0 || map_x >= _4793F8_map_width || map_y < 0 || map_y >= _478AAC_map_height)
		return 5;
	v5 = &_478AA8_boxd_stru0_array[map_x + _4793F8_map_width * map_y];
	v6 = a1->stats;
	v7 = v5->flags;
	v8 = v5->flags & 0x1F;
	if (v6->is_infantry)
	{
		if (v8 < 31)
		{
			v9 = v4->field_A4;
			if ((1 << v4->field_A4) & v8)
				v9 = dword_465688[v8];
			if (v9 != 5)
			{
				v10 = v5->flags2;
				v5->flags = v7 | (1 << v9);
				v5->flags2 = ((_BYTE)a4 << v9) | v10;
				v5->_4_entities[v9] = v4;
				entity_44B100_buildings__mess_with_fog_of_war(v4);
				return v9;
			}
		}
		return 5;
	}
	if (v5->flags & 0x1F)
	{
		v14 = v5->_4_entities;
		if (v5->_4_entities[0] == v4)
			return 0;
		if (!(v7 & 0x60) && !(v7 & 0x80) && v6->field_2C)
		{
			v15 = 0;
			player_side = v4->player_side;
			while (!*v14 || is_enemy(player_side, *v14))
			{
				++v15;
				++v14;
				if (v15 >= 5)
				{
					v16 = (Entity *)v5->_4_entities;
					v17 = 5;
					do
					{
						if (v16->next && v16->next->script)
						{
							script_trigger_event(v4->script, EVT_MSG_1499, 0, v16->next->script);
							v16->next = 0;
						}
						v16 = (Entity *)((char *)v16 + 4);
						--v17;
					} while (v17);
					v18 = v5->flags2;
					v5->flags |= 0x9Fu;
					if (a4)
						v19 = v18 | 0x1F;
					else
						v19 = v18 & 0xE0;
					v5->flags2 = v19;
					v5->_4_entities[0] = v4;
					goto LABEL_43;
				}
			}
		}
		return 5;
	}
	if (!v6->speed)
	{
		if (!(v5->flags2 & 0x40))
		{
			v5->flags = v7 | 0x40;
			goto LABEL_15;
		}
		return 5;
	}
LABEL_15:
	if (a4 == 64)
		v5->flags = 0;
	else
		v5->flags |= 0x9Fu;
	if (a4)
	{
		v12 = v5->flags2;
		if (a4 == 64)
			v13 = v12 | 0x40;
		else
			v13 = v12 | 0x1F;
	}
	else
	{
		v13 = v5->flags2 & 0xE0;
	}
	v5->flags2 = v13;
	if (a4 == 64)
	{
	LABEL_43:
		entity_44B100_buildings__mess_with_fog_of_war(v4);
		result = 0;
	}
	else
	{
		v5->_4_entities[0] = v4;
		entity_44B100_buildings__mess_with_fog_of_war(v4);
		result = 0;
	}
	return result;
}

//----- (0040F0A0) --------------------------------------------------------
int entity_40F0A0_get_dx(Entity *a1, int a2)
{
	int v2; // eax@1
	int result; // eax@3

	v2 = a1->stats->field_4C;
	if (v2 == 128)
	{
	LABEL_7:
		result = 4096;
	}
	else if (v2 == 512)
	{
		switch (a2)
		{
		case 1:
		case 3:
			result = 2048;
			break;
		case 2:
		case 4:
			result = 6144;
			break;
		default:
			goto LABEL_7;
		}
	}
	else
	{
		result = v2 != 4096 ? 0 : 7424;
	}
	return result;
}

//----- (0040F100) --------------------------------------------------------
int entity_40F100_get_dy(Entity *a1, int a2)
{
	int v2; // eax@1
	int result; // eax@3

	v2 = a1->stats->field_4C;
	if (v2 == 128)
	{
	LABEL_7:
		result = 4096;
	}
	else if (v2 == 512)
	{
		switch (a2)
		{
		case 2:
		case 3:
			result = 6144;
			break;
		case 1:
		case 4:
			result = 2048;
			break;
		default:
			goto LABEL_7;
		}
	}
	else
	{
		result = v2 != 4096 ? 0 : 7424;
	}
	return result;
}

//----- (0040F160) --------------------------------------------------------
int boxd_40F160(Entity *a1, int map_x, int map_y, int a4)
{
	int result; // eax@1
	enum UNIT_ID v5; // edx@6
	char v6; // bl@9
	char v7; // cl@12

	result = (int) & _478AA8_boxd_stru0_array[map_x + _4793F8_map_width * map_y].flags;
	if (map_x >= 0 && map_x < _4793F8_map_width && map_y >= 0 && map_y < _478AAC_map_height)
	{
		if (!a1->stats->speed || (v5 = a1->unit_id, v5 == UNIT_STATS_SURV_OUTPOST) || v5 == UNIT_STATS_MUTE_CLANHALL)// 58 -> Outpost, 59 -> Clanhall
			*(_BYTE *)(result + 1) &= 0xBFu;
		v6 = *(_BYTE *)result;
		if (*(_BYTE *)result & 0x80)
		{
			if (!a4 && *(Entity **)(result + 4) == a1)
			{
				v7 = *(_BYTE *)(result + 1) & 0xE0;
				*(_BYTE *)result = v6 & 0x20;
				*(_BYTE *)(result + 1) = v7;
				*(_DWORD *)(result + 4) = 0;
			}
		}
		else if (a1->stats->is_infantry && (1 << a4) & v6)
		{
			*(_BYTE *)result = v6 - (1 << a4);
			*(_BYTE *)(result + 1) &= ~(1 << a4);
			*(_DWORD *)(result + 4 * a4 + 4) = 0;
		}
	}
	return result;
}

//----- (0040F230) --------------------------------------------------------
void boxd_40F230_update_map_tile(Entity *a1, int map_x, int map_y, int a4, int a5)
{
    DataBoxd_stru0_per_map_unit *tile = &_478AA8_boxd_stru0_array[map_x + _4793F8_map_width * map_y];

	if (map_x >= 0 && map_x < _4793F8_map_width && map_y >= 0 && map_y < _478AAC_map_height)
	{
		if (tile->flags & DataBoxd_stru0_per_map_unit__flags__80)
		{
			if (!a4 && tile->_4_entities[0] == a1)
			{
				if (a5)
					tile->flags2 |= 0x1F;
				else
					tile->flags2 &= 0xE0;
			}
		}
		else if (a1->stats->is_infantry && (1 << a4) & tile->flags)
		{
			if (a5)
                tile->flags2 |= 1 << a4;
			else
                tile->flags2 &= ~(1 << a4);
		}
	}
}

//----- (0040F380) --------------------------------------------------------
void sub_40F380_incdec(int inc_dec)
{
	if (inc_dec)
	{
		++dword_479540;
	}
	else if (dword_479540)
	{
		--dword_479540;
	}
}
// 479540: using guessed type int dword_479540;

//----- (0040F3A0) --------------------------------------------------------
bool sidebar_button_list_alloc()
{
	Sidebar *v0; // eax@1
	int v1; // ecx@2
	SidebarButton *v2; // eax@4
	int v3; // ecx@5
	BOOL result; // eax@7

	v0 = (Sidebar *)malloc(0x4C0u);
	sidebar_list = v0;
	if (!v0)
		goto LABEL_11;
	sidebar_list_head = v0;
	v1 = 0;
	do
	{
		v0[v1].next = &v0[v1 + 1];
		v0 = sidebar_list;
		++v1;
	} while (v1 < 15);
	sidebar_list[15].next = 0;
	stru22_list_479548 = (Sidebar *)&stru22_list_479548;
	stru22_list_47954C = (Sidebar *)&stru22_list_479548;
	v2 = (SidebarButton *)malloc(0x7D0u);
	sidebar_button_list = v2;
	if (v2)
	{
		sidebar_button_list_head = v2;
		v3 = 0;
		do
		{
			v2[v3].next = &v2[v3 + 1];
			v2 = sidebar_button_list;
			++v3;
		} while (v3 < 49);
		sidebar_button_list[49].next = 0;
		sidebar_button_list_4795A0 = (SidebarButton *)&sidebar_button_list_4795A0;
		sidebar_button_list_4795A4 = (SidebarButton *)&sidebar_button_list_4795A0;
		sidebar_button_list_item_width = 0x2000;
		sidebar_button_list_sidebar_height = 0x2000;
		result = 1;
	}
	else
	{
	LABEL_11:
		result = 0;
	}
	return result;
}

//----- (0040F460) --------------------------------------------------------
void script_sidebar(Script *a1)
{
	while (1)
	{
		while (!(script_445370_yield_to_main_thread(a1, 1, 0) & 1))
			;
		script_yield(a1);
	}
}

//----- (0040F480) --------------------------------------------------------
Sidebar *sidebar_list_create(Sprite *sprite, Script *script, int width, int height, int sidebar_horizontal)
{
	Sidebar *v5; // esi@1
	Sprite *v6; // edi@1
	Sidebar *result; // eax@5
	int v8; // ecx@8

	v5 = sidebar_list_head;
	v6 = sprite;
	if (sidebar_list_head)
		sidebar_list_head = sidebar_list_head->next;
	else
		v5 = 0;
	if (v5)
	{
		v5->script = script;
		if (!script)
			v5->script = script_create_coroutine(SCRIPT_TYPE_51914_sidebar, script_sidebar, 0);
		v5->num_buttons = 0;
		v5->x = (width + render_width - 320) << 8;
		v5->w = height << 8;
		v5->sprite_width_step = sidebar_horizontal == 1 ? sidebar_button_list_item_width : 0;
		v8 = sidebar_button_list_sidebar_height;
		v5->sprite = v6;
		v5->sprite_height_step = sidebar_horizontal == 0 ? v8 : 0;
		if (!v6)
			v5->sprite = sprite_create(MOBD_SIDEBAR_BUTTONS, v5->script, 0);
		v5->sprite->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		v5->sprite->field_88_unused = 1;
		v5->sprite->x = v5->x;
		v5->sprite->field_88_unused = 1;
		v5->sprite->y = v5->w;
		v5->sprite->z_index = 1;
		v5->sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[player_side]];
		v5->sprite->drawjob->flags |= 0x10000000u;
		v5->sprite->param = v5;
		v5->button_list_head = (SidebarButton *)&v5->button_list_free_pool;
		v5->button_list_free_pool = (SidebarButton *)&v5->button_list_free_pool;
		v5->next = stru22_list_479548;
		v5->prev = (Sidebar *)&stru22_list_479548;
		result = v5;
		stru22_list_479548->prev = v5;
		stru22_list_479548 = v5;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (0040F5D0) --------------------------------------------------------
void script_40F5D0_sidebar_button_1_2(Script *a1)
{
	Script *v1; // ebx@1
	Sprite *v2; // ecx@1
	int v3; // edx@1
	int v4; // esi@3
	int v5; // edi@3
	int v6; // ebp@3
	ScriptEvent *i; // eax@3
	enum SCRIPT_EVENT v8; // ecx@4
	int v9; // esi@15
	ScriptEvent *j; // eax@15
	enum SCRIPT_EVENT v11; // ecx@16
	SidebarButton *v12; // edi@27
	void(*v13)(SidebarButton *); // eax@27
	int v14; // esi@30
	ScriptEvent *k; // eax@32
	enum SCRIPT_EVENT v16; // ecx@33
	Sprite *v17; // ebp@43
	int v18; // edi@43
	int v19; // esi@44
	ScriptEvent *m; // eax@44
	enum SCRIPT_EVENT v21; // ecx@45
	void(*v22)(SidebarButton *); // eax@59
	ScriptEvent *l; // eax@65
	Sprite *v24; // [sp+10h] [bp-Ch]@1
	int v25; // [sp+14h] [bp-8h]@14
	int v26; // [sp+14h] [bp-8h]@30
	int v27; // [sp+18h] [bp-4h]@14
	SidebarButton *a1a; // [sp+20h] [bp+4h]@1

	v1 = a1;
	v2 = a1->sprite;
	v24 = v2;
	a1a = (SidebarButton *)v2->param;
	v3 = a1a->mobd_lookup_table_offset;
	while (1)
	{
		sprite_4272E0_load_mobd_item(v2, v3, 0);
		while (1)
		{
			v4 = 0;
			v5 = 0;
			v6 = 0;
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v8 = i->event;
				if (v8 == EVT_MSG_1548_sidebar)
					v6 = 1;
				if (v8 == EVT_MSG_1514)
					v4 = 1;
				if (v8 == EVT_MSG_1511_sidebar_click_category)
					v5 = 1;
				script_discard_event(i);
			}
			if (v6 && !v4)
			{
				v12 = a1a;
				goto LABEL_64;
			}
			if (v5)
			{
				v25 = 0;
				v27 = 0;
				sprite_4272E0_load_mobd_item(v24, a1a->mobd_lookup_table_offset, 1);
				do
				{
					script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
					v9 = 0;
					for (j = script_get_next_event(v1); j; j = script_get_next_event(v1))
					{
						v11 = j->event;
						if (v11 == EVT_MSG_1548_sidebar)
							v27 = 1;
						if (v11 == -2)
						{
							v9 = 1;
						}
						else if (v11 == EVT_SHOW_UI_CONTROL)
						{
							v25 = 1;
						}
						script_discard_event(j);
					}
					if (v27)
						break;
					sprite_4272E0_load_mobd_item(v24, a1a->mobd_lookup_table_offset, v9 != 0);
				} while (!v25);
				if (v9 && v25)
					break;
			}
		}
		v12 = a1a;
		v6 = 0;
		v13 = a1a->open_handler;
		if (v13)
			(v13)(a1a);
		if (!a1a->close_handler)
		{
			v17 = v24;
			goto LABEL_62;
		}
		v26 = 0;
		v14 = 0;
		do
		{
			if (v6)
				goto LABEL_64;
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (k = script_get_next_event(v1); k; k = script_get_next_event(v1))
			{
				v16 = k->event;
				if (v16 == EVT_MSG_1548_sidebar)
					v6 = 1;
				if (v16 == EVT_MSG_1511_sidebar_click_category)
				{
					v14 = 1;
				}
				else if (v16 == EVT_SHOW_UI_CONTROL)
				{
					v26 = 1;
				}
				script_discard_event(k);
			}
		} while (!v14);
		if (v6)
		{
		LABEL_64:
			sprite_load_mobd(v24, 1980);
			while (v6)
			{
				script_445370_yield_to_main_thread(v1, 0x40000000, 0);
				for (l = script_get_next_event(v1); l; l = script_get_next_event(v1))
				{
					if (l->event == EVT_MSG_1514)
						v6 = 0;
					script_discard_event(l);
				}
			}
			v3 = v12->mobd_lookup_table_offset;
			v2 = v24;
		}
		else
		{
			if (v26)
			{
				v17 = v24;
			}
			else
			{
				v17 = v24;
				v18 = 0;
				sprite_4272E0_load_mobd_item(v24, a1a->mobd_lookup_table_offset, 1);
				do
				{
					script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
					v19 = 0;
					for (m = script_get_next_event(v1); m; m = script_get_next_event(v1))
					{
						v21 = m->event;
						if (v21 == EVT_MSG_1548_sidebar)
							v18 = 1;
						if (v21 == EVT_MOUSE_HOVER)
						{
							v19 = 1;
						}
						else if (v21 == EVT_SHOW_UI_CONTROL)
						{
							v26 = 1;
						}
						script_discard_event(m);
					}
					if (v18)
						break;
					if (v19)
					{
						sprite_4272E0_load_mobd_item(v24, a1a->mobd_lookup_table_offset, 1);
					}
					else if (!a1a->close_handler)
					{
						sprite_4272E0_load_mobd_item(v24, a1a->mobd_lookup_table_offset, 0);
					}
				} while (!v26);
				v12 = a1a;
			}
			v22 = v12->close_handler;
			if (v22)
			{
				(v22)(v12);
				v3 = v12->mobd_lookup_table_offset;
				v2 = v17;
				continue;
			}
		LABEL_62:
			v3 = v12->mobd_lookup_table_offset;
			v2 = v17;
		}
	}
}

//----- (0040F8F0) --------------------------------------------------------
void script_40F8F0_sidebar_button_3(Script *a1)
{
	Script *v1; // ebp@1
	Sprite *v2; // ecx@1
	int v3; // edx@1
	int v4; // esi@3
	int v5; // edi@3
	int v6; // ebx@3
	ScriptEvent *i; // eax@3
	enum SCRIPT_EVENT v8; // ecx@4
	int v9; // edi@14
	int v10; // ebx@14
	int v11; // esi@15
	ScriptEvent *j; // eax@15
	enum SCRIPT_EVENT v13; // ecx@16
	SidebarButton *v14; // edi@31
	void(*v15)(SidebarButton *); // eax@31
	int v16; // esi@34
	ScriptEvent *k; // eax@37
	enum SCRIPT_EVENT v18; // edx@38
	int v19; // edi@49
	int v20; // esi@50
	ScriptEvent *l; // eax@50
	enum SCRIPT_EVENT v22; // ecx@51
	void(*v23)(SidebarButton *); // eax@66
	ScriptEvent *m; // eax@71
	Sprite *v25; // [sp+10h] [bp-8h]@1
	int v26; // [sp+14h] [bp-4h]@34
	SidebarButton *a1a; // [sp+1Ch] [bp+4h]@1

	v1 = a1;
	v2 = a1->sprite;
	v25 = v2;
	a1a = (SidebarButton *)v2->param;
	v3 = a1a->mobd_lookup_table_offset;
	while (1)
	{
		sprite_4272E0_load_mobd_item(v2, v3, 0);
		while (1)
		{
			v4 = 0;
			v5 = 0;
			v6 = 0;
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v8 = i->event;
				if (v8 == EVT_MSG_1548_sidebar)
					v6 = 1;
				if (v8 == EVT_MSG_1514)
					v4 = 1;
				if (v8 == EVT_MSG_1511_sidebar_click_category)
					v5 = 1;
				script_discard_event(i);
			}
			if (v6 && !v4)
			{
				v14 = a1a;
				goto LABEL_70;
			}
			if (v5)
			{
				v9 = 0;
				v10 = 0;
				sprite_4272E0_load_mobd_item(v25, a1a->mobd_lookup_table_offset, 1);
				do
				{
					script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
					v11 = 0;
					for (j = script_get_next_event(v1); j; j = script_get_next_event(v1))
					{
						v13 = j->event;
						if (v13 == EVT_MSG_1548_sidebar)
							v10 = 1;
						if (v13 == EVT_MOUSE_HOVER)
						{
							v11 = 1;
						}
						else if (v13 == EVT_SHOW_UI_CONTROL || v13 == EVT_MSG_1513)
						{
							v9 = 1;
						}
						script_discard_event(j);
					}
					if (v10)
						break;
					if (v11)
						sprite_4272E0_load_mobd_item(v25, a1a->mobd_lookup_table_offset, 1);
					else
						sprite_4272E0_load_mobd_item(v25, a1a->mobd_lookup_table_offset, 0);
				} while (!v9);
				if (v11 && v9)
					break;
			}
		}
		v14 = a1a;
		v6 = 0;
		v15 = a1a->open_handler;
		if (v15)
			(v15)(a1a);
		if (a1a->close_handler)
		{
			v26 = 0;
			v16 = 0;
			do
			{
				if (v6)
					goto LABEL_70;
				if (v26)
					break;
				script_445370_yield_to_main_thread(v1, 0x40000000, 0);
				for (k = script_get_next_event(v1); k; k = script_get_next_event(v1))
				{
					v18 = k->event;
					if (v18 == EVT_MSG_1548_sidebar)
						v6 = 1;
					if (v18 == EVT_MSG_1511_sidebar_click_category)
					{
						v16 = 1;
					}
					else if (v18 == EVT_SHOW_UI_CONTROL || v18 == EVT_MSG_1513)
					{
						v26 = 1;
					}
					script_discard_event(k);
				}
			} while (!v16);
			if (!v6)
			{
				if (!v26)
				{
					v19 = 0;
					sprite_4272E0_load_mobd_item(v25, a1a->mobd_lookup_table_offset, 1);
					do
					{
						script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
						v20 = 0;
						for (l = script_get_next_event(v1); l; l = script_get_next_event(v1))
						{
							v22 = l->event;
							if (v22 == EVT_MSG_1548_sidebar)
								v19 = 1;
							if (v22 == EVT_MOUSE_HOVER)
							{
								v20 = 1;
							}
							else if (v22 == EVT_SHOW_UI_CONTROL || v22 == EVT_MSG_1513)
							{
								v26 = 1;
							}
							script_discard_event(l);
						}
						if (v19)
							break;
						if (v20)
						{
							sprite_4272E0_load_mobd_item(v25, a1a->mobd_lookup_table_offset, 1);
						}
						else if (!a1a->close_handler)
						{
							sprite_4272E0_load_mobd_item(v25, a1a->mobd_lookup_table_offset, 0);
						}
					} while (!v26);
					v14 = a1a;
				}
				v23 = v14->close_handler;
				if (v23)
					(v23)(v14);
				goto LABEL_68;
			}
		LABEL_70:
			sprite_load_mobd(v25, 1980);
			while (v6)
			{
				script_445370_yield_to_main_thread(v1, 0x40000000, 0);
				for (m = script_get_next_event(v1); m; m = script_get_next_event(v1))
				{
					if (m->event == EVT_MSG_1514)
						v6 = 0;
					script_discard_event(m);
				}
			}
			v3 = v14->mobd_lookup_table_offset;
			v2 = v25;
		}
		else
		{
		LABEL_68:
			v3 = v14->mobd_lookup_table_offset;
			v2 = v25;
		}
	}
}

//----- (0040FC10) --------------------------------------------------------
void script_40FC10_sidebar_button_4(Script *a1)
{
	Script *v1; // ebp@1
	Sprite *v2; // edi@1
	SidebarButton *v3; // ebx@1
	int v4; // esi@1
	ScriptEvent *j; // eax@5
	ScriptEvent *k; // eax@11
	enum SCRIPT_EVENT v7; // ecx@12
	void(*v8)(SidebarButton *); // eax@21
	Sprite *v9; // ebp@26
	Sprite *v10; // eax@26
	int v11; // ecx@26
	Sprite *v12; // edi@26
	int v13; // eax@29
	int v14; // ebx@34
	int v15; // edx@34
	int v16; // edi@36
	int v17; // edx@36
	int v18; // edi@37
	int v19; // ebx@37
	ScriptEvent *i; // eax@39
	enum SCRIPT_EVENT v21; // edx@40
	int v22; // edx@41
	int v23; // edx@46
	int v24; // edi@54
	int v25; // eax@57
	DrawJob *v26; // eax@61
	unsigned int v27; // ecx@61
	Sprite *v28; // ecx@72
	Sprite *v29; // ecx@74
	int v30; // [sp+10h] [bp-1Ch]@3
	int v31; // [sp+10h] [bp-1Ch]@11
	int v32; // [sp+10h] [bp-1Ch]@26
	int lookup_idx; // [sp+14h] [bp-18h]@26
	Sprite *v34; // [sp+18h] [bp-14h]@10
	Sprite *v35; // [sp+18h] [bp-14h]@26
	int v36; // [sp+1Ch] [bp-10h]@37
	SidebarButton *v37; // [sp+20h] [bp-Ch]@1
	Sprite *v38; // [sp+24h] [bp-8h]@1
	int v39; // [sp+28h] [bp-4h]@26

	v1 = a1;
	v2 = a1->sprite;
	v38 = v2;
	v3 = (SidebarButton *)v2->param;
	v37 = v3;
	v4 = v3->ptr_1C;
	while (1)
	{
		do
		{
			while (1)
			{
				v30 = 0;
				if (!*(_DWORD *)v4 && !*(_DWORD *)(v4 + 4))
					break;
			LABEL_23:
				sprite_4272E0_load_mobd_item(v2, v3->mobd_lookup_table_offset, 1);
				if (*(_DWORD *)v4 <= 0)
					*(_DWORD *)v4 = v3->field_18;
				if (*(_DWORD *)v4)
				{
					v32 = *(_DWORD *)v4;
					lookup_idx = 0;
					v39 = v3->field_18 / 16;
					v9 = sprite_create(MOBD_SIDEBAR_BUTTONS, 0, v2);
					v10 = sprite_create(MOBD_SIDEBAR_BUTTONS, 0, v2);
					v11 = v3->field_18;
					v12 = v10;
					v35 = v10;
					if (v32 < v11)
						lookup_idx = 15 * (v11 - *(_DWORD *)v4) / v11;
					if (v10)
					{
						v10->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
						v13 = *(_DWORD *)(v4 + 4);
						if (v13 <= 1)
						{
							v12->drawjob->flags |= 0x40000000u;
						}
						else if (v13 >= 10)
						{
							sprite_load_mobd(v12, 2160);
						}
						else
						{
							sprite_4272E0_load_mobd_item(v12, 2276, v13 - 1);
						}
						v14 = v12->y + 6656;
						v15 = v12->z_index + 2;
						v12->x += 2048;
						v12->field_88_unused = 1;
						v12->y = v14;
						v12->z_index = v15;
						v12->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[player_side]];
						v12->drawjob->flags |= 0x10000000u;
						*(_DWORD *)(v4 + 12) = (int)v12;
					}
					if (v9)
					{
						v9->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
						sprite_4272E0_load_mobd_item(v9, 2312, lookup_idx);
						v16 = v9->x + 256;
						v17 = v9->z_index + 2;
						v9->field_88_unused = 1;
						v9->x = v16;
						v9->z_index = v17;
						v9->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[player_side]];
						v9->drawjob->flags |= 0x10000000u;
						*(_DWORD *)(v4 + 8) = (int)v9;
					}
					while (1)
					{
						v18 = *(_DWORD *)(v4 + 4);
						v19 = 0;
						v36 = 0;
						script_445370_yield_to_main_thread(a1, 2147483648, 6);
						if (v18 != *(_DWORD *)(v4 + 4))
							v36 = 1;
						for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
						{
							v21 = i->event;
							if (v21 == 1513)
							{
								v22 = *(_DWORD *)(v4 + 4);
								if (v22 > 0)
								{
									if (v22 <= 9)
										*(_DWORD *)(v4 + 4) = v22 - 1;
									else
										*(_DWORD *)(v4 + 4) = 9;
								LABEL_49:
									v19 = 1;
									goto LABEL_50;
								}
							}
							else if (v21 == 1511)
							{
								v23 = *(_DWORD *)(v4 + 4);
								if (v23 >= 9)
									*(_DWORD *)(v4 + 4) = 4000000;
								else
									*(_DWORD *)(v4 + 4) = v23 + 1;
								goto LABEL_49;
							}
						LABEL_50:
							script_discard_event(i);
						}
						if (!*(_DWORD *)(v4 + 4))
							goto LABEL_71;
						if (_44CDC0_sidebar_is_units_limit())
							break;
						if (v36)
						{
							v24 = 0;
							v32 = *(_DWORD *)v4;
							lookup_idx = 0;
							v19 = 1;
							sprite_4272E0_load_mobd_item(v9, 2312, 0);
						}
						else
						{
							v24 = lookup_idx;
						}
						if (v19)
						{
							v25 = *(_DWORD *)(v4 + 4);
							if (v25 <= 1)
							{
								v26 = v35->drawjob;
								v27 = v26->flags | 0x40000000;
							}
							else
							{
								if (v25 >= 10)
									sprite_load_mobd(v35, 2160);
								else
									sprite_4272E0_load_mobd_item(v35, 2276, v25 - 1);
								v26 = v35->drawjob;
								v27 = v26->flags & 0xBFFFFFFF;
							}
							v26->flags = v27;
						}
						if (v32 - *(_DWORD *)v4 >= v39)
						{
							v32 -= v39;
							if (v24 < 15)
							{
								lookup_idx = v24 + 1;
								sprite_4272E0_load_mobd_item(v9, 2312, v24 + 1);
							}
						}
						if (!*(_DWORD *)v4)
							goto LABEL_72;
					}
					if (*(_DWORD *)(v4 + 4))
					{
						*(_DWORD *)(v4 + 4) = 0;
						show_message_ex(0, aUnitsAreUnavai);
					}
				LABEL_71:
					stru38_list_427FD0((int *)v4, 1);
					*(_DWORD *)v4 = 0;
				LABEL_72:
					v28 = *(Sprite **)(v4 + 8);
					if (v28)
					{
						sprite_list_remove(v28);
						*(_DWORD *)(v4 + 8) = 0;
					}
					v29 = *(Sprite **)(v4 + 12);
					if (v29)
					{
						sprite_list_remove(v29);
						*(_DWORD *)(v4 + 12) = 0;
					}
					v3 = v37;
					v2 = v38;
					v1 = a1;
				}
			}
			sprite_4272E0_load_mobd_item(v2, v3->mobd_lookup_table_offset, 0);
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (j = script_get_next_event(v1); j; j = script_get_next_event(v1))
			{
				if (j->event == 1511)
					v30 = 1;
				script_discard_event(j);
			}
		} while (!v30);
		v34 = 0;
		sprite_4272E0_load_mobd_item(v2, v3->mobd_lookup_table_offset, 1);
		do
		{
			script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
			v31 = 0;
			for (k = script_get_next_event(v1); k; k = script_get_next_event(v1))
			{
				v7 = k->event;
				if (v7 == -2)
				{
					v31 = 1;
				}
				else if (v7 == 1512)
				{
					v34 = (Sprite *)1;
				}
				script_discard_event(k);
			}
			sprite_4272E0_load_mobd_item(v2, v3->mobd_lookup_table_offset, v31 != 0);
		} while (!v34);
		if (!v31)
			goto LABEL_23;
		if (!_44CDC0_sidebar_is_units_limit())
		{
			*(_DWORD *)v4 = v3->field_18;
			*(_DWORD *)(v4 + 4) = 1;
			v8 = v3->open_handler;
			if (v8)
				((void(__thiscall *)(SidebarButton *))v8)(v3);
			goto LABEL_23;
		}
		show_message_ex(0, aUnitsAreUnavai);
	}
}

//----- (004100C0) --------------------------------------------------------
SidebarButton *sidebar_add_button_1(Sidebar *sidebar, int mobd_lookup_table_offset, void(*open_handler)(SidebarButton *), void *param, void *task_context)
{
	return sidebar_add_buttton_internal(
		sidebar,
		mobd_lookup_table_offset,
		(void(*)(Script *))script_40F5D0_sidebar_button_1_2,
		open_handler,
		0,
		param,
		task_context,
		SCRIPT_TYPE_47802_fog_of_war);
}

//----- (004100F0) --------------------------------------------------------
SidebarButton *sidebar_add_button_2(Sidebar *sidebar, int mobd_lookup_table_offset, void(*button_open_handler)(SidebarButton *), void(*button_close_handler)(SidebarButton *), void *task_context)
{
	return sidebar_add_buttton_internal(
		sidebar,
		mobd_lookup_table_offset,
		(void(*)(Script *))script_40F5D0_sidebar_button_1_2,
		button_open_handler,
		button_close_handler,
		0,
		task_context,
		SCRIPT_TYPE_47802_fog_of_war);
}

//----- (00410120) --------------------------------------------------------
SidebarButton *sidebar_add_button_3(Sidebar *sidebar, int mobd_lookup_table_offset, void(*button_open_handler)(SidebarButton *), void(*button_close_handler)(SidebarButton *), void *task_context)
{
	return sidebar_add_buttton_internal(
		sidebar,
		mobd_lookup_table_offset,
		(void(*)(Script *))script_40F8F0_sidebar_button_3,
		button_open_handler,
		button_close_handler,
		0,
		task_context,
		SCRIPT_TYPE_48059);
}

//----- (00410150) --------------------------------------------------------
SidebarButton *sidebar_add_button_4(Sidebar *sidebar, int mobd_lookup_table_offset, void(*button_open_handler)(SidebarButton *), int a4, int a5, void *param, enum UNIT_ID a7)
{
	SidebarButton *result; // eax@1

	result = sidebar_add_buttton_internal(
		sidebar,
		mobd_lookup_table_offset,
		(void(*)(Script *))script_40FC10_sidebar_button_4,
		button_open_handler,
		0,
		param,
		(void *)a7,
		SCRIPT_TYPE_47802_fog_of_war);
	if (result)
	{
		result->field_18 = a5;
		result->ptr_1C = a4;
	}
	return result;
}

//----- (00410190) --------------------------------------------------------
SidebarButton *sidebar_add_buttton_internal(Sidebar *a1, int mobd_lookup_table_offset, void(*task_routine)(Script *), void(*open_handler)(SidebarButton *), void(*close_handler)(SidebarButton *), void *param, void *task_context, enum SCRIPT_TYPE event)
{
	SidebarButton *v8; // esi@1
	int mobd_lookup_table_0ffset; // ebp@1
	Sidebar *v10; // edi@1
	SidebarButton *result; // eax@5
	Script *v12; // eax@6
	Script *v13; // edx@6
	Sprite *v14; // eax@6
	int v15; // eax@8

	v8 = sidebar_button_list_head;
	mobd_lookup_table_0ffset = mobd_lookup_table_offset;
	v10 = a1;
	if (sidebar_button_list_head)
		sidebar_button_list_head = sidebar_button_list_head->next;
	else
		v8 = 0;
	if (v8)
	{
		v12 = script_create_coroutine(event, task_routine, 0);
		v8->task = v12;
		v12->param = task_context;
		v8->mobd_lookup_table_offset = mobd_lookup_table_0ffset;
		v8->open_handler = open_handler;
		v8->close_handler = close_handler;
		v13 = v8->task;
		v8->param = param;
		v8->field_18 = 0;
		v8->ptr_1C = 0;
		v14 = sprite_create(MOBD_SIDEBAR_BUTTONS, v13, 0);
		v8->sprite = v14;
		v14->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		v8->sprite->param = v8;
		if (v10)
		{
			v8->prev = v10->button_list_head;
			v8->next = (SidebarButton *)&v10->button_list_free_pool;
			v10->button_list_head->next = v8;
			v10->button_list_head = v8;
			v8->sprite->field_88_unused = 1;
			v8->sprite->x = v10->x + v10->num_buttons * v10->sprite_width_step;
			if (task_context == (void *)-11)
			{
				v8->sprite->field_88_unused = 1;
				v15 = 13 * v10->sprite_height_step;
			}
			else
			{
				v8->sprite->field_88_unused = 1;
				v15 = v10->num_buttons * v10->sprite_height_step;
			}
			v8->sprite->y = v10->w + v15;
			++v10->num_buttons;
			v8->sprite->z_index = 1;
			v8->sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[player_side]];
			v8->sprite->drawjob->flags |= 0x10000000u;
		}
		result = v8;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (004102D0) --------------------------------------------------------
void sidebar_remove_button(Sidebar *a1, SidebarButton *a2)
{
	SidebarButton *v2; // edi@1
	int v3; // esi@3
	Sprite *v4; // ecx@5

	v2 = a2;
	if (a1)
	{
		--a1->num_buttons;
		a2->prev->next = a2->next;
		a2->next->prev = a2->prev;
		if (a2->field_18)
		{
			v3 = a2->ptr_1C + 8;
			if (*(_DWORD *)v3)
			{
				sprite_list_remove(*(Sprite **)v3);
				*(_DWORD *)v3 = 0;
			}
			v4 = *(Sprite **)(v3 + 4);
			if (v4)
			{
				sprite_list_remove(v4);
				*(_DWORD *)(v3 + 4) = 0;
			}
		}
	}
	sprite_list_remove(v2->sprite);
	script_deinit(v2->task);
	v2->next = sidebar_button_list_head;
	sidebar_button_list_head = v2;
}

//----- (00410340) --------------------------------------------------------
void sidebar_list_remove(Sidebar *a1)
{
	Sidebar *v1; // edi@1
	SidebarButton *v2; // edx@1
	Sidebar *v3; // esi@1
	Script *v4; // ecx@3

	v1 = a1;
	v2 = a1->button_list_free_pool;
	v3 = (Sidebar *)((char *)a1 + 36);
	if ((SidebarButton **)v2 != &a1->button_list_free_pool)
	{
		do
		{
			sidebar_remove_button(v1, v2);
			v2 = (SidebarButton *)v3->next;
		} while (v3->next != v3);
	}
	sprite_list_remove(v1->sprite);
	v4 = v1->script;
	if (v4->script_type == SCRIPT_TYPE_51914_sidebar)
		script_deinit(v4);
	v1->next->prev = v1->prev;
	v1->prev->next = v1->next;
	v1->next = sidebar_list_head;
	sidebar_list_head = v1;
}

//----- (004103A0) --------------------------------------------------------
void sidebar_list_free()
{
	free(sidebar_button_list);
	free(sidebar_list);
}

//----- (004103C0) --------------------------------------------------------
bool stru2_list_alloc()
{
	stru2 *result; // eax@1
	int v1; // edx@2

	result = (stru2 *)malloc(0x180u);
	stru2_list = result;
	if (result)
	{
		stru2_list_free_pool = result;
		result->prev = (stru2 *)&stru2_list_free_pool;
		v1 = 15;
		do
		{
			--v1;
			result->next = result + 1;
			++result;
		} while (v1);
		result->next = (stru2 *)&stru2_list_free_pool;
		stru2_list_4795DC = (stru2 *)&stru2_list_4795D8;
		stru2_list_4795D8 = (stru2 *)&stru2_list_4795D8;
		result = (stru2 *)1;
	}
	return (BOOL)result;
}

//----- (00410410) --------------------------------------------------------
stru2 *stru2_list_create(int hunk)
{
	stru2 *result; // eax@1
	stru3 *v2; // edx@4
	int v3; // eax@5

	result = stru2_list_4795D8;
	if ((stru2 **)stru2_list_4795D8 == &stru2_list_4795D8)
	{
	LABEL_4:
		v2 = stru3s;
		if (stru3s[0].magic == hunk)
		{
		LABEL_7:
			result = stru2_list_free_pool;
			if ((stru2 **)stru2_list_free_pool != &stru2_list_free_pool)
			{
				stru2_list_free_pool = stru2_list_free_pool->next;
				result->next = (stru2 *)&stru2_list_4795D8;
				result->prev = stru2_list_4795DC;
				stru2_list_4795DC->next = result;
				stru2_list_4795DC = result;
				result->hunk = hunk;
				result->init_handler = v2->init_handler;
				result->draw_handler = (int(*)(void *, int))v2->draw_handler;
				result->deinit_handler = v2->deinit_handler;
				return result;
			}
		}
		else
		{
			while (1)
			{
				v3 = v2->magic;
				++v2;
				if (!v3)
					break;
				if (v2->magic == hunk)
					goto LABEL_7;
			}
		}
		return 0;
	}
	while (result->hunk != hunk)
	{
		result = result->next;
		if ((stru2 **)result == &stru2_list_4795D8)
			goto LABEL_4;
	}
	return result;
}
// 4657D0: using guessed type stru3 stru3s[2];

//----- (004104A0) --------------------------------------------------------
int stru2_list_init_elements()
{
	stru2 *v0; // esi@1
	int(*init_handler)(void); // eax@2
	int result; // eax@5

	v0 = stru2_list_4795D8;
	if ((stru2 **)stru2_list_4795D8 == &stru2_list_4795D8)
	{
		result = 1;
	}
	else
	{
		while (1)
		{
			init_handler = (int(*)(void))v0->init_handler;
			if (init_handler)
			{
				if (!init_handler())
					break;
			}
			v0 = v0->next;
			if ((stru2 **)v0 == &stru2_list_4795D8)
				return 1;
		}
		result = 0;
	}
	return result;
}

//----- (004104E0) --------------------------------------------------------
void stru2_list_remove_elements()
{
	stru2 *i; // esi@1
	void(*v1)(void); // eax@2

	for (i = stru2_list_4795D8; (stru2 **)i != &stru2_list_4795D8; i = i->next)
	{
		v1 = (void(*)(void))i->deinit_handler;
		if (v1)
			v1();
	}
}

//----- (00410510) --------------------------------------------------------
void stru2_list_free()
{
	free(stru2_list);
}

//----- (00410520) --------------------------------------------------------
void entity_410520_update_healthbar_color(Entity *a1)
{
	int v1; // ebx@1
	EntityBuildingState *v2; // esi@1
	EntityBuildingAttachment_stru14_stru0 *v3; // edx@2
	char *v4; // edi@2
	char *v5; // edi@2
	char *v6; // edi@2
	EntityBuildingAttachment_stru14_stru0 *v7; // edi@2
	char *v8; // esi@2
	unsigned int v9; // ebp@2
	int v10; // ST10_4@2
	int v11; // eax@2
	int v12; // edx@2
	int v13; // eax@2
	int v14; // eax@2

	HIWORD_HEXRAYS(v1) = HIWORD_HEXRAYS(a1);
	v2 = (EntityBuildingState *)a1->state;
	if (v2)
	{
		v3 = v2->pstru14->_8F_healthbar;
		memset(v3, 0xA6u, 0x38u);                   // INLINED memset
		v4 = &v3->field_0.field_0[56];
		*(_WORD *)v4 = 0xA6A6u;
		v4[2] = 0xA6u;
		++v3;
		memset(v3, 0xA0u, 0x38u);
		v5 = &v3->field_0.field_0[56];
		*(_WORD *)v5 = 0xA0A0u;
		v5[2] = 0xA0u;
		memset(&v3[1], 0xA0u, 0x38u);
		v6 = &v3[1].field_0.field_0[56];
		*(_WORD *)v6 = 0xA0A0u;
		v6[2] = 0xA0u;
		v7 = v2->pstru14->_8F_healthbar;
		v8 = v2->pstru14->_8F_healthbar[1].field_0.field_0;
		v9 = 59 * a1->hitpoints / a1->stats->hitpoints;
		v10 = (int)(4 * v9) / 59;
		LOBYTE_HEXRAYS(v1) = _4657F0_tanker_status_color_breakpoints[v10];
		BYTE1(v1) = _4657F0_tanker_status_color_breakpoints[v10];
		v11 = v1 << 16;
		LOWORD_HEXRAYS(v11) = v1;
		memset32(v7, v11, v9 >> 2);
		v12 = (int)(4 * v9) / 59;
		memset((char *)v7 + 4 * (v9 >> 2), v1, v9 & 3);
		LOBYTE_HEXRAYS(v1) = _4657F8_tanker_status_color_breakpoints[v12];
		BYTE1(v1) = _4657F8_tanker_status_color_breakpoints[v12];
		v13 = v1 << 16;
		LOWORD_HEXRAYS(v13) = v1;
		memset32(v8, v13, v9 >> 2);
		memset(&v8[4 * (v9 >> 2)], v1, v9 & 3);
		LOBYTE_HEXRAYS(v1) = _4657F8_tanker_status_color_breakpoints[v10];
		BYTE1(v1) = _4657F8_tanker_status_color_breakpoints[v10];
		v14 = v1 << 16;
		LOWORD_HEXRAYS(v14) = v1;
		memset32(v8 + 66, v14, v9 >> 2);
		memset(&v8[4 * (v9 >> 2) + 66], v1, v9 & 3);
	}
}

//----- (00410640) --------------------------------------------------------
__int16 entity_410640_tanker_status_bar(Entity *a1)
{
	Entity *v1; // ebx@1
	EntityOilTankerState *v2; // esi@1
	char *v3; // edx@1
	char *v4; // esi@1
	unsigned int v5; // ebp@1
	unsigned int v6; // ecx@1
	int v7; // ST10_4@1
	int v8; // eax@1
	int v9; // eax@1

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	v3 = v2->pstru70->field_4B;
	memset(v3, 0xA6u, 0x1Cu);
	memset(v3 + 32, 0xA0u, 0x1Cu);
	v4 = v2->pstru70->field_4B;
	v5 = 28 * v1->hitpoints / v1->stats->hitpoints;
	v6 = 28 * v1->hitpoints / v1->stats->hitpoints;
	v7 = (int)(4 * v5) / 28;
	LOBYTE_HEXRAYS(v3) = v5;
	LOBYTE_HEXRAYS(v1) = _4657F0_tanker_status_color_breakpoints[v7];
	BYTE1(v1) = _4657F0_tanker_status_color_breakpoints[v7];
	v8 = (_DWORD)v1 << 16;
	LOWORD_HEXRAYS(v8) = (_WORD)v1;
	v6 >>= 2;
	memset32(v4, v8, v6);
	memset(&v4[4 * v6], (char)v1, (unsigned __int8)v3 & 3);
	LOBYTE_HEXRAYS(v1) = _4657F8_tanker_status_color_breakpoints[v7];
	BYTE1(v1) = _4657F8_tanker_status_color_breakpoints[v7];
	v9 = (_DWORD)v1 << 16;
	LOWORD_HEXRAYS(v9) = (_WORD)v1;
	memset32(v4 + 32, v9, v5 >> 2);
	memset(&v4[4 * (v5 >> 2) + 32], (char)v1, v5 & 3);
	return v9;
}

//----- (00410710) --------------------------------------------------------
int entity_410710_status_bar(Entity *a1)
{
	int v1; // esi@1
	enum UNIT_ID v2; // eax@3
	int v3; // eax@5
	int result; // eax@9
	int v5; // eax@10

	v1 = 2;
	if (a1->_98_465610_accuracy_dmg_bonus_idx <= 2)
		v1 = a1->_98_465610_accuracy_dmg_bonus_idx;
	v2 = a1->unit_id;
	if ((int)v2 > (int)UNIT_STATS_SURV_SCOUT || (v2 & 0x80000000) != 0)
	{
		v5 = 28 * a1->hitpoints / a1->stats->hitpoints;
		if (v5 < 0)
			v5 = 0;
		if (v5 > 27)
			v5 = 27;
		result = v5 + 28 * v1;
		a1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = _4795F0_stru26_array[0].data[result];
	}
	else
	{
		v3 = 12 * a1->hitpoints / a1->stats->hitpoints;
		if (v3 < 0)
			v3 = 0;
		if (v3 > 11)
			v3 = 11;
		result = v3 + 12 * v1;
		a1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = _479740_stru27_array[0].data[result];
	}
	return result;
}

//----- (004107B0) --------------------------------------------------------
void entity_4107B0_oiltanker_oil_bar(Entity *a1)
{
	EntityOilTankerState *v1; // ebx@1
	char *v2; // edx@1
	char *v3; // esi@1
	int v4; // edx@1

	v1 = (EntityOilTankerState *)a1->state;
	v2 = v1->pstru70->array_AB;
	memset(v2, 0xA6u, 0x1Cu);
	memset(v2 + 32, 0xA0u, 0x1Cu);
	v3 = v1->pstru70->array_AB;
	v4 = 28 * v1->_0_oil_loaded / 500;
	memset(v3, 0xAAu, v4);
	memset(v3 + 32, 0xA9u, v4);
}

//----- (00410840) --------------------------------------------------------
void entity_update_sabotage_bar(Entity *a1)
{
	EntityBuildingState *v1; // eax@1
	int v2; // edi@1
	EntityBuildingAttachment_stru14_stru1 *v3; // esi@1
	EntityBuildingAttachment_stru14_stru1 *v4; // ecx@1
	EntityBuildingAttachment_stru14_stru1 *v5; // ebx@2
	char *v6; // esi@3
	int v7; // edi@3
	char *v8; // ecx@3
	char *v9; // ebx@4
	int v10; // ecx@5
	int v11; // esi@5
	int v12; // edi@6
	__int16 v13; // dx@7
	int v14; // ecx@8
	EntityBuildingAttachment_stru14_stru1 *v15; // esi@8
	EntityBuildingAttachment_stru14_stru1 *v16; // edi@9
	EntityBuildingAttachment_stru14_stru1 *v17; // ebx@10
	int v18; // ecx@11
	char *v19; // esi@11
	char *v20; // edi@12
	char *v21; // ebx@13
	int v22; // ecx@14
	int v23; // esi@14
	int v24; // edi@15

	v1 = (EntityBuildingState *)a1->state;
	v2 = 5;
	v3 = v1->pstru14->field_197;
	v4 = v1->pstru14->field_197;
	do
	{
		v5 = v4;
		++v4;
		--v2;
		*(_DWORD *)&v5->field_0[0] = 0xA6A6A6A6;
		*(_DWORD *)&v5->field_0[4] = 0xA6A6A6A6;
		*(_WORD *)&v5->field_0[8] = 0xA6A6u;
		v5->field_0[10] = 0xA6u;
	} while (v2);
	v6 = &v3[5].field_0[6];
	v7 = 5;
	v8 = v6;
	do
	{
		v9 = v8;
		v8 += 12;
		--v7;
		*(_DWORD *)v9 = 0xA0A0A0A0;
		*((_DWORD *)v9 + 1) = 0xA0A0A0A0;
		*((_WORD *)v9 + 4) = 0xA0A0u;
		v9[10] = 0xA0u;
	} while (v7);
	v10 = (int)(v6 + 66);
	v11 = 5;
	do
	{
		v12 = v10;
		v10 += 12;
		--v11;
		*(_DWORD *)v12 = 0xA0A0A0A0;
		*(_DWORD *)(v12 + 4) = 0xA0A0A0A0;
		*(_WORD *)(v12 + 8) = 0xA0A0u;
		*(_BYTE *)(v12 + 10) = 0xA0u;
	} while (v11);
	v13 = v1->sabotage_points;
	if (v13 <= 5)
	{
		v14 = 0;
		v15 = v1->pstru14->field_197;
		if (v13)
		{
			v16 = v1->pstru14->field_197;
			do
			{
				v17 = v16;
				++v14;
				++v16;
				*(_DWORD *)&v17->field_0[0] = 0x92929292;
				*(_DWORD *)&v17->field_0[4] = 0x92929292;
				*(_WORD *)&v17->field_0[8] = 0x9292u;
				v17->field_0[10] = 0x92u;
			} while (v14 != v1->sabotage_points);
		}
		v18 = 0;
		v19 = &v15[5].field_0[6];
		if (v1->sabotage_points)
		{
			v20 = v19;
			do
			{
				v21 = v20;
				++v18;
				v20 += 12;
				*(_DWORD *)v21 = 0x91919191;
				*((_DWORD *)v21 + 1) = 0x91919191;
				*((_WORD *)v21 + 4) = 0x9191u;
				v21[10] = 0x91u;
			} while (v18 != v1->sabotage_points);
		}
		v22 = 0;
		v23 = (int)(v19 + 66);
		if (v1->sabotage_points)
		{
			do
			{
				v24 = v23;
				++v22;
				v23 += 12;
				*(_DWORD *)v24 = 0x91919191;
				*(_DWORD *)(v24 + 4) = 0x91919191;
				*(_WORD *)(v24 + 8) = 0x9191u;
				*(_BYTE *)(v24 + 10) = 0x91u;
			} while (v22 != v1->sabotage_points);
		}
	}
}

//----- (00410950) --------------------------------------------------------
void entity_410950(Entity *a1, int a2)
{
	_DWORD *v2; // eax@2
	int v3; // ecx@2
	int v4; // eax@5
	int v5; // esi@5
	__int16 v6; // cx@6

	if (a2)
	{
		v4 = *((_DWORD *)a1->state + 5) + 203;      // param -> EntityBuildingAttachment
													// result = &a1->param->pstru14->_8F_healthbarr[0].field_3C;
		v5 = 11;
		do
		{
			LOBYTE_HEXRAYS(v6) = a2;
			v4 += 66;
			HIBYTE_HEXRAYS(v6) = a2;
			--v5;
			*(_WORD *)(v4 - 66) = v6;
		} while (v5);
	}
	else
	{
		v2 = (_DWORD *)(*((_DWORD *)a1->state + 5) + 71);// param -> EntityBuildingAttachment
														 // result = &a1->param->pstru14->field_10[55];
		v3 = 15;
		do
		{
			*v2 = 0;
			*(_BYTE *)v2 = 0xA4u;
			v2 = (_DWORD *)((char *)v2 + 66);
			--v3;
		} while (v3);
	}
}

//----- (004109A0) --------------------------------------------------------
void entity_4109A0_status_bar(Entity *a1)
{
	EntityBuildingState *v1; // eax@1
	enum UNIT_ID v2; // edx@1
	EntityBuildingAttachment_stru14_stru1 *v3; // edi@4
	int v4; // esi@4
	EntityBuildingAttachment_stru14_stru1 *v5; // edx@4
	EntityBuildingAttachment_stru14_stru1 *v6; // ebx@5
	EntityBuildingAttachment_stru14_stru1 *v7; // edi@6
	int v8; // esi@6
	EntityBuildingAttachment_stru14_stru1 *v9; // edx@6
	EntityBuildingAttachment_stru14_stru1 *v10; // ebx@7
	int v11; // esi@8
	char *v12; // ecx@8
	char *v13; // edi@9
	EntityBuildingAttachment_stru14_stru1 *v14; // esi@10
	int v15; // ecx@10
	EntityBuildingAttachment_stru14_stru1 *v16; // edi@11
	EntityBuildingAttachment_stru14_stru1 *v17; // ebx@12
	EntityBuildingAttachment_stru14_stru1 *v18; // esi@13
	int v19; // ecx@13
	EntityBuildingAttachment_stru14_stru1 *v20; // edi@14
	EntityBuildingAttachment_stru14_stru1 *v21; // ebx@15
	char *v22; // esi@16
	int v23; // ecx@16
	char *v24; // edi@17
	EntityBuildingAttachment_stru14_stru29D *v25; // edx@19
	EntityBuildingAttachment_stru14_stru29D *v26; // edi@19
	int v27; // edi@19

	v1 = (EntityBuildingState *)a1->state;
	v2 = a1->unit_id;
	if ((int)v2 >= (int)UNIT_STATS_SURV_RESEARCH_LAB
		|| (int)v2 <= (int)UNIT_STATS_MUTE_HOLDING_PENS
		|| a1->player_side != player_side)
	{
		v25 = &v1->pstru14->field_29D;
		v26 = &v1->pstru14->field_29D;
		memset(v26, 0, 0x148u);
		*(_WORD *)&v26->field_148 = 0;
		memset(v25, 0xA4u, 0x3Cu);
		v27 = (int)&v25->field_2[4].field_0[10];
		*(_WORD *)v27 = 0xA4A4u;
		*(_BYTE *)(v27 + 2) = 0xA4u;
	}
	else
	{
		v3 = v1->pstru14->field_29D.field_2;
		v4 = 5;
		v5 = v1->pstru14->field_29D.field_2;
		do
		{
			v6 = v5;
			++v5;
			--v4;
			*(_DWORD *)&v6->field_0[0] = 0xA6A6A6A6;
			*(_DWORD *)&v6->field_0[4] = 0xA6A6A6A6;
			*(_WORD *)&v6->field_0[8] = 0xA6A6u;
			v6->field_0[10] = 0xA6u;
		} while (v4);
		v7 = (EntityBuildingAttachment_stru14_stru1 *)((char *)v3 + 66);
		v8 = 5;
		v9 = v7;
		do
		{
			v10 = v9;
			++v9;
			--v8;
			*(_DWORD *)&v10->field_0[0] = 0xA0A0A0A0;
			*(_DWORD *)&v10->field_0[4] = 0xA0A0A0A0;
			*(_WORD *)&v10->field_0[8] = 0xA0A0u;
			v10->field_0[10] = 0xA0u;
		} while (v8);
		v11 = 5;
		v12 = &v7[5].field_0[6];
		do
		{
			v13 = v12;
			v12 += 12;
			--v11;
			*(_DWORD *)v13 = 0xA0A0A0A0;
			*((_DWORD *)v13 + 1) = 0xA0A0A0A0;
			*((_WORD *)v13 + 4) = 0xA0A0u;
			v13[10] = 0xA0u;
		} while (v11);
		v14 = v1->pstru14->field_29D.field_2;
		v15 = 0;
		if (v1->num_upgrades)
		{
			v16 = v1->pstru14->field_29D.field_2;
			do
			{
				v17 = v16;
				++v15;
				++v16;
				*(_DWORD *)&v17->field_0[0] = 0xAAAAAAAA;
				*(_DWORD *)&v17->field_0[4] = 0xAAAAAAAA;
				*(_WORD *)&v17->field_0[8] = 0xAAAAu;
				v17->field_0[10] = 0xAAu;
			} while (v15 != v1->num_upgrades);
		}
		v18 = (EntityBuildingAttachment_stru14_stru1 *)((char *)v14 + 66);
		v19 = 0;
		if (v1->num_upgrades)
		{
			v20 = v18;
			do
			{
				v21 = v20;
				++v19;
				++v20;
				*(_DWORD *)&v21->field_0[0] = 0xA9A9A9A9;
				*(_DWORD *)&v21->field_0[4] = 0xA9A9A9A9;
				*(_WORD *)&v21->field_0[8] = 0xA9A9u;
				v21->field_0[10] = 0xA9u;
			} while (v19 != v1->num_upgrades);
		}
		v22 = &v18[5].field_0[6];
		v23 = 0;
		if (v1->num_upgrades)
		{
			do
			{
				v24 = v22;
				++v23;
				v22 += 12;
				*(_DWORD *)v24 = 0xA9A9A9A9;
				*((_DWORD *)v24 + 1) = 0xA9A9A9A9;
				*((_WORD *)v24 + 4) = 0xA9A9u;
				v24[10] = 0xA9u;
			} while (v23 != v1->num_upgrades);
		}
	}
}

//----- (00410B00) --------------------------------------------------------
void entity_410B00_building_status_bar(Entity *a1)
{
	EntityBuildingState *v1; // esi@1
	int v2; // ebx@1
	int v3; // edi@1
	EntityBuildingAttachment_stru14_stru0 *v4; // edx@1
	int v5; // edi@1
	int v6; // edi@1
	EntityBuildingAttachment_stru14_stru1 *v7; // esi@1
	int v8; // ecx@2
	int v9; // edx@2
	char *v10; // edi@8
	char *v11; // esi@8

	v1 = (EntityBuildingState *)a1->state;
	v2 = (int)v1->oilspot_for_drillrig__task_for_researchlab;
	v3 = (int)v1->pstru14->field_29D.field_2;
	v4 = &v1->pstru14->field_29D.field_44;
	memset((void *)v3, 0xA6u, 0x38u);
	v3 += 56;
	*(_WORD *)v3 = 0xA6A6u;
	*(_BYTE *)(v3 + 2) = 0xA6u;
	memset(v4, 0xA0u, 0x38u);
	v5 = (int)&v4->field_0.field_0[56];
	*(_WORD *)v5 = 0xA0A0u;
	*(_BYTE *)(v5 + 2) = 0xA0u;
	memset(&v4[1], 0xA0u, 0x38u);
	v6 = (int)&v4[1].field_0.field_0[56];
	*(_WORD *)v6 = 0xA0A0u;
	*(_BYTE *)(v6 + 2) = 0xA0u;
	v7 = v1->pstru14->field_29D.field_2;
	if (v2)
	{
		v8 = *(_DWORD *)(v2 + 12);
		v9 = 59 * v8 / 100000;
		if (v9 < 1 && v8 > 0)
			v9 = 1;
	}
	else
	{
		v9 = 0;
	}
	if (v9 > 59)
		v9 = 59;
	memset(v7, 0xAAu, 4 * ((unsigned int)v9 >> 2));
	v10 = &v7->field_0[4 * ((unsigned int)v9 >> 2)];
	v11 = &v7[5].field_0[6];
	memset(v10, -86, v9 & 3);
	memset(v11, 0xA9u, v9);
	memset(v11 + 66, 0xA9u, v9);
}

//----- (00410BE0) --------------------------------------------------------
void entity_410BE0_status_bar(Entity *a1)
{
	Entity *v1; // esi@1
	int v2; // edx@1
	int v3; // edi@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // eax@3
	int v7; // ecx@6
	_WORD *v8; // eax@6
	int v9; // ecx@9
	_DWORD *v10; // eax@9
	enum UNIT_ID v11; // eax@11

	v1 = a1;
	v2 = *((_DWORD *)a1->state + 5) + 9;          // state -> EntityBuildingState
												  // v2 = (int)&a1->state->pstru14->field_8 + 1;
	memset((void *)v2, 1u, 0x3DCu);
	*(_WORD *)(v2 + 988) = 257;
	memset((void *)v2, 0xA6u, 0x40u);
	*(_WORD *)(v2 + 64) = 0xA6A6u;
	v3 = v2 + 924;
	v4 = v2 + 66;
	memset((void *)v3, 0xA4u, 0x40u);
	*(_WORD *)(v3 + 64) = 0xA4A4u;
	v5 = 13;
	do
	{
		*(_BYTE *)v4 = 0xA6u;
		*(_BYTE *)(v4 + 65) = 0xA4u;
		v4 += 66;
		--v5;
	} while (v5);
	entity_update_sabotage_bar(a1);
	entity_410520_update_healthbar_color(v1);
	v6 = v1->unit_id;
	if (v6 >= (int)UNIT_STATS_SURV_REPAIR_BAY
		|| v6 <= (int)UNIT_STATS_MUTE_HOLDING_PENS
		|| v1->player_side != player_side)
	{
		v9 = 15;
		v10 = (_DWORD *)(*((_DWORD *)v1->state + 5) + 71);
		do
		{
			*v10 = 0;
			*(_BYTE *)v10 = 0xA4u;
			v10 = (_DWORD *)((char *)v10 + 66);
			--v9;
		} while (v9);
	}
	else
	{
		v7 = 11;
		v8 = (_WORD *)(*((_DWORD *)v1->state + 5) + 203);
		do
		{
			*v8 = 257;
			v8 += 33;
			--v7;
		} while (v7);
	}
	v11 = v1->unit_id;
	if (v11 != UNIT_STATS_SURV_DRILL_RIG && v11 != UNIT_STATS_MUTE_DRILL_RIG)
		entity_4109A0_status_bar(v1);
}

//----- (00410CB0) --------------------------------------------------------
void entity_410CB0_event1511(Entity *a1)
{
	DrawJob *v1; // eax@1

	v1 = a1->drawjob;
	if (v1)
		v1->flags &= 0xBFFFFFFF;
}

//----- (00410CD0) --------------------------------------------------------
void entity_410CD0_eventTextString(Entity *a1)
{
	DrawJob *v1; // eax@1

	v1 = a1->drawjob;
	if (v1)
		v1->flags |= 0x40000000u;
}

//----- (00410CF0) --------------------------------------------------------
void entity_410CF0_aircraft(Entity *a1)
{
	Entity *v1; // esi@1
	Sprite *v2; // ecx@1
	DrawJob *v3; // eax@1

	v1 = a1;
	v2 = a1->sprite;
	v1->field_288 = 0;
	v1->pfn_render_DrawUnitsAndUi = render_sprt_draw_handler;
	v1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = _4795F0_stru26_array[0].data[27];
	v3 = draw_list_add(v2, (void(*)(void *, DrawJob *))drawjob_update_draw_handler_aircraft);
	v1->drawjob = v3;
	v3->on_update_handler_param = v1;
	v1->drawjob->flags |= 0x40000000u;
}

//----- (00410D40) --------------------------------------------------------
void entity_set_draw_handlers(Entity *a1)
{
	Entity *v1; // esi@1
	enum UNIT_ID v2; // eax@1
	void(*v3)(Entity *, DrawJob *); // edx@3
	DrawJob *v4; // eax@5

	v1 = a1;
	v2 = a1->unit_id;
	a1->field_288 = 0;
	a1->pfn_render_DrawUnitsAndUi = render_sprt_draw_handler;
	if ((int)v2 > (int)UNIT_STATS_SURV_SCOUT || (v2 & 0x80000000) != 0)
	{
		v3 = drawjob_update_handler_4487B0_vehicles_buildings;
		a1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = _4795F0_stru26_array[0].data[27];
	}
	else
	{
		v3 = drawjob_update_handler_448750_infantry;
		a1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = _479740_stru27_array[0].data[11];
	}
	v4 = draw_list_add(a1->sprite, (void(*)(void *, DrawJob *))v3);
	v1->drawjob = v4;
	v4->on_update_handler_param = v1;
	entity_410710_status_bar(v1);
	v1->drawjob->flags |= 0x40000000u;
}

//----- (00410DC0) --------------------------------------------------------
void entity_410DC0_building(Entity *a1)
{
	Entity *v1; // esi@1
	EntityBuildingState *v2; // edi@1
	EntityBuildingAttachment_stru14 *v3; // eax@1
	EntityBuildingAttachment_stru14 *v4; // eax@2
	Sprite *v5; // ecx@2
	DrawJob *v6; // eax@2

	v1 = a1;
	v2 = (EntityBuildingState *)a1->state;
	v3 = (EntityBuildingAttachment_stru14 *)script_create_local_object(a1->script, 1002);
	v2->pstru14 = v3;
	if (v3)
	{
		v3->field_0 = 66;
		v2->pstru14->field_4 = 15;
		LOBYTE_HEXRAYS(v2->pstru14->field_8) = 0;
		v4 = v2->pstru14;
		v1->field_288 = 0;
		v5 = v1->sprite;
		v1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = v4;
		v1->pfn_render_DrawUnitsAndUi = render_sprt_draw_handler;
		v6 = draw_list_add(v5, (void(*)(void *, DrawJob *))drawjob_update_handler_4486D0_building);
		v1->drawjob = v6;
		v6->on_update_handler_param = v1;
		entity_410BE0_status_bar(v1);
		v1->drawjob->flags |= 0x40000000u;
	}
}

//----- (00410E40) --------------------------------------------------------
void entity_oil_tanker_initialize_state(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1
	EntityOilTankerAttachment_stru70 *v3; // eax@1
	EntityOilTankerAttachment_stru70 *v4; // eax@2
	Sprite *v5; // ecx@2
	DrawJob *v6; // eax@2
	void *v7; // edx@2
	void *v8; // edi@2
	int v9; // edx@2
	int v10; // eax@2
	EntityOilTankerState *v11; // ebp@4
	char *v12; // edx@4
	char *v13; // ebx@4
	int v14; // edx@4
	EntityOilTankerState *v15; // ebx@4
	char *v16; // edx@4
	char *v17; // ebp@4
	unsigned int v18; // ST10_4@4
	int v19; // ST14_4@4
	unsigned int v20; // edx@4
	int v21; // eax@4
	int v22; // eax@4

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	v3 = (EntityOilTankerAttachment_stru70 *)script_create_local_object(a1->script, 300);
	v2->pstru70 = v3;
	if (v3)
	{
		v3->field_0 = 32;
		v2->pstru70->field_4 = 9;
		LOBYTE_HEXRAYS(v2->pstru70->field_8) = 0;
		v4 = v2->pstru70;
		v1->field_288 = 0;
		v5 = v1->sprite;
		v1->_28C_stru26_stru0__or__stru27_stru0__or__EntityBuildingAttachment_stru14__or__EntityOilTankerAttachment_stru70 = v4;
		v1->pfn_render_DrawUnitsAndUi = render_sprt_draw_handler;
		v6 = draw_list_add(v5, (void(*)(void *, DrawJob *))drawjob_update_handler_oiltanker);
		v1->drawjob = v6;
		v6->on_update_handler_param = v1;
		v7 = (void *)(*((_DWORD *)v1->state + 28) + 9);
		memset(v7, 1u, 0x120u);
		memset(v7, 0xA6u, 0x20u);
		v8 = (char *)v7 + 256;
		v9 = (int)v7 + 32;
		memset(v8, 0xA4u, 0x20u);
		v10 = 7;
		do
		{
			*(_BYTE *)v9 = 0xA6u;
			*(_BYTE *)(v9 + 31) = 0xA4u;
			v9 += 32;
			--v10;
		} while (v10);
		v11 = (EntityOilTankerState *)v1->state;
		v12 = v11->pstru70->array_AB;
		memset(v12, 0xA6u, 0x1Cu);
		memset(v12 + 32, 0xA0u, 0x1Cu);
		v13 = v11->pstru70->array_AB;
		v14 = 28 * v11->_0_oil_loaded / 500;
		memset(v13, 0xAAu, v14);
		memset(v13 + 32, 0xA9u, v14);
		v15 = (EntityOilTankerState *)v1->state;
		v16 = v15->pstru70->field_4B;
		memset(v16, 0xA6u, 0x1Cu);
		memset(v16 + 32, 0xA0u, 0x1Cu);
		v17 = v15->pstru70->field_4B;
		v18 = 28 * v1->hitpoints / v1->stats->hitpoints;
		v19 = (int)(4 * v18) / 28;
		v20 = 28 * v1->hitpoints / v1->stats->hitpoints;
		LOBYTE_HEXRAYS(v15) = _4657F0_tanker_status_color_breakpoints[v19];
		BYTE1(v15) = _4657F0_tanker_status_color_breakpoints[v19];
		v21 = (_DWORD)v15 << 16;
		LOWORD_HEXRAYS(v21) = (_WORD)v15;
		memset32(v17, v21, v18 >> 2);
		memset(&v17[4 * (v18 >> 2)], (char)v15, v20 & 3);
		LOBYTE_HEXRAYS(v15) = _4657F8_tanker_status_color_breakpoints[v19];
		BYTE1(v15) = _4657F8_tanker_status_color_breakpoints[v19];
		v22 = (_DWORD)v15 << 16;
		LOWORD_HEXRAYS(v22) = (_WORD)v15;
		memset32(v17 + 32, v22, v20 >> 2);
		memset(&v17[4 * (v20 >> 2) + 32], (char)v15, v20 & 3);
		v1->drawjob->flags |= 0x40000000u;
	}
}

//----- (00411040) --------------------------------------------------------
bool stru27_array_initialize()
{
	int v0; // esi@1
	stru27_stru0 **v1; // ebp@1
	unsigned int v2; // ebx@2
	stru27_stru0 *v3; // eax@3
	char *v4; // edx@4
	unsigned __int16 v5; // cx@4
	int v6; // eax@4
	int v7; // ecx@4
	int v8; // edi@4
	int v9; // eax@4
	_BYTE *v10; // edx@4
	int v11; // edi@4
	_BYTE *v12; // edx@5
	int v13; // eax@7
	bool v14; // zf@7
	bool v15; // sf@7
	unsigned __int8 v16; // of@7
	int v17; // ebx@10
	char *v18; // ecx@10
	char *v19; // edi@10
	char *v20; // esi@10
	unsigned int v21; // ecx@10
	unsigned int v22; // edx@10
	int v23; // eax@10
	int v24; // eax@10
	char *v25; // edi@10
	int v27; // [sp+10h] [bp-18h]@2
	int v28; // [sp+14h] [bp-14h]@1
	unsigned __int8 v29; // [sp+18h] [bp-10h]@1
	char v30; // [sp+1Ch] [bp-Ch]@1
	stru27 *v31; // [sp+20h] [bp-8h]@1

	v0 = 0;
	v1 = (stru27_stru0 **)_479740_stru27_array;
	v29 = -1;
	v30 = -1;
	v28 = 0;
	v31 = _479740_stru27_array;
	while (2)
	{
		v2 = 0;
		v27 = 0;
		do
		{
			v3 = (stru27_stru0 *)malloc(0x6Cu);
			*v1 = v3;
			if (!v3)
				return 0;
			v3->field_0 = 16;
			(*v1)->field_4 = 6;
			(*v1)->field_8 = 0;
			v4 = (*v1)->array_9;
			memset(v4, 1u, 0x60u);
			LOBYTE_HEXRAYS(v5) = _465800_stru26_stru27_initializer[v0];
			HIBYTE_HEXRAYS(v5) = _465800_stru26_stru27_initializer[v0];
			v6 = v5 << 16;
			LOWORD_HEXRAYS(v6) = v5;
			v7 = (int)(v4 + 80);
			*(_DWORD *)v4 = v6;
			*((_DWORD *)v4 + 1) = v6;
			*((_DWORD *)v4 + 2) = v6;
			*((_DWORD *)v4 + 3) = v6;
			v8 = (int)(v4 + 80);
			LOBYTE_HEXRAYS(v7) = _465804_stru26_stru27_initializer[v0];
			BYTE1(v7) = _465804_stru26_stru27_initializer[v0];
			v9 = v7 << 16;
			LOWORD_HEXRAYS(v9) = v7;
			v10 = v4 + 16;
			*(_DWORD *)v8 = v9;
			*(_DWORD *)(v8 + 4) = v9;
			*(_DWORD *)(v8 + 8) = v9;
			*(_DWORD *)(v8 + 12) = v9;
			v11 = 4;
			do
			{
				*v10 = _465800_stru26_stru27_initializer[v0];
				v12 = v10 + 15;
				*v12 = _465804_stru26_stru27_initializer[v0];
				v10 = v12 + 1;
				--v11;
			} while (v11);
			if ((char)v2 % -2)
			{
				LOBYTE_HEXRAYS(v13) = v29;
			}
			else
			{
				v13 = _4657F0_tanker_status_color_breakpoints[v27];
				v29 = _4657F0_tanker_status_color_breakpoints[v27];
				v16 = __OFSUB__(v27 + 1, 4);
				v14 = v27 == 3;
				v15 = v27 - 3 < 0;
				v30 = _4657F8_tanker_status_color_breakpoints[v27++];
				if (!((unsigned __int8)(v15 ^ v16) | v14))
					v27 = 4;
			}
			v17 = v2 + 1;
			v18 = &(*v1)->array_9[34];
			v19 = &(*v1)->array_9[34];
			v20 = &(*v1)->array_9[50];
			*(_DWORD *)v18 = 0xA6A6A6A6;
			++v1;
			*((_DWORD *)v18 + 1) = 0xA6A6A6A6;
			*((_DWORD *)v18 + 2) = 0xA6A6A6A6;
			v21 = v17;
			LOBYTE_HEXRAYS(v17) = v13;
			v22 = v21;
			BYTE1(v17) = v13;
			v23 = v17 << 16;
			LOWORD_HEXRAYS(v23) = v17;
			v2 = v21;
			v21 >>= 2;
			memset32(v19, v23, v21);
			memset(&v19[4 * v21], v23, v22 & 3);
			*(_DWORD *)v20 = 0xA0A0A0A0;
			*((_DWORD *)v20 + 1) = 0xA0A0A0A0;
			*((_DWORD *)v20 + 2) = 0xA0A0A0A0;
			LOBYTE_HEXRAYS(v22) = v30;
			BYTE1(v22) = v30;
			v24 = v22 << 16;
			LOWORD_HEXRAYS(v24) = v22;
			memset32(v20, v24, v2 >> 2);
			v25 = &v20[4 * (v2 >> 2)];
			v0 = v28;
			memset(v25, v30, v2 & 3);
		} while (v2 != 12);
		v0 = v28 + 1;
		v1 = v31[1].data;
		++v28;
		++v31;
		if ((tagRECT *)v31 != &global_wnd_rect)
			continue;
		break;
	}
	return 1;
}

//----- (00411200) --------------------------------------------------------
bool stru26_array_initialize()
{
	stru26_stru0 **v0; // ebp@1
	unsigned int v1; // ebx@2
	stru26_stru0 *v2; // eax@3
	int v3; // edx@4
	char *v4; // esi@4
	int v5; // eax@4
	void *v6; // edi@4
	int v7; // eax@4
	int v8; // esi@4
	int v9; // eax@4
	int v10; // edx@7
	bool v11; // zf@7
	bool v12; // sf@7
	unsigned __int8 v13; // of@7
	char *v14; // esi@10
	int v15; // ebx@10
	unsigned int v16; // ecx@10
	unsigned int v17; // edx@10
	char *v18; // edi@10
	int v19; // eax@10
	int v20; // eax@10
	int v22; // [sp+10h] [bp-18h]@1
	int v23; // [sp+14h] [bp-14h]@2
	unsigned __int8 v24; // [sp+18h] [bp-10h]@1
	char v25; // [sp+1Ch] [bp-Ch]@1
	stru26 *v26; // [sp+20h] [bp-8h]@1

	v0 = (stru26_stru0 **)_4795F0_stru26_array;
	v24 = -1;
	v25 = -1;
	v22 = 0;
	v26 = _4795F0_stru26_array;
	while (2)
	{
		v1 = 0;
		v23 = 0;
		do
		{
			v2 = (stru26_stru0 *)malloc(0xCCu);
			*v0 = v2;
			if (!v2)
				return 0;
			v2->field_0 = 32;
			HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v22);
			(*v0)->field_4 = 6;
			(*v0)->field_8 = 0;
			v4 = (*v0)->array_9;
			memset(v4, 1u, 0xC0u);
			LOBYTE_HEXRAYS(v3) = _465800_stru26_stru27_initializer[v22];
			BYTE1(v3) = _465800_stru26_stru27_initializer[v22];
			v5 = v3 << 16;
			LOWORD_HEXRAYS(v5) = v3;
			HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v22);
			memset32(v4, v5, 8u);
			v6 = v4 + 160;
			LOBYTE_HEXRAYS(v3) = _465804_stru26_stru27_initializer[v22];
			BYTE1(v3) = _465804_stru26_stru27_initializer[v22];
			v7 = v3 << 16;
			LOWORD_HEXRAYS(v7) = v3;
			v8 = (int)(v4 + 32);
			memset32(v6, v7, 8u);
			v9 = 4;
			do
			{
				v8 += 32;
				--v9;
				*(_BYTE *)(v8 - 32) = _465800_stru26_stru27_initializer[v22];
				*(_BYTE *)(v8 - 1) = _465804_stru26_stru27_initializer[v22];
			} while (v9);
			if ((int)v1 % 5)
			{
				LOBYTE_HEXRAYS(v10) = v24;
			}
			else
			{
				v10 = _4657F0_tanker_status_color_breakpoints[v23];
				v24 = _4657F0_tanker_status_color_breakpoints[v23];
				v13 = __OFSUB__(v23 + 1, 4);
				v11 = v23 == 3;
				v12 = v23 - 3 < 0;
				v25 = _4657F8_tanker_status_color_breakpoints[v23++];
				if (!((unsigned __int8)(v12 ^ v13) | v11))
					v23 = 4;
			}
			v14 = &(*v0)->array_9[66];
			v15 = v1 + 1;
			memset(v14, 0xA6u, 0x1Cu);
			v16 = v15;
			LOBYTE_HEXRAYS(v15) = v10;
			BYTE1(v15) = v10;
			v17 = v16;
			v18 = v14;
			v19 = v15 << 16;
			LOWORD_HEXRAYS(v19) = v15;
			v14 += 32;
			v16 >>= 2;
			memset32(v18, v19, v16);
			v1 = v17;
			++v0;
			memset(&v18[4 * v16], v19, v17 & 3);
			memset(v14, 0xA0u, 0x1Cu);
			LOBYTE_HEXRAYS(v17) = v25;
			BYTE1(v17) = v25;
			v20 = v17 << 16;
			LOWORD_HEXRAYS(v20) = v17;
			memset32(v14, v20, v1 >> 2);
			memset(&v14[4 * (v1 >> 2)], v25, v1 & 3);
		} while (v1 != 28);
		v0 = v26[1].data;
		v11 = (stru27 *)&v26[1] == _479740_stru27_array;
		++v22;
		++v26;
		if (!v11)
			continue;
		break;
	}
	return 1;
}

//----- (004113D0) --------------------------------------------------------
void stru26_stru27_free()
{
	stru27 *v0; // esi@1
	int v1; // edi@2
	stru26 *v2; // esi@5
	int v3; // edi@6

	v0 = _479740_stru27_array;
	do
	{
		v1 = 12;
		do
		{
			free(v0->data[0]);
			v0 = (stru27 *)((char *)v0 + 4);
			--v1;
		} while (v1);
	} while ((tagRECT *)v0 != &global_wnd_rect);
	v2 = _4795F0_stru26_array;
	do
	{
		v3 = 28;
		do
		{
			free(v2->data[0]);
			v2 = (stru26 *)((char *)v2 + 4);
			--v3;
		} while (v3);
	} while ((stru27 *)v2 != _479740_stru27_array);
}

//----- (00411420) --------------------------------------------------------
int __stdcall WndProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
{
	int result; // eax@4
	HWND v5; // eax@17
	struct tagPOINT Point; // [sp+Ch] [bp-60h]@7
	struct tagPOINT v7; // [sp+14h] [bp-58h]@7
	RECT v8; // [sp+1Ch] [bp-50h]@7
	struct tagPAINTSTRUCT Paint; // [sp+2Ch] [bp-40h]@5

		switch (Msg)
		{
		case WM_ERASEBKGND:
			return 1;
		case WM_ACTIVATEAPP:
			if (!is_render_window_initialized || global_fullscreen != 1)
				goto LABEL_18;
			if (wParam)
			{
				ShowWindow(hWnd, 3);
				if (!RenderDD_initialized)
				{
					_431C40_on_WM_ACTIVATEAPP_software_render((void *)RenderDD_initialized);
					return DefWindowProcA(hWnd, Msg, wParam, lParam);
				}
			}
			else if (GetForegroundWindow() != hWnd)
			{
				ShowWindow(hWnd, 6);
				v5 = GetDesktopWindow();
				SetForegroundWindow(v5);
			}
		LABEL_18:
			result = DefWindowProcA(hWnd, Msg, wParam, lParam);
			break;
		case WM_KEYUP:
		case WM_SYSKEYUP:
			wnd_proc_pressed_key_id = -1;
			return 0;
		case WM_SYSCOMMAND:
			if (wParam == 61760)
				result = 0;
			else
				result = DefWindowProcA(hWnd, Msg, wParam, lParam);
			return result;
		case WM_KEYFIRST:
		case WM_SYSKEYDOWN:
			wnd_proc_pressed_key_id = wParam;
			return 0;
		case WM_CHAR:
		case WM_DEADCHAR:
		case WM_SYSCHAR:
		case WM_SYSDEADCHAR:
			return 0;

        case WM_PAINT:
            BeginPaint(hWnd, &Paint);
            {
                Point = *(struct tagPOINT *)&Paint.rcPaint.left;
                v7 = *(struct tagPOINT *)&Paint.rcPaint.right;
                ClientToScreen(hWnd, &Point);
                ClientToScreen(hWnd, &v7);
                *(struct tagPOINT *)&v8.left = Point;
                *(struct tagPOINT *)&v8.right = v7;

                render_on_wm_paint(&v8);
            }
            EndPaint(hWnd, &Paint);
            result = 1;
            break;

        case WM_DESTROY:
            PostQuitMessage(0);
            result = 0;
            break;

		default:
            result = DefWindowProcA(hWnd, Msg, wParam, lParam);
            break;
		}

    return result;
}

//----- (00419DF0) --------------------------------------------------------
void EventHandler_419DF0(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // ecx@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v4);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v4);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v4);
			break;
		case EVT_MSG_DAMAGE:
			entity_41A510_evt1503(v4, (int)param);
			break;
		case EVT_ENTITY_MOVE:
			entity_41A170_evt1524(v4, (int)param);
			break;
		default:
			return;
		}
	}
}

//----- (00419E80) --------------------------------------------------------
void EventHandler_419E80(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // ecx@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v4);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v4);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v4);
			break;
		case EVT_MSG_DAMAGE:
			entity_41A510_evt1503(v4, (int)param);
			break;
		default:
			return;
		}
	}
}

//----- (0041A060) --------------------------------------------------------
void entity_41A060_evt1525(Entity *a1, void *a2)
{
	_DWORD *v2; // edi@1
	Entity *v3; // esi@1
	UnitStat *v4; // eax@5
	int v5; // eax@6
	unsigned int v6; // ecx@8
	UnitStat *v7; // eax@8
	int v8; // eax@9
	unsigned int v9; // edx@11

	v2 = (int *)a2;
	v3 = a1;
	if (a1->player_side == *(_DWORD *)a2
		&& (a1->_DC_order != 9
			|| (*((_DWORD *)a2 + 1) ^ a1->sprite_x_2) & 0xFFFFE000
			|| (*((_DWORD *)a2 + 2) ^ a1->sprite_y_2) & 0xFFFFE000))
	{
		script_445370_yield_to_main_thread(a1->script, 0x80000000, 1);
		v4 = v3->stats;
		v3->_DC_order = ENTITY_ORDER_9;
		v3->_134_param__unitstats_after_mobile_outpost_plant = 600;
		v3->_E0_current_attack_target = 0;
		v3->_E4_prev_attack_target = 0;
		if (v4->is_infantry)
			v5 = entity_40F0A0_get_dx(v3, v3->field_A4);
		else
			v5 = v4->field_4C != 128 ? 7424 : 4096;
		v6 = v5 + (v2[1] & 0xFFFFE000);
		v7 = v3->stats;
		v3->sprite_x_2 = v6;
		if (v7->is_infantry)
			v8 = entity_40F100_get_dy(v3, v3->field_A4);
		else
			v8 = v7->field_4C != 128 ? 7424 : 4096;
		v9 = v2[2] & 0xFFFFE000;
		v3->entity_8 = 0;
		v3->sprite_y_2 = v8 + v9;
		entity_mode_move_attack(v3);
	}
}

//----- (0041A170) --------------------------------------------------------
void entity_41A170_evt1524(Entity *a1, int a2)
{
	int v2; // edi@1
	Entity *v3; // esi@1
	UnitStat *v4; // eax@5
	int v5; // eax@6
	unsigned int v6; // ecx@8
	UnitStat *v7; // eax@8
	int v8; // eax@9
	int v9; // edx@11

	v2 = a2;
	v3 = a1;
	if (a1->player_side == *(_DWORD *)a2
		&& (a1->_DC_order != 1
			|| (*(_DWORD *)(a2 + 4) ^ a1->sprite_x_2) & 0xFFFFE000
			|| (*(_DWORD *)(a2 + 8) ^ a1->sprite_y_2) & 0xFFFFE000))
	{
		script_445370_yield_to_main_thread(a1->script, 0x80000000, 1);
		v4 = v3->stats;
		v3->_DC_order = ENTITY_ORDER_MOVE;
		if (v4->is_infantry)
			v5 = entity_40F0A0_get_dx(v3, v3->field_A4);
		else
			v5 = v4->field_4C != 128 ? 7424 : 4096;
		v6 = v5 + (*(_DWORD *)(v2 + 4) & 0xFFFFE000);
		v7 = v3->stats;
		v3->sprite_x_2 = v6;
		if (v7->is_infantry)
			v8 = entity_40F100_get_dy(v3, v3->field_A4);
		else
			v8 = v7->field_4C != 128 ? 7424 : 4096;
		v9 = *(_DWORD *)(v2 + 8);
		v3->entity_8 = 0;
		v3->mode = entity_mode_418F60;
		v3->sprite_y_2 = v8 + (v9 & 0xFFFFE000);
	}
}

//----- (0041A400) --------------------------------------------------------
void entity_41A400_evt1547(Entity *a1, Entity *a2)
{
	Entity *v2; // esi@1
	Entity *v3; // edi@1

	v2 = a1;
	v3 = a2;
	if (a2 != a1->_E0_current_attack_target)
	{
		script_445370_yield_to_main_thread(a1->script, 0x80000000, 1);
		v2->_DC_order = ENTITY_ORDER_3;
		v2->_E0_current_attack_target = v3;
		v2->_E0_current_attack_target_entity_id = v3->entity_id;
		v2->_E4_prev_attack_target = 0;
		v2->_134_param__unitstats_after_mobile_outpost_plant = 600;
		v2->mode_arrive = entity_mode_418B30;
		v2->entity_8 = 0;
		entity_mode_move_attack(v2);
	}
}

//----- (0041A470) --------------------------------------------------------
void entity_41A470(Entity *a1, Entity *a2)
{
	Entity *v2; // esi@1
	Entity *v3; // edi@1
	int v4; // edx@1
	int v5; // edi@1

	v2 = a1;
	v3 = a2;
	script_445370_yield_to_main_thread(a1->script, 0x80000000, 1);
	v2->_DC_order = ENTITY_ORDER_10;
	v2->_E0_current_attack_target = v3;
	v2->_E0_current_attack_target_entity_id = v3->entity_id;
	v2->_E4_prev_attack_target = 0;
	v2->_134_param__unitstats_after_mobile_outpost_plant = 600;
	v2->mode_arrive = entity_mode_419230;
	v3->sprite->field_88_unused = 1;
	v2->sprite_x_2 = v3->sprite->x + *(_DWORD *)(v3->stru60.ptr_14 + 4);
	v4 = *(_DWORD *)(v3->stru60.ptr_14 + 8);
	v5 = v3->sprite->y;
	v2->entity_8 = 0;
	v2->sprite_y_2 = v5 + v4;
	entity_40DF50_boxd_update_map_tile(v2, 1);
	v2->mode = entity_mode_move_attack;
}

//----- (0041A510) --------------------------------------------------------
void entity_41A510_evt1503(Entity *a1, int a2)
{
	Entity *v2; // esi@1
	UnitStat *v3; // eax@2
	void *v4; // edi@3
	Entity *v5; // eax@8
	Script *v6; // eax@10
	int v7; // eax@12
	Entity *v8; // eax@13
	int v9; // ecx@14

	v2 = a1;
	if (a2)
	{
		v3 = a1->stats;
		if (v3->is_infantry)
			v4 = (void *)*(_WORD *)(a2 + 140);
		else
			v4 = (void *)(v3->speed ? *(_WORD *)(a2 + 142) : (int)*(_WORD *)(a2 + 144));
		if (a1->hitpoints > 0)
		{
			v5 = *(Entity **)(a2 + 128);
			if (v5)
			{
				if (v5->entity_id == *(_DWORD *)(a2 + 132))
				{
					v6 = v5->script;
					if (v6)
						script_trigger_event(a1->script, EVT_MSG_1505, v4, v6);
				}
			}
			v7 = v2->hitpoints - (_DWORD)v4;
			v2->hitpoints = v7;
			if (v7 <= 0)
			{
				script_445370_yield_to_main_thread(v2->script, 0x80000000, 1);
				v8 = v2->_E0_current_attack_target;
				if (v8)
				{
					v9 = v8->entity_id;
					if (v9)
					{
						if (v9 == v2->_E0_current_attack_target_entity_id
							&& v8->script->script_type == SCRIPT_REPAIR_STATION_HANDLER)
						{
							*((_DWORD *)v8->state + 2) = 0;
						}
					}
				}
				v2->hitpoints = 0;
				v2->mode = entity_419560_on_death;
				v2->destroyed = 1;
				entity_check_special_mission_death_conditions(v2);
			}
		}
	}
}

//----- (0041A610) --------------------------------------------------------
void entity_41A610_evt1503(Entity *a1, void *a2)
{
	Entity *v2; // esi@1
	UnitStat *v3; // eax@2
	void *v4; // edi@3
	Entity *v5; // eax@8
	Script *v6; // eax@10
	int v7; // eax@12

	v2 = a1;
	if (a2)
	{
		v3 = a1->stats;
		if (v3->is_infantry)
			v4 = (void *)*((_WORD *)a2 + 70);
		else
			v4 = (void *)(v3->speed ? *((_WORD *)a2 + 71) : (int)*((_WORD *)a2 + 72));
		if (a1->hitpoints > 0)
		{
			v5 = (Entity *)*((_DWORD *)a2 + 32);
			if (v5)
			{
				if (v5->entity_id == *((_DWORD *)a2 + 33))
				{
					v6 = v5->script;
					if (v6)
						script_trigger_event(a1->script, EVT_MSG_1505, v4, v6);
				}
			}
			v7 = v2->hitpoints - (_DWORD)v4;
			v2->hitpoints = v7;
			if (v7 <= 0)
			{
				script_445370_yield_to_main_thread(v2->script, 0x80000000, 1);
				v2->hitpoints = 0;
				v2->mode = entity_419560_on_death;
				v2->destroyed = 1;
				entity_check_special_mission_death_conditions(v2);
			}
		}
	}
}

//----- (0041A6D0) --------------------------------------------------------
void entity_41A6D0_evt1497(Entity *a1, Entity *a2)
{
	Entity *v2; // esi@1
	enum UNIT_ID v3; // eax@1
	int v4; // eax@13
	Sprite *v5; // eax@15
	stru11unit *v6; // ebx@18
	stru11unit *v7; // eax@19
	int v8; // ecx@19
	stru11unit *v9; // edi@25
	void *v10; // eax@26

	v2 = a1;
	v3 = a1->unit_id;
	if (v3 == UNIT_STATS_SURV_MOBILE_OUTPOST
		|| v3 == UNIT_STATS_MUTE_CLANHALL_WAGON
		|| v3 == UNIT_STATS_SURV_MOBILE_DERRICK
		|| v3 == UNIT_STATS_MUTE_MOBILE_DERRICK
		|| v3 == UNIT_STATS_SURV_SABOTEUR && a1->_DC_order == 3
		|| v3 == UNIT_STATS_MUTE_VANDAL && a1->_DC_order == 3
		|| v3 == UNIT_STATS_SURV_TECHNICIAN && a1->_DC_order == 3
		|| v3 == UNIT_STATS_MUTE_MEKANIK && a1->_DC_order == 3
		|| (v4 = a1->_DC_order, v4 != 1) && v4
		|| (v5 = a1->sprite, (v5->x ^ a1->sprite_x_2) & 0xFFFFE000)
		|| (v5->y ^ a1->sprite_y_2) & 0xFFFFE000)
	{
		a1->_E4_prev_attack_target = a2;
		a1->_E4_prev_attack_target_entity_id = a2->entity_id;
		v6 = (stru11unit *)&a1->stru11_list_104;
		do
		{
			v7 = v6->next;
			v8 = 0;
			if (v6->next != v6)
			{
				while (v7->param)
				{
					v7 = v7->next;
					if (v7 == v6)
						goto LABEL_24;
				}
				v7->next->prev = v7->prev;
				v7->prev->next = v7->next;
				v7->next = stru11unit_list_head;
				stru11unit_list_head = v7;
				v8 = 1;
			}
		LABEL_24:
			;
		} while (v8);
		v9 = v6->next;
		for (v2->entity_118 = a2; v9 != v6; v9 = v9->next)
		{
			v10 = v9->param;
			if (v10)
				script_trigger_event(v2->script, EVT_MSG_1508, v2, *((Script **)v10 + 3));
		}
	}
	else
	{
		a1->_E0_current_attack_target = a2;
		a1->_E0_current_attack_target_entity_id = a2->entity_id;
		a1->_E4_prev_attack_target = 0;
		a1->_DC_order = ENTITY_ORDER_8;
		a1->entity_8 = 0;
		entity_mode_move_attack(a1);
		script_445370_yield_to_main_thread(v2->script, 2147483648, 1);
	}
}

//----- (0041A850) --------------------------------------------------------
void entity_41A850_evt1507_mess_with_stru11(Entity *a1, void *param)
{
	stru11unit *v2; // eax@1
	stru11unit *v3; // esi@4
	stru11unit *v4; // ecx@4

	v2 = stru11unit_list_head;
	if (stru11unit_list_head)
		stru11unit_list_head = stru11unit_list_head->next;
	else
		v2 = 0;
	v3 = a1->stru11_list_104;
	v4 = (stru11unit *)&a1->stru11_list_104;
	v2->next = v3;
	v2->prev = v4;
	v4->next->prev = v2;
	v4->next = v2;
	v2->param = param;
}

//----- (0041A890) --------------------------------------------------------
void entity_41A890_evt1528(Entity *a1)
{
	Entity *v1; // esi@1
	Entity *v2; // eax@2
	UnitStat *v3; // eax@6
	int v4; // eax@7
	unsigned int v5; // edx@9
	UnitStat *v6; // eax@9
	int v7; // eax@10
	unsigned int v8; // edx@12

	v1 = a1;
	if (sub_44CA50(a1->unit_id))
		v2 = entity_44CA70_find(v1, UNIT_STATS_SURV_OUTPOST, v1->player_side);
	else
		v2 = entity_44CA70_find(v1, UNIT_STATS_MUTE_CLANHALL, v1->player_side);
	if (v2)
	{
		v1->_DC_order = ENTITY_ORDER_4;
		v1->_E0_current_attack_target = v2;
		v1->_E0_current_attack_target_entity_id = v2->entity_id;
		entity_mode_move_attack(v1);
	}
	else
	{
		v3 = v1->stats;
		if (v3->is_infantry)
			v4 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v4 = v3->field_4C != 128 ? 7424 : 4096;
		v5 = v4 + (v1->sprite->x & 0xFFFFE000);
		v6 = v1->stats;
		v1->sprite_x = v5;
		if (v6->is_infantry)
			v7 = entity_40F100_get_dy(v1, v1->field_A4);
		else
			v7 = v6->field_4C != 128 ? 7424 : 4096;
		v8 = v1->sprite->y & 0xFFFFE000;
		v1->_DC_order = ENTITY_ORDER_MOVE;
		v1->sprite_y = v7 + v8;
		entity_mode_move_attack(v1);
	}
}

//----- (0041A980) --------------------------------------------------------
void entity_41A980_evt1509_unset_stru11(Entity *a1, void *param)
{
	stru11unit *v2; // eax@1
	stru11unit *end; // ecx@1

	v2 = a1->stru11_list_104;
	end = (stru11unit *)&a1->stru11_list_104;
	if (v2 != end)
	{
		while (v2->param != param)
		{
			v2 = v2->next;
			if (v2 == end)
				return;
		}
		v2->param = 0;
	}
}

//----- (0041A9B0) --------------------------------------------------------
void entity_41A9B0_unit(Entity *a1, int a2)
{
	int v2; // ebx@1
	Entity *v3; // esi@1
	int map_x; // eax@2
	int map_y; // eax@4
	UnitStat *v6; // eax@6
	int v7; // eax@7
	unsigned int v8; // ecx@9
	UnitStat *v9; // eax@9
	int v10; // eax@10

	v2 = a2;
	v3 = a1;
	if (a1->player_side == *(_DWORD *)a2)
	{
		map_x = *(_DWORD *)(a2 + 4);
		if (map_x >= 0 && map_x < _4793F8_map_width << 13)
		{
			map_y = *(_DWORD *)(a2 + 8);
			if (map_y >= 0 && map_y < _478AAC_map_height << 13)
			{
				v6 = a1->stats;
				LOWORD_HEXRAYS(a1->field_2A4) = 1;
				if (v6->is_infantry)
					v7 = entity_40F0A0_get_dx(a1, a1->field_A4);
				else
					v7 = v6->field_4C != 128 ? 7424 : 4096;
				v8 = v7 + (*(_DWORD *)(v2 + 4) & 0xFFFFE000);
				v9 = v3->stats;
				v3->sprite_width_3 = v8;
				if (v9->is_infantry)
					v10 = entity_40F100_get_dy(v3, v3->field_A4);
				else
					v10 = v9->field_4C != 128 ? 7424 : 4096;
				v3->sprite_height_3 = v10 + (*(_DWORD *)(v2 + 8) & 0xFFFFE000);
				entity_414440_boxd(v3, &v3->sprite_width_3, &v3->sprite_height_3);
			}
		}
	}
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0041AAA0) --------------------------------------------------------
bool array_479B98_array_479C60_init()
{
	int v0; // eax@1
	int v1; // edx@2

	v0 = 0;
	array_479B98_array_479C60_inited = 1;
	do
	{
		v1 = 25;
		do
		{
			array_479C60[v0][0] = 0;
			array_479B98[v0][0] = 0;
			array_479C60[v0][1] = 0;
			array_479B98[v0][1] = 0;
			++v0;
			--v1;
		} while (v1);
	} while (v0 < 25);
	return 1;
}

//----- (0041AC50) --------------------------------------------------------
__int16 input_get_string(const char *a1, unsigned __int16 a2, void(*handler)(const char *, int), int a4, Script *a5)
{
	int v5; // ebx@1
	char *v6; // ebp@1
	void(*v7)(const char *, int); // edi@1
	bool v8; // zf@42
	unsigned int v10; // [sp+10h] [bp-10h]@1
	int v11; // [sp+14h] [bp-Ch]@1
	char *v12; // [sp+18h] [bp-8h]@1

	v5 = 0;
	v10 = a2;
	v6 = (char *)a1;
	v11 = 1;
	input_wnd_proc_pressed_key_id = 0;
	v12 = (char *)malloc(a2 + 1);
	strcpy(v12, v6);
	v7 = handler;
	handler(v6, 0);
	while (2)
	{
		input_wnd_proc_pressed_key_id = 0;
		do
		{
			if (a5)
			{
				script_445370_yield_to_main_thread(a5, 0x80000000, 1);
			}
			else
			{
				script_list_update();
				sprite_list_init_mobd_items();
				sprite_list_update_positions();
				draw_list_update_and_draw();
				TimedMessagePump();
			}
		} while (!input_wnd_proc_pressed_key_id);
		switch (input_wnd_proc_pressed_key_id)
		{
		case 37:
			if ((_WORD)v5)
			{
				v5 += 0xFFFF;
				v7(v6, v5);
			}
			goto LABEL_41;
		case 39:
			if (strlen(v6) != 0 && (unsigned __int16)v5 < (int)(v10 - 1) && (unsigned __int16)v5 < strlen(v6) - 1)
			{
				++v5;
				goto LABEL_40;
			}
			goto LABEL_41;
		case 36:
			v5 = 0;
			v7(v6, 0);
			goto LABEL_41;
		case 35:
			if (strlen(v6) != 0)
			{
				v5 = strlen(v6) - 1;
				goto LABEL_40;
			}
			goto LABEL_41;
		case 27:
			strcpy((char *)v6, v12);
			goto LABEL_19;
		case 13:
		LABEL_19:
			v11 = 0;
			goto LABEL_41;
		case 45:
			if (strlen(v6) >= v10)
				goto LABEL_41;
			memcpy((void *)&v6[(unsigned __int16)v5 + 1], &v6[(unsigned __int16)v5], strlen(v6) - (unsigned __int16)v5);
			v6[(unsigned __int16)v5] = 32;
			goto LABEL_40;
		case 46:
			if (strlen(v6) == 0)
				goto LABEL_41;
			strcpy((char *)&v6[(unsigned __int16)v5], &v6[(unsigned __int16)v5 + 1]);
			if ((unsigned __int16)v5 >= strlen(v6) && (_WORD)v5)
				v5 += 0xFFFF;
			goto LABEL_40;
		case 8:
			if (strlen(v6) == 0 || !(_WORD)v5)
				goto LABEL_41;
			strcpy((char *)&v6[(unsigned __int16)v5 - 1], &v6[(unsigned __int16)v5]);
			v5 += 0xFFFF;
			goto LABEL_40;
		default:
			if (input_wnd_proc_pressed_key_id >= 65 && input_wnd_proc_pressed_key_id <= 90
				|| input_wnd_proc_pressed_key_id >= 48 && input_wnd_proc_pressed_key_id <= 57
				|| input_wnd_proc_pressed_key_id == 32)
			{
				v6[(unsigned __int16)v5] = input_wnd_proc_pressed_key_id;
				if ((unsigned __int16)v5 < (int)(v10 - 1))
				{
					if ((unsigned __int16)v5 >= strlen(v6) - 1)
					{
						if ((unsigned __int16)v5 < (int)(v10 - 1) && (unsigned __int16)v5 == strlen(v6) - 1)
							v6[(unsigned __int16)++v5] = 0;
					}
					else
					{
						++v5;
					}
				}
			LABEL_40:
				handler(v6, v5);
			}
		LABEL_41:
			if (v11)
			{
				v7 = handler;
				continue;
			}
			free(v12);

            input_reset_keyboard();

			v8 = input_wnd_proc_pressed_key_id == 27;
			input_wnd_proc_pressed_key_id = 0;
			return !v8;
		}
	}
}

//----- (0041B000) --------------------------------------------------------
bool _41B000_stru7_handler(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	if (a1->script)
		script_trigger_event(0, EVT_MOUSE_HOVER, a2->script, a1->script);
	return 0;
}

//----- (0041B020) --------------------------------------------------------
bool _41B020_stru7_handler(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	Sprite *v5; // edi@1
	Sprite *v6; // esi@1
	Script *v7; // eax@1
	Script *v8; // eax@4

	v5 = a1;
	v6 = a2;
	v7 = a1->script;
	if (v7 && v7->field_28 & 0x40000000)
		script_trigger_event(0, EVT_MOUSE_HOVER, a2->script, a1->script);
	v8 = v6->script;
	if (v8 && v8->field_28 & 0x40000000)
		script_trigger_event(0, EVT_MOUSE_HOVER, v5, v6->script);
	return 0;
}

//----- (0041B070) --------------------------------------------------------
bool _41B070_stru7_handler(Sprite *a1, Sprite *a2, int a3, void *a4, void *a5)
{
	Sprite *v5; // esi@1
	Script *v6; // ecx@1
	int v7; // edi@1
	Sprite *v8; // eax@2
	int v9; // eax@4
	int v10; // eax@6

	v5 = a1;
	v6 = a2->script;
	v7 = (int)a2->param;
	if (v6)
	{
		v8 = v5->parent;
		if (v8 != a2)
		{
			if (v8)
			{
				v9 = (int)v8->param;
				if (v9)
				{
					if (*(_DWORD *)(v9 + 20) != *(_DWORD *)(v7 + 20) || (v10 = *(_DWORD *)(v7 + 16), v10 >= 46) && v10 <= 72)
					{
						script_trigger_event(0, EVT_MSG_DAMAGE, v5, v6);
						v5->script->flags_20 |= 2u;
						v5->script->field_24 |= v5->script->flags_20;
					}
				}
			}
		}
	}
	return 0;
}

//----- (0041B0E0) --------------------------------------------------------
bool LVL_SysInit()
{
	BOOL result; // eax@1

	currently_running_lvl_sections = 0;
	result = stru2_list_alloc();
	if (result)
	{
		stru2_list_initialized = 1;
		result = render_create_window(640, 480, 8, 1, false);
		if (result)
		{
			game_window_created = 1;
			result = sound_initialize() != 0;
		}
	}
	return result;
}

//----- (0041B140) --------------------------------------------------------
DataHunk *LVL_LoadLevel(const char *filename_)
{
	char cwd[1024];
	char filename[1024];

	const char *ext = strrchr(filename_, '.');
	if (!_stricmp(ext, ".slv"))
	{
		sprintf(
			filename,
			(const char *)aSLevelsS,
			_getcwd(cwd, sizeof(cwd)),//game_data_installation_dir,
			filename_);
	}
	else if (!_stricmp(ext, ".lvl"))
	{
		sprintf(
			filename,
			(const char *)aSLevelsSS,
			_getcwd(cwd, sizeof(cwd)),//game_data_root_dir
			get_resource_res_subfolder(),
			filename_
		);
	}
	else throw 42;

	DataHunk *result = nullptr;

	File *level_file = File::open(filename);
	if (level_file) {
    void *level_data = (DataHunk*)level_file->read_hunk();
		if (level_data) {
			RllcHunk *level_rllc = (RllcHunk*)level_file->read_hunk();
			if (level_rllc) {
				level_file->close();
				result = (DataHunk *)HUNK_FixPointers(level_data, level_rllc);
				if (result) {
					free(level_rllc);
					result = (DataHunk *)level_data;
				}
			}
		}
	}
	return result;
}

//----- (0041B1A0) --------------------------------------------------------
bool LVL_RunLevel(DataHunk *lvl)
{
	BOOL result; // eax@1
	DataSectionOffset *v2; // eax@2

	result = 0;
	_479DE8_boxd_initialized = 0;
	_479DCC_cplc_initialized = 0;
	_479DC0_render_string_list_initialized = 0;
	stru1_global_obj_anim_initialized = 0;
	input_initialized = 0;
	game_window_created = 0;
	stru2_list_elements_initialized = 0;
	draw_list_initialized = 0;
	_479DF0_mapd_initialized = 0;
	_479DD0_mobd_initialized = 0;
	is_task_list_initialized = 0;
	timer_initialized = 0;
	dword_479DBC = 0;
	if (!currently_running_lvl_sections)
	{
		v2 = lvl->section_table;
		currently_running_lvl = lvl;
		currently_running_lvl_sections = v2;
		result = script_list_alloc();
		if (result)
		{
			is_task_list_initialized = 1;
			result = timer_init(60u);
			if (result)
			{
				timer_initialized = 1;
				result = array_479B98_array_479C60_init();
				if (result)
				{
					dword_479DBC = 1;
					result = stru2_list_init_elements();
					if (result)
					{
						stru2_list_elements_initialized = 1;
						result = draw_list_alloc();
						if (result)
						{
							draw_list_initialized = 1;
							result = LVL_InitMapd();
							if (result)
							{
								_479DF0_mapd_initialized = 1;
								result = sprite_list_alloc();
								if (result)
								{
									_479DD0_mobd_initialized = 1;
									result = boxd_init();
									if (result)
									{
										_479DE8_boxd_initialized = 1;
										result = cplc_init();
										if (result)
										{
											_479DCC_cplc_initialized = 1;
											result = render_string_list_alloc();
											if (result)
											{
												_479DC0_render_string_list_initialized = 1;
												result = stru1_init_anim();
												if (result)
												{
													stru1_global_obj_anim_initialized = 1;
													result = input_initialize();
													if (result)
													{
														input_initialized = 1;
														result = 1;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return result;
}
// 479DB8: using guessed type int is_task_list_initialized;
// 479DBC: using guessed type int dword_479DBC;
// 479DC0: using guessed type int _479DC0_render_string_list_initialized;
// 479DC4: using guessed type int draw_list_initialized;
// 479DCC: using guessed type int _479DCC_cplc_initialized;
// 479DD0: using guessed type int _479DD0_mobd_initialized;
// 479DD4: using guessed type int timer_initialized;
// 479DD8: using guessed type int input_initialized;
// 479DE0: using guessed type int stru1_global_obj_anim_initialized;
// 479DE4: using guessed type int game_window_created;
// 479DE8: using guessed type int _479DE8_boxd_initialized;
// 479DEC: using guessed type int stru2_list_elements_initialized;
// 479DF0: using guessed type int _479DF0_mapd_initialized;

//----- (0041B2E0) --------------------------------------------------------
void LVL_Deinit()
{
	if (input_initialized)
		nullsub_3();
	if (stru1_global_obj_anim_initialized)
		nullsub_1();
	if (_479DC0_render_string_list_initialized)
		render_string_list_free();
	if (_479DCC_cplc_initialized)
		cplc_free();
	if (_479DE8_boxd_initialized)
		boxd_free();
	if (_479DD0_mobd_initialized)
		sprite_list_free();
	if (_479DF0_mapd_initialized)
		bitmap_list_free();
	if (draw_list_initialized)
		draw_list_free();
	if (stru2_list_elements_initialized)
		stru2_list_remove_elements();
	if (dword_479DBC)
		nullsub_1();
	if (timer_initialized)
		nullsub_1();
	if (is_task_list_initialized)
		script_list_free();
	_479DE8_boxd_initialized = 0;
	_479DCC_cplc_initialized = 0;
	_479DC0_render_string_list_initialized = 0;
	stru1_global_obj_anim_initialized = 0;
	input_initialized = 0;
	game_window_created = 0;
	stru2_list_elements_initialized = 0;
	draw_list_initialized = 0;
	_479DF0_mapd_initialized = 0;
	_479DD0_mobd_initialized = 0;
	is_task_list_initialized = 0;
	timer_initialized = 0;
	dword_479DBC = 0;
	currently_running_lvl = 0;
	currently_running_lvl_sections = 0;
}
// 479DB8: using guessed type int is_task_list_initialized;
// 479DBC: using guessed type int dword_479DBC;
// 479DC0: using guessed type int _479DC0_render_string_list_initialized;
// 479DC4: using guessed type int draw_list_initialized;
// 479DCC: using guessed type int _479DCC_cplc_initialized;
// 479DD0: using guessed type int _479DD0_mobd_initialized;
// 479DD4: using guessed type int timer_initialized;
// 479DD8: using guessed type int input_initialized;
// 479DE0: using guessed type int stru1_global_obj_anim_initialized;
// 479DE4: using guessed type int game_window_created;
// 479DE8: using guessed type int _479DE8_boxd_initialized;
// 479DEC: using guessed type int stru2_list_elements_initialized;
// 479DF0: using guessed type int _479DF0_mapd_initialized;

//----- (0041B3F0) --------------------------------------------------------
void GAME_Deinit()
{
	if (currently_running_lvl_sections)
		LVL_Deinit();
	if (game_window_created)
		render_cleanup();
	sound_deinit();
	stru2_list_free();
	VIDEO_free();
}

DataMapd *LVL_FindMapd()
{
    return (DataMapd *)LVL_FindSection("MAPD");
}
//----- (0041B420) --------------------------------------------------------
void *LVL_FindSection(const char *name)
{
	DataSectionOffset *v1; // eax@1
	const char *v2; // edi@1
	int v3; // esi@1
	void *result; // eax@4

	v1 = currently_running_lvl_sections;
	v2 = name;
	v3 = 0;
	if (currently_running_lvl_sections->ptr)
	{
		while (strncmp(v2, v1[v3].name, 4u))
		{
			v1 = currently_running_lvl_sections;
			if (!currently_running_lvl_sections[++v3].ptr)
				return 0;
		}
		result = currently_running_lvl_sections[v3].ptr;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (0041B470) --------------------------------------------------------
bool LVL_SubstHunk(DataHunk *dst, DataHunk *src, const char *hunk)
{
	DataSectionOffset *src_hunk_name; // eax@1
	DataSectionOffset *dst_hunk_table; // ecx@1
	int *src_hunk_offset; // esi@1
	void *src_hunk_items; // ebp@1
	int v7; // ecx@4
	int dst_hunk_idx; // edi@7
	DataSectionOffset *dst_hunk_name; // eax@8
	DataSectionOffset *v10; // esi@8
	void *v11; // ecx@10
	BOOL result; // eax@11
	DataSectionOffset *dst_hunk_tAble; // [sp+10h] [bp-4h]@1

	src_hunk_name = src->section_table;
	dst_hunk_table = dst->section_table;
	src_hunk_offset = (int *)&src->section_table->ptr;
	src_hunk_items = 0;
	dst_hunk_tAble = dst_hunk_table;
	if (*src_hunk_offset)
	{
		do
		{
			if (!strncmp(hunk, src_hunk_name->name, 4u))
				src_hunk_items = (void *)*src_hunk_offset;
			v7 = src_hunk_offset[2];
			src_hunk_offset += 2;
			src_hunk_name = (DataSectionOffset *)(src_hunk_offset - 1);
		} while (v7);
		dst_hunk_table = dst_hunk_tAble;
	}
	if (src_hunk_items && (dst_hunk_idx = 0, dst_hunk_table->ptr))
	{
		dst_hunk_name = dst_hunk_table;
		v10 = dst_hunk_table;
		while (strncmp(hunk, dst_hunk_name->name, 4u))
		{
			v11 = v10[1].ptr;
			++v10;
			++dst_hunk_idx;
			dst_hunk_name = v10;
			if (!v11)
				return 0;
		}
		dst_hunk_tAble[dst_hunk_idx].ptr = src_hunk_items;
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (0041B510) --------------------------------------------------------
bool entity_41B510(Entity *a1, Entity *a2)
{
	Sprite *v2; // eax@1
	int v3; // ebx@1
	int v4; // ecx@3
	Sprite *v5; // eax@5
	int v6; // edi@5
	int v7; // esi@7
	int v8; // ebx@9
	int v9; // edi@9
	int v10; // ecx@9
	int v11; // esi@9
	int v13; // eax@12
	DataBoxd_stru0_per_map_unit *v14; // edx@12
	int v15; // edi@13
	int v16; // ecx@13
	DataBoxd_stru0_per_map_unit *v17; // esi@14
	int v18; // ecx@15
	int v19; // ebp@15
	int v20; // ebx@15
	bool v21; // zf@21
	int v22; // ebp@23
	int v23; // ebx@23
	int v24; // edi@23
	int v25; // edi@32
	DataBoxd_stru0_per_map_unit *v26; // esi@32
	int v27; // ebp@33
	int v28; // ebx@33
	int v29; // ebp@42
	int v30; // ebx@42
	int v31; // edi@42
	int v32; // edi@51
	int v33; // ecx@51
	DataBoxd_stru0_per_map_unit *v34; // esi@52
	int v35; // ecx@53
	int v36; // ebp@53
	int v37; // ebx@53
	int v38; // ebp@61
	int v39; // ebx@61
	int v40; // edi@61
	int v41; // edi@70
	DataBoxd_stru0_per_map_unit *v42; // esi@70
	int v43; // ebp@71
	int v44; // ebx@71
	int v45; // ebp@80
	int v46; // ebx@80
	int v47; // edi@80
	Entity *a3; // [sp+10h] [bp-10h]@1
	Entity *a2a; // [sp+14h] [bp-Ch]@1
	int v50; // [sp+18h] [bp-8h]@15
	int v51; // [sp+18h] [bp-8h]@23
	int v52; // [sp+18h] [bp-8h]@33
	int v53; // [sp+18h] [bp-8h]@42
	int v54; // [sp+18h] [bp-8h]@53
	int v55; // [sp+18h] [bp-8h]@61
	int v56; // [sp+18h] [bp-8h]@71
	int v57; // [sp+18h] [bp-8h]@80
	int v58; // [sp+1Ch] [bp-4h]@15
	int v59; // [sp+1Ch] [bp-4h]@33
	int v60; // [sp+1Ch] [bp-4h]@53
	int v61; // [sp+1Ch] [bp-4h]@71

	v2 = a1->sprite;
	v3 = v2->x;
	a3 = a2;
	a2a = a1;
	if (v3 >= 0 && v3 < _478AB4_map_width_shl_13)
	{
		v4 = v2->y;
		if (v4 >= 0 && v4 < _478FF0_map_height_shl_13)
		{
			v5 = a2->sprite;
			v6 = v5->x;
			if (v6 >= 0 && v6 < _478AB4_map_width_shl_13)
			{
				v7 = v5->y;
				if (v7 >= 0 && v7 < _478FF0_map_height_shl_13)
				{
					v8 = v3 >> 13;
					v9 = v6 >> 13;
					v10 = v4 >> 13;
					v11 = v7 >> 13;
					if (v8 == v9 && v10 == v11)
						return 1;
					v13 = _4793F8_map_width;
					v14 = &_478AA8_boxd_stru0_array[v8 + _4793F8_map_width * v10];
					if (v10 > v11)
					{
						v32 = v9 - v8;
						v33 = v10 - v11;
						if (v32 <= 0)
						{
							v41 = -v32;
							v42 = v14;
							if (v41 <= v33)
							{
								v45 = 2 * v41;
								v46 = 2 * v41 - 2 * v33;
								v47 = 2 * v41 - v33;
								v57 = v33 - 1;
								if (v33)
								{
									while (1)
									{
										if (v47 < 0)
										{
											v47 += v45;
										}
										else
										{
											--v42;
											v47 += v46;
										}
										v42 -= v13;
										if (!boxd_40EDF0(v42, a2a, a3))
											break;
										v21 = v57-- == 0;
										if (v21)
											return 1;
										v13 = _4793F8_map_width;
									}
									return 0;
								}
							}
							else
							{
								v61 = 2 * v33;
								v43 = 2 * v33 - 2 * v41;
								v44 = 2 * v33 - v41;
								v56 = v41 - 1;
								if (v41)
								{
									while (1)
									{
										if (v44 < 0)
										{
											v44 += v61;
										}
										else
										{
											v44 += v43;
											v42 -= v13;
										}
										--v42;
										if (!boxd_40EDF0(v42, a2a, a3))
											break;
										v21 = v56-- == 0;
										if (v21)
											return 1;
										v13 = _4793F8_map_width;
									}
									return 0;
								}
							}
						}
						else
						{
							v34 = v14;
							if (v32 > v33)
							{
								v35 = 2 * v33;
								v36 = v35 - 2 * v32;
								v37 = v35 - v32;
								v60 = v35;
								v54 = v32 - 1;
								while (1)
								{
									if (v37 < 0)
									{
										v37 += v35;
									}
									else
									{
										v37 += v36;
										v34 -= v13;
									}
									++v34;
									if (!boxd_40EDF0(v34, a2a, a3))
										break;
									v21 = v54-- == 0;
									if (v21)
										return 1;
									v13 = _4793F8_map_width;
									v35 = v60;
								}
								return 0;
							}
							v38 = 2 * v32;
							v39 = 2 * v32 - 2 * v33;
							v40 = 2 * v32 - v33;
							v55 = v33 - 1;
							if (v33)
							{
								while (1)
								{
									if (v40 < 0)
									{
										v40 += v38;
									}
									else
									{
										++v34;
										v40 += v39;
									}
									v34 -= v13;
									if (!boxd_40EDF0(v34, a2a, a3))
										break;
									v21 = v55-- == 0;
									if (v21)
										return 1;
									v13 = _4793F8_map_width;
								}
								return 0;
							}
						}
					}
					else
					{
						v15 = v9 - v8;
						v16 = v11 - v10;
						if (v15 <= 0)
						{
							v25 = -v15;
							v26 = v14;
							if (v25 <= v16)
							{
								v29 = 2 * v25;
								v30 = 2 * v25 - 2 * v16;
								v31 = 2 * v25 - v16;
								v53 = v16 - 1;
								if (v16)
								{
									while (1)
									{
										if (v31 < 0)
										{
											v31 += v29;
										}
										else
										{
											--v26;
											v31 += v30;
										}
										v26 += v13;
										if (!boxd_40EDF0(v26, a2a, a3))
											break;
										v21 = v53-- == 0;
										if (v21)
											return 1;
										v13 = _4793F8_map_width;
									}
									return 0;
								}
							}
							else
							{
								v59 = 2 * v16;
								v27 = 2 * v16 - 2 * v25;
								v28 = 2 * v16 - v25;
								v52 = v25 - 1;
								if (v25)
								{
									while (1)
									{
										if (v28 < 0)
										{
											v28 += v59;
										}
										else
										{
											v28 += v27;
											v26 += v13;
										}
										--v26;
										if (!boxd_40EDF0(v26, a2a, a3))
											break;
										v21 = v52-- == 0;
										if (v21)
											return 1;
										v13 = _4793F8_map_width;
									}
									return 0;
								}
							}
						}
						else
						{
							v17 = v14;
							if (v15 > v16)
							{
								v18 = 2 * v16;
								v19 = v18 - 2 * v15;
								v20 = v18 - v15;
								v58 = v18;
								v50 = v15 - 1;
								while (1)
								{
									if (v20 < 0)
									{
										v20 += v18;
									}
									else
									{
										v20 += v19;
										v17 += v13;
									}
									++v17;
									if (!boxd_40EDF0(v17, a2a, a3))
										break;
									v21 = v50-- == 0;
									if (v21)
										return 1;
									v13 = _4793F8_map_width;
									v18 = v58;
								}
								return 0;
							}
							v22 = 2 * v15;
							v23 = 2 * v15 - 2 * v16;
							v24 = 2 * v15 - v16;
							v51 = v16 - 1;
							if (v16)
							{
								while (1)
								{
									if (v24 < 0)
									{
										v24 += v22;
									}
									else
									{
										++v17;
										v24 += v23;
									}
									v17 += v13;
									if (!boxd_40EDF0(v17, a2a, a3))
										break;
									v21 = v51-- == 0;
									if (v21)
										return 1;
									v13 = _4793F8_map_width;
								}
								return 0;
							}
						}
					}
					return 1;
				}
			}
		}
	}
	return 0;
}

//----- (0041B970) --------------------------------------------------------
int entity_41B970_boxd(Entity *a1, int x, int y)
{
	Entity *v3; // edi@1
	Sprite *v5; // edx@1
	int v6; // ecx@1
	int v7; // edx@1
	int v8; // eax@2
	int v9; // ebx@2
	int v11; // eax@7
	int v12; // esi@7
	int v13; // [sp-14h] [bp-20h]@3
	int v14; // [sp-10h] [bp-1Ch]@3
	int v15; // [sp-Ch] [bp-18h]@3
	int v16; // [sp-8h] [bp-14h]@3
	Entity *v17; // [sp-4h] [bp-10h]@3

	v3 = a1;
	v5 = a1->sprite;
	v6 = v5->x;
	v7 = v5->y;
	v3->stru224._28_indexer = 0;
	if (v7 > y)
	{
		v11 = (x - v6) / 256;
		v12 = (v7 - y) / 256;
		if (v11 <= 0)
		{
			v17 = v3;
			v16 = -256;
			v15 = -256;
			v14 = (v7 - y) / 256;
			v13 = -v11;
			if (-v11 > v12)
				return boxd_41BA30(v6, v7, v13, v14, -256, -256, v3);
		}
		else
		{
			v17 = v3;
			v16 = -256;
			v15 = 256;
			v14 = (v7 - y) / 256;
			v13 = v11;
			if (v11 > v12)
				return boxd_41BA30(v6, v7, v11, v14, 256, -256, v3);
		}
	}
	else
	{
		v8 = (x - v6) / 256;
		v9 = (y - v7) / 256;
		if (v8 <= 0)
		{
			v17 = v3;
			v16 = 256;
			v15 = -256;
			v14 = (y - v7) / 256;
			v13 = -v8;
			if (-v8 > v9)
				return boxd_41BA30(v6, v7, v13, v9, -256, 256, v3);
		}
		else
		{
			v17 = v3;
			v16 = 256;
			v15 = 256;
			v14 = (y - v7) / 256;
			v13 = v8;
			if (v8 > v9)
				return boxd_41BA30(v6, v7, v8, v9, 256, 256, v3);
		}
	}
	return boxd_41BC60(v6, v7, v13, v14, v15, v16, v17);
}

//----- (0041BA30) --------------------------------------------------------
int boxd_41BA30(int x, int y, int a3, int a4, int x_step, int y_step, Entity *a1)
{
	int v8; // esi@1
	int v10; // eax@7
	int v16; // eax@20
	int a3a; // [sp+1Ch] [bp-9Ch]@3
	int a8; // [sp+20h] [bp-98h]@3
	int v23; // [sp+24h] [bp-94h]@3
	int v26; // [sp+30h] [bp-88h]@1
	int a11; // [sp+38h] [bp-80h]@3
	int v29; // [sp+3Ch] [bp-7Ch]@1
	int v30[10]; // [sp+40h] [bp-78h]@2
	int a6a[10]; // [sp+68h] [bp-50h]@20
	int a5a[10]; // [sp+90h] [bp-28h]@20

	a1->stru224._48_map_y = 0;
	a1->stru224._44_map_x = 0;

	int map_x = global2map(x);
    int map_y = global2map(y);
    int next_x = x;
    int next_y = y;
    DataBoxd_stru0_per_map_unit *tile = &_478AA8_boxd_stru0_array[map_x + map_y * _4793F8_map_width];
	v26 = 2 * a4;
	v29 = 2 * a4 - 2 * a3;
	v8 = 2 * a4 - a3;
    int v19 = 0;
	for (int i = 0; i < 10; ++i)
	{
        v19 = i + 1;
		v30[i] = 0;
		a1->array_15C[i] = -1;
		a1->array_184[i] = -1;
	}
	a3a = 0;
	v23 = 0;
	a11 = 0;
	a8 = 0;

	for (int i = a3 - 1; i > 0; --i)
	{
        map_x = global2map(next_x);
        map_y = global2map(next_y);

		if (v8 < 0)
		{
			v10 = v26;
		}
		else
		{
			v10 = v29;
			next_y += y_step;
		}
        next_x += x_step;
		v8 += v10;

		int next_map_x = global2map(next_x);
		int next_map_y = global2map(next_y);
        unsigned __int8 v15 = __OFSUB__(next_map_x, map_x);
		bool v13 = next_x == map_x;
        bool v14 = next_x - map_x < 0;
		if (next_map_x == map_x)
		{
			if (next_map_y == map_y)
				continue;
			v15 = __OFSUB__(next_map_x, map_x);
			v13 = next_map_x == map_x;
			v14 = next_map_x - map_x < 0;
		}
		if (!((unsigned __int8)(v14 ^ v15) | v13))
		{
			v15 = __OFSUB__(next_map_x, map_x);
			v14 = next_map_x - map_x < 0;
			++tile;
		}
		if (v14 ^ v15)
			--tile;
		if (next_map_y > map_y)
            tile += _4793F8_map_width;
		if (next_map_y < map_y)
            tile -= _4793F8_map_width;

		v16 = boxd_40EA50(a1, next_map_x, next_map_y, tile);
		if (boxd_41BE90(&v19, v16, &a3a, &v23, a1, v30, a5a, a6a, next_map_x, next_map_y, &a11, &a8) != 6)
			return 1;
	}

    return boxd_41C060(v19, a1, a3a, v23, a5a, a6a, v30, a8);
}

//----- (0041BC60) --------------------------------------------------------
int boxd_41BC60(int x, int y, int a3, int a4, int a5, int a6, Entity *a7)
{
	int v7; // ebx@1
	int v8; // esi@1
	int v9; // eax@1
	int v10; // eax@7
	int v11; // esi@9
	int v12; // edi@9
	bool v13; // zf@9
	bool v14; // sf@9
	unsigned __int8 v15; // of@9
	int v16; // eax@20
	DataBoxd_stru0_per_map_unit *a4a; // [sp+10h] [bp-A8h]@1
	int v19; // [sp+14h] [bp-A4h]@1
	int v20; // [sp+18h] [bp-A0h]@1
	int a3a; // [sp+1Ch] [bp-9Ch]@3
	int a8; // [sp+20h] [bp-98h]@3
	int v23; // [sp+24h] [bp-94h]@3
	int v24; // [sp+28h] [bp-90h]@1
	int v25; // [sp+2Ch] [bp-8Ch]@5
	int v26; // [sp+30h] [bp-88h]@1
	int v27; // [sp+34h] [bp-84h]@9
	int a11; // [sp+38h] [bp-80h]@3
	int v29; // [sp+3Ch] [bp-7Ch]@1
	int v30[10]; // [sp+40h] [bp-78h]@2
	int v31[10]; // [sp+68h] [bp-50h]@20
	int v32[10]; // [sp+90h] [bp-28h]@20
	int v33; // [sp+C0h] [bp+8h]@3

	a7->stru224._44_map_x = 0;
	a7->stru224._48_map_y = 0;
	v20 = y >> 13;
	v7 = x >> 13;
	v24 = x;
	a4a = &_478AA8_boxd_stru0_array[(x >> 13) + _4793F8_map_width * (y >> 13)];
	v26 = 2 * a3;
	v29 = 2 * a3 - 2 * a4;
	v8 = 2 * a3 - a4;
	v9 = 0;
	v19 = 0;
	do
	{
		v30[v9] = 0;
		a7->array_15C[v9] = -1;
		a7->array_184[v19] = -1;
		v9 = v19 + 1;
		v15 = __OFSUB__(v19 + 1, 10);
		v14 = v19++ - 9 < 0;
	} while (v14 ^ v15);
	v19 = 0;
	a3a = 0;
	v23 = 0;
	a11 = 0;
	a8 = 0;
	v13 = a4 == 0;
	v33 = a4 - 1;
	if (v13)
		return boxd_41C060(v19, a7, a3a, v23, v32, v31, v30, a8);
	while (1)
	{
		if (v8 < 0)
		{
			v10 = v26;
		}
		else
		{
			v10 = v29;
			x += a5;
			v24 = x;
		}
		v25 = v10 + v8;
		y += a6;
		v11 = x >> 13;
		v12 = y >> 13;
		v15 = __OFSUB__(x >> 13, v7);
		v13 = x >> 13 == v7;
		v14 = (x >> 13) - v7 < 0;
		v27 = y;
		if (x >> 13 == v7)
		{
			if (v12 == v20)
				goto LABEL_22;
			v15 = __OFSUB__(v11, v7);
			v13 = v11 == v7;
			v14 = v11 - v7 < 0;
		}
		if (!((unsigned __int8)(v14 ^ v15) | v13))
		{
			v15 = __OFSUB__(v11, v7);
			v14 = v11 - v7 < 0;
			++a4a;
		}
		if (v14 ^ v15)
			--a4a;
		if (v12 > v20)
			a4a += _4793F8_map_width;
		if (v12 < v20)
			a4a -= _4793F8_map_width;
		v7 = x >> 13;
		v20 = y >> 13;
		v16 = boxd_40EA50(a7, v11, v12, a4a);
		if (boxd_41BE90(&v19, v16, &a3a, &v23, a7, v30, v32, v31, v11, v12, &a11, &a8) != 6)
			return 1;
		y = v27;
		x = v24;
	LABEL_22:
		v13 = v33-- == 0;
		if (v13)
			return boxd_41C060(v19, a7, a3a, v23, v32, v31, v30, a8);
		v8 = v25;
	}
}
// 4793F8: using guessed type int _4793F8_map_width;
// 41BC60: using guessed type int var_78[10];

//----- (0041BE90) --------------------------------------------------------
int boxd_41BE90(_DWORD *a1, int a2, _DWORD *a3, _DWORD *a4, Entity *a5, int *a6, int *a7, int *a8, int map_x, int map_y, _DWORD *a11, _DWORD *a12)
{
	int v12; // ebp@1
	int v13; // edi@3
	bool v14; // zf@7
	int v15; // esi@23
	int v17; // ecx@29

	v12 = map_y;
	switch (a2)
	{
	case 1:
		if (!a5->stru224.field_54)
			goto LABEL_6;
		v13 = 0;
		break;
	case 3:
		if (a5->stru224.field_50)
			goto LABEL_6;
		goto LABEL_5;
	case 2:
	LABEL_5:
		v13 = 0;
		break;
	default:
	LABEL_6:
		v13 = 1;
		a5->array_1AC[a5->stru224._28_indexer] = map_x;
		a5->array_1D4[a5->stru224._28_indexer] = map_y;
		break;
	}
	v14 = a2 == 0;
	if (!a2)
	{
		v14 = 1;
		a5->array_1FC[a5->stru224._28_indexer] = map_x;
		a5->stru224.array_0[a5->stru224._28_indexer] = map_y;
	}
	if (v14)
	{
		*a3 = 1;
		a6[a5->stru224._28_indexer] = 0;
	}
	if (a2 == 3)
		*a12 = 1;
	if (a2 == 2)
	{
		*a4 = 1;
		v12 = map_y;
	}
	else
	{
		*a11 = 1;
	}
	if (a2 == 2 && !*a3 && !*a11)
	{
		a5->stru224._48_map_y = v12;
		a5->stru224._44_map_x = map_x;
	}
	if (*a1)
	{
		if (*a1 == 1)
		{
			if (!v13)
			{
				a5->array_15C[a5->stru224._28_indexer] = map_x;
				a5->array_184[a5->stru224._28_indexer] = v12;
				v15 = a5->stru224._28_indexer + 1;
				a5->stru224._28_indexer = v15;
				if (v15 == 10)
					return 1;
				*a1 = 0;
			}
			if (a2 == 1 || a2 == 3)
			{
				if (*a3)
				{
					v17 = a5->stru224._28_indexer;
					if (!a6[v17])
					{
						a7[v17] = map_x;
						a8[a5->stru224._28_indexer] = v12;
						a6[a5->stru224._28_indexer] = 1;
						return 6;
					}
				}
			}
		}
	}
	else if (v13)
	{
		*a1 = 1;
	}
	return 6;
}

//----- (0041C060) --------------------------------------------------------
int boxd_41C060(int a1, Entity *a2, int a3, int a4, int *a5, int *a6, int *a7, int a8)
{
	int v8; // eax@3
	int result; // eax@7

	if (a1)
	{
		if (a1 != 1)
			goto LABEL_21;
		v8 = a2->stru224._28_indexer;
		if (!v8 && !a3 && !a4 && !a8)
			return 4;
		if (v8)
		{
			if (!a3)
				return 1;
		}
		else if (!a3)
		{
			return 2;
		}
		if (a7[v8])
		{
			a2->array_15C[v8] = a5[v8];
			a2->array_184[v8] = a6[v8];
			++a2->stru224._28_indexer;
			return 3;
		}
		if (v8)
			result = 1;
		else
			LABEL_21:
		result = 5;
	}
	else
	{
		result = a2->stru224._28_indexer != 0;
	}
	return result;
}

//----- (0041C130) --------------------------------------------------------
bool boxd_41C130(int x, int y, int z, int w, Entity *entity)
{
	int v5; // esi@1
	BOOL result; // eax@4

	v5 = entity->stats->field_4C;
	if (v5 == 128 || v5 == 512)
	{
		result = boxd_41C190(x, y, z, w, entity);
	}
	else if (entity_is_xl_vehicle(entity))
	{
		result = boxd_41C250(x, y, z, w, entity);
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (0041C190) --------------------------------------------------------
bool boxd_41C190(int x, int y, int z, int w, Entity *a5)
{
	int v5; // eax@2
	int v6; // esi@2
	int v8; // eax@7
	int v9; // esi@7
	int v10; // [sp-14h] [bp-1Ch]@3
	int v11; // [sp-10h] [bp-18h]@3
	int v12; // [sp-Ch] [bp-14h]@3
	int v13; // [sp-8h] [bp-10h]@3
	Entity *v14; // [sp-4h] [bp-Ch]@3

	if (y > w)
	{
		v8 = (z - x) >> 8;
		v9 = (y - w) >> 8;
		if (v8 <= 0)
		{
			v14 = a5;
			v13 = -256;
			v12 = -256;
			v11 = (y - w) >> 8;
			v10 = -v8;
			if (-v8 > v9)
				return boxd_41C660(x, y, v10, v9, -256, -256, a5);
		}
		else
		{
			v14 = a5;
			v13 = -256;
			v12 = 256;
			v11 = (y - w) >> 8;
			v10 = (z - x) >> 8;
			if (v8 > v9)
				return boxd_41C660(x, y, v8, v9, 256, -256, a5);
		}
	}
	else
	{
		v5 = (z - x) >> 8;
		v6 = (w - y) >> 8;
		if (v5 <= 0)
		{
			v14 = a5;
			v13 = 256;
			v12 = -256;
			v11 = (w - y) >> 8;
			v10 = -v5;
			if (-v5 > v6)
				return boxd_41C660(x, y, v10, v6, -256, 256, a5);
		}
		else
		{
			v14 = a5;
			v13 = 256;
			v12 = 256;
			v11 = (w - y) >> 8;
			v10 = (z - x) >> 8;
			if (v5 > v6)
				return boxd_41C660(x, y, v5, v6, 256, 256, a5);
		}
	}
	return boxd_41C890(x, y, v10, v11, v12, v13, v14);
}

//----- (0041C250) --------------------------------------------------------
bool boxd_41C250(int x, int y, int z, int w, Entity *a5)
{
	int v5; // esi@1
	int v6; // edi@1
	int v7; // ebp@2
	int v8; // ebx@2
	int v10; // edx@12
	int v11; // ebp@12
	int v12; // ecx@12
	int v13; // ebp@21
	int v14; // ebx@21
	int v15; // edx@22
	int v16; // ecx@22
	int v17; // ebp@31

	v5 = y;
	v6 = x;
	if (y > w)
	{
		v13 = (z - x) >> 8;
		v14 = (y - w) >> 8;
		if (v13 <= 0)
		{
			v17 = -v13;
			if (v17 <= v14)
			{
				if (boxd_41C890(x - 4096, y + 4096, v17, v14, -256, -256, a5)
					&& boxd_41C890(v6 + 4096, v5 - 4096, v17, v14, -256, -256, a5)
					&& boxd_41C890(v6, v5, v17, v14, -256, -256, a5))
				{
					return 1;
				}
			}
			else if (boxd_41C660(x + 4096, y - 4096, v17, v14, -256, -256, a5)
				&& boxd_41C660(v6 - 4096, v5 + 4096, v17, v14, -256, -256, a5)
				&& boxd_41C660(v6, v5, v17, v14, -256, -256, a5))
			{
				return 1;
			}
		}
		else
		{
			v15 = y - 4096;
			v16 = x - 4096;
			if (v13 <= v14)
			{
				if (boxd_41C890(v16, v15, v13, v14, 256, -256, a5)
					&& boxd_41C890(v6 + 4096, v5 + 4096, v13, v14, 256, -256, a5)
					&& boxd_41C890(v6, v5, v13, v14, 256, -256, a5))
				{
					return 1;
				}
			}
			else if (boxd_41C660(v16, v15, v13, v14, 256, -256, a5)
				&& boxd_41C660(v6 + 4096, v5 + 4096, v13, v14, 256, -256, a5)
				&& boxd_41C660(v6, v5, v13, v14, 256, -256, a5))
			{
				return 1;
			}
		}
	}
	else
	{
		v7 = (z - x) >> 8;
		v8 = (w - y) >> 8;
		if (v7 <= 0)
		{
			v10 = y - 4096;
			v11 = -v7;
			v12 = x - 4096;
			if (v11 <= v8)
			{
				if (boxd_41C890(v12, v10, v11, v8, -256, 256, a5)
					&& boxd_41C890(v6 + 4096, v5 + 4096, v11, v8, -256, 256, a5)
					&& boxd_41C890(v6, v5, v11, v8, -256, 256, a5))
				{
					return 1;
				}
			}
			else if (boxd_41C660(v12, v10, v11, v8, -256, 256, a5)
				&& boxd_41C660(v6 + 4096, v5 + 4096, v11, v8, -256, 256, a5)
				&& boxd_41C660(v6, v5, v11, v8, -256, 256, a5))
			{
				return 1;
			}
		}
		else if (v7 <= v8)
		{
			if (boxd_41C890(x - 4096, y + 4096, v7, v8, 256, 256, a5)
				&& boxd_41C890(v6 + 4096, v5 - 4096, v7, v8, 256, 256, a5)
				&& boxd_41C890(v6, v5, v7, v8, 256, 256, a5))
			{
				return 1;
			}
		}
		else if (boxd_41C660(x + 4096, y - 4096, v7, v8, 256, 256, a5)
			&& boxd_41C660(v6 - 4096, v5 + 4096, v7, v8, 256, 256, a5)
			&& boxd_41C660(v6, v5, v7, v8, 256, 256, a5))
		{
			return 1;
		}
	}
	return 0;
}

//----- (0041C660) --------------------------------------------------------
bool boxd_41C660(int x, int y, int width, int height, int a5, int a6, Entity *a7)
{
	int v7; // esi@1
	int v8; // ebx@1
	int v9; // eax@2
	int v10; // edx@4
	int v11; // eax@5
	int v12; // eax@7
	Entity *v13; // ebp@15
	Sprite *v14; // eax@15
	DataBoxd_stru0_per_map_unit *v15; // edi@15
	int v17; // eax@19
	int v18; // eax@19
	bool v19; // zf@19
	int v20; // ecx@21
	int v21; // eax@23
	int v22; // eax@23
	int v23; // ecx@23
	bool v24; // sf@27
	unsigned __int8 v25; // of@27
	int v26; // [sp+10h] [bp-14h]@1
	int v27; // [sp+14h] [bp-10h]@1
	int v28; // [sp+18h] [bp-Ch]@19
	int v29; // [sp+1Ch] [bp-8h]@15
	int v30; // [sp+20h] [bp-4h]@15
	int a3a; // [sp+28h] [bp+4h]@19
	int a4a; // [sp+2Ch] [bp+8h]@19
	Entity *a7a; // [sp+38h] [bp+14h]@23

	v7 = x >> 13;
	v8 = y >> 13;
	v26 = y;
	v27 = x;
	if (a5 <= 0)
		v9 = -(width >> 5);
	else
		v9 = width >> 5;
	v10 = v7 + v9;
	if (a6 <= 0)
		v11 = -(height >> 5);
	else
		v11 = height >> 5;
	v12 = v8 + v11;
	if (v7 >= 0
		&& v7 < _4793F8_map_width
		&& v8 >= 0
		&& v8 < _478AAC_map_height
		&& v10 >= 0
		&& v10 < _4793F8_map_width
		&& v12 >= 0
		&& v12 < _478AAC_map_height)
	{
		v13 = a7;
		v14 = a7->sprite;
		v30 = v14->y >> 13;
		v29 = v14->x >> 13;
		v15 = &_478AA8_boxd_stru0_array[v7 + _4793F8_map_width * v8];
		switch (boxd_40ED00(a7, &_478AA8_boxd_stru0_array[v7 + _4793F8_map_width * v8]))
		{
		case 1:
			if (a7->stru224.field_54)
				break;
			return 0;
		case 3:
			if (a7->stru224.field_50)
				return 0;
			break;
		case 2:
			break;
		default:
			return 0;
		}
		v17 = 2 * height;
		a4a = v17;
		v28 = v17 - 2 * width;
		v18 = v17 - width;
		v19 = width == 0;
		a3a = width - 1;
		if (v19)
			return 1;
		while (1)
		{
			if (v18 < 0)
			{
				v20 = a4a;
			}
			else
			{
				v20 = v28;
				v26 += a6;
			}
			a7a = (Entity *)(v20 + v18);
			v21 = a5 + v27;
			v27 = v21;
			v22 = v21 >> 13;
			v23 = v26 >> 13;
			if (v22 != v7 || v23 != v8)
				break;
		LABEL_39:
			v19 = a3a-- == 0;
			if (v19)
				return 1;
			v18 = (int)a7a;
		}
		if (v22 == v29 && v23 == v30)
			return 1;
		v25 = __OFSUB__(v22, v7);
		v24 = v22 - v7 < 0;
		if (v22 > v7)
		{
			++v15;
			v25 = __OFSUB__(v22, v7);
			v24 = v22 - v7 < 0;
		}
		if (v24 ^ v25)
			--v15;
		if (v23 > v8)
			v15 += _4793F8_map_width;
		if (v23 < v8)
			v15 -= _4793F8_map_width;
		v8 = v26 >> 13;
		v7 = v22;
		switch (boxd_40ED00(v13, v15))
		{
		case 1:
			if (v13->stru224.field_54)
				goto LABEL_39;
			return 0;
		case 3:
			if (!v13->stru224.field_50)
				goto LABEL_39;
			return 0;
		case 2:
			goto LABEL_39;
		default:
			return 0;
		}
	}
	return 0;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0041C890) --------------------------------------------------------
bool boxd_41C890(int x, int y, int width, int height, int a5, int a6, Entity *a7)
{
	int v7; // esi@1
	int v8; // ebx@1
	int v9; // eax@2
	int v10; // edx@4
	int v11; // eax@5
	int v12; // eax@7
	Entity *v13; // ebp@15
	Sprite *v14; // eax@15
	DataBoxd_stru0_per_map_unit *v15; // edi@15
	int v17; // eax@19
	int v18; // eax@19
	bool v19; // zf@19
	int v20; // ecx@21
	int v21; // eax@23
	int v22; // ecx@23
	bool v23; // sf@27
	unsigned __int8 v24; // of@27
	int v25; // [sp+10h] [bp-14h]@1
	int v26; // [sp+14h] [bp-10h]@1
	int v27; // [sp+18h] [bp-Ch]@19
	int v28; // [sp+1Ch] [bp-8h]@15
	int v29; // [sp+20h] [bp-4h]@15
	int a3a; // [sp+28h] [bp+4h]@19
	int a4a; // [sp+2Ch] [bp+8h]@19
	Entity *a7a; // [sp+38h] [bp+14h]@23

	v7 = x >> 13;
	v8 = y >> 13;
	v26 = y;
	v25 = x;
	if (a5 <= 0)
		v9 = -(width >> 5);
	else
		v9 = width >> 5;
	v10 = v7 + v9;
	if (a6 <= 0)
		v11 = -(height >> 5);
	else
		v11 = height >> 5;
	v12 = v8 + v11;
	if (v7 >= 0
		&& v7 < _4793F8_map_width
		&& v8 >= 0
		&& v8 < _478AAC_map_height
		&& v10 >= 0
		&& v10 < _4793F8_map_width
		&& v12 >= 0
		&& v12 < _478AAC_map_height)
	{
		v13 = a7;
		v14 = a7->sprite;
		v29 = v14->y >> 13;
		v28 = v14->x >> 13;
		v15 = &_478AA8_boxd_stru0_array[v7 + _4793F8_map_width * v8];
		switch (boxd_40ED00(a7, &_478AA8_boxd_stru0_array[v7 + _4793F8_map_width * v8]))
		{
		case 1:
			if (a7->stru224.field_54)
				break;
			return 0;
		case 3:
			if (a7->stru224.field_50)
				return 0;
			break;
		case 2:
			break;
		default:
			return 0;
		}
		v17 = 2 * width;
		a3a = v17;
		v27 = v17 - 2 * height;
		v18 = v17 - height;
		v19 = height == 0;
		a4a = height - 1;
		if (v19)
			return 1;
		while (1)
		{
			if (v18 < 0)
			{
				v20 = a3a;
			}
			else
			{
				v20 = v27;
				v25 += a5;
			}
			a7a = (Entity *)(v20 + v18);
			v26 += a6;
			v21 = v25 >> 13;
			v22 = v26 >> 13;
			if (v25 >> 13 != v7 || v22 != v8)
				break;
		LABEL_39:
			v19 = a4a-- == 0;
			if (v19)
				return 1;
			v18 = (int)a7a;
		}
		if (v21 == v28 && v22 == v29)
			return 1;
		v24 = __OFSUB__(v21, v7);
		v23 = v21 - v7 < 0;
		if (v21 > v7)
		{
			++v15;
			v24 = __OFSUB__(v21, v7);
			v23 = v21 - v7 < 0;
		}
		if (v23 ^ v24)
			--v15;
		if (v22 > v8)
			v15 += _4793F8_map_width;
		if (v22 < v8)
			v15 -= _4793F8_map_width;
		v8 = v26 >> 13;
		v7 = v25 >> 13;
		switch (boxd_40ED00(v13, v15))
		{
		case 1:
			if (v13->stru224.field_54)
				goto LABEL_39;
			return 0;
		case 3:
			if (!v13->stru224.field_50)
				goto LABEL_39;
			return 0;
		case 2:
			goto LABEL_39;
		default:
			return 0;
		}
	}
	return 0;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (0041CAC0) --------------------------------------------------------
bool is_game_loading()
{
	return game_load_in_progress;
}
// 479FBC: using guessed type int game_load_in_progress;

//----- (0041CAD0) --------------------------------------------------------
bool is_game_saving()
{
	return game_save_in_progress;
}
// 479FC0: using guessed type int game_save_in_progress;

//----- (0041CAE0) --------------------------------------------------------
bool _41CAE0_prepare_to_load_level(const char *a1, enum LEVEL_ID level)
{
	BOOL result; // eax@3

	if (game_load_in_progress || game_save_in_progress)
	{
		result = 0;
	}
	else
	{
        strcpy(current_savegame_filename, a1);
		game_saveload_level_idx = level;
		game_load_in_progress = 1;
        result = 1;
	}
	return result;
}

//----- (0041CB30) --------------------------------------------------------
bool _41CB30_prepare_to_save_level(const char *a1, enum LEVEL_ID level)
{
	BOOL result; // eax@3

	if (game_load_in_progress || game_save_in_progress)
	{
		result = 0;
	}
	else
	{
        strcpy(current_savegame_filename, a1);
		result = 1;
		game_saveload_level_idx = level;
		game_save_in_progress = 1;
	}
	return result;
}

//----- (0041CB80) --------------------------------------------------------
enum LEVEL_ID get_saveload_level_id()
{
	return game_saveload_level_idx;
}

//----- (0041CB90) --------------------------------------------------------
OilDepositSaveStruct *GAME_Save_PackOilData(size_t *oil_data_size)
{
	OilDeposit *i; // eax@1
	OilDepositSaveStruct *result; // eax@3
	OilDeposit *v3; // edx@5
	OilDepositSaveStruct *j; // ecx@5
	int *v5; // ecx@6

	*oil_data_size = 4;
	for (i = oilspot_list_head; (OilDeposit **)i != &oilspot_list_head; i = i->next)
		*oil_data_size += 16;
	result = (OilDepositSaveStruct *)malloc(*oil_data_size);
	if (result)
	{
		v3 = oilspot_list_head;
		for (j = result; (OilDeposit **)v3 != &oilspot_list_head; j = (OilDepositSaveStruct *)(v5 + 1))
		{
			j->field_0 = v3->oil_left;
			v5 = &j->width_x256;
			*v5 = v3->sprite->x;
			++v5;
			*v5 = v3->sprite->y;
			++v5;
			*v5 = v3->drillrig_entity_id;
			v3 = v3->next;
		}
		j->field_0 = -1;
	}
	else
	{
		errmsg_save[1] = aMemory;
	}
	return result;
}

//----- (0041CC20) --------------------------------------------------------
int GAME_Load_UnpackOilData(OilDepositSaveStruct *a1)
{
	OilDepositSaveStruct *v1; // edi@1
	OilDeposit *v2; // esi@2
	Sprite *v3; // eax@6
	int *v4; // edi@7
	int v5; // eax@7
	int v6; // edx@9
	_DWORD *v7; // edi@9
	int v8; // ecx@9
	int v9; // edx@9
	OilDeposit *v10; // eax@9
	OilDeposit *v11; // ecx@9
	int result; // eax@10

	v1 = a1;
	if (a1->field_0 == -1)
	{
		result = 1;
	}
	else
	{
		while (1)
		{
			v2 = oilspot_list_free_pool;
			if (oilspot_list_free_pool)
				oilspot_list_free_pool = oilspot_list_free_pool->next;
			else
				v2 = 0;
			if (!v2)
				break;
			v3 = sprite_create_scripted(MOBD_OIL_PATCH, 0, UNIT_Handler_OilPatch, SCRIPT_COROUTINE, 0);
			v2->sprite = v3;
			if (!v3)
				break;
			v4 = &v1->width_x256;
			v3->script->param = v2;
			v5 = *(v4 - 1);
			v2->oil_left = v5;
			if (v5 <= 0)
				v2->sprite->drawjob->flags |= 0x40000000u;
			v6 = *v4;
			v7 = v4 + 1;
			v2->sprite->x = v6;
			v8 = *v7;
			++v7;
			v2->sprite->y = v8;
			v9 = *v7;
			v1 = (OilDepositSaveStruct *)(v7 + 1);
			v2->drillrig_entity_id = v9;
			v10 = oildeposit_list_end;
			v11 = oildeposit_list_end->next;
			v2->prev = oildeposit_list_end;
			v2->next = v11;
			v10->next->prev = v2;
			v10->next = v2;
			if (v1->field_0 == -1)
				return 1;
		}
		result = 0;
	}
	return result;
}

//----- (0041CCE0) --------------------------------------------------------
bool GAME_Save_PackEntity(Entity *entity, int save_data, int save_data_size)
{
	Entity *v3; // ebp@1
	EntitySerialized *v4; // ebx@1
	Entity *v5; // eax@1
	int v6; // edx@1
	int v7; // eax@3
	int v8; // ecx@4
	Script *v9; // esi@9
	BOOL result; // eax@10
	int v11; // edx@11
	void(*v12)(Script *); // eax@11
	void **v13; // ecx@12
	int v14; // eax@16
	void(*v15)(Script *, Script *, enum SCRIPT_EVENT, void *); // eax@18
	int v16; // edx@18
	void **v17; // ecx@19
	int v18; // edx@23
	EntityTurret *v19; // eax@25
	int v20; // edx@25
	Script *v21; // edi@26
	void(*v22)(Script *); // eax@28
	void **v23; // ecx@29
	int v24; // eax@33
	void(*v25)(Script *, Script *, enum SCRIPT_EVENT, void *); // eax@35
	int v26; // edx@35
	void **v27; // ecx@36
	int v28; // edx@40
	Entity *v29; // ecx@43
	int v30; // edx@43
	int v31; // eax@44
	void(*v32)(EntityTurret *); // eax@49
	int v33; // edx@49
	void **v34; // ecx@50
	int v35; // eax@54
	void(*v36)(Entity *); // eax@60
	int v37; // edx@60
	void **v38; // ecx@61
	int v39; // eax@65
	int(*v40)(int); // eax@69
	int v41; // edx@69
	void **v42; // ecx@70
	int v43; // eax@74
	void(*v44)(Entity *); // eax@78
	int v45; // edx@78
	void **v46; // ecx@79
	int v47; // eax@83
	int(*v48)(int); // eax@87
	int v49; // edx@87
	void **v50; // ecx@88
	int v51; // eax@92
	void(*v52)(Entity *); // eax@96
	int v53; // edx@96
	void **v54; // ecx@97
	int v55; // eax@101
	void(*v56)(Entity *); // eax@105
	int v57; // edx@105
	void **v58; // ecx@106
	int v59; // eax@110
	void(*v60)(Script *, Script *, enum SCRIPT_EVENT, void *); // eax@114
	int v61; // edx@114
	void **v62; // ecx@115
	int v63; // eax@119
	Entity *v64; // eax@124
	int v65; // edx@124
	int v66; // eax@126
	int v67; // ecx@127
	Entity *v68; // eax@132
	int v69; // edx@132
	int v70; // eax@134
	int v71; // ecx@135
	Entity *v72; // eax@140
	int v73; // edx@140
	int v74; // eax@142
	int v75; // ecx@143
	Entity *v76; // eax@148
	int v77; // ecx@148
	int v78; // eax@150
	int v79; // edx@151
	int v80; // eax@156
	int *v81; // ecx@156
	enum UNIT_ID v82; // eax@158
	char *v83; // ebp@159
	char *v84; // ebx@159
	int v85; // eax@160
	int v86; // edx@160
	int v87; // eax@162
	int v88; // ecx@163
	int v89; // eax@168
	int v90; // edx@168
	int v91; // eax@170
	int v92; // ecx@171
	int v93; // eax@176
	int v94; // edx@176
	int v95; // eax@178
	int v96; // ecx@179
	int *v97; // eax@184
	int v98; // ebp@184
	int v99; // edx@184
	int v100; // ecx@185
	int v101; // ecx@186
	void *v102; // ebp@191
	OilDeposit *v103; // ecx@192
	OilDeposit *v104; // eax@194
	int v105; // edx@194
	OilDeposit *v106; // eax@199
	OilDeposit *v107; // esi@199
	int v108; // eax@201
	Entity *v109; // edx@202
	enum UNIT_ID v110; // eax@207
	void *v111; // eax@210
	int v112; // edx@210
	int v113; // esi@210
	void **v114; // ecx@211
	int v115; // edx@215
	int v116; // eax@217
	int v117; // eax@218
	int v118; // esi@221
	void *v119; // eax@226
	int v120; // edx@226
	void **v121; // ecx@227
	int v122; // eax@231
	void *v123; // eax@233
	int v124; // edx@233
	void **v125; // ecx@234
	int v126; // eax@238
	char *v127; // [sp-4h] [bp-18h]@68
	EntityTurret *v128; // [sp+10h] [bp-4h]@25

	v3 = entity;
	v4 = (EntitySerialized *)save_data;
	v5 = entity->entity_8;
	v6 = entity->entity_118_entity_id;
	if (!v5)
		goto LABEL_8;
	if (v6 != -1)
	{
		v8 = v5->entity_id;
		if (v8 && v8 == v6 && !v5->destroyed)
		{
			v7 = v5->entity_id;
			goto LABEL_9;
		}
	LABEL_8:
		v7 = -1;
		goto LABEL_9;
	}
	v7 = v5->entity_id;
LABEL_9:
	v4->id = v7;
	v9 = v3->script;
	if (v9->routine_type != 1)
	{
		errmsg_save[1] = aTaskIsWrongTyp;
		return 0;
	}
	v11 = 0;
	v4->entity_task_event = v9->script_type;
	v12 = (void(*)(Script *))script_handlers[0];
	if (script_handlers[0] != (void *)-1)
	{
		v13 = script_handlers;
		do
		{
			if (v12 == v9->handler)
				break;
			v12 = (void(*)(Script *))v13[1];
			++v13;
			++v11;
		} while (v12 != (void(*)(Script *)) - 1);
	}
	if (script_handlers[v11] == (void *)-1)
		v14 = 0;
	else
		v14 = v11 + 1;
	v4->entity_task_handler_idx = v14;
	v15 = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))script_handlers[0];
	v16 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v17 = script_handlers;
		do
		{
			if (v15 == v9->event_handler)
				break;
			v15 = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))v17[1];
			++v17;
			++v16;
		} while (v15 != (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *)) - 1);
	}
	if (script_handlers[v16] == (void *)-1)
		v18 = 0;
	else
		v18 = v16 + 1;
	v4->entity_task_message_handler_idx = v18;
	v4->entity_task_field_20 = v9->flags_20;
	v4->entity_task_field_14 = v9->field_14;
	v4->entity_task_field_24 = v9->field_24;
	v4->entity_task_field_28 = v9->field_28;
	v4->entity_task_field_2C = v9->field_2C;
	v4->unit_stats_idx = v3->unit_id;
	v4->player_side = v3->player_side;
	v19 = v3->turret;
	v20 = 0;
	v128 = v19;
	if (v19)
	{
		v21 = v19->sprite_task;
		if (v19->sprite_task->routine_type != 1)
		{
			errmsg_save[1] = aTaskIsWrongTyp;
			return 0;
		}
		v4->turret_sprite_task_event = v21->script_type;
		v22 = (void(*)(Script *))script_handlers[0];
		if (script_handlers[0] != (void *)-1)
		{
			v23 = script_handlers;
			do
			{
				if (v22 == v21->handler)
					break;
				v22 = (void(*)(Script *))v23[1];
				++v23;
				++v20;
			} while (v22 != (void(*)(Script *)) - 1);
		}
		if (script_handlers[v20] == (void *)-1)
			v24 = 0;
		else
			v24 = v20 + 1;
		v4->turret_sprite_task_handler_idx = v24;
		v25 = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))script_handlers[0];
		v26 = 0;
		if (script_handlers[0] != (void *)-1)
		{
			v27 = script_handlers;
			do
			{
				if (v25 == v21->event_handler)
					break;
				v25 = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))v27[1];
				++v27;
				++v26;
			} while (v25 != (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *)) - 1);
		}
		if (script_handlers[v26] == (void *)-1)
			v28 = 0;
		else
			v28 = v26 + 1;
		v4->turret_sprite_task_message_handler_idx = v28;
		v4->turret_sprite_task_field_20 = v21->flags_20;
		v4->turret_sprite_task_field_14 = v21->field_14;
		v4->turret_sprite_task_field_24 = v21->field_24;
		v4->turret_sprite_task_field_28 = v21->field_28;
		v4->turret_sprite_task_field_2C = v21->field_2C;
		result = GAME_Save_PackSprite(v128->turret_sprite, &v4->turret_sprite);
		if (!result)
			return result;
		v29 = v128->_C_entity;
		v30 = v128->_C_entity_idx;
		if (!v29 || (v31 = v29->entity_id, v30 != -1) && (!v31 || v31 != v30 || v29->destroyed))
			v31 = -1;
		v4->turret_C_entity_id = v31;
		v32 = (void(*)(EntityTurret *))script_handlers[0];
		v33 = 0;
		if (script_handlers[0] != (void *)-1)
		{
			v34 = script_handlers;
			do
			{
				if (v32 == v128->handler)
					break;
				v32 = (void(*)(EntityTurret *))v34[1];
				++v34;
				++v33;
			} while (v32 != (void(*)(EntityTurret *)) - 1);
		}
		if (script_handlers[v33] == (void *)-1)
			v35 = 0;
		else
			v35 = v33 + 1;
		v4->turret_mode = v35;
		if (!v35)
		{
			sprintf(byte_479EF8, aUnitDS, v3->unit_id, aUnknownTurretM);
		LABEL_224:
			errmsg_save[1] = byte_479EF8;
			return 0;
		}
		v4->turret_mobd_lookup_id = v128->mobd_lookup_id;
		v4->turret_field_18 = v128->field_18;
		v4->turret_field_1C = v128->field_1C;
		v4->turret_field_20 = v128->field_20;
		v4->turret_field_2C = v128->field_2C;
		v4->turret_entity__or__C_entity_id = v128->_C_entity_idx;
		v4->turret_field_34 = v128->field_34;
	}
	else
	{
		v4->turret_sprite_task_handler_idx = 0;
	}
	v36 = (void(*)(Entity *))script_handlers[0];
	v37 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v38 = script_handlers;
		do
		{
			if (v36 == v3->mode)
				break;
			v36 = (void(*)(Entity *))v38[1];
			++v38;
			++v37;
		} while (v36 != (void(*)(Entity *)) - 1);
	}
	if (script_handlers[v37] == (void *)-1)
		v39 = 0;
	else
		v39 = v37 + 1;
	v4->entity_mode = v39;
	if (!v39)
	{
		v127 = aUnknownMode;
	LABEL_223:
		sprintf(byte_479EF8, aUnitDS, v3->unit_id, v127);
		goto LABEL_224;
	}
	v40 = (int(*)(int))script_handlers[0];
	v41 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v42 = script_handlers;
		do
		{
			if (v40 == v3->mode_idle)
				break;
			v40 = (int(*)(int))v42[1];
			++v42;
			++v41;
		} while (v40 != (int(*)(int)) - 1);
	}
	if (script_handlers[v41] == (void *)-1)
		v43 = 0;
	else
		v43 = v41 + 1;
	v4->entity_mode_idle = v43;
	if (!v43)
	{
		sprintf(byte_479EF8, aUnitDS, v3->unit_id, aUnknownIdleMod);
		goto LABEL_224;
	}
	v44 = (void(*)(Entity *))script_handlers[0];
	v45 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v46 = script_handlers;
		do
		{
			if (v44 == v3->mode_arrive)
				break;
			v44 = (void(*)(Entity *))v46[1];
			++v46;
			++v45;
		} while (v44 != (void(*)(Entity *)) - 1);
	}
	if (script_handlers[v45] == (void *)-1)
		v47 = 0;
	else
		v47 = v45 + 1;
	v4->entity_mode_arrive = v47;
	if (!v47)
	{
		sprintf(byte_479EF8, aUnitDS, v3->unit_id, aUnknownArriveM);
		goto LABEL_224;
	}
	v48 = (int(*)(int))script_handlers[0];
	v49 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v50 = script_handlers;
		do
		{
			if (v48 == v3->mode_attacked)
				break;
			v48 = (int(*)(int))v50[1];
			++v50;
			++v49;
		} while (v48 != (int(*)(int)) - 1);
	}
	if (script_handlers[v49] == (void *)-1)
		v51 = 0;
	else
		v51 = v49 + 1;
	v4->entity_mode_attacked = v51;
	if (!v51)
	{
		v127 = aUnknownAttacke;
		goto LABEL_223;
	}
	v52 = (void(*)(Entity *))script_handlers[0];
	v53 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v54 = script_handlers;
		do
		{
			if (v52 == v3->mode_return)
				break;
			v52 = (void(*)(Entity *))v54[1];
			++v54;
			++v53;
		} while (v52 != (void(*)(Entity *)) - 1);
	}
	if (script_handlers[v53] == (void *)-1)
		v55 = 0;
	else
		v55 = v53 + 1;
	v4->entity_mode_return = v55;
	if (!v55)
	{
		sprintf(byte_479EF8, aUnitDS, v3->unit_id, aUnknownReturnM);
		goto LABEL_224;
	}
	v56 = (void(*)(Entity *))script_handlers[0];
	v57 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v58 = script_handlers;
		do
		{
			if (v56 == v3->mode_turn_return)
				break;
			v56 = (void(*)(Entity *))v58[1];
			++v58;
			++v57;
		} while (v56 != (void(*)(Entity *)) - 1);
	}
	if (script_handlers[v57] == (void *)-1)
		v59 = 0;
	else
		v59 = v57 + 1;
	v4->entity_mode_turn_return = v59;
	if (!v59)
	{
		sprintf(byte_479EF8, aUnitDS, v3->unit_id, aUnknownTurnRet);
		goto LABEL_224;
	}
	v60 = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))script_handlers[0];
	v61 = 0;
	if (script_handlers[0] != (void *)-1)
	{
		v62 = script_handlers;
		do
		{
			if (v60 == v3->event_handler)
				break;
			v60 = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))v62[1];
			++v62;
			++v61;
		} while (v60 != (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *)) - 1);
	}
	if (script_handlers[v61] == (void *)-1)
		v63 = 0;
	else
		v63 = v61 + 1;
	v4->entity_message_handler_idx = v63;
	if (!v63)
	{
		v127 = aUnknownMessage;
		goto LABEL_223;
	}
	result = GAME_Save_PackSprite(v3->sprite, &v4->entity_sprite);
	if (!result)
		return result;
	v4->entity_field_78 = v3->field_78;
	v4->entity_mobd_idx = (MOBD_ID)v3->current_mobd_lookup_idx;
	v4->entity_field_80 = v3->field_80;
	v4->entity_field_84 = v3->field_84;
	v4->entity_field_88 = v3->_88_dst_orientation;
	v4->entity_hitpoints = v3->hitpoints;
	v4->entity_field_94 = v3->field_94;
	v4->entity_98__465610_damage_multipliers_idx = v3->_98_465610_accuracy_dmg_bonus_idx;
	v4->entity_9C_hp_regen_condition = v3->_9C_hp_regen_condition;
	v4->entity_A0_hp_regen_condition = v3->_A0_hp_regen_condition;
	v4->field_A4 = v3->field_A4;
	v4->entity_sprite_width_shr13 = v3->sprite_map_x;
	v4->entity_sprite_height_shr13 = v3->sprite_map_y;
	v4->entity_sprite_width = v3->sprite_x;
	v4->entity_sprite_height = v3->sprite_y;
	v4->field_B8 = v3->field_B8;
	v4->field_BC = v3->field_BC;
	v4->field_C0 = v3->_C0_mobd_anim_speed_related;
	v4->field_C4 = v3->field_C4;
	v4->field_C8 = v3->field_C8;
	v4->field_CC = v3->field_CC;
	v4->field_D0 = v3->field_D0;
	v4->field_D4 = v3->field_D4;
	v4->field_D8 = v3->field_D8;
	v4->field_DC = v3->_DC_order;
	v64 = v3->_E0_current_attack_target;
	v65 = v3->_E0_current_attack_target_entity_id;
	if (!v64)
		goto LABEL_243;
	if (v65 == -1)
	{
		v66 = v64->entity_id;
		goto LABEL_132;
	}
	v67 = v64->entity_id;
	if (v67 && v67 == v65 && !v64->destroyed)
		v66 = v64->entity_id;
	else
		LABEL_243:
	v66 = -1;
LABEL_132:
	v4->entity_EC_outpost_clanhall_entity_id = v66;
	v68 = v3->_E4_prev_attack_target;
	v69 = v3->_E4_prev_attack_target_entity_id;
	if (!v68)
		goto LABEL_139;
	if (v69 != -1)
	{
		v71 = v68->entity_id;
		if (v71 && v71 == v69 && !v68->destroyed)
		{
			v70 = v68->entity_id;
			goto LABEL_140;
		}
	LABEL_139:
		v70 = -1;
		goto LABEL_140;
	}
	v70 = v68->entity_id;
LABEL_140:
	v4->entity_E4_entity_id = v70;
	v4->_E0_current_attack_target_entity_id = v3->_E0_current_attack_target_entity_id;
	v4->_E4_prev_attack_target_entity_id = v3->_E4_prev_attack_target_entity_id;
	v4->entity_F4_entity_118_entity_id = v3->entity_118_entity_id;
	v4->entity_sprite_width_2 = v3->sprite_x_2;
	v4->entity_sprite_height_2 = v3->sprite_y_2;
	v72 = v3->entity_118;
	v73 = v3->entity_118_entity_id;
	if (!v72)
		goto LABEL_244;
	if (v73 == -1)
	{
		v74 = v72->entity_id;
		goto LABEL_148;
	}
	v75 = v72->entity_id;
	if (v75 && v75 == v73 && !v72->destroyed)
		v74 = v72->entity_id;
	else
		LABEL_244:
	v74 = -1;
LABEL_148:
	v4->entity_entity_118_entity_id = v74;
	v4->entity_field_11C = v3->_11C__infantry_sprite_y___drillrig_oil_spot;
	v4->entity_field_120 = v3->_120__infantry_sprite_x;
	v4->entity_field_124 = v3->field_124;
	v4->entity_field_128 = (int)v3->_128_spawn_param;
	v4->entity_field_12C = v3->_12C_prison_bunker_spawn_type;
	v4->entity_entity_id = v3->entity_id;
	v4->entity_field_134 = v3->_134_param__unitstats_after_mobile_outpost_plant;
	v4->entity_field_138 = v3->field_138;
	v4->entity_field_13C = v3->field_13C;
	v4->entity_field_140 = v3->field_140;
	v4->entity_field_144 = v3->field_144;
	v4->entity_field_148 = v3->field_148;
	v4->entity_field_14C = v3->field_14C;
	v4->entity_field_150 = v3->field_150;
	v4->entity_field_154 = v3->field_154;
	v4->entity_field_158 = v3->field_158;
	memcpy(v4->entity_array_15C, v3->array_15C, sizeof(v4->entity_array_15C));
	memcpy(v4->entity_array_184, v3->array_184, sizeof(v4->entity_array_184));
	memcpy(v4->entity_array_1AC, v3->array_1AC, sizeof(v4->entity_array_1AC));
	memcpy(v4->entity_array_1D4, v3->array_1D4, sizeof(v4->entity_array_1D4));
	memcpy(v4->entity_array_1FC, v3->array_1FC, sizeof(v4->entity_array_1FC));
	memcpy(v4->entity_array_224, &v3->stru224, sizeof(v4->entity_array_224));
	v76 = v3->entity_27C;
	v77 = v3->entity_27C_entity_id;
	if (!v76)
		goto LABEL_155;
	if (v77 != -1)
	{
		v79 = v76->entity_id;
		if (v79 && v79 == v77 && !v76->destroyed)
		{
			v78 = v76->entity_id;
			goto LABEL_156;
		}
	LABEL_155:
		v78 = -1;
		goto LABEL_156;
	}
	v78 = v76->entity_id;
LABEL_156:
	v4->entity_27C_entity_id = v78;
	v4->entity_27C_entity_id_2 = v3->entity_27C_entity_id;
	v80 = 0;
	v81 = v4->entity_array_294;
	do
	{
		*v81 = v3->array_294[v80++];
		++v81;
	} while (v80 < 7);
	LOWORD_HEXRAYS(v4->entity_array_294[7]) = v3->field_29C;
	HIWORD_HEXRAYS(v4->entity_array_294[7]) = HIWORD_HEXRAYS(v3->field_29C);
	v4->field_2E8 = v3->field_2A0;
	v4->field_2EA = HIWORD_HEXRAYS(v3->field_2A0);
	v82 = v3->unit_id;
	switch (v82)
	{
	case 0x17u:
	case 0x18u:
		v83 = (char *)v3->state;
		v84 = (char *)&v4->field_2EC;
		if (!v83)
		{
			*(_DWORD *)v84 = -67108864;
			return 1;
		}
		*(_DWORD *)v84 = *(_DWORD *)v83;
		v85 = *((_DWORD *)v83 + 1);
		v86 = *((_DWORD *)v83 + 6);
		if (!v85)
			goto LABEL_167;
		if (v86 == -1)
		{
			v87 = *(_DWORD *)(v85 + 304);
		}
		else
		{
			v88 = *(_DWORD *)(v85 + 304);
			if (!v88 || v88 != v86 || *(_DWORD *)(v85 + 140))
				LABEL_167:
			v87 = -1;
			else
				v87 = *(_DWORD *)(v85 + 304);
		}
		*((_DWORD *)v84 + 1) = v87;
		v89 = *((_DWORD *)v83 + 2);
		v90 = *((_DWORD *)v83 + 5);
		if (!v89)
			goto LABEL_175;
		if (v90 == -1)
		{
			v91 = *(_DWORD *)(v89 + 304);
		}
		else
		{
			v92 = *(_DWORD *)(v89 + 304);
			if (!v92 || v92 != v90 || *(_DWORD *)(v89 + 140))
				LABEL_175:
			v91 = -1;
			else
				v91 = *(_DWORD *)(v89 + 304);
		}
		*((_DWORD *)v84 + 2) = v91;
		v93 = *((_DWORD *)v83 + 3);
		v94 = *((_DWORD *)v83 + 4);
		if (!v93)
			goto LABEL_183;
		if (v94 == -1)
		{
			v95 = *(_DWORD *)(v93 + 304);
		}
		else
		{
			v96 = *(_DWORD *)(v93 + 304);
			if (!v96 || v96 != v94 || *(_DWORD *)(v93 + 140))
				LABEL_183:
			v95 = -1;
			else
				v95 = *(_DWORD *)(v93 + 304);
		}
		*((_DWORD *)v84 + 3) = v95;
		*((_DWORD *)v84 + 4) = *((_DWORD *)v83 + 4);
		*((_DWORD *)v84 + 5) = *((_DWORD *)v83 + 5);
		*((_DWORD *)v84 + 6) = *((_DWORD *)v83 + 6);
		*((_DWORD *)v84 + 7) = *((_DWORD *)v83 + 7);
		v97 = (int *)(v84 + 32);
		v98 = v83 - v84;
		v99 = 20;
		do
		{
			v100 = *(int *)((char *)v97 + v98);
			if (v100)
				v101 = *(_DWORD *)(v100 + 304);
			else
				v101 = -1;
			*v97 = v101;
			++v97;
			--v99;
		} while (v99);
		return 1;
	case 0x19u:
		v102 = v3->state;
		v4->field_2EC = *(_DWORD *)v102;
		v4[1].id = *((_DWORD *)v102 + 1);
		v4[1].entity_task_event = (SCRIPT_TYPE)*((_DWORD *)v102 + 2);
		return 1;
	case 0x2Eu:
	case 0x2Fu:
	case 0x30u:
	case 0x31u:
	case 0x32u:
	case 0x33u:
	case 0x3Au:
	case 0x3Bu:
	case 0x3Cu:
	case 0x3Du:
	case 0x3Eu:
	case 0x3Fu:
	case 0x40u:
	case 0x41u:
	case 0x42u:
		v103 = (OilDeposit *)v3->state;
		if (v82 == 46 || v82 == 47)
		{
			v104 = oilspot_list_head;
			v105 = 0;
			if ((OilDeposit **)oilspot_list_head == &oilspot_list_head)
			{
			LABEL_197:
				v105 = -1;
			}
			else
			{
				while (v104 != v103->next)
				{
					v104 = v104->next;
					++v105;
					if ((OilDeposit **)v104 == &oilspot_list_head)
						goto LABEL_197;
				}
			}
			v4->field_2EC = v105;
		}
		v4[1].id = (int)v103->prev;
		v4[1].entity_task_event = (enum SCRIPT_TYPE)(int)v103->sprite;
		LOWORD_HEXRAYS(v4[1].entity_task_handler_idx) = v103->oil_left;
		HIWORD_HEXRAYS(v4[1].entity_task_handler_idx) = HIWORD_HEXRAYS(v103->oil_left);
		v106 = v103[1].next;
		v107 = v103[1].prev;
		if (!v106)
			goto LABEL_206;
		if (v107 == (OilDeposit *)-1)
		{
			v108 = (int)v106[12].drillrig;
		}
		else
		{
			v109 = v106[12].drillrig;
			if (!v109 || (OilDeposit *)v109 != v107 || v106[5].drillrig_entity_id)
				LABEL_206:
			v108 = -1;
			else
				v108 = (int)v106[12].drillrig;
		}
		v4[1].entity_task_message_handler_idx = v108;
		v4[1].entity_task_field_20 = (int)v103[1].prev;
		v4[1].entity_task_field_14 = v103[1].oil_left;
		v110 = v3->unit_id;
		if (v110 != 65 && v110 != 66 || !v103->sprite)
			goto LABEL_225;
		v111 = script_handlers[0];
		v112 = 0;
		v113 = v103->next[2].oil_left;
		if (script_handlers[0] != (void *)-1)
		{
			v114 = script_handlers;
			do
			{
				if (v111 == *(void **)v113)
					break;
				v111 = v114[1];
				++v114;
				++v112;
			} while (v111 != (void *)-1);
		}
		if (script_handlers[v112] == (void *)-1)
			v115 = 0;
		else
			v115 = v112 + 1;
		v4[1].entity_task_field_24 = v115;
		v4[1].entity_task_field_28 = *(_DWORD *)(v113 + 4);
		v4[1].entity_task_field_2C = *(_DWORD *)(v113 + 8);
		v4[1].unit_stats_idx = (UNIT_ID)*(_DWORD *)(v113 + 12);
		v116 = *(_DWORD *)(v113 + 16);
		if (v116)
			v117 = *(_DWORD *)(v116 + 304);
		else
			v117 = -1;
		v4[1].player_side = v117;
		result = GAME_Save_PackSprite(*(Sprite **)(v113 + 24), (SpriteSerialized *)&v4[1].turret_sprite_task_event);
		if (result)
		{
			v118 = *(_DWORD *)(v113 + 28);
			if (*(_DWORD *)(v118 + 24) != 1)
			{
				errmsg_save[1] = aTaskIsWrongTyp;
				v127 = aBadUpgradeTask;
				goto LABEL_223;
			}
			v4[1].turret_sprite.y = *(_DWORD *)(v118 + 12);
			v119 = script_handlers[0];
			v120 = 0;
			if (script_handlers[0] != (void *)-1)
			{
				v121 = script_handlers;
				do
				{
					if (v119 == *(void **)(v118 + 64))
						break;
					v119 = v121[1];
					++v121;
					++v120;
				} while (v119 != (void *)-1);
			}
			if (script_handlers[v120] == (void *)-1)
				v122 = 0;
			else
				v122 = v120 + 1;
			v4[1].turret_sprite.z_index = v122;
			v123 = script_handlers[0];
			v124 = 0;
			if (script_handlers[0] != (void *)-1)
			{
				v125 = script_handlers;
				do
				{
					if (v123 == *(void **)(v118 + 52))
						break;
					v123 = v125[1];
					++v125;
					++v124;
				} while (v123 != (void *)-1);
			}
			if (script_handlers[v124] == (void *)-1)
				v126 = 0;
			else
				v126 = v124 + 1;
			v4[1].turret_sprite.x_speed = v126;
			v4[1].turret_sprite.y_speed = *(_DWORD *)(v118 + 32);
			v4[1].turret_sprite.z_speed = *(_DWORD *)(v118 + 20);
			v4[1].turret_sprite._inside_mobd_item = *(_DWORD *)(v118 + 36);
			v4[1].turret_sprite._54_inside_mobd_ptr4 = *(_DWORD *)(v118 + 40);
			v4[1].turret_sprite._60_mobd_anim_speed = *(_DWORD *)(v118 + 44);
			result = 1;
		}
		break;
	default:
	LABEL_225:
		result = 1;
		break;
	}
	return result;
}

//----- (0041DA20) --------------------------------------------------------
bool GAME_Save_PackSprite(Sprite *a1, SpriteSerialized *out)
{
    DataMobdItem_stru0 **v2; // eax@1
	DataMobdItem_stru0 *v3; // eax@4
	BOOL result; // eax@5

	out->mobd_idx = a1->mobd_id;
	out->x = a1->x;
	out->y = a1->y;
	out->z_index = a1->z_index;
	out->x_speed = a1->x_speed;
	out->y_speed = a1->y_speed;
	out->z_speed = a1->z_speed;
	v2 = a1->_inside_mobd_item;
	if (v2)
		out->_inside_mobd_item = (unsigned int)v2 - (unsigned int)currently_running_lvl_mobd[out->mobd_idx].items;
	else
		out->_inside_mobd_item = -1;
	v3 = a1->_54_inside_mobd_ptr4;
	if (v3)
	{
		out->_54_inside_mobd_ptr4 = (char *)v3 - (char *)currently_running_lvl_mobd[out->mobd_idx].items;
		out->_60_mobd_anim_speed = a1->_60_mobd_anim_speed;
		result = 1;
	}
	else
	{
		out->_54_inside_mobd_ptr4 = -1;
		out->_60_mobd_anim_speed = a1->_60_mobd_anim_speed;
		result = 1;
	}
	return result;
}

//----- (0041DAA0) --------------------------------------------------------
bool GAME_Load_UnpackEntity(Entity *a1, EntitySerialized *save_data)
{
	EntitySerialized *v2; // ebp@1
	Entity *v3; // ebx@1
	Entity *v4; // eax@2
	unsigned int v5; // eax@6
	BOOL result; // eax@8
	unsigned int v7; // ecx@12
	int v8; // ecx@14
	int v9; // eax@19
	EntityTurret *v10; // edi@20
	unsigned int v11; // eax@21
	unsigned int v12; // ecx@27
	int v13; // ecx@29
	enum UNIT_ID v14; // eax@34
	int v15; // ecx@38
	Entity *v16; // eax@39
	unsigned int v17; // eax@43
	unsigned int v18; // eax@50
	void(*v19)(Entity *); // eax@52
	unsigned int v20; // eax@56
	int(*v21)(int); // eax@58
	unsigned int v22; // eax@60
	void(*v23)(Entity *); // eax@62
	unsigned int v24; // eax@64
	int(*v25)(int); // eax@66
	unsigned int v26; // eax@68
	void(*v27)(Entity *); // eax@70
	unsigned int v28; // eax@72
	void(*v29)(Entity *); // eax@74
	unsigned int v30; // eax@76
	void(*v31)(Script *, Script *, enum SCRIPT_EVENT, void *); // eax@78
	int v32; // ecx@80
	Entity *v33; // eax@81
	int v34; // ecx@85
	Entity *v35; // eax@86
	int v36; // ecx@90
	Entity *v37; // eax@91
	int v38; // ecx@95
	Entity *v39; // eax@96
	int v40; // eax@100
	int *v41; // esi@100
	char v42; // dl@101
	char *v43; // esi@103
	int v44; // edx@105
	Entity *v45; // ecx@106
	enum SCRIPT_TYPE v46; // edx@110
	Entity *v47; // ecx@111
	int v48; // edx@115
	Entity *v49; // ecx@116
	char *v50; // edx@120
	int v51; // esi@120
	int v52; // edi@120
	int v53; // ecx@121
	Entity *v54; // eax@122
	Sprite *v55; // eax@128
	void *v56; // esi@132
	enum UNIT_ID v57; // eax@134
	OilDeposit *v58; // eax@136
	int v59; // ecx@136
	int v60; // eax@143
	enum UNIT_ID v61; // ecx@143
	int v62; // ecx@148
	Entity *v63; // eax@149
	int v64; // edx@153
	int k; // edi@155
	Script *v66; // eax@156
	enum UNIT_ID v67; // eax@159
	unsigned int v68; // eax@162
	void(*v69)(Script *); // edx@164
	Script *v70; // edi@167
	Script *v71; // eax@168
	unsigned int v72; // ecx@169
	void(*v73)(Script *, Script *, enum SCRIPT_EVENT, void *); // ecx@171
	BOOL v74; // esi@177
	unsigned int v75; // eax@178
	int v76; // eax@180
	int v77; // ecx@182
	Entity *v78; // eax@183
	DataMobdItem_stru1 *v79; // ecx@189
	int v80; // eax@190
	DataMobdItem_stru1 *v81; // ecx@195
	int i; // eax@196
	int j; // esi@200
	Script *v84; // eax@201
	EntityTurret *v85; // ebx@209
	int v86; // [sp-8h] [bp-1Ch]@128
	int *a2a; // [sp+10h] [bp-4h]@148

	v2 = save_data;
	v3 = a1;
	if (save_data->id == -1 || (v4 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
	{
	LABEL_5:
		v4 = 0;
	}
	else
	{
		while (v4->entity_id != save_data->id)
		{
			v4 = v4->next;
			if ((Entity **)v4 == &entity_list_head)
				goto LABEL_5;
		}
	}
	a1->entity_8 = v4;
	v5 = save_data->entity_task_handler_idx;
	if (v5 < 1 || v5 > num_script_handlers)
		result = 0;
	else
		result = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v5];
	if (result)
	{
		result = (BOOL)script_create_function(save_data->entity_task_event, (void(*)(Script *))result);
		if (result)
		{
			v7 = v2->entity_task_message_handler_idx;
			if (v7 < 1 || v7 > num_script_handlers)
				v8 = 0;
			else
				v8 = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v7];
			*(_DWORD *)(result + 52) = v8;
			*(_DWORD *)(result + 32) = v2->entity_task_field_20;
			*(_DWORD *)(result + 20) = v2->entity_task_field_14;
			*(_DWORD *)(result + 36) = v2->entity_task_field_24;
			*(_DWORD *)(result + 40) = v2->entity_task_field_28;
			*(_DWORD *)(result + 44) = v2->entity_task_field_2C;
		}
	}
	v3->script = (Script *)result;
	if (result)
	{
		result = (BOOL)GAME_Load_UnpackSprite(&v2->entity_sprite);
		v3->sprite = (Sprite *)result;
		if (result)
		{
			v3->script->sprite = (Sprite *)result;
			v3->sprite->script = v3->script;
			v3->sprite->param = v3;
			v3->script->param = v3;
			v3->unit_id = v2->unit_stats_idx;
			v9 = v2->player_side;
			v3->player_side = (PLAYER_SIDE)v9;
			v3->sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[v9]];
			v3->sprite->drawjob->flags |= 0x10000000u;
			v3->stats = &unit_stats[v3->unit_id];
			if (v2->turret_sprite_task_handler_idx)
			{
				result = (BOOL)script_create_local_object(v3->script, 56);
				v10 = (EntityTurret *)result;
				if (!result)
					return result;
				v3->turret = (EntityTurret *)result;
				*(_DWORD *)(result + 8) = (int)v3;
				*(_DWORD *)(result + 40) = (int)v3->stats->attach;
				v11 = v2->turret_sprite_task_handler_idx;
				if (v11 < 1 || v11 > num_script_handlers)
					result = 0;
				else
					result = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v11];
				if (result)
				{
					result = (BOOL)script_create_function(v2->turret_sprite_task_event, (void(*)(Script *))result);
					if (result)
					{
						v12 = v2->turret_sprite_task_message_handler_idx;
						if (v12 < 1 || v12 > num_script_handlers)
							v13 = 0;
						else
							v13 = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v12];
						*(_DWORD *)(result + 52) = v13;
						*(_DWORD *)(result + 32) = v2->turret_sprite_task_field_20;
						*(_DWORD *)(result + 20) = v2->turret_sprite_task_field_14;
						*(_DWORD *)(result + 36) = v2->turret_sprite_task_field_24;
						*(_DWORD *)(result + 40) = v2->turret_sprite_task_field_28;
						*(_DWORD *)(result + 44) = v2->turret_sprite_task_field_2C;
					}
				}
				v10->sprite_task = (Script *)result;
				if (!result)
					return result;
				result = (BOOL)GAME_Load_UnpackSprite(&v2->turret_sprite);
				v10->turret_sprite = (Sprite *)result;
				if (!result)
					return result;
				v10->sprite_task->sprite = (Sprite *)result;
				v10->turret_sprite->script = v10->sprite_task;
				v10->sprite_task->param = v10;
				v10->turret_sprite->param = v10;
				v10->turret_sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[v3->player_side]];
				v10->turret_sprite->drawjob->flags |= 0x10000000u;
				v14 = v3->unit_id;
				if (v14 == 44 || v14 == 43)
					v10->turret_sprite->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_448580_entity_aircraft_turret;
				else
					v10->turret_sprite->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_44BDC0_entity_turret;
				v10->turret_sprite->parent = v3->sprite;
				v15 = v2->turret_C_entity_id;
				if (v15 == -1 || (v16 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_42:
					v16 = 0;
				}
				else
				{
					while (v16->entity_id != v15)
					{
						v16 = v16->next;
						if ((Entity **)v16 == &entity_list_head)
							goto LABEL_42;
					}
				}
				v10->_C_entity = v16;
				v17 = v2->turret_mode;
				if (v17 < 1 || v17 > num_script_handlers)
					result = 0;
				else
					result = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v17];
				v10->handler = (void(*)(EntityTurret *))result;
				if (!result)
					return result;
				v10->mobd_lookup_id = v2->turret_mobd_lookup_id;
				v10->field_18 = v2->turret_field_18;
				v10->field_1C = v2->turret_field_1C;
				v10->field_20 = v2->turret_field_20;
				v10->field_2C = v2->turret_field_2C;
				v10->_C_entity_idx = v2->turret_entity__or__C_entity_id;
				v10->field_34 = v2->turret_field_34;
			}
			else
			{
				v3->turret = 0;
			}
			v18 = v2->entity_mode;
			if (v18 < 1 || v18 > num_script_handlers)
				v19 = 0;
			else
				v19 = *(void(**)(Entity *))&aWb__AND__handlers_minus1_indexer[4 * v18];
			v3->mode = v19;
			if (!v19)
				return 0;
			v20 = v2->entity_mode_idle;
			if (v20 < 1 || v20 > num_script_handlers)
				v21 = 0;
			else
				v21 = *(int(**)(int))&aWb__AND__handlers_minus1_indexer[4 * v20];
			v3->mode_idle = v21;
			v22 = v2->entity_mode_arrive;
			if (v22 < 1 || v22 > num_script_handlers)
				v23 = 0;
			else
				v23 = *(void(**)(Entity *))&aWb__AND__handlers_minus1_indexer[4 * v22];
			v3->mode_arrive = v23;
			v24 = v2->entity_mode_attacked;
			if (v24 < 1 || v24 > num_script_handlers)
				v25 = 0;
			else
				v25 = *(int(**)(int))&aWb__AND__handlers_minus1_indexer[4 * v24];
			v3->mode_attacked = v25;
			v26 = v2->entity_mode_return;
			if (v26 < 1 || v26 > num_script_handlers)
				v27 = 0;
			else
				v27 = *(void(**)(Entity *))&aWb__AND__handlers_minus1_indexer[4 * v26];
			v3->mode_return = v27;
			v28 = v2->entity_mode_turn_return;
			if (v28 < 1 || v28 > num_script_handlers)
				v29 = 0;
			else
				v29 = *(void(**)(Entity *))&aWb__AND__handlers_minus1_indexer[4 * v28];
			v3->mode_turn_return = v29;
			v30 = v2->entity_message_handler_idx;
			if (v30 < 1 || v30 > num_script_handlers)
				v31 = 0;
			else
				v31 = *(void(**)(Script *, Script *, enum SCRIPT_EVENT, void *))&aWb__AND__handlers_minus1_indexer[4 * v30];
			v3->event_handler = v31;
			memset(&v3->_24_ai_node_per_player_side, 0, sizeof(v3->_24_ai_node_per_player_side));
			memset32(&v3->stru60, (int)&entity_default_stru60_ptr, 6u);
			v3->field_78 = v2->entity_field_78;
			v3->current_mobd_lookup_idx = v2->entity_mobd_idx;
			v3->field_80 = v2->entity_field_80;
			v3->field_84 = v2->entity_field_84;
			v3->_88_dst_orientation = v2->entity_field_88;
			v3->destroyed = 0;
			v3->hitpoints = v2->entity_hitpoints;
			v3->field_94 = v2->entity_field_94;
			v3->_98_465610_accuracy_dmg_bonus_idx = v2->entity_98__465610_damage_multipliers_idx;
			v3->_9C_hp_regen_condition = v2->entity_9C_hp_regen_condition;
			v3->_A0_hp_regen_condition = v2->entity_A0_hp_regen_condition;
			v3->field_A4 = v2->field_A4;
			v3->sprite_map_x = v2->entity_sprite_width_shr13;
			v3->sprite_map_y = v2->entity_sprite_height_shr13;
			v3->sprite_x = v2->entity_sprite_width;
			v3->sprite_y = v2->entity_sprite_height;
			v3->field_B8 = v2->field_B8;
			v3->field_BC = v2->field_BC;
			v3->_C0_mobd_anim_speed_related = v2->field_C0;
			v3->field_C4 = v2->field_C4;
			v3->field_C8 = v2->field_C8;
			v3->field_CC = v2->field_CC;
			v3->field_D0 = v2->field_D0;
			v3->field_D4 = v2->field_D4;
			v3->field_D8 = v2->field_D8;
			v3->_DC_order = (ENTITY_ORDER)v2->field_DC;
			v32 = v2->entity_EC_outpost_clanhall_entity_id;
			if (v32 == -1 || (v33 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_84:
				v33 = 0;
			}
			else
			{
				while (v33->entity_id != v32)
				{
					v33 = v33->next;
					if ((Entity **)v33 == &entity_list_head)
						goto LABEL_84;
				}
			}
			v3->_E0_current_attack_target = v33;
			v34 = v2->entity_E4_entity_id;
			if (v34 == -1 || (v35 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_89:
				v35 = 0;
			}
			else
			{
				while (v35->entity_id != v34)
				{
					v35 = v35->next;
					if ((Entity **)v35 == &entity_list_head)
						goto LABEL_89;
				}
			}
			v3->_E4_prev_attack_target = v35;
			v3->_E8_entity = 0;
			v3->_E0_current_attack_target_entity_id = v2->_E0_current_attack_target_entity_id;
			v3->_E4_prev_attack_target_entity_id = v2->_E4_prev_attack_target_entity_id;
			v3->entity_118_entity_id = v2->entity_F4_entity_118_entity_id;
			v3->_E8_entity_id = 0;
			v3->sprite_x_2 = v2->entity_sprite_width_2;
			v3->sprite_y_2 = v2->entity_sprite_height_2;
			v3->stru11_list_104 = (stru11unit *)&v3->stru11_list_104;
			v3->stru11_list_108 = (stru11unit *)&v3->stru11_list_104;
			v3->field_110 = 0;
			v36 = v2->entity_entity_118_entity_id;
			if (v36 == -1 || (v37 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_94:
				v37 = 0;
			}
			else
			{
				while (v37->entity_id != v36)
				{
					v37 = v37->next;
					if ((Entity **)v37 == &entity_list_head)
						goto LABEL_94;
				}
			}
			v3->entity_118 = v37;
			v3->_11C__infantry_sprite_y___drillrig_oil_spot = v2->entity_field_11C;
			v3->_120__infantry_sprite_x = v2->entity_field_120;
			v3->field_124 = v2->entity_field_124;
			v3->_128_spawn_param = (void *)v2->entity_field_128;
			v3->_12C_prison_bunker_spawn_type = v2->entity_field_12C;
			v3->_134_param__unitstats_after_mobile_outpost_plant = v2->entity_field_134;
			v3->field_138 = v2->entity_field_138;
			v3->field_13C = v2->entity_field_13C;
			v3->field_140 = v2->entity_field_140;
			v3->field_144 = v2->entity_field_144;
			v3->field_148 = v2->entity_field_148;
			v3->field_14C = v2->entity_field_14C;
			v3->field_150 = v2->entity_field_150;
			v3->field_154 = v2->entity_field_154;
			v3->field_158 = v2->entity_field_158;
			memcpy(v3->array_15C, v2->entity_array_15C, sizeof(v3->array_15C));
			memcpy(v3->array_184, v2->entity_array_184, sizeof(v3->array_184));
			memcpy(v3->array_1AC, v2->entity_array_1AC, sizeof(v3->array_1AC));
			memcpy(v3->array_1D4, v2->entity_array_1D4, sizeof(v3->array_1D4));
			memcpy(v3->array_1FC, v2->entity_array_1FC, sizeof(v3->array_1FC));
			memcpy(&v3->stru224, v2->entity_array_224, sizeof(v3->stru224));
			v38 = v2->entity_27C_entity_id;
			if (v38 == -1 || (v39 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_99:
				v39 = 0;
			}
			else
			{
				while (v39->entity_id != v38)
				{
					v39 = v39->next;
					if ((Entity **)v39 == &entity_list_head)
						goto LABEL_99;
				}
			}
			v3->entity_27C = v39;
			v3->entity_27C_entity_id = v2->entity_27C_entity_id_2;
			v40 = 0;
			v41 = v2->entity_array_294;
			do
			{
				v42 = *(_BYTE *)v41;
				++v41;
				v3->array_294[v40++] = v42;
			} while (v40 < 7);
			LOWORD_HEXRAYS(v3->field_29C) = v2->entity_array_294[7];
			HIWORD_HEXRAYS(v3->field_29C) = HIWORD_HEXRAYS(v2->entity_array_294[7]);
			LOWORD_HEXRAYS(v3->field_2A0) = v2->field_2E8;
			HIWORD_HEXRAYS(v3->field_2A0) = v2->field_2EA;
			switch (v3->unit_id)
			{
			case 0x17u:
			case 0x18u:
				v43 = (char *)&v2->field_2EC;
				if (v2->field_2EC == -67108864)
				{
					v3->state = 0;
					entity_set_draw_handlers(v3);
					v3->sprite->field_88_unused = 1;
					v55 = v3->sprite;
					v86 = v55->y;
				LABEL_207:
					entity_40DE80_boxd(v3, v55->x, v86, 0);
					goto LABEL_208;
				}
				result = (BOOL)script_create_local_object(v3->script, 116);
				if (result)
				{
					v3->state = (void *)result;
					*(_DWORD *)result = *(_DWORD *)v43;
					v44 = v2[1].id;
					if (v44 == -1 || (v45 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
					{
					LABEL_109:
						v45 = 0;
					}
					else
					{
						while (v45->entity_id != v44)
						{
							v45 = v45->next;
							if ((Entity **)v45 == &entity_list_head)
								goto LABEL_109;
						}
					}
					*(_DWORD *)(result + 4) = (int)v45;
					v46 = v2[1].entity_task_event;
					if (v46 == -1 || (v47 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
					{
					LABEL_114:
						v47 = 0;
					}
					else
					{
						while (v47->entity_id != v46)
						{
							v47 = v47->next;
							if ((Entity **)v47 == &entity_list_head)
								goto LABEL_114;
						}
					}
					*(_DWORD *)(result + 8) = (int)v47;
					v48 = v2[1].entity_task_handler_idx;
					if (v48 == -1 || (v49 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
					{
					LABEL_119:
						v49 = 0;
					}
					else
					{
						while (v49->entity_id != v48)
						{
							v49 = v49->next;
							if ((Entity **)v49 == &entity_list_head)
								goto LABEL_119;
						}
					}
					*(_DWORD *)(result + 12) = (int)v49;
					*(_DWORD *)(result + 16) = v2[1].entity_task_message_handler_idx;
					*(_DWORD *)(result + 20) = v2[1].entity_task_field_20;
					*(_DWORD *)(result + 24) = v2[1].entity_task_field_14;
					*(_DWORD *)(result + 28) = v2[1].entity_task_field_24;
					v50 = (char *)(result + 32);
					v51 = (int)&v43[-result];
					v52 = 20;
					while (1)
					{
						v53 = *(_DWORD *)&v50[v51];
						if (v53 == -1 || (v54 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
						{
						LABEL_125:
							v54 = 0;
						}
						else
						{
							while (v54->entity_id != v53)
							{
								v54 = v54->next;
								if ((Entity **)v54 == &entity_list_head)
									goto LABEL_125;
							}
						}
						*(_DWORD *)v50 = (int)v54;
						v50 += 4;
						if (!--v52)
						{
							entity_oil_tanker_initialize_state(v3);
							goto LABEL_131;
						}
					}
				}
				return result;
			case 0x19u:
				result = (BOOL)script_create_local_object(v3->script, 12);
				if (!result)
					return result;
				v3->state = (void *)result;
				*(_DWORD *)result = v2->field_2EC;
				*(_DWORD *)(result + 4) = v2[1].id;
				*(_DWORD *)(result + 8) = v2[1].entity_task_event;
				entity_set_draw_handlers(v3);
			LABEL_131:
				v3->sprite->field_88_unused = 1;
				v55 = v3->sprite;
				v86 = v55->y;
				goto LABEL_207;
			case 0x2Eu:
			case 0x2Fu:
			case 0x30u:
			case 0x31u:
			case 0x32u:
			case 0x33u:
			case 0x3Au:
			case 0x3Bu:
			case 0x3Cu:
			case 0x3Du:
			case 0x3Eu:
			case 0x3Fu:
			case 0x40u:
			case 0x41u:
			case 0x42u:
				v56 = script_create_local_object(v3->script, 40);
				if (!v56)
					return 0;
				v57 = v3->unit_id;
				v3->state = v56;
				if (v57 != 46 && v57 != 47)
					goto LABEL_143;
				v58 = oilspot_list_head;
				v59 = 0;
				if ((OilDeposit **)oilspot_list_head == &oilspot_list_head)
					goto LABEL_139;
				break;
			case 0x34u:
			case 0x35u:
			case 0x36u:
			case 0x37u:
			case 0x38u:
			case 0x39u:
				v3->state = 0;
				entity_set_draw_handlers(v3);
				v81 = v3->sprite->_54_inside_mobd_ptr4->field_18;
				if (v81)
				{
					for (i = v81->field_0; i != -1; v81 = (DataMobdItem_stru1 *)((char *)v81 + 16))
					{
						if (i == 3)
							v3->stru60.ptr_C = v81;
						i = v81->field_10;
					}
				}
				for (j = 0; j < (int)v3->_128_spawn_param; ++j)
				{
					v84 = script_create_coroutine(SCRIPT_TYPE_INVALID, script_4188F0, 0);
					if (v84)
						v84->param = v3;
				}
				goto LABEL_204;
			case 0x2Bu:
			case 0x2Cu:
				v3->sprite->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_448510_aircraft;
				entity_401070_stru31(v3);
				v3->state = 0;
				entity_410CF0_aircraft(v3);
				goto LABEL_208;
			default:
				v3->state = 0;
				entity_set_draw_handlers(v3);
				v3->sprite->field_88_unused = 1;
				v55 = v3->sprite;
				v86 = v55->y;
				goto LABEL_207;
			}
			while (v59 != v2->field_2EC)
			{
				v58 = v58->next;
				++v59;
				if ((OilDeposit **)v58 == &oilspot_list_head)
				{
				LABEL_139:
					v58 = 0;
					break;
				}
			}
			if (v58)
				v58->drillrig = v3;
			*(_DWORD *)v56 = (int)v58;
		LABEL_143:
			v60 = v2[1].id;
			*((_DWORD *)v56 + 1) = v60;
			v61 = v3->unit_id;
			if ((v61 == 58 || v61 == 59) && v3->player_side == player_side && v60 > 1)
				sub_447000();
			a2a = (int *)((char *)v56 + 8);
			*((_DWORD *)v56 + 2) = v2[1].entity_task_event;
			*((_WORD *)v56 + 6) = v2[1].entity_task_handler_idx;
			*((_WORD *)v56 + 7) = HIWORD_HEXRAYS(v2[1].entity_task_handler_idx);
			*((_DWORD *)v56 + 4) = 0;
			v62 = v2[1].entity_task_message_handler_idx;
			if (v62 == -1 || (v63 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_152:
				v63 = 0;
			}
			else
			{
				while (v63->entity_id != v62)
				{
					v63 = v63->next;
					if ((Entity **)v63 == &entity_list_head)
						goto LABEL_152;
				}
			}
			*((_DWORD *)v56 + 6) = (int)v63;
			*((_DWORD *)v56 + 7) = v2[1].entity_task_field_20;
			entity_410DC0_building(v3);
			v64 = v2[1].entity_task_field_14;
			*((_DWORD *)v56 + 8) = 0;
			*((_DWORD *)v56 + 9) = v64;
			if (v3->player_side == player_side)
				building_limits_on_new_building(v3->unit_id);
			for (k = 0; k < *((_DWORD *)v56 + 9); ++k)
			{
				v66 = script_create_coroutine(SCRIPT_TYPE_INVALID, script_418A10, 0);
				if (v66)
					v66->param = v3;
			}
			v67 = v3->unit_id;
			if (v67 != 65 && v67 != 66 || !*a2a)
				goto LABEL_189;
			v68 = v2[1].turret_sprite.z_index;
			if (v68 < 1 || v68 > num_script_handlers)
				v69 = 0;
			else
				v69 = *(void(**)(Script *))&aWb__AND__handlers_minus1_indexer[4 * v68];
			if (v69)
			{
				v71 = script_create_function((enum SCRIPT_TYPE)v2[1].turret_sprite.y, v69);
				if (v71)
				{
					v72 = v2[1].turret_sprite.x_speed;
					if (v72 < 1 || v72 > num_script_handlers)
						v73 = 0;
					else
						v73 = *(void(**)(Script *, Script *, enum SCRIPT_EVENT, void *))&aWb__AND__handlers_minus1_indexer[4 * v72];
					v71->event_handler = v73;
					v71->flags_20 = v2[1].turret_sprite.y_speed;
					v71->field_14 = v2[1].turret_sprite.z_speed;
					v71->field_24 = v2[1].turret_sprite._inside_mobd_item;
					v71->field_28 = v2[1].turret_sprite._54_inside_mobd_ptr4;
					v71->field_2C = v2[1].turret_sprite._60_mobd_anim_speed;
				}
				v70 = v71;
			}
			else
			{
				v70 = 0;
			}
			if (!v70)
				return 0;
			*(_DWORD *)v56 = (int)v70;
			result = (BOOL)script_create_local_object(v70, 32);
			v74 = result;
			if (result)
			{
				*(_DWORD *)(result + 28) = (int)v70;
				v75 = v2[1].entity_task_field_24;
				if (v75 < 1 || v75 > num_script_handlers)
					v76 = 0;
				else
					v76 = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v75];
				*(_DWORD *)v74 = v76;
				*(_DWORD *)(v74 + 4) = v2[1].entity_task_field_28;
				*(_DWORD *)(v74 + 8) = v2[1].entity_task_field_2C;
				*(_DWORD *)(v74 + 12) = v2[1].unit_stats_idx;
				v77 = v2[1].player_side;
				if (v77 == -1 || (v78 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_186:
					v78 = 0;
				}
				else
				{
					while (v78->entity_id != v77)
					{
						v78 = v78->next;
						if ((Entity **)v78 == &entity_list_head)
							goto LABEL_186;
					}
				}
				*(_DWORD *)(v74 + 16) = (int)v78;
				result = (BOOL)GAME_Load_UnpackSprite((SpriteSerialized *)&v2[1].turret_sprite_task_event);
				*(_DWORD *)(v74 + 24) = result;
				if (result)
				{
					*(_DWORD *)(result + 124) = (int)a2a;
					*(_DWORD *)(*(_DWORD *)(v74 + 24) + 8) = (int)a2a;
					v70->param = (void *)v74;
					v3->sprite->parent = *(Sprite **)(*(_DWORD *)(v74 + 16) + 304);
					stru37_list_427D80_enqueue_item(
						(int *)(4 * v3->player_side + 4704680),
						a2a,
						300,
						42,
						v3->script,
						*(void **)(v74 + 16),
						-1);
					v3->sprite->parent = *(Sprite **)(*(_DWORD *)(v74 + 16) + 304);
				LABEL_189:
					v79 = v3->sprite->_54_inside_mobd_ptr4->field_18;
					if (v79 && (v80 = v79->field_0, v79->field_0 != -1))
					{
						do
						{
							if (v80 == 3)
								v3->stru60.ptr_C = v79;
							v80 = v79->field_10;
							v79 = (DataMobdItem_stru1 *)((char *)v79 + 16);
						} while (v80 != -1);
						entity_40DD00_boxd(v3);
					}
					else
					{
					LABEL_204:
						entity_40DD00_boxd(v3);
					}
				LABEL_208:
					if (entity_402AC0_is_mode_402AB0(v3))
					{
						v85 = v3->turret;
						if (v85)
							v85->turret_sprite->drawjob->flags |= 0x40000000u;
					}
					return 1;
				}
			}
		}
	}
	return result;
}
// 46560C: using guessed type int num_script_handlers;

//----- (0041E8E0) --------------------------------------------------------
Sprite *GAME_Load_UnpackSprite(SpriteSerialized *serialized)
{
	SpriteSerialized *v1; // edi@1
	Sprite *v2; // eax@1
	Sprite *v3; // esi@1
	int v4; // edx@2
	int v5; // eax@3
    DataMobdItem_stru0 **v7; // eax@4
	DataMobdItem_stru0 *v8; // edx@5
    DataMobdItem_stru0 **v9; // eax@5
	int v11; // eax@7
	char *v12; // eax@8

	v1 = serialized;
	v2 = sprite_create(serialized->mobd_idx, 0, 0);
	v3 = v2;
	if (!v2)
		return v3;
	v2->x = v1->x;
	v2->y = v1->y;
	v2->z_index = v1->z_index;
	v2->x_speed = v1->x_speed;
	v2->y_speed = v1->y_speed;
	v2->z_speed = v1->z_speed;
	v4 = v1->_inside_mobd_item;
	if (v4 == -1)
	{
		v11 = v1->_54_inside_mobd_ptr4;
		if (v11 != -1)
		{
			v12 = (char *)currently_running_lvl_mobd[v1->mobd_idx].items + v11;
			v3->_54_inside_mobd_ptr4 = (DataMobdItem_stru0 *)v12;
			v3->pstru58 = (Sprite_stru58 *)*((_DWORD *)v12 + 4);
		}
		goto LABEL_9;
	}
	sprite_load_mobd(v2, v4);
	v5 = v1->_54_inside_mobd_ptr4;
	if (v5 == -1)
	{
	LABEL_9:
		v3->_60_mobd_anim_speed  = v1->_60_mobd_anim_speed;
		return v3;
	}
	v7 = v3->_inside_mobd_item + 1;
	v3->_54_inside_mobd_ptr4 = (DataMobdItem_stru0 *)&currently_running_lvl_mobd[v1->mobd_idx].items->_[v5 / 4];
	v3->_inside_mobd_item_2 = v7;
	if (v7[0] != v3->_54_inside_mobd_ptr4)
	{
		do
		{
			v8 = v3->_54_inside_mobd_ptr4;
			v9 = v3->_inside_mobd_item_2 + 1;
			v3->_inside_mobd_item_2 = v9;
		} while (v9[0] != v8);
	}
	v3->pstru58 = (Sprite_stru58 *)v3->_54_inside_mobd_ptr4->ptr_10;
	v3->_60_mobd_anim_speed  = v1->_60_mobd_anim_speed;
	return v3;
}

//----- (0041E9B0) --------------------------------------------------------
char *GAME_Save_PackProductionInfo(size_t *size)
{
	size_t *v1; // ebx@1
	ProductionGroup **v2; // esi@1
	ProductionGroup *i; // edx@2
	ProductionGroup *v4; // eax@3
	char *result; // eax@7
	ProductionGroup **v6; // ecx@9
	ProductionGroup *v7; // edx@10
	char *v8; // ebp@10
	ProductionGroup *v9; // ecx@11
	Entity *v10; // esi@11
	int v11; // esi@12
	char *v12; // esi@14
	ProductionGroup **v13; // [sp+10h] [bp-Ch]@9
	char *v14; // [sp+14h] [bp-8h]@10
	char *v15; // [sp+18h] [bp-4h]@7

	v1 = size;
	*size = 20;
	v2 = &_47C798_infantry_production_group_first;
	do
	{
		for (i = v2[1]; (ProductionGroup **)i != v2; i = i->prev)
		{
			v4 = (ProductionGroup *)i->prev_option;
			for (*size += 16; (ProductionOption **)v4 != &i->next_option; v4 = v4->prev)
				*size += 24;
		}
		v2 += 19;
	} while ((int)v2 < (int) & _47C914_sidebar);
	result = (char *)malloc(*size);
	v15 = result;
	if (result)
	{
		v6 = &_47C798_infantry_production_group_first;
		v13 = &_47C798_infantry_production_group_first;
		do
		{
			v7 = v6[1];
			v8 = result;
			*(_DWORD *)result = 0;
			result += 4;
			v14 = v8;
			if ((ProductionGroup **)v7 != v6)
			{
				do
				{
					v9 = (ProductionGroup *)v7->prev_option;
					++*(_DWORD *)v8;
					v10 = v7->_C_entity;
					if (v10)
						v11 = v10->entity_id;
					else
						v11 = -1;
					*(_DWORD *)result = v11;
					*((_DWORD *)result + 1) = v7->group_id;
					*((_DWORD *)result + 2) = v7->_44_mobd_lookup_idx;
					v12 = result + 12;
					result += 16;
					*(_DWORD *)v12 = 0;
					if ((ProductionOption **)v9 != &v7->next_option)
					{
						do
						{
							result += 24;
							++*(_DWORD *)v12;
							*((_DWORD *)result - 6) = (int)v9->_C_entity;
							*((_DWORD *)result - 5) = (int)v9->sidebar;
							*((_DWORD *)result - 4) = (int)v9->next_option;
							*((_DWORD *)result - 3) = (int)v9->prev_option;
							*((_DWORD *)result - 2) = v9->field_24;
							*((_DWORD *)result - 1) = v9->field_28;
							v9 = v9->prev;
						} while ((ProductionOption **)v9 != &v7->next_option);
						v8 = v14;
					}
					v7 = v7->prev;
					v6 = v13;
				} while ((ProductionGroup **)v7 != v13);
			}
			v6 += 19;
			v13 = v6;
		} while ((int)v6 < (int) & _47C914_sidebar);
		result = (char *)(&v15[4 * *v1] >= result ? (unsigned int)v15 : 0);
	}
	else
	{
		errmsg_save[1] = aMemory;
	}
	return result;
}

//----- (0041EAF0) --------------------------------------------------------
bool GAME_Load_UnpackProductionInfo(void *a1)
{
	int v1; // esi@1
	void *v2; // ebx@1
	_DWORD *v3; // eax@2
	ProductionGroup *v4; // edi@3
	Entity *v5; // eax@8
	_DWORD *v6; // eax@16
	__int32 v7; // ecx@21
	ProductionOption *v8; // ebp@21
	int v9; // edx@21
	int v10; // eax@21
	Entity *v11; // ecx@21
	ProductionGroup **v12; // ecx@22
	ProductionGroup *v13; // eax@22
	ProductionGroup *v14; // edx@23
	ProductionGroup **v15; // eax@28
	ProductionGroup *v16; // edx@28
	Entity *v17; // ecx@29
	enum UNIT_ID v18; // eax@29
	ProductionOption *v19; // esi@34
	int v20; // edx@37
	int v21; // eax@37
	ProductionOption *v22; // eax@39
	int v24; // [sp+10h] [bp-14h]@1
	int v25; // [sp+14h] [bp-10h]@31
	_DWORD *v26; // [sp+18h] [bp-Ch]@3
	int v27; // [sp+1Ch] [bp-8h]@2
	_DWORD *v28; // [sp+20h] [bp-4h]@2

	v1 = 0;
	v2 = a1;
	v24 = 0;
	while (1)
	{
		v3 = (int *)v2;
		v2 = (char *)v2 + 4;
		v28 = v3;
		v27 = 0;
		if (*v3 > 0)
			break;
	LABEL_42:
		v24 = ++v1;
		if (v1 >= 5)
			return 1;
	}
	while (1)
	{
		v4 = production_group_free_pool;
		v26 = (int *)v2;
		if (production_group_free_pool)
			production_group_free_pool = production_group_free_pool->next;
		else
			v4 = 0;
		if (!v4)
			return 0;
		if (*(_DWORD *)v2 == -1 || (v5 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
		{
		LABEL_11:
			v5 = 0;
		}
		else
		{
			while (v5->entity_id != *(_DWORD *)v2)
			{
				v5 = v5->next;
				if ((Entity **)v5 == &entity_list_head)
					goto LABEL_11;
			}
		}
		v4->_C_entity = v5;
		switch (v1)
		{
		case 2:
			_47B3D0_building_production_group = v4;
			break;
		case 3:
			_47B3B8_tower_production_group = v4;
			break;
		case 4:
			_47B3D4_aircraft_production_group = v4;
			break;
		default:
			if (v5)
			{
				v6 = (int *)v5->state;
				if (!v6)
					return 0;
				v6[4] = (int)v4;
			}
			break;
		}
		v7 = *((_DWORD *)v2 + 1);
		v8 = (ProductionOption *)&v4->next_option;
		v4->group_id = (PRODUCTION_GROUP_ID)v7;
		v4->_44_mobd_lookup_idx = *((_DWORD *)v2 + 2);
		v9 = v7;
		v10 = v4->_44_mobd_lookup_idx + 16 * v7;
		v11 = v4->_C_entity;
		v4->prev_option = (ProductionOption *)&v4->next_option;
		v8->next = v8;
		v4->field_20 = -1;
		v4->field_40 = v10;
		if (entity_check_type(v11, v9)
			&& (v12 = &(&_47C798_infantry_production_group_first)[v4->group_id],
				v13 = (&_47C798_infantry_production_group_first)[v4->group_id],
				(ProductionGroup **)v13 != v12))
		{
			v14 = (&_47C798_infantry_production_group_first)[v4->group_id];
			if ((ProductionGroup **)v13 != v12)
			{
				do
				{
					if (v13->_C_entity->unit_id == 61)
						break;
					v14 = v13;
					v13 = v13->next;
				} while ((ProductionGroup **)v13 != v12);
				v1 = v24;
			}
			v14->next = v4;
			v4->prev = v14;
			v4->next = v13;
			v13->prev = v4;
		}
		else
		{
			v15 = &(&_47C798_infantry_production_group_first)[v1];
			v16 = (&_47C798_infantry_production_group_first)[v1];
			v4->next = v16;
			v4->prev = (ProductionGroup *)v15;
			v16->prev = v4;
			*v15 = v4;
		}
		v17 = v4->_C_entity;
		v18 = v17->unit_id;
		if ((int)v18 < 58 || (int)v18 > 62)
			return 0;
		entity_410950(v17, LOBYTE_HEXRAYS(_4701B8_mobd_lookups_per_ProductionGroup_field44[2 * v4->_44_mobd_lookup_idx]));
		v4->sprite = 0;
		v2 = (char *)v2 + 16;
		v25 = 0;
		if (v26[3] > 0)
		{
			do
			{
				if (v8->next == v8)
					script_trigger_event(0, EVT_MSG_1514, 0, _47CA18_sidebar_production_buttons[v4->group_id]->task);
				v19 = production_option_list_free_pool;
				if (production_option_list_free_pool)
					production_option_list_free_pool = production_option_list_free_pool->next;
				else
					v19 = 0;
				v19->field_2C = v4->field_40;
				v19->stru21prod_unit_id = (enum UNIT_ID)(int)v4->_C_entity;
				v19->unit_id = (UNIT_ID)*(_DWORD *)v2;
				v19->mobd_lookup_table_offset = *((_DWORD *)v2 + 1);
				v19->field_18 = *((_DWORD *)v2 + 3);
				v20 = *((_DWORD *)v2 + 4);
				v19->cost = v20;
				v19->production_time_x60 = *((_DWORD *)v2 + 5);
				v21 = *((_DWORD *)v2 + 2);
				v19->_14_pcost = v21;
				if (v21 > 0)
					stru37_list_427EB0_enqueue_infantry(
					(int *)&game_globals_per_player + *(_DWORD *)(v19->stru21prod_unit_id + 20),
						&v19->_14_pcost,
						v19->cost,
						(v20 << 8) / v19->production_time_x60,
						task_mobd17_cursor,
						v19,
						v19->field_2C);
				v19->field_1C = 0;
				v19->field_20 = 0;
				v19->prev = v8;
				v22 = v8->next;
				v19->next = v8->next;
				v2 = (char *)v2 + 24;
				v22->prev = v19;
				v8->next = v19;
				++v25;
			} while (v25 < v26[3]);
			v1 = v24;
		}
		if (++v27 >= *v28)
			goto LABEL_42;
	}
}

//----- (0041ED90) --------------------------------------------------------
void sub_41ED90(void *a1, stru24_struC *a2)
{
	int v2; // eax@1
	int v3; // esi@2
	Entity *v4; // esi@4
	int v5; // eax@8
	int v6; // eax@9
	int v7; // eax@10

	*(_DWORD *)a1 = 0;
	v2 = a2->field_8;
	if (v2)
	{
		v3 = *(_DWORD *)(v2 + 12);
		if (v3 == v2 + 12)
		{
			*((_DWORD *)a1 + 2) = -2;
		}
		else
		{
			v4 = *(Entity **)(v3 + 12);
			if (v4)
				*((_DWORD *)a1 + 2) = v4->entity_id;
			else
				*((_DWORD *)a1 + 2) = -1;
		}
	}
	else
	{
		*((_DWORD *)a1 + 2) = -1;
	}
	v5 = a2->field_24;
	if (v5 && (v6 = *(_DWORD *)(v5 + 8)) != 0)
		v7 = *(_DWORD *)(v6 + 304);
	else
		v7 = -1;
	*((_DWORD *)a1 + 1) = v7;
	*((_DWORD *)a1 + 3) = a2->field_28;
	*((_DWORD *)a1 + 4) = a2->field_2C;
	*((_DWORD *)a1 + 5) = a2->field_30;
	*((_DWORD *)a1 + 6) = a2->field_34;
	*((_DWORD *)a1 + 7) = a2->field_38;
	*((_DWORD *)a1 + 8) = a2->field_3C;
	*((_DWORD *)a1 + 9) = a2->field_40;
}

//----- (0041EE20) --------------------------------------------------------
void sub_41EE20(stru24 *a1, int a2, stru24_stru160 *a3)
{
	Entity *v3; // eax@1
	int v4; // edi@1
	Entity *v5; // esi@2
	int v6; // edi@6
	int v7; // eax@12
	stru24_stru160 *v8; // edi@13
	stru24_stru160 *v9; // eax@13
	char *v10; // edi@19
	stru24_EnemyNode *v11; // ecx@19
	int v12; // ecx@24
	int v13; // edx@26

	v3 = entity_list_head;
	v4 = *(_DWORD *)(a2 + 4);
	if (v4 == -1 || (v5 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
	{
	LABEL_5:
		v5 = 0;
	}
	else
	{
		while (v5->entity_id != v4)
		{
			v5 = v5->next;
			if ((Entity **)v5 == &entity_list_head)
				goto LABEL_5;
		}
	}
	v6 = *(_DWORD *)(a2 + 8);
	if (v6 == -1 || (Entity **)entity_list_head == &entity_list_head)
	{
	LABEL_10:
		v3 = 0;
	}
	else
	{
		while (v3->entity_id != v6)
		{
			v3 = v3->next;
			if ((Entity **)v3 == &entity_list_head)
				goto LABEL_10;
		}
	}
	if (v3 && (v7 = v3->_24_ai_node_per_player_side._0_ai_node_per_player_side[a1->_2A0_player_side]) != 0)
	{
		v8 = *(stru24_stru160 **)(v7 + 8);
		v9 = a3;
		if (v8)
		{
			a3->field_8 = v8;
			goto LABEL_19;
		}
	}
	else
	{
		if (v6 == -2)
		{
			v9 = a3;
			a3->field_8 = a1->field_24C;
			goto LABEL_19;
		}
		v9 = a3;
	}
	v9->field_8 = 0;
LABEL_19:
	v10 = (char *)&a1->enemy_list_108;
	v9->field_24 = 0;
	v11 = a1->enemy_list_108;
	if ((char *)v11 != v10)
	{
		while ((Entity *)v11->entity->entity_id != v5)
		{
			v11 = v11->next;
			if ((char *)v11 == v10)
				goto LABEL_24;
		}
		v9->field_24 = v11;
	}
LABEL_24:
	v9->field_28 = *(_DWORD *)(a2 + 12);
	v9->field_2C = *(_DWORD *)(a2 + 16);
	v12 = *(_DWORD *)(a2 + 20);
	v9->field_30 = v12;
	if (v12 < 0)
		v9->field_30 = 0;
	v9->x_offset = *(_DWORD *)(a2 + 24);
	v9->y_offset = *(_DWORD *)(a2 + 28);
	v9->field_3C = *(_DWORD *)(a2 + 32);
	v13 = *(_DWORD *)(a2 + 36);
	v9->field_1C = 0;
	v9->field_40 = v13;
	v9->_C_next = &v9->_C_next;
	v9->_10_prev = &v9->_C_next;
}

//----- (0041EF20) --------------------------------------------------------
void *GAME_Save_PackAiPlayers(size_t *size)
{
	Script **v1; // ebp@1
	stru24 *v2; // ebx@3
	stru24 *i; // eax@3
	stru24 *j; // edx@5
	stru24_struC *v5; // eax@6
	int v6; // esi@7
	void **v7; // eax@7
	stru24_WandererNode *k; // eax@10
	stru24_stru40 *l; // eax@12
	stru24_AttackerNode *m; // eax@14
	stru24_AttackerNode *n; // eax@16
	stru24_stru94 *ii; // eax@18
	stru24_PowerPlantNode *jj; // eax@20
	stru24_DrillRigNode *kk; // edx@22
	stru24_stru160 *v15; // eax@23
	int v16; // esi@24
	void **v17; // eax@24
	stru24_OilTankerNode **ll; // eax@26
	stru24_OilTankerNode *mm; // eax@29
	stru24 *nn; // esi@31
	stru24_struC **i1; // eax@32
	stru24 *i2; // esi@35
	stru24_struC **i3; // eax@36
	stru24 *i4; // esi@39
	stru24_struC **i5; // eax@40
	stru24_stru160 *v26; // eax@43
	int v27; // edx@44
	stru24_stru160 *v28; // eax@44
	stru24_stru26C *i6; // eax@46
	stru24_stru310 *i7; // eax@48
	int i8; // eax@50
	void *result; // eax@53
	int v33; // ecx@55
	void *i19; // ebx@55
	int v35; // edx@56
	Script *v36; // eax@56
	stru24 *v37; // esi@57
	void *v38; // ebp@57
	void(*v39)(Script *); // eax@57
	int v40; // edi@57
	void(*v41)(Script *); // edx@58
	void **v42; // ecx@58
	int v43; // eax@62
	stru24 *i9; // eax@65
	stru24 *v45; // edi@67
	void *v46; // eax@68
	stru24_struC *v47; // edx@68
	_DWORD *v48; // esi@69
	stru24_struC *v49; // eax@69
	int v50; // ecx@69
	int v51; // eax@69
	stru24 *i10; // eax@75
	stru24 *i11; // eax@77
	stru24 *i12; // eax@79
	stru24 *i13; // eax@81
	stru24 *i14; // eax@83
	stru24 *i15; // eax@85
	stru24_DrillRigNode *v58; // edi@87
	int v59; // eax@88
	void *v60; // ecx@88
	stru24_PowerPlantNode *v61; // eax@90
	Entity *v62; // eax@91
	int v63; // eax@95
	int v64; // eax@95
	stru24_struC *v65; // edx@95
	_DWORD *v66; // esi@96
	stru24_stru160 *v67; // eax@96
	int v68; // ecx@96
	stru24_stru160 *v69; // eax@96
	stru24_DrillRigNode *i16; // eax@100
	stru24 *i17; // eax@103
	stru24_struC *i18; // edi@105
	_DWORD *v73; // esi@106
	stru24_struC *v74; // eax@106
	stru24_struC *i20; // edi@109
	_DWORD *v76; // esi@110
	stru24_struC *v77; // eax@110
	stru24_struC *v78; // edx@113
	stru24_stru160 *v79; // eax@114
	int v80; // ecx@114
	stru24_stru160 *v81; // eax@114
	stru24 *v82; // ecx@118
	stru24_struC *v83; // edi@118
	_DWORD *v84; // esi@119
	stru24_struC *v85; // eax@119
	stru24_stru26C *i21; // eax@123
	stru24_stru310 *i22; // ecx@127
	stru24_stru310 *i23; // ecx@129
	int v89; // edx@130
	int v90; // edx@131
	Script *v91; // ecx@134
	_DWORD *v92; // ecx@135
	stru24 *v93; // [sp+10h] [bp-30h]@57
	int v94; // [sp+14h] [bp-2Ch]@55
	_DWORD *v95; // [sp+18h] [bp-28h]@95
	char *v96; // [sp+1Ch] [bp-24h]@87
	void *v97; // [sp+20h] [bp-20h]@53
	int v98[7]; // [sp+24h] [bp-1Ch]@57

	*size = 0;
	v1 = task_ai_players;
	do
	{
		if (*v1)
		{
			v2 = (stru24 *)(*v1)->param;
			*size += 284;
			for (i = (stru24 *)v2->enemy_list_108; (stru24_EnemyNode **)i != &v2->enemy_list_108; i = i->next)
				*size += 4;
			for (j = v2->next; j != v2; j = j->next)
			{
				*size += 44;
				v5 = j->struC;
				if (v5)
				{
					v6 = (int)&v5->_C_param;
					v7 = (void **)v5->_C_param;
					if (v7 != (void **)v6)
					{
						do
						{
							*size += 4;
							v7 = (void **)*v7;
						} while (v7 != &j->struC->_C_param);
					}
				}
			}
			for (k = v2->wanderer_list_18; (stru24_WandererNode **)k != &v2->wanderer_list_18; k = k->next)
				*size += 4;
			for (l = v2->list_40_30; (stru24_stru40 **)l != &v2->list_40_30; l = l->next)
				*size += 4;
			for (m = v2->attacker_list_48; (stru24_AttackerNode **)m != &v2->attacker_list_48; m = m->next)
				*size += 4;
			for (n = v2->marshalling_nodes_list__evmission8_only_60;
				(stru24_AttackerNode **)n != &v2->marshalling_nodes_list__evmission8_only_60;
				n = n->next)
			{
				*size += 4;
			}
			for (ii = v2->list_94_78; (stru24_stru94 **)ii != &v2->list_94_78; ii = ii->next)
				*size += 20;
			for (jj = v2->power_plant_list_F4; (stru24_PowerPlantNode **)jj != &v2->power_plant_list_F4; jj = jj->next)
				*size += 4;
			for (kk = v2->drill_rig_list_9C; (stru24_DrillRigNode **)kk != &v2->drill_rig_list_9C; kk = kk->next)
			{
				*size += 60;
				v15 = kk->pstru24_stru160;
				if (v15)
				{
					v16 = (int)&v15->_C_next;
					v17 = (void **)v15->_C_next;
					if (v17 != (void **)v16)
					{
						do
						{
							*size += 4;
							v17 = (void **)*v17;
						} while (v17 != &kk->pstru24_stru160->_C_next);
					}
				}
				for (ll = &kk->_8_next->next; ll != &kk->_8_next; ll = (stru24_OilTankerNode **)*ll)
					*size += 4;
			}
			for (mm = v2->tanker_list_DC; (stru24_OilTankerNode **)mm != &v2->tanker_list_DC; mm = mm->next)
				*size += 4;
			for (nn = (stru24 *)v2->list_11C; (stru24_stru160 **)nn != &v2->list_11C; nn = nn->next)
			{
				*size += 40;
				for (i1 = &nn->struC->next; i1 != &nn->struC; i1 = (stru24_struC **)*i1)
					*size += 4;
			}
			for (i2 = (stru24 *)v2->field_168; (int *)i2 != &v2->field_168; i2 = i2->next)
			{
				*size += 40;
				for (i3 = &i2->struC->next; i3 != &i2->struC; i3 = (stru24_struC **)*i3)
					*size += 4;
			}
			for (i4 = (stru24 *)v2->list_1B4; (stru24_stru160 **)i4 != &v2->list_1B4; i4 = i4->next)
			{
				*size += 40;
				for (i5 = &i4->struC->next; i5 != &i4->struC; i5 = (stru24_struC **)*i5)
					*size += 4;
			}
			v26 = v2->field_24C;
			if (v26)
			{
				v27 = (int)&v26->_C_next;
				v28 = (stru24_stru160 *)v26->_C_next;
				if (v28 != (stru24_stru160 *)v27)
				{
					do
					{
						*size += 4;
						v28 = v28->next;
					} while (v28 != (stru24_stru160 *)((char *)v2->field_24C + 12));
				}
			}
			for (i6 = v2->list_260; (stru24_stru26C **)i6 != &v2->list_260; i6 = i6->next)
				*size += 4;
			for (i7 = v2->list_310_2EC; (stru24_stru310 **)i7 != &v2->list_310_2EC; i7 = i7->next)
				*size += 28;
			for (i8 = (int)v2->list_318; (stru24_stru310 **)i8 != &v2->list_318; i8 = *(_DWORD *)i8)
				*size += 28;
		}
		++v1;
	} while ((int)v1 < (int)&unk_4778EC);
	result = malloc(*size);
	v97 = result;
	if (!result)
	{
		errmsg_save[1] = aMemory;
		return result;
	}
	v33 = 0;
	i19 = result;
	v94 = 0;
	while (1)
	{
		v35 = v33;
		v36 = task_ai_players[v33];
		if (v36)
			break;
	LABEL_140:
		v94 = ++v33;
		if (v33 >= 7)
			return v97;
	}
	v37 = (stru24 *)v36->param;
	v38 = i19;
	v98[v35] = (int)i19;
	memset(i19, 0, 0x11Cu);
	v39 = (void(*)(Script *))script_handlers[0];
	i19 = (char *)i19 + 284;
	v40 = 0;
	v93 = v37;
	if (script_handlers[0] != (void *)-1)
	{
		v41 = task_ai_players[v35]->handler;
		v42 = script_handlers;
		do
		{
			if (v39 == v41)
				break;
			v39 = (void(*)(Script *))v42[1];
			++v42;
			++v40;
		} while (v39 != (void(*)(Script *)) - 1);
	}
	if (script_handlers[v40] == (void *)-1)
		v43 = 0;
	else
		v43 = v40 + 1;
	*(_DWORD *)v38 = v43;
	if (v43)
	{
		for (i9 = (stru24 *)v37->enemy_list_108; (stru24_EnemyNode **)i9 != &v37->enemy_list_108; i9 = i9->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 10);
			*((_DWORD *)i19 - 1) = i9->_8_entity->entity_id;
		}
		v45 = v37->next;
		if (v37->next != v37)
		{
			do
			{
				v46 = i19;
				i19 = (char *)i19 + 44;
				++*((_DWORD *)v38 + 1);
				*((_DWORD *)i19 - 11) = v45->_8_entity->entity_id;
				v47 = v45->struC;
				if (v47)
				{
					v48 = (int *)v46 + 1;
					sub_41ED90((char *)v46 + 4, v47);
					v49 = v45->struC;
					v50 = (int)&v49->_C_param;
					v51 = (int)v49->_C_param;
					if (v51 != v50)
					{
						do
						{
							i19 = (char *)i19 + 4;
							++*v48;
							*((_DWORD *)i19 - 1) = *(_DWORD *)(*(_DWORD *)(v51 + 12) + 304);
							v51 = *(_DWORD *)v51;
						} while ((void **)v51 != &v45->struC->_C_param);
					}
				}
				else
				{
					*((_DWORD *)v46 + 1) = 0;
				}
				v45 = v45->next;
			} while (v45 != v93);
			v37 = v93;
		}
		for (i10 = (stru24 *)v37->wanderer_list_18; (stru24_WandererNode **)i10 != &v37->wanderer_list_18; i10 = i10->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 2);
			*((_DWORD *)i19 - 1) = i10->struC->field_130;
		}
		for (i11 = (stru24 *)v37->list_40_30; (stru24_stru40 **)i11 != &v37->list_40_30; i11 = i11->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 3);
			*((_DWORD *)i19 - 1) = i11->struC->field_130;
		}
		for (i12 = (stru24 *)v37->attacker_list_48; (stru24_AttackerNode **)i12 != &v37->attacker_list_48; i12 = i12->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 4);
			*((_DWORD *)i19 - 1) = i12->struC->field_130;
		}
		for (i13 = (stru24 *)v37->marshalling_nodes_list__evmission8_only_60;
			(stru24_AttackerNode **)i13 != &v37->marshalling_nodes_list__evmission8_only_60;
			i13 = i13->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 5);
			*((_DWORD *)i19 - 1) = i13->struC->field_130;
		}
		for (i14 = (stru24 *)v37->list_94_78; (stru24_stru94 **)i14 != &v37->list_94_78; i14 = i14->next)
		{
			i19 = (char *)i19 + 20;
			++*((_DWORD *)v38 + 6);
			*((_DWORD *)i19 - 5) = i14->_8_entity->entity_id;
			*((_DWORD *)i19 - 4) = (int)i14->struC;
			*((_DWORD *)i19 - 3) = (int)i14->list_10_convoy_head;
			*((_DWORD *)i19 - 2) = (int)i14->wanderer_list_18;
			*((_DWORD *)i19 - 1) = (int)i14->list_10_convoy;
		}
		for (i15 = (stru24 *)v37->power_plant_list_F4;
			(stru24_PowerPlantNode **)i15 != &v37->power_plant_list_F4;
			i15 = i15->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 9);
			*((_DWORD *)i19 - 1) = i15->_8_entity->entity_id;
		}
		v58 = v37->drill_rig_list_9C;
		v96 = (char *)&v37->drill_rig_list_9C;
		if ((stru24_DrillRigNode **)v58 != &v37->drill_rig_list_9C)
		{
			do
			{
				v59 = *((_DWORD *)v38 + 7) + 1;
				v60 = i19;
				*((_DWORD *)v38 + 7) = v59;
				if (v93->_2E8_drillrig_node == v58)
					*((_DWORD *)v38 + 57) = v59;
				*(_DWORD *)i19 = v58->entity->entity_id;
				v61 = v58->ptr_28;
				if (v61)
				{
					v62 = v61->entity;
					if (v62)
						*((_DWORD *)i19 + 11) = v62->entity_id;
					else
						*((_DWORD *)i19 + 11) = -1;
				}
				else
				{
					*((_DWORD *)i19 + 11) = -1;
				}
				v63 = v58->field_2C;
				*((_DWORD *)i19 + 13) = 0;
				*((_DWORD *)i19 + 12) = v63;
				v64 = (int)i19 + 52;
				*((_DWORD *)i19 + 14) = v58->field_34;
				v65 = (stru24_struC *)v58->pstru24_stru160;
				i19 = (char *)i19 + 60;
				v95 = (_DWORD *)v64;
				if (v65)
				{
					v66 = (int *)v60 + 1;
					sub_41ED90((char *)v60 + 4, v65);
					v67 = v58->pstru24_stru160;
					v68 = (int)&v67->_C_next;
					v69 = (stru24_stru160 *)v67->_C_next;
					if (v69 != (stru24_stru160 *)v68)
					{
						do
						{
							i19 = (char *)i19 + 4;
							++*v66;
							*((_DWORD *)i19 - 1) = *((_DWORD *)v69->_C_next + 76);
							v69 = v69->next;
						} while (v69 != (stru24_stru160 *)((char *)v58->pstru24_stru160 + 12));
					}
				}
				else
				{
					*((_DWORD *)v60 + 1) = 0;
				}
				for (i16 = (stru24_DrillRigNode *)v58->_8_next; (stru24_OilTankerNode **)i16 != &v58->_8_next; i16 = i16->next)
				{
					i19 = (char *)i19 + 4;
					++*v95;
					*((_DWORD *)i19 - 1) = (int)i16->_C_prev[19].next;
				}
				v58 = v58->next;
			} while ((char *)v58 != v96);
		}
		for (i17 = (stru24 *)v93->tanker_list_DC; (stru24_OilTankerNode **)i17 != &v93->tanker_list_DC; i17 = i17->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 8);
			*((_DWORD *)i19 - 1) = i17->struC->field_130;
		}
		for (i18 = (stru24_struC *)v93->list_11C; (stru24_stru160 **)i18 != &v93->list_11C; i18 = i18->next)
		{
			v73 = (int *)i19;
			++*((_DWORD *)v38 + 11);
			sub_41ED90(i19, i18);
			v74 = (stru24_struC *)i18->_C_param;
			for (i19 = (char *)i19 + 40; (void **)v74 != &i18->_C_param; v74 = v74->next)
			{
				i19 = (char *)i19 + 4;
				++*v73;
				*((_DWORD *)i19 - 1) = *((_DWORD *)v74->_C_param + 76);
			}
		}
		for (i20 = (stru24_struC *)v93->field_168; (int *)i20 != &v93->field_168; i20 = i20->next)
		{
			v76 = (int *)i19;
			++*((_DWORD *)v38 + 12);
			sub_41ED90(i19, i20);
			v77 = (stru24_struC *)i20->_C_param;
			for (i19 = (char *)i19 + 40; (void **)v77 != &i20->_C_param; v77 = v77->next)
			{
				i19 = (char *)i19 + 4;
				++*v76;
				*((_DWORD *)i19 - 1) = *((_DWORD *)v77->_C_param + 76);
			}
		}
		v78 = (stru24_struC *)v93->field_24C;
		if (v78)
		{
			sub_41ED90((char *)v38 + 56, v78);
			v79 = v93->field_24C;
			v80 = (int)&v79->_C_next;
			v81 = (stru24_stru160 *)v79->_C_next;
			if (v81 != (stru24_stru160 *)v80)
			{
				do
				{
					i19 = (char *)i19 + 4;
					++*((_DWORD *)v38 + 14);
					*((_DWORD *)i19 - 1) = *((_DWORD *)v81->_C_next + 76);
					v81 = v81->next;
				} while (v81 != (stru24_stru160 *)((char *)v93->field_24C + 12));
			}
		}
		else
		{
			*((_DWORD *)v38 + 14) = 0;
		}
		v82 = v93;
		v83 = (stru24_struC *)v93->list_1B4;
		if ((stru24_stru160 **)v83 != &v93->list_1B4)
		{
			do
			{
				v84 = (int *)i19;
				++*((_DWORD *)v38 + 13);
				sub_41ED90(i19, v83);
				v85 = (stru24_struC *)v83->_C_param;
				for (i19 = (char *)i19 + 40; (void **)v85 != &v83->_C_param; v85 = v85->next)
				{
					i19 = (char *)i19 + 4;
					++*v84;
					*((_DWORD *)i19 - 1) = *((_DWORD *)v85->_C_param + 76);
				}
				v83 = v83->next;
			} while ((stru24_stru160 **)v83 != &v93->list_1B4);
			v82 = v93;
		}
		*((_DWORD *)v38 + 24) = v82->field_250;
		*((_DWORD *)v38 + 25) = v82->field_254;
		*((_DWORD *)v38 + 26) = v82->field_258;
		*((_DWORD *)v38 + 27) = v82->field_25C;
		*((_DWORD *)v38 + 28) = 0;
		for (i21 = v82->list_260; (stru24_stru26C **)i21 != &v82->list_260; i21 = i21->next)
		{
			i19 = (char *)i19 + 4;
			++*((_DWORD *)v38 + 28);
			*((_DWORD *)i19 - 1) = i21->field_8;
			if (v82->ptr_274 == i21)
				*((_DWORD *)v38 + 29) = *((_DWORD *)v38 + 28);
		}
		*((_DWORD *)v38 + 30) = v93->_278_x_offset;
		*((_DWORD *)v38 + 31) = v93->_27C_y_offset;
		memcpy((char *)v38 + 128, v93->field_280, 0x28u);
		*((_DWORD *)v38 + 42) = v93->field_2AC;
		*((_DWORD *)v38 + 43) = v93->list_58_and_70_size;
		*((_DWORD *)v38 + 44) = v93->field_2B4;
		*((_DWORD *)v38 + 45) = v93->field_2B8;
		*((_DWORD *)v38 + 46) = v93->field_2BC;
		*((_DWORD *)v38 + 47) = v93->field_2C0;
		*((_DWORD *)v38 + 48) = v93->array_2C8_idx;
		memcpy((char *)v38 + 196, v93->array_2C8, 0x20u);
		for (i22 = v93->list_310_2EC; (stru24_stru310 **)i22 != &v93->list_310_2EC; i22 = i22->next)
		{
			i19 = (char *)i19 + 28;
			++*((_DWORD *)v38 + 58);
			*((_DWORD *)i19 - 6) = i22->unit_id;
			*((_DWORD *)i19 - 5) = i22->x;
			*((_DWORD *)i19 - 4) = i22->y;
			*((_DWORD *)i19 - 3) = i22->x_offset;
			*((_DWORD *)i19 - 2) = i22->y_offset;
			*((_DWORD *)i19 - 1) = i22->field_20;
		}
		for (i23 = v93->list_318; (stru24_stru310 **)i23 != &v93->list_318; i19 = (char *)i19 + 28)
		{
			++*((_DWORD *)v38 + 59);
			v89 = i23->field_8;
			if (v89)
				v90 = *(_DWORD *)(v89 + 304);
			else
				v90 = -1;
			*(_DWORD *)i19 = v90;
			*((_DWORD *)i19 + 1) = i23->unit_id;
			*((_DWORD *)i19 + 2) = i23->x;
			*((_DWORD *)i19 + 3) = i23->y;
			*((_DWORD *)i19 + 4) = i23->x_offset;
			*((_DWORD *)i19 + 5) = i23->y_offset;
			*((_DWORD *)i19 + 6) = i23->field_20;
			i23 = i23->next;
		}
		*((_DWORD *)v38 + 60) = v93->field_344;
		*((_DWORD *)v38 + 61) = v93->field_348;
		*((_DWORD *)v38 + 62) = v93->field_34C;
		*((_DWORD *)v38 + 63) = v93->field_350;
		*((_DWORD *)v38 + 65) = v93->field_354;
		v91 = v93->task;
		if (v91)
		{
			v92 = (int *)v91->param;
			if (v92)
			{
				*((_DWORD *)v38 + 64) = v92[76];
			}
			else
			{
				*((_DWORD *)v38 + 64) = -1;
				v93->task->sprite->field_88_unused = 1;
				*((_DWORD *)v38 + 67) = v93->task->sprite->x;
				*((_DWORD *)v38 + 68) = v93->task->sprite->y;
			}
		}
		else
		{
			*((_DWORD *)v38 + 64) = -1;
			*((_DWORD *)v38 + 66) = -1;
		}
		*((_DWORD *)v38 + 69) = v93->level_field_22_or_2A;
		v33 = v94;
		*((_DWORD *)v38 + 70) = v93->field_360;
		goto LABEL_140;
	}
	errmsg_save[1] = aUnknownMode;
	return 0;
}
// 41EF20: using guessed type int var_1C[7];

//----- (0041F960) --------------------------------------------------------
bool GAME_Load_UnpackAiPlayers(void *save_data)
{
	int v1; // eax@1
	char *v2; // edi@1
	Script *v3; // ecx@2
	stru24 *v4; // ebx@3
	char *v5; // ebp@3
	int v6; // edi@3
	unsigned int v7; // eax@3
	void(*v8)(Script *); // eax@5
	enum PLAYER_SIDE v9; // eax@8
	int v10; // esi@8
	stru24_EnemyNode *v11; // ecx@9
	int v12; // edx@13
	Entity *v13; // eax@14
	stru24_stru10_convoy *v14; // esi@23
	Entity *v15; // eax@28
	_DWORD *v16; // ebp@32
	stru24_stru160 *v17; // eax@33
	int v18; // edi@37
	stru24_AttackerNode *v19; // eax@38
	int v20; // edx@42
	bool v21; // zf@42
	Entity *v22; // ecx@43
	int v23; // esi@54
	stru24_WandererNode *v24; // ecx@55
	int v25; // edx@59
	Entity *v26; // eax@60
	int v27; // esi@68
	stru24_stru40 *v28; // ecx@69
	int v29; // edx@73
	Entity *v30; // eax@74
	int v31; // esi@82
	stru24_AttackerNode *v32; // eax@83
	int v33; // edx@87
	Entity *v34; // ecx@88
	Entity *v35; // ecx@94
	int v36; // esi@96
	stru24_AttackerNode *v37; // eax@97
	int v38; // edx@101
	Entity *v39; // ecx@102
	Entity *v40; // ecx@108
	int i; // ebp@110
	stru24_stru94 *v42; // esi@111
	Entity *v43; // eax@116
	void *v44; // ecx@120
	int v45; // eax@120
	int j; // esi@123
	stru24_PowerPlantNode *v47; // eax@124
	int v48; // edx@128
	Entity *v49; // ecx@129
	int v50; // eax@134
	stru24_DrillRigNode *v51; // esi@135
	int v52; // edi@135
	Entity *v53; // eax@142
	stru24 *v54; // eax@146
	_DWORD *v55; // ebp@152
	int *v56; // edi@152
	stru24_DrillRigNode *v57; // ecx@152
	stru24_stru160 *v58; // eax@153
	stru24_AttackerNode *v59; // eax@158
	int v60; // edx@162
	Entity *v61; // ecx@163
	int v62; // ecx@173
	int v63; // ebp@173
	stru24_OilTankerNode *v64; // eax@174
	int v65; // edi@178
	Entity *v66; // edx@179
	char *v67; // edi@185
	int k; // esi@185
	stru24_OilTankerNode *v69; // eax@186
	int v70; // edx@190
	Entity *v71; // ecx@191
	stru24_stru160 *v72; // esi@197
	_DWORD *v73; // edi@197
	int v74; // ebp@201
	stru24_AttackerNode *v75; // eax@202
	int v76; // edx@206
	Entity *v77; // ecx@207
	Entity *v78; // edx@213
	stru24_stru160 *v79; // esi@218
	_DWORD *v80; // edi@218
	int v81; // ebp@222
	stru24_AttackerNode *v82; // eax@223
	int v83; // edx@227
	Entity *v84; // ecx@228
	Entity *v85; // edx@234
	stru24_stru160 *v86; // eax@237
	stru24_stru160 *v87; // eax@240
	_DWORD *v88; // esi@241
	int v89; // ebp@242
	stru24_AttackerNode *v90; // eax@243
	int v91; // edx@247
	Entity *v92; // ecx@248
	stru24_stru160 *v93; // esi@259
	_DWORD *v94; // edi@259
	int v95; // ebp@263
	stru24_AttackerNode *v96; // eax@264
	int v97; // edx@268
	Entity *v98; // ecx@269
	Entity *v99; // ecx@275
	int v100; // edx@278
	int *v101; // edi@279
	stru24_stru26C *v102; // eax@280
	int v103; // ecx@284
	int v104; // ecx@284
	int v105; // esi@287
	int v106; // edi@287
	int l; // ecx@287
	stru24_stru310 *v108; // eax@288
	stru24_stru310 *v109; // eax@294
	Entity *v110; // ecx@299
	int v111; // eax@304
	int v112; // ecx@306
	enum UNIT_ID v113; // ecx@307
	Entity *v114; // eax@310
	int a2; // [sp+10h] [bp-18h]@3
	char *v117; // [sp+14h] [bp-14h]@3
	int v118; // [sp+18h] [bp-10h]@22
	int v119; // [sp+18h] [bp-10h]@157
	int v120; // [sp+18h] [bp-10h]@196
	int v121; // [sp+18h] [bp-10h]@217
	int v122; // [sp+18h] [bp-10h]@258
	_DWORD *v123; // [sp+1Ch] [bp-Ch]@152
	int v124; // [sp+20h] [bp-8h]@1
	int v125; // [sp+24h] [bp-4h]@139

	v1 = 0;
	v2 = (char *)save_data;
	v124 = 0;
	while (1)
	{
		v3 = task_ai_players[v1];
		if (!v3)
			goto LABEL_316;
		v4 = (stru24 *)v3->param;
		v5 = v2;
		v6 = (int)(v2 + 284);
		v117 = v5;
		v7 = *(_DWORD *)v5;
		a2 = v6;
		if (*(_DWORD *)v5 < 1u || v7 > num_script_handlers)
			v8 = 0;
		else
			v8 = *(void(**)(Script *))&aWb__AND__handlers_minus1_indexer[4 * v7];
		if (!v8)
			return 0;
		v3->handler = v8;
		v9 = (PLAYER_SIDE)*((_DWORD *)v5 + 40);
		v4->_2A0_player_side = v9;
		v10 = 0;
		v4->_2A8_p_globals_cash = &game_globals_per_player.cash[v9];
		v4->_2DC_unit_id = (UNIT_ID)*((_DWORD *)v5 + 54);
		if (*((_DWORD *)v5 + 10) > 0)
			break;
	LABEL_22:
		v118 = 0;
		if (*((_DWORD *)v5 + 1) > 0)
		{
			do
			{
				v14 = v4->list_10_convoy_head;
				if (v14)
					v4->list_10_convoy_head = v14->next;
				else
					v14 = 0;
				if (!v14)
					return 0;
				if (*(_DWORD *)v6 == -1 || (v15 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_31:
					v15 = 0;
				}
				else
				{
					while (v15->entity_id != *(_DWORD *)v6)
					{
						v15 = v15->next;
						if ((Entity **)v15 == &entity_list_head)
							goto LABEL_31;
					}
				}
				v14->_8_entity = v15;
				v16 = (_DWORD *)(v6 + 4);
				v15->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v14;
				a2 = v6 + 44;
				if (*(_DWORD *)(v6 + 4))
				{
					v17 = v4->list_160_head;
					if (v17)
					{
						v14->field_C = (int)v17;
						v4->list_160_head = v4->list_160_head->next;
					}
					else
					{
						v14->field_C = 0;
					}
					if (!v14->field_C)
						return 0;
					sub_41EE20(v4, (int)v16, (stru24_stru160 *)v14->field_C);
					v18 = 0;
					if (*v16 > 0)
					{
						do
						{
							v19 = v4->attacker_list_free_pool;
							if (v19)
								v4->attacker_list_free_pool = v19->next;
							else
								v19 = 0;
							if (!v19)
								return 0;
							v20 = *(_DWORD *)a2;
							v21 = *(_DWORD *)a2 == -1;
							a2 += 4;
							if (v21 || (v22 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
							{
							LABEL_46:
								v22 = 0;
							}
							else
							{
								while (v22->entity_id != v20)
								{
									v22 = v22->next;
									if ((Entity **)v22 == &entity_list_head)
										goto LABEL_46;
								}
							}
							v19->entity = v22;
							if (v22)
							{
								v19->list_8 = (stru24_stru160 *)v14->field_C;
								v19->entity->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v19;
								v19->next = *(stru24_AttackerNode **)(v14->field_C + 12);
								v19->prev = (stru24_AttackerNode *)(v14->field_C + 12);
								*(_DWORD *)(*(_DWORD *)(v14->field_C + 12) + 4) = (int)v19;
								*(_DWORD *)(v14->field_C + 12) = (int)v19;
							}
							else
							{
								v19->next = v4->attacker_list_free_pool;
								v4->attacker_list_free_pool = v19;
							}
						} while (++v18 < *v16);
					}
					*(_DWORD *)v14->field_C = (int)v4->list_11C;
					*(_DWORD *)(v14->field_C + 4) = (int)((char *)v4 + 284);
					v4->list_11C->prev = (stru24_stru160 *)v14->field_C;
					v4->list_11C = (stru24_stru160 *)v14->field_C;
				}
				else
				{
					v14->field_C = 0;
				}
				v14->next = (stru24_stru10_convoy *)v4->next;
				v14->prev = (stru24_stru10_convoy *)v4;
				v6 = a2;
				v4->next->prev = (stru24 *)v14;
				v4->next = (stru24 *)v14;
			} while (++v118 < *((_DWORD *)v117 + 1));
		}
		v23 = 0;
		if (*((_DWORD *)v117 + 2) > 0)
		{
			do
			{
				v24 = v4->wanderer_list_free_pool;
				if (v24)
					v4->wanderer_list_free_pool = v24->next;
				else
					v24 = 0;
				if (!v24)
					return 0;
				v25 = *(_DWORD *)v6;
				v6 += 4;
				a2 = v6;
				if (v25 == -1 || (v26 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_63:
					v26 = 0;
				}
				else
				{
					while (v26->entity_id != v25)
					{
						v26 = v26->next;
						if ((Entity **)v26 == &entity_list_head)
							goto LABEL_63;
					}
				}
				v24->entity = v26;
				if (v26)
				{
					v24->entity->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v24;
					v24->next = v4->wanderer_list_18;
					v24->prev = (stru24_WandererNode *)&v4->wanderer_list_18;
					v4->wanderer_list_18->prev = v24;
					v4->wanderer_list_18 = v24;
				}
				else
				{
					v24->next = v4->wanderer_list_free_pool;
					v4->wanderer_list_free_pool = v24;
				}
			} while (++v23 < *((_DWORD *)v117 + 2));
		}
		v27 = 0;
		if (*((_DWORD *)v117 + 3) > 0)
		{
			do
			{
				v28 = v4->list_40_head;
				if (v28)
					v4->list_40_head = v28->next;
				else
					v28 = 0;
				if (!v28)
					return 0;
				v29 = *(_DWORD *)v6;
				v6 += 4;
				a2 = v6;
				if (v29 == -1 || (v30 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_77:
					v30 = 0;
				}
				else
				{
					while (v30->entity_id != v29)
					{
						v30 = v30->next;
						if ((Entity **)v30 == &entity_list_head)
							goto LABEL_77;
					}
				}
				v28->_C__entity = v30;
				if (v30)
				{
					v28->_C__entity->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v28;
					v28->next = v4->list_40_30;
					v28->prev = (stru24_stru40 *)&v4->list_40_30;
					v4->list_40_30->prev = v28;
					v4->list_40_30 = v28;
				}
				else
				{
					v28->next = v4->list_40_head;
					v4->list_40_head = v28;
				}
			} while (++v27 < *((_DWORD *)v117 + 3));
		}
		v31 = 0;
		if (*((_DWORD *)v117 + 4) > 0)
		{
			do
			{
				v32 = v4->attacker_list_free_pool;
				if (v32)
					v4->attacker_list_free_pool = v32->next;
				else
					v32 = 0;
				if (!v32)
					return 0;
				v33 = *(_DWORD *)v6;
				v6 += 4;
				a2 = v6;
				if (v33 == -1 || (v34 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_91:
					v34 = 0;
				}
				else
				{
					while (v34->entity_id != v33)
					{
						v34 = v34->next;
						if ((Entity **)v34 == &entity_list_head)
							goto LABEL_91;
					}
				}
				v32->entity = v34;
				if (v34)
				{
					v35 = v32->entity;
					v32->list_8 = 0;
					v35->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v32;
					v32->next = v4->attacker_list_48;
					v32->prev = (stru24_AttackerNode *)&v4->attacker_list_48;
					v4->attacker_list_48->prev = v32;
					v4->attacker_list_48 = v32;
				}
				else
				{
					v32->next = v4->attacker_list_free_pool;
					v4->attacker_list_free_pool = v32;
				}
			} while (++v31 < *((_DWORD *)v117 + 4));
		}
		v36 = 0;
		if (*((_DWORD *)v117 + 5) > 0)
		{
			do
			{
				v37 = v4->attacker_list_free_pool;
				if (v37)
					v4->attacker_list_free_pool = v37->next;
				else
					v37 = 0;
				if (!v37)
					return 0;
				v38 = *(_DWORD *)v6;
				v6 += 4;
				a2 = v6;
				if (v38 == -1 || (v39 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_105:
					v39 = 0;
				}
				else
				{
					while (v39->entity_id != v38)
					{
						v39 = v39->next;
						if ((Entity **)v39 == &entity_list_head)
							goto LABEL_105;
					}
				}
				v37->entity = v39;
				if (v39)
				{
					v40 = v37->entity;
					v37->list_8 = 0;
					v40->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v37;
					v37->next = v4->marshalling_nodes_list__evmission8_only_60;
					v37->prev = (stru24_AttackerNode *)&v4->marshalling_nodes_list__evmission8_only_60;
					v4->marshalling_nodes_list__evmission8_only_60->prev = v37;
					v4->marshalling_nodes_list__evmission8_only_60 = v37;
				}
				else
				{
					v37->next = v4->attacker_list_free_pool;
					v4->attacker_list_free_pool = v37;
				}
			} while (++v36 < *((_DWORD *)v117 + 5));
		}
		for (i = 0; i < *((_DWORD *)v117 + 6); a2 = v6)
		{
			v42 = v4->list_94_head;
			if (v42)
				v4->list_94_head = v42->next;
			else
				v42 = 0;
			if (!v42)
				return 0;
			if (*(_DWORD *)v6 == -1 || (v43 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_119:
				v43 = 0;
			}
			else
			{
				while (v43->entity_id != *(_DWORD *)v6)
				{
					v43 = v43->next;
					if ((Entity **)v43 == &entity_list_head)
						goto LABEL_119;
				}
			}
			v42->_8_entity = v43;
			v43->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v42;
			v42->_14_cost = *(_DWORD *)(v6 + 8);
			v42->_18_cost_per_time_step = *(_DWORD *)(v6 + 12);
			v44 = *(void **)(v6 + 16);
			v42->_8_entity_script_param = (int)v44;
			v45 = *(_DWORD *)(v6 + 4);
			v42->_C_cost = v45;
			if (v45 > 0)
				stru37_list_427D80_enqueue_item(
				(int *)(4 * v4->_2A0_player_side + 4704680),
					&v42->_C_cost,
					v42->_14_cost,
					v42->_18_cost_per_time_step,
					v42->_8_entity->script,
					v44,
					-1);
			v42->next = v4->list_94_78;
			v42->prev = (stru24 *)((char *)v4 + 120);
			v6 += 20;
			++i;
			v4->list_94_78->prev = (stru24 *)v42;
			v4->list_94_78 = v42;
		}
		for (j = 0; j < *((_DWORD *)v117 + 9); v4->power_plant_list_F4 = v47)
		{
			v47 = v4->power_plant_list_free_pool;
			if (v47)
				v4->power_plant_list_free_pool = v47->next;
			else
				v47 = 0;
			if (!v47)
				return 0;
			v48 = *(_DWORD *)v6;
			v6 += 4;
			a2 = v6;
			if (v48 == -1 || (v49 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_132:
				v49 = 0;
			}
			else
			{
				while (v49->entity_id != v48)
				{
					v49 = v49->next;
					if ((Entity **)v49 == &entity_list_head)
						goto LABEL_132;
				}
			}
			v47->entity = v49;
			++j;
			v49->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v47;
			v47->next = v4->power_plant_list_F4;
			v47->prev = (stru24_PowerPlantNode *)&v4->power_plant_list_F4;
			v4->power_plant_list_F4->prev = v47;
		}
		v50 = 0;
		if (*((_DWORD *)v117 + 7) > 0)
		{
			do
			{
				v51 = v4->drill_rig_list_free_pool;
				v52 = a2;
				if (v51)
					v4->drill_rig_list_free_pool = v51->next;
				else
					v51 = 0;
				if (!v51)
					return 0;
				v125 = v50 + 1;
				if (*((_DWORD *)v117 + 57) == v50 + 1)
					v4->_2E8_drillrig_node = v51;
				if (*(_DWORD *)a2 == -1 || (v53 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_145:
					v53 = 0;
				}
				else
				{
					while (v53->entity_id != *(_DWORD *)a2)
					{
						v53 = v53->next;
						if ((Entity **)v53 == &entity_list_head)
							goto LABEL_145;
					}
				}
				v51->entity = v53;
				v53->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v51;
				v51->ptr_28 = 0;
				v54 = (stru24 *)v4->power_plant_list_F4;
				if ((stru24_PowerPlantNode **)v54 != &v4->power_plant_list_F4)
				{
					while (v54->_8_entity->entity_id != *(_DWORD *)(a2 + 44))
					{
						v54 = v54->next;
						if ((stru24_PowerPlantNode **)v54 == &v4->power_plant_list_F4)
							goto LABEL_151;
					}
					v51->ptr_28 = (stru24_PowerPlantNode *)v54;
				LABEL_151:
					v52 = a2;
				}
				v55 = (_DWORD *)(a2 + 4);
				v51->field_2C = *(_DWORD *)(v52 + 48);
				v51->field_30 = *(_DWORD *)(v52 + 52);
				v123 = (_DWORD *)(v52 + 52);
				v51->field_34 = *(_DWORD *)(v52 + 56);
				v56 = (int *)(v52 + 60);
				v57 = v4->drill_rig_list_9C;
				v51->prev = (stru24_DrillRigNode *)&v4->drill_rig_list_9C;
				v51->next = v57;
				a2 = (int)v56;
				v4->drill_rig_list_9C->prev = v51;
				v4->drill_rig_list_9C = v51;
				if (*v55)
				{
					v58 = v4->list_160_head;
					if (v58)
					{
						v51->pstru24_stru160 = v58;
						v4->list_160_head = v4->list_160_head->next;
					}
					else
					{
						v51->pstru24_stru160 = 0;
					}
					if (!v51->pstru24_stru160)
						return 0;
					sub_41EE20(v4, (int)v55, v51->pstru24_stru160);
					v119 = 0;
					if (*v55 > 0)
					{
						do
						{
							v59 = v4->attacker_list_free_pool;
							if (v59)
								v4->attacker_list_free_pool = v59->next;
							else
								v59 = 0;
							if (!v59)
								return 0;
							v60 = *v56;
							++v56;
							a2 = (int)v56;
							if (v60 == -1 || (v61 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
							{
							LABEL_166:
								v61 = 0;
							}
							else
							{
								while (v61->entity_id != v60)
								{
									v61 = v61->next;
									if ((Entity **)v61 == &entity_list_head)
										goto LABEL_166;
								}
							}
							v59->entity = v61;
							if (v61)
							{
								v59->list_8 = v51->pstru24_stru160;
								v59->entity->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v59;
								v59->next = (stru24_AttackerNode *)v51->pstru24_stru160->_C_next;
								v59->prev = (stru24_AttackerNode *)&v51->pstru24_stru160->_C_next;
								*((_DWORD *)v51->pstru24_stru160->_C_next + 1) = (int)v59;
								v51->pstru24_stru160->_C_next = v59;
							}
							else
							{
								v59->next = v4->attacker_list_free_pool;
								v4->attacker_list_free_pool = v59;
							}
						} while (++v119 < *v55);
					}
				}
				else
				{
					v51->pstru24_stru160 = 0;
				}
				v62 = (int)&v51->_8_next;
				v63 = 0;
				v51->_C_prev = (stru24_OilTankerNode *)&v51->_8_next;
				*(_DWORD *)v62 = v62;
				for (v51->field_18 = 0; v63 < *v123; *(_DWORD *)v62 = (int)v64)
				{
					v64 = v4->tanker_list_free_pool;
					if (v64)
						v4->tanker_list_free_pool = v64->next;
					else
						v64 = 0;
					if (!v64)
						return 0;
					v65 = *(_DWORD *)a2;
					v21 = *(_DWORD *)a2 == -1;
					a2 += 4;
					if (v21 || (v66 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
					{
					LABEL_182:
						v66 = 0;
					}
					else
					{
						while (v66->entity_id != v65)
						{
							v66 = v66->next;
							if ((Entity **)v66 == &entity_list_head)
								goto LABEL_182;
						}
					}
					v64->entity = v66;
					v64->drillrig_node = v51;
					++v63;
					v66->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v64;
					v64->next = *(stru24_OilTankerNode **)v62;
					v64->prev = (stru24_OilTankerNode *)v62;
					*(_DWORD *)(*(_DWORD *)v62 + 4) = (int)v64;
				}
				v50 = v125;
			} while (v125 < *((_DWORD *)v117 + 7));
		}
		v67 = v117;
		for (k = 0; k < *((_DWORD *)v117 + 8); v4->tanker_list_DC = v69)
		{
			v69 = v4->tanker_list_free_pool;
			if (v69)
				v4->tanker_list_free_pool = v69->next;
			else
				v69 = 0;
			if (!v69)
				return 0;
			v70 = *(_DWORD *)a2;
			v21 = *(_DWORD *)a2 == -1;
			a2 += 4;
			if (v21 || (v71 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
			{
			LABEL_194:
				v71 = 0;
			}
			else
			{
				while (v71->entity_id != v70)
				{
					v71 = v71->next;
					if ((Entity **)v71 == &entity_list_head)
						goto LABEL_194;
				}
			}
			v69->entity = v71;
			v69->drillrig_node = 0;
			++k;
			v71->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v69;
			v69->next = v4->tanker_list_DC;
			v69->prev = (stru24_OilTankerNode *)&v4->tanker_list_DC;
			v4->tanker_list_DC->prev = v69;
		}
		v120 = 0;
		if (*((_DWORD *)v117 + 11) > 0)
		{
			while (1)
			{
				v72 = v4->list_160_head;
				v73 = (_DWORD *)a2;
				if (v72)
					v4->list_160_head = v72->next;
				else
					v72 = 0;
				if (!v72)
					return 0;
				sub_41EE20(v4, a2, v72);
				v72->next = v4->list_11C;
				v72->prev = (stru24_stru160 *)&v4->list_11C;
				a2 += 40;
				v74 = 0;
				v4->list_11C->prev = v72;
				v4->list_11C = v72;
				if (*v73 > 0)
				{
					do
					{
						v75 = v4->attacker_list_free_pool;
						if (v75)
							v4->attacker_list_free_pool = v75->next;
						else
							v75 = 0;
						if (!v75)
							return 0;
						v76 = *(_DWORD *)a2;
						v21 = *(_DWORD *)a2 == -1;
						a2 += 4;
						if (v21 || (v77 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
						{
						LABEL_210:
							v77 = 0;
						}
						else
						{
							while (v77->entity_id != v76)
							{
								v77 = v77->next;
								if ((Entity **)v77 == &entity_list_head)
									goto LABEL_210;
							}
						}
						v75->entity = v77;
						if (v77)
						{
							v78 = v75->entity;
							v75->list_8 = v72;
							v78->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v75;
							v75->next = (stru24_AttackerNode *)v72->_C_next;
							v75->prev = (stru24_AttackerNode *)&v72->_C_next;
							*((_DWORD *)v72->_C_next + 1) = (int)v75;
							v72->_C_next = v75;
						}
						else
						{
							v75->next = v4->attacker_list_free_pool;
							v4->attacker_list_free_pool = v75;
						}
					} while (++v74 < *v73);
				}
				if (++v120 >= *((_DWORD *)v117 + 11))
				{
					v67 = v117;
					break;
				}
			}
		}
		v121 = 0;
		if (*((_DWORD *)v67 + 12) > 0)
		{
			do
			{
				v79 = v4->list_160_head;
				v80 = (_DWORD *)a2;
				if (v79)
					v4->list_160_head = v79->next;
				else
					v79 = 0;
				if (!v79)
					return 0;
				sub_41EE20(v4, a2, v79);
				v79->next = (stru24_stru160 *)v4->field_168;
				v79->prev = (stru24_stru160 *)&v4->field_168;
				a2 += 40;
				v81 = 0;
				*(_DWORD *)(v4->field_168 + 4) = (int)v79;
				v4->field_168 = (int)v79;
				if (*v80 > 0)
				{
					do
					{
						v82 = v4->attacker_list_free_pool;
						if (v82)
							v4->attacker_list_free_pool = v82->next;
						else
							v82 = 0;
						if (!v82)
							return 0;
						v83 = *(_DWORD *)a2;
						v21 = *(_DWORD *)a2 == -1;
						a2 += 4;
						if (v21 || (v84 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
						{
						LABEL_231:
							v84 = 0;
						}
						else
						{
							while (v84->entity_id != v83)
							{
								v84 = v84->next;
								if ((Entity **)v84 == &entity_list_head)
									goto LABEL_231;
							}
						}
						v82->entity = v84;
						if (v84)
						{
							v85 = v82->entity;
							v82->list_8 = v79;
							v85->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v82;
							v82->next = (stru24_AttackerNode *)v79->_C_next;
							v82->prev = (stru24_AttackerNode *)&v79->_C_next;
							*((_DWORD *)v79->_C_next + 1) = (int)v82;
							v79->_C_next = v82;
						}
						else
						{
							v82->next = v4->attacker_list_free_pool;
							v4->attacker_list_free_pool = v82;
						}
					} while (++v81 < *v80);
				}
			} while (++v121 < *((_DWORD *)v117 + 12));
		}
		v86 = v4->list_160_head;
		if (v86)
		{
			v4->field_24C = v86;
			v4->list_160_head = v86->next;
		}
		else
		{
			v4->field_24C = 0;
		}
		v87 = v4->field_24C;
		if (!v87)
			return 0;
		v88 = (int *)(v117 + 56);
		if (*((_DWORD *)v117 + 14))
		{
			sub_41EE20(v4, (int)(v117 + 56), v4->field_24C);
			v89 = 0;
			if (*v88 > 0)
			{
				do
				{
					v90 = v4->attacker_list_free_pool;
					if (v90)
						v4->attacker_list_free_pool = v90->next;
					else
						v90 = 0;
					if (!v90)
						return 0;
					v91 = *(_DWORD *)a2;
					v21 = *(_DWORD *)a2 == -1;
					a2 += 4;
					if (v21 || (v92 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
					{
					LABEL_251:
						v92 = 0;
					}
					else
					{
						while (v92->entity_id != v91)
						{
							v92 = v92->next;
							if ((Entity **)v92 == &entity_list_head)
								goto LABEL_251;
						}
					}
					v90->entity = v92;
					if (v92)
					{
						v90->list_8 = v4->field_24C;
						v90->entity->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v90;
						v90->next = (stru24_AttackerNode *)v4->field_24C->_C_next;
						v90->prev = (stru24_AttackerNode *)&v4->field_24C->_C_next;
						*((_DWORD *)v4->field_24C->_C_next + 1) = (int)v90;
						v4->field_24C->_C_next = v90;
					}
					else
					{
						v90->next = v4->attacker_list_free_pool;
						v4->attacker_list_free_pool = v90;
					}
				} while (++v89 < *v88);
			}
		}
		else
		{
			v87->_C_next = &v87->_C_next;
			v4->field_24C->_10_prev = &v4->field_24C->_C_next;
			v4->field_24C->field_1C = 0;
			v4->field_24C->field_8 = 0;
			v4->field_24C->field_24 = 0;
			v4->field_24C->field_2C = 0;
		}
		v122 = 0;
		if (*((_DWORD *)v117 + 13) > 0)
		{
			do
			{
				v93 = v4->list_160_head;
				v94 = (_DWORD *)a2;
				if (v93)
					v4->list_160_head = v93->next;
				else
					v93 = 0;
				if (!v93)
					return 0;
				sub_41EE20(v4, a2, v93);
				v93->next = v4->list_1B4;
				v93->prev = (stru24_stru160 *)&v4->list_1B4;
				a2 += 40;
				v95 = 0;
				v4->list_1B4->prev = v93;
				v4->list_1B4 = v93;
				if (*v94 > 0)
				{
					do
					{
						v96 = v4->attacker_list_free_pool;
						if (v96)
							v4->attacker_list_free_pool = v96->next;
						else
							v96 = 0;
						if (!v96)
							return 0;
						v97 = *(_DWORD *)a2;
						v21 = *(_DWORD *)a2 == -1;
						a2 += 4;
						if (v21 || (v98 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
						{
						LABEL_272:
							v98 = 0;
						}
						else
						{
							while (v98->entity_id != v97)
							{
								v98 = v98->next;
								if ((Entity **)v98 == &entity_list_head)
									goto LABEL_272;
							}
						}
						v96->entity = v98;
						if (v98)
						{
							v99 = v96->entity;
							v96->list_8 = v93;
							v99->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v96;
							v96->next = (stru24_AttackerNode *)v93->_C_next;
							v96->prev = (stru24_AttackerNode *)&v93->_C_next;
							*((_DWORD *)v93->_C_next + 1) = (int)v96;
							v93->_C_next = v96;
						}
						else
						{
							v96->next = v4->attacker_list_free_pool;
							v4->attacker_list_free_pool = v96;
						}
					} while (++v95 < *v94);
				}
			} while (++v122 < *((_DWORD *)v117 + 13));
		}
		v4->field_250 = *((_DWORD *)v117 + 24);
		v4->field_254 = *((_DWORD *)v117 + 25);
		v4->field_258 = *((_DWORD *)v117 + 26);
		v4->field_25C = *((_DWORD *)v117 + 27);
		v100 = 0;
		if (*((_DWORD *)v117 + 28) > 0)
		{
			v101 = (int *)a2;
			do
			{
				v102 = v4->list_26C_head;
				if (v102)
					v4->list_26C_head = v102->next;
				else
					v102 = 0;
				if (!v102)
					return 0;
				v103 = *v101;
				++v101;
				v102->field_8 = v103;
				v102->next = v4->list_260;
				v102->prev = (stru24_stru26C *)&v4->list_260;
				a2 = (int)v101;
				v4->list_260->prev = v102;
				v4->list_260 = v102;
				v104 = v100 + 1;
				if (*((_DWORD *)v117 + 29) == v100 + 1)
					v4->ptr_274 = v102;
				++v100;
			} while (v104 < *((_DWORD *)v117 + 28));
		}
		v4->_278_x_offset = *((_DWORD *)v117 + 30);
		v4->_27C_y_offset = *((_DWORD *)v117 + 31);
		memcpy(v4->field_280, v117 + 128, sizeof(v4->field_280));
		v4->_2A4_player_side = (PLAYER_SIDE)*((_DWORD *)v117 + 41);
		v4->field_2AC = *((_DWORD *)v117 + 42);
		v4->list_58_and_70_size = *((_DWORD *)v117 + 43);
		v4->field_2B4 = *((_DWORD *)v117 + 44);
		v4->field_2B8 = *((_DWORD *)v117 + 45);
		v4->field_2BC = *((_DWORD *)v117 + 46);
		v4->field_2C0 = *((_DWORD *)v117 + 47);
		v4->array_2C8_idx = *((_DWORD *)v117 + 48);
		memcpy(v4->array_2C8, v117 + 196, 0x14u);
		v105 = a2;
		v4->_2DC_unit_id = (UNIT_ID)*((_DWORD *)v117 + 54);
		v4->_2E0_unit_id = (UNIT_ID)*((_DWORD *)v117 + 55);
		v4->field_2E4 = *((_DWORD *)v117 + 56);
		v106 = 0;
		for (l = 0; l < *((_DWORD *)v117 + 58); a2 = v105)
		{
			v108 = v4->list_310_head;
			if (v108)
				v4->list_310_head = v108->next;
			else
				v108 = 0;
			if (!v108)
				return 0;
			v108->field_8 = 0;
			v108->unit_id = (UNIT_ID)*(_DWORD *)(v105 + 4);
			v108->x = *(_DWORD *)(v105 + 8);
			v108->y = *(_DWORD *)(v105 + 12);
			v108->x_offset = *(_DWORD *)(v105 + 16);
			v108->y_offset = *(_DWORD *)(v105 + 20);
			v108->field_20 = *(_DWORD *)(v105 + 24);
			v105 += 28;
			++l;
		}
		if (*((_DWORD *)v117 + 59) > 0)
		{
			do
			{
				v109 = v4->list_310_head;
				if (v109)
					v4->list_310_head = v109->next;
				else
					v109 = 0;
				if (!v109)
					return 0;
				if (*(_DWORD *)v105 == -1 || (v110 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
				{
				LABEL_302:
					v110 = 0;
				}
				else
				{
					while (v110->entity_id != *(_DWORD *)v105)
					{
						v110 = v110->next;
						if ((Entity **)v110 == &entity_list_head)
							goto LABEL_302;
					}
				}
				v109->field_8 = (int)v110;
				v109->unit_id = (UNIT_ID)*(_DWORD *)(v105 + 4);
				v109->x = *(_DWORD *)(v105 + 8);
				v109->y = *(_DWORD *)(v105 + 12);
				v109->x_offset = *(_DWORD *)(v105 + 16);
				v109->y_offset = *(_DWORD *)(v105 + 20);
				v109->field_20 = *(_DWORD *)(v105 + 24);
				v105 += 28;
				++v106;
				a2 = v105;
			} while (v106 < *((_DWORD *)v117 + 59));
		}
		v4->field_344 = *((_DWORD *)v117 + 60);
		v4->field_348 = *((_DWORD *)v117 + 61);
		v4->field_350 = *((_DWORD *)v117 + 63);
		v4->field_354 = *((_DWORD *)v117 + 65);
		v111 = *((_DWORD *)v117 + 62);
		v4->field_34C = v111;
		if (v111 > 0)
			stru37_list_427D80_enqueue_item(v4->_2A8_p_globals_cash, &v4->field_34C, v4->field_348, v4->field_354, 0, 0, -1);
		v112 = *((_DWORD *)v117 + 64);
		if (v112 == -1)
		{
			v113 = (UNIT_ID)*((_DWORD *)v117 + 66);
			if (v113 == -1)
				v4->task = 0;
			else
				v4->task = spawn_unit(v113, *((_DWORD *)v117 + 67), *((_DWORD *)v117 + 68), v4->_2A0_player_side)->script;
		}
		else
		{
			v114 = entity_list_head;
			if ((Entity **)entity_list_head == &entity_list_head)
			{
			LABEL_313:
				v114 = 0;
			}
			else
			{
				while (v114->entity_id != v112)
				{
					v114 = v114->next;
					if ((Entity **)v114 == &entity_list_head)
						goto LABEL_313;
				}
			}
			v4->task = v114->script;
		}
		v2 = (char *)a2;
		v4->level_field_22_or_2A = *((_DWORD *)v117 + 69);
		v1 = v124;
		v4->field_360 = *((_DWORD *)v117 + 70);
	LABEL_316:
		v124 = ++v1;
		if (v1 >= 7)
			return 1;
	}
	while (1)
	{
		v11 = v4->enemy_list_free_pool;
		if (v11)
			v4->enemy_list_free_pool = v11->next;
		else
			v11 = 0;
		if (!v11)
			return 0;
		v12 = *(_DWORD *)v6;
		v6 += 4;
		a2 = v6;
		if (v12 == -1 || (v13 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
		{
		LABEL_17:
			v13 = 0;
		}
		else
		{
			while (v13->entity_id != v12)
			{
				v13 = v13->next;
				if ((Entity **)v13 == &entity_list_head)
					goto LABEL_17;
			}
		}
		v11->entity = v13;
		if (v13)
		{
			v11->entity->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v11;
			v11->next = v4->enemy_list_108;
			v11->prev = (stru24_EnemyNode *)&v4->enemy_list_108;
			v4->enemy_list_108->prev = v11;
			v4->enemy_list_108 = v11;
		}
		else
		{
			v11->next = v4->enemy_list_free_pool;
			v4->enemy_list_free_pool = v11;
		}
		if (++v10 >= *((_DWORD *)v5 + 10))
			goto LABEL_22;
	}
}
// 46560C: using guessed type int num_script_handlers;

//----- (00420A90) --------------------------------------------------------
_BYTE *GAME_Save_PackMapInfo(int *a1)
{
	int v1; // ebx@1
	MapdScrlImageTile **v2; // edi@1
	_BYTE *result; // eax@1
	_BYTE *v4; // esi@3
	char v5; // cl@6
	int v6; // [sp+8h] [bp-Ch]@4
	int *v7; // [sp+10h] [bp-4h]@1

	v7 = a1;
	v1 = (_478AAC_map_height + 4) * (_4793F8_map_width + 4);
	v2 = map_fog_of_war_scrl_tiles;
	result = (char *)malloc(v1);
	if (result)
	{
		v4 = result;
		if (v1 > 0)
		{
			v6 = v1;
			do
			{
				if (!*v2)
					goto LABEL_17;
				v5 = 0;
				while (fog_of_war_scrl_source->tiles[v5] != *v2)
				{
					if (++v5 >= 16)
						goto LABEL_11;
				}
				*v4 = v5;
			LABEL_11:
				if (v5 == 16)
					LABEL_17 :
					*v4 = 0;
				++v2;
				++v4;
				--v6;
			} while (v6);
		}
		*v7 = v1;
	}
	else
	{
		errmsg_save[1] = aMemory;
	}
	return result;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (00420B30) --------------------------------------------------------
MiscSaveStruct *GAME_Save_PackMiscInfo(size_t *a1)
{
	void *v1; // ebp@1
	size_t *v2; // esi@1
	size_t v3; // eax@1
	MiscSaveStruct *result; // eax@1
	MiscSaveStruct *v5; // ebx@1
	int v6; // eax@4
	Entity **v7; // eax@6
	int *v8; // edx@6
	int v9; // ecx@8
	void *v10; // eax@11
	int v11; // edx@11
	void **v12; // ecx@12
	int v13; // edi@21
	void *v14; // eax@23
	int v15; // edx@23
	void **v16; // ecx@24
	int v17; // eax@28
	void *v18; // eax@30
	int v19; // edx@30
	void **v20; // ecx@31
	int v21; // eax@35

	v1 = _47C970_sidebar_task->param;
	v2 = a1;
	v3 = stru13construct_list_get_saveload_packed_size() + 376;// + sizeof(MiscSaveStruct)
	*v2 = v3;
	result = (MiscSaveStruct *)malloc(v3);
	v5 = result;
	if (result)
	{
		result->size = stru13construct_list_get_saveload_packed_size();
		memcpy(&v5->stru13stru0, &_47A608_stru13_associated_array, sizeof(v5->stru13stru0));
		v5->field_30 = _47B3E0_unit_int_outpost_clanhall;
		memcpy(&v5->outpost_levels, &_47B3E0_outpost_levels, sizeof(v5->outpost_levels));
		v5->max_outpost_level = max_outpost_level;
		memcpy(&v5->clanhall_levels, &_477378_clanhall, sizeof(v5->clanhall_levels));
		v5->max_clanhall_level = max_clanhall_level;
		memcpy(&v5->machineshop_levels, &_47739C_machineshop, sizeof(v5->machineshop_levels));
		v5->max_machineshop_level = max_machineshop_level;
		memcpy(&v5->beastenclosure_levels, &_477318_beastenclosure, sizeof(v5->beastenclosure_levels));
		v5->max_beastenclosure_level = max_beastenclosure_level;
		memcpy(&v5->stru19_unit, &_47C978_production, sizeof(v5->stru19_unit));
		v5->num_player_units = UNIT_num_player_units;
		v5->num_total_units = UNIT_num_nonplayer_units;
		v5->num_players_towers = num_players_towers;
		v5->field_174 = _4269B0_task_attachment__4_some_task_flags;
		v5->__47A3D0_unit = _47A3D0_unit;
		v5->_47A3D4_unit = _47A3D4_tanker_convoy_units_left;
		v5->_47A3D8_unit = _47A3D8_num_convoy_tankers_still_to_arrive;
		if (entity_scout)
			v6 = entity_scout->entity_id;
		else
			v6 = -1;
		v5->scout_entity_id = v6;
		v7 = _47B3C0_player_outposts_clanhalls;
		v8 = v5->outposts_clanhalls_entity_ids;
		do
		{
			if (*v7)
				v9 = (*v7)->entity_id;
			else
				v9 = -1;
			*v8 = v9;
			++v7;
			++v8;
		} while ((int)v7 < (int) & _47B3D0_building_production_group);
		v5->_47A370_unit = _4269B0_task_attachment__num_units_spawned;
		v5->_47A2F8_unit = _4269B0_task_attachment__num_units_created_manually;
		v5->dword_47CA2C = _47CA2C_should_airstrike_mess_with_sidebar;
		v10 = script_handlers[0];
		v11 = 0;
		if (script_handlers[0] != (void *)-1)
		{
			v12 = script_handlers;
			do
			{
				if (v10 == *(void **)v1)
					break;
				v10 = v12[1];
				++v12;
				++v11;
			} while (v10 != (void *)-1);
		}
		if (script_handlers[v11] == (void *)-1)
			result = 0;
		else
			result = (MiscSaveStruct *)(v11 + 1);
		v5->_47C970_stru0_ptr_3C_handler = (int)result;
		if (result)
		{
			v5->field_128 = *((_DWORD *)v1 + 1);
			result = (MiscSaveStruct *)GAME_Save_PackSprite(*((Sprite **)v1 + 2), (SpriteSerialized *)&v5->field_12C);
			if (result)
			{
				v13 = *((_DWORD *)v1 + 4);
				if (*(_DWORD *)(v13 + 24) == 1)
				{
					v5->field_154 = *(_DWORD *)(v13 + 12);
					v14 = script_handlers[0];
					v15 = 0;
					if (script_handlers[0] != (void *)-1)
					{
						v16 = script_handlers;
						do
						{
							if (v14 == *(void **)(v13 + 64))
								break;
							v14 = v16[1];
							++v16;
							++v15;
						} while (v14 != (void *)-1);
					}
					if (script_handlers[v15] == (void *)-1)
						v17 = 0;
					else
						v17 = v15 + 1;
					v5->field_158 = v17;
					v18 = script_handlers[0];
					v19 = 0;
					if (script_handlers[0] != (void *)-1)
					{
						v20 = script_handlers;
						do
						{
							if (v18 == *(void **)(v13 + 52))
								break;
							v18 = v20[1];
							++v20;
							++v19;
						} while (v18 != (void *)-1);
					}
					if (script_handlers[v19] == (void *)-1)
						v21 = 0;
					else
						v21 = v19 + 1;
					v5->field_15C = v21;
					v5->field_160 = *(_DWORD *)(v13 + 32);
					v5->field_164 = *(_DWORD *)(v13 + 20);
					v5->field_168 = *(_DWORD *)(v13 + 36);
					v5->field_16C = *(_DWORD *)(v13 + 40);
					v5->field_170 = *(_DWORD *)(v13 + 44);
					if (stru13construct_list_saveload_pack(&v5->field_178))
					{
						result = v5;
					}
					else
					{
						errmsg_save[1] = aBadConstructs;
						free(v5);
						result = 0;
					}
				}
				else
				{
					errmsg_save[1] = aTaskIsWrongTyp;
					result = 0;
				}
			}
		}
		else
		{
			errmsg_save[1] = aBadMode;
		}
	}
	else
	{
		errmsg_save[1] = aMemory;
	}
	return result;
}

//----- (00420E30) --------------------------------------------------------
bool GAME_Load_UnpackMiscInfo(void *save_data)
{
	void *v1; // ebx@1
	Entity *v2; // edi@1
	int v3; // ecx@1
	Entity *v4; // eax@2
	Entity **v5; // edx@8
	_DWORD *v6; // esi@8
	Entity *v7; // eax@10
	unsigned int v8; // eax@15
	void(*v9)(Script *); // edx@17
	BOOL result; // eax@20
	unsigned int v11; // ecx@22
	int v12; // ecx@24
	task_sidebar_attachment *v13; // esi@28
	unsigned int v14; // eax@29
	Script *v15; // eax@35

	v1 = save_data;
	memcpy(&_47A608_stru13_associated_array, (char *)save_data + 4, sizeof(_47A608_stru13_associated_array));
	_47B3E0_unit_int_outpost_clanhall = *((_DWORD *)save_data + 12);
	memcpy(&_47B3E0_outpost_levels, (char *)save_data + 52, sizeof(_47B3E0_outpost_levels));
	max_outpost_level = *((_DWORD *)save_data + 22);
	memcpy(&_477378_clanhall, (char *)save_data + 92, sizeof(_477378_clanhall));
	max_clanhall_level = *((_DWORD *)save_data + 32);
	memcpy(&_47739C_machineshop, (char *)save_data + 132, sizeof(_47739C_machineshop));
	max_machineshop_level = *((_DWORD *)save_data + 42);
	memcpy(&_477318_beastenclosure, (char *)save_data + 172, sizeof(_477318_beastenclosure));
	max_beastenclosure_level = *((_DWORD *)save_data + 52);
	memcpy(&_47C978_production, (char *)save_data + 212, sizeof(_47C978_production));
	v2 = entity_list_head;
	UNIT_num_player_units = *((_DWORD *)save_data + 59);
	UNIT_num_nonplayer_units = *((_DWORD *)save_data + 60);
	num_players_towers = *((_DWORD *)save_data + 61);
	_4269B0_task_attachment__4_some_task_flags = *((_DWORD *)save_data + 93);
	_47A3D0_unit = *((_DWORD *)save_data + 62);
	_47A3D4_tanker_convoy_units_left = *((_DWORD *)save_data + 63);
	_47A3D8_num_convoy_tankers_still_to_arrive = *((_DWORD *)save_data + 64);
	v3 = *((_DWORD *)save_data + 65);
	if (v3 == -1 || (v4 = entity_list_head, (Entity **)entity_list_head == &entity_list_head))
	{
	LABEL_5:
		v4 = 0;
	}
	else
	{
		while (v4->entity_id != v3)
		{
			v4 = v4->next;
			if ((Entity **)v4 == &entity_list_head)
				goto LABEL_5;
		}
	}
	entity_scout = v4;
	if (v4)
	{
		sprite_create_scripted(MOBD_CURSORS, 0, script_426710_mission_objectives_draw_x_mark, SCRIPT_COROUTINE, 0);
		v2 = entity_list_head;
	}
	v5 = _47B3C0_player_outposts_clanhalls;
	v6 = (int *)((int)v1 + 264);
	do
	{
		if (*v6 == -1 || (v7 = v2, (Entity **)v2 == &entity_list_head))
		{
		LABEL_13:
			v7 = 0;
		}
		else
		{
			while (v7->entity_id != *v6)
			{
				v7 = v7->next;
				if ((Entity **)v7 == &entity_list_head)
					goto LABEL_13;
			}
		}
		*v5 = v7;
		++v5;
		++v6;
	} while ((int)v5 < (int) & _47B3D0_building_production_group);
	_47CA2C_should_airstrike_mess_with_sidebar = *((_DWORD *)v1 + 72);
	v8 = *((_DWORD *)v1 + 86);
	if (v8 < 1 || v8 > num_script_handlers)
		v9 = 0;
	else
		v9 = *(void(**)(Script *))&aWb__AND__handlers_minus1_indexer[4 * v8];
	if (v9)
	{
		result = (BOOL)script_create_function(*((enum SCRIPT_TYPE *)v1 + 85), v9);
		if (result)
		{
			v11 = *((_DWORD *)v1 + 87);
			if (v11 < 1 || v11 > num_script_handlers)
				v12 = 0;
			else
				v12 = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v11];
			*(_DWORD *)(result + 52) = v12;
			*(_DWORD *)(result + 32) = *((_DWORD *)v1 + 88);
			*(_DWORD *)(result + 20) = *((_DWORD *)v1 + 89);
			*(_DWORD *)(result + 36) = *((_DWORD *)v1 + 90);
			*(_DWORD *)(result + 40) = *((_DWORD *)v1 + 91);
			*(_DWORD *)(result + 44) = *((_DWORD *)v1 + 92);
		}
	}
	else
	{
		result = 0;
	}
	_47C970_sidebar_task = (Script *)result;
	if (result)
	{
		result = (BOOL)script_create_local_object((Script *)result, 20);
		v13 = (task_sidebar_attachment *)result;
		if (result)
		{
			*(_DWORD *)(result + 16) = (int)_47C970_sidebar_task;
			v14 = *((_DWORD *)v1 + 73);
			if (v14 < 1 || v14 > num_script_handlers)
				result = 0;
			else
				result = *(_DWORD *)&aWb__AND__handlers_minus1_indexer[4 * v14];
			v13->handler = (void *)result;
			if (result)
			{
				v13->field_4 = *((_DWORD *)v1 + 74);
				result = (BOOL)GAME_Load_UnpackSprite((SpriteSerialized *)((char *)v1 + 300));
				v13->_8_sprite = (Sprite *)result;
				if (result)
				{
					v15 = v13->__47C970_sidebar_task;
					v13->_C_sprite_sidebar = _47CA08_sidebar_buttons[1]->sprite;
					v15->param = v13;
					v13->__47C970_sidebar_task->sprite = v13->_8_sprite;
					v13->_8_sprite->script = v13->__47C970_sidebar_task;
					v13->_C_sprite_sidebar->field_88_unused = 1;
					v13->_C_sprite_sidebar->x = 155648;
					v13->_C_sprite_sidebar->field_88_unused = 1;
					v13->_C_sprite_sidebar->y = 73728;
					v13->_C_sprite_sidebar->z_index = 2;
					v13->_8_sprite->field_88_unused = 1;
					v13->_8_sprite->x = 156672;
					v13->_8_sprite->field_88_unused = 1;
					v13->_8_sprite->y = 79872;
					v13->_8_sprite->z_index = 3;
					v13->_8_sprite->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
					if (v13->field_4 <= 1)
						v13->_8_sprite->drawjob->flags |= 0x40000000u;
					if (v13->field_4 > 0)
						script_trigger_event(0, EVT_MSG_1514, 0, _47CA08_sidebar_buttons[1]->task);
					v13->_8_sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[player_side]];
					v13->_8_sprite->drawjob->flags |= 0x10000000u;
					sprite_4272E0_load_mobd_item(v13->_8_sprite, 2276, 0);
					result = stru13construct_list_saveload_unpack((int)v1 + 376, *(_DWORD *)v1) != 0;
				}
			}
		}
	}
	return result;
}

//----- (004211D0) --------------------------------------------------------
int GAME_Save()
{
	EntitySaveStructIndex *entity_sAve_data_index; // ebp@1
	OilDepositSaveStruct *oil_save_data; // ebx@3
	Entity *i; // esi@5
	int entity_save_size; // eax@7
	enum UNIT_ID v5; // ecx@9
	void *entity_save_data; // eax@20
	void *entity_sAve_data; // ebp@20
	Entity *v8; // esi@22
	int entity_save_data_i; // edi@22
	int *pentity_save_data_size; // ebx@23
	void *cpu_players; // esi@29
	char *production_info; // edi@31
	_BYTE *map_info; // ebx@34
	FILE *file; // eax@41
	FILE *fIle; // esi@41
	Entity *v16; // edi@49
	int v17; // ebx@50
	Entity *v18; // ebp@59
	char *entity_offsets; // ebx@59
	void *entity_indices; // edi@60
	OilDepositSaveStruct *oil_sAve_data; // [sp+10h] [bp-48h]@3
	int all_data_ok; // [sp+14h] [bp-44h]@1
	void *entity_savE_data; // [sp+18h] [bp-40h]@1
	void *cpU_players; // [sp+1Ch] [bp-3Ch]@1
	char *productiOn_info; // [sp+20h] [bp-38h]@1
	void *v26; // [sp+24h] [bp-34h]@1
	MiscSaveStruct *misc_info; // [sp+28h] [bp-30h]@1
	int save; // [sp+2Ch] [bp-2Ch]@1
	size_t total_entity_size; // [sp+30h] [bp-28h]@1
	int max_entity_save_size; // [sp+34h] [bp-24h]@1
	size_t oil_data_size; // [sp+38h] [bp-20h]@3
	size_t cpu_players_size; // [sp+3Ch] [bp-1Ch]@29
	size_t production_info_size; // [sp+40h] [bp-18h]@31
	size_t map_info_size; // [sp+44h] [bp-14h]@34
	size_t misc_info_size; // [sp+48h] [bp-10h]@36
	int minus_1; // [sp+4Ch] [bp-Ch]@1
	int mapd_cplc_dim[2]; // [sp+50h] [bp-8h]@3

	entity_savE_data = 0;
	cpU_players = 0;
	productiOn_info = 0;
	v26 = 0;
	misc_info = 0;
	minus_1 = -1;
	max_entity_save_size = 0;
	all_data_ok = 0;
	total_entity_size = 0;
	entity_sAve_data_index = (EntitySaveStructIndex *)malloc(0x12B8u);
	save = (int)entity_sAve_data_index;
	if (!entity_sAve_data_index)
	{
		errmsg_save[0] = aCouldnTAllocat;
		return 0;
	}
	mapd_cplc_dim[1] = _47C380_mapd.mapd_cplc_render_y;
	mapd_cplc_dim[0] = _47C380_mapd.mapd_cplc_render_x;
	oil_save_data = GAME_Save_PackOilData(&oil_data_size);
	oil_sAve_data = oil_save_data;
	if (!oil_save_data)
	{
		errmsg_save[0] = aCouldNotSaveOi;
		goto LABEL_40;
	}
	for (i = entity_list_head; (Entity **)i != &entity_list_head; i = i->next)
	{
		if (!i->destroyed)
		{
			entity_save_size = 748;
			entity_sAve_data_index->entity_field_130 = i->entity_id;
			if (i->destroyed)
			{
				entity_save_size = 0;
			}
			else
			{
				v5 = i->unit_id;
				switch (v5)
				{
				case 0x17u:
				case 0x18u:
					entity_save_size = 860;
					break;
				case 0x19u:
					entity_save_size = 760;
					break;
				case 0x2Eu:
				case 0x2Fu:
				case 0x30u:
				case 0x31u:
				case 0x32u:
				case 0x33u:
				case 0x3Au:
				case 0x3Bu:
				case 0x3Cu:
				case 0x3Du:
				case 0x3Eu:
				case 0x3Fu:
				case 0x40u:
				case 0x41u:
				case 0x42u:
					entity_save_size = 776;
					if ((v5 == 65 || v5 == 66) && *((_DWORD *)i->state + 2))
						entity_save_size = 868;
					break;
				default:
					break;
				}
			}
			entity_sAve_data_index->entity_save_size = entity_save_size;
			total_entity_size += entity_save_size;
			if (entity_save_size > max_entity_save_size)
				max_entity_save_size = entity_save_size;
			++entity_sAve_data_index;
		}
	}
	entity_save_data = malloc(total_entity_size);
	entity_sAve_data = entity_save_data;
	entity_savE_data = entity_save_data;
	if (!entity_save_data)
	{
		errmsg_save[0] = aCouldNotAlloca;
		free(oil_save_data);
		goto LABEL_40;
	}
	v8 = entity_list_head;
	entity_save_data_i = (int)entity_save_data;
	if ((Entity **)entity_list_head != &entity_list_head)
	{
		pentity_save_data_size = (int *)(save + 4);
		do
		{
			if (!v8->destroyed)
			{
				if (!GAME_Save_PackEntity(v8, entity_save_data_i, *pentity_save_data_size))
				{
					free(entity_sAve_data);
					free(oil_sAve_data);
					game_save_in_progress = 0;
					errmsg_save[0] = aCouldNotSaveUn;
					return 0;
				}
				entity_save_data_i += *pentity_save_data_size;
				pentity_save_data_size += 2;
			}
			v8 = v8->next;
		} while ((Entity **)v8 != &entity_list_head);
		oil_save_data = oil_sAve_data;
	}
	cpu_players = GAME_Save_PackAiPlayers(&cpu_players_size);
	cpU_players = cpu_players;
	if (!cpu_players)
	{
		errmsg_save[0] = aCouldNotSaveCp;
	LABEL_33:
		free(entity_sAve_data);
		free(oil_save_data);
		goto LABEL_40;
	}
	production_info = GAME_Save_PackProductionInfo(&production_info_size);
	productiOn_info = production_info;
	if (!production_info)
	{
		errmsg_save[0] = aCouldNotSavePr;
		free(cpu_players);
		goto LABEL_33;
	}
	map_info = GAME_Save_PackMapInfo((int *)&map_info_size);
	v26 = map_info;
	if (map_info)
	{
		misc_info = GAME_Save_PackMiscInfo(&misc_info_size);
		if (misc_info)
		{
			all_data_ok = 1;
		}
		else
		{
			errmsg_save[0] = aCouldNotSaveMi;
			free(map_info);
			free(production_info);
			free(cpu_players);
			free(entity_sAve_data);
			free(oil_sAve_data);
		}
	}
	else
	{
		errmsg_save[0] = aCouldNotSaveMa;
		free(production_info);
		free(cpu_players);
		free(entity_sAve_data);
		free(oil_sAve_data);
	}
	oil_save_data = oil_sAve_data;
LABEL_40:
	if (!all_data_ok)
	{
	LABEL_80:
		game_save_in_progress = 0;
		free((void *)save);
		return all_data_ok;
	}
	all_data_ok = 0;
	SetFileAttributesA(current_savegame_filename, 0x80u);
	file = fopen(current_savegame_filename, aWb__AND__handlers_minus1_indexer);
	fIle = file;
	if (!file)
	{
		game_save_in_progress = 0;
		errmsg_save[0] = aCouldnTOpenSav;
		return 0;
	}
	if (!fwrite(&player_side, 1u, 4u, file)
		|| !fwrite(&game_globals_per_player, 1u, 0x1Cu, fIle)
		|| !fwrite(game_globals_cpu, 1u, 0xC4u, fIle)
		|| !fwrite(mapd_cplc_dim, 1u, 8u, fIle)
		|| !fwrite(&oil_data_size, 1u, 4u, fIle)
		|| !fwrite(oil_save_data, 1u, oil_data_size, fIle))
	{
		goto LABEL_78;
	}
	free(oil_save_data);
	v16 = entity_list_head;
	if ((Entity **)entity_list_head != &entity_list_head)
	{
		v17 = save;
		do
		{
			if (!v16->destroyed)
			{
				if (!fwrite((void *)v17, 1u, 4u, fIle))
				{
					free(misc_info);
					free(v26);
					free(productiOn_info);
					free(cpU_players);
					free(entity_savE_data);
					goto LABEL_68;
				}
				v17 += 8;
			}
			v16 = v16->next;
		} while ((Entity **)v16 != &entity_list_head);
	}
	if (!fwrite(&minus_1, 1u, 4u, fIle) || !fwrite(&max_entity_save_size, 1u, 4u, fIle))
	{
	LABEL_78:
		fclose(fIle);
		if (!all_data_ok)
			errmsg_save[0] = aCouldnTWriteTo;
		goto LABEL_80;
	}
	v18 = entity_list_head;
	entity_offsets = (char *)entity_savE_data;
	if ((Entity **)entity_list_head == &entity_list_head)
	{
	LABEL_69:
		free(entity_savE_data);
		if (fwrite(&cpu_players_size, 1u, 4u, fIle))
		{
			if (fwrite(cpU_players, 1u, cpu_players_size, fIle))
			{
				free(cpU_players);
				if (fwrite(&production_info_size, 1u, 4u, fIle))
				{
					if (fwrite(productiOn_info, 1u, production_info_size, fIle))
					{
						free(productiOn_info);
						if (fwrite(&map_info_size, 1u, 4u, fIle))
						{
							if (fwrite(v26, 1u, map_info_size, fIle))
							{
								free(v26);
								if (fwrite(&misc_info_size, 1u, 4u, fIle))
								{
									if (fwrite(misc_info, 1u, misc_info_size, fIle))
									{
										free(misc_info);
										all_data_ok = 1;
									}
								}
							}
						}
					}
				}
			}
		}
		goto LABEL_78;
	}
	entity_indices = (void *)(save + 4);
	while (v18->destroyed)
	{
	LABEL_65:
		v18 = v18->next;
		if ((Entity **)v18 == &entity_list_head)
			goto LABEL_69;
	}
	if (fwrite(entity_indices, 1u, 4u, fIle) && fwrite(entity_offsets, 1u, *(_DWORD *)entity_indices, fIle))
	{
		entity_offsets += *(_DWORD *)entity_indices;
		entity_indices = (char *)entity_indices + 8;
		goto LABEL_65;
	}
	free(misc_info);
	free(v26);
	free(cpU_players);
	free(productiOn_info);
	free(entity_savE_data);
	free(oil_sAve_data);
LABEL_68:
	fclose(fIle);
	game_save_in_progress = 0;
	return 0;
}
// 479FC0: using guessed type int game_save_in_progress;

//----- (004218B0) --------------------------------------------------------
int GAME_Load()
{
	char v0; // bl@1
	Sprite *v1; // eax@1
	Script *v2; // eax@2
	FILE *v3; // eax@3
	FILE *v4; // edi@3
	OilDepositSaveStruct *oil_save_data; // eax@9
	OilDepositSaveStruct *oil_sAve_data; // esi@9
	int i; // ecx@13
	Entity *v8; // eax@14
	Entity *v9; // ecx@20
	Entity *v10; // edx@20
	void *minus1_sized_block; // ebp@23
	Entity *v12; // esi@24
	enum PLAYER_SIDE v13; // eax@28
	void *entity_data; // eax@34
	void *entity_dAta; // esi@34
	void *v16; // eax@38
	void *v17; // esi@38
	char *v18; // eax@42
	char *v19; // ebp@42
	MapdScrlImageTile **v20; // ecx@44
	char *v21; // edx@44
	int v22; // esi@45
	char v23; // al@46
	MapdScrlImageTile *v24; // eax@48
	void *v25; // esi@52
	int result; // eax@56
	size_t block_size; // [sp+10h] [bp-14h]@8
	int ptr; // [sp+14h] [bp-10h]@1
	int v29; // [sp+18h] [bp-Ch]@1
	int mapd_cplc_dim[2]; // [sp+1Ch] [bp-8h]@7

	v0 = 0;
	ptr = -1;
	v29 = 0;
	v1 = sprite_list_find_by_mobd_id(MOBD_CURSORS);
	if (!v1
		|| (v2 = v1->script) == 0
		|| (task_mobd17_cursor = v2,
			UNIT_num_player_units = 0,
			UNIT_num_nonplayer_units = 0,
			v3 = fopen(current_savegame_filename, "rb"),
			(v4 = v3) == 0))
	{
		game_load_in_progress = 0;
		return 0;
	}
	if (!fread(&player_side, 1u, 4u, v3))
		goto LABEL_56;
	if (!fread(&game_globals_per_player, 1u, 0x1Cu, v4))
		goto LABEL_56;
	if (!fread(game_globals_cpu, 1u, 0xC4u, v4))
		goto LABEL_56;
	if (!fread(mapd_cplc_dim, 1u, 8u, v4))
		goto LABEL_56;
	_47C380_mapd.mapd_cplc_render_x = mapd_cplc_dim[0];
	_47C380_mapd.mapd_cplc_render_y = mapd_cplc_dim[1];
	if (!fread(&block_size, 1u, 4u, v4))
		goto LABEL_56;
	oil_save_data = (OilDepositSaveStruct *)malloc(block_size);
	oil_sAve_data = oil_save_data;
	if (!oil_save_data)
		goto LABEL_56;
	if (!fread(oil_save_data, 1u, block_size, v4))
		goto LABEL_56;
	if (!GAME_Load_UnpackOilData(oil_sAve_data))
		goto LABEL_56;
	free(oil_sAve_data);
	if (!fread(&ptr, 1u, 4u, v4))
		goto LABEL_56;
	for (i = ptr; ptr != -1; i = ptr)
	{
		v8 = entity_list_free_pool;
		if (entity_list_free_pool)
			entity_list_free_pool = entity_list_free_pool->next;
		else
			v8 = 0;
		if (!v8)
			goto LABEL_59;
		v8->entity_id = i;
		if (ptr >= _47DCC4_entity_id_counter)
			_47DCC4_entity_id_counter = ptr + 1;
		v9 = entity_list_47D9AC;
		v10 = entity_list_47D9AC->next;
		v8->prev = entity_list_47D9AC;
		v8->next = v10;
		v9->next->prev = v8;
		v9->next = v8;
		if (!fread(&ptr, 1u, 4u, v4))
			goto LABEL_59;
	}
	if (!fread(&block_size, 1u, 4u, v4))
		goto LABEL_56;
	minus1_sized_block = malloc(block_size);
	if (!minus1_sized_block)
	{
	LABEL_56:
		fclose(v4);
		result = v29;
		game_load_in_progress = 0;
		return result;
	}
	v12 = entity_list_head;
	if ((Entity **)entity_list_head == &entity_list_head)
	{
	LABEL_33:
		free(minus1_sized_block);
		if (fread(&block_size, 1u, 4u, v4))// max entity save size
		{
			entity_data = malloc(block_size);
			entity_dAta = entity_data;
			if (entity_data)
			{
				if (fread(entity_data, 1u, block_size, v4))
				{
					if (GAME_Load_UnpackAiPlayers(entity_dAta))
					{
						free(entity_dAta);
						if (fread(&block_size, 1u, 4u, v4))
						{
							v16 = malloc(block_size);
							v17 = v16;
							if (v16)
							{
								if (fread(v16, 1u, block_size, v4))
								{
									if (GAME_Load_UnpackProductionInfo(v17))
									{
										free(v17);
										if (fread(&block_size, 1u, 4u, v4))
										{
											v18 = (char *)malloc(block_size);
											v19 = v18;
											if (v18)
											{
												if (fread(v18, 1u, block_size, v4))
												{
													v20 = map_fog_of_war_scrl_tiles;
													v21 = v19;
													if ((_478AAC_map_height + 4) * (_4793F8_map_width + 4) > 0)
													{
														v22 = (_478AAC_map_height + 4) * (_4793F8_map_width + 4);
														do
														{
															v23 = *v21;
															if (*v21 <= v0 || v23 >= 16)
															{
																v24 = 0;
															}
															else
															{
																v24 = fog_of_war_scrl_source->tiles[v23];
																v0 = 0;
															}
															*v20 = v24;
															++v20;
															++v21;
															--v22;
														} while (v22);
													}
													_44A780_gof_of_war();
													free(v19);
													if (fread(&block_size, 1u, 4u, v4))
													{
														v25 = malloc(block_size);
														if (v25)
														{
															if (fread(v25, 1u, block_size, v4))
															{
																if (GAME_Load_UnpackMiscInfo(v25))
																{
																	free(v25);
																	v29 = 1;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		goto LABEL_56;
	}
	while (fread(&block_size, 1u, 4u, v4)
		&& fread(minus1_sized_block, 1u, block_size, v4)
		&& GAME_Load_UnpackEntity(v12, (EntitySerialized *)minus1_sized_block))
	{
		v13 = v12->player_side;
		if (v13 == player_side)
		{
			++UNIT_num_player_units;
		}
		else if (v13)
		{
			++UNIT_num_nonplayer_units;
		}
		v12 = v12->next;
		if ((Entity **)v12 == &entity_list_head)
			goto LABEL_33;
	}
	free(minus1_sized_block);
LABEL_59:
	fclose(v4);
	game_load_in_progress = 0;
	return 0;
}

//----- (00421D40) --------------------------------------------------------
void GAME_OnSaveFailed()
{
	Script *v0; // eax@1

	v0 = script_create_coroutine(SCRIPT_TYPE_INVALID, script_421D60_on_savegame_failed, 0);
	if (v0)
		v0->field_1C |= 1u;
}

//----- (00421D60) --------------------------------------------------------
void script_421D60_on_savegame_failed(Script *a1)
{
	unsigned int v1; // esi@1
	unsigned int v2; // edi@1
	int v3; // ebx@1
	int v4; // eax@1
	RenderString *v5; // eax@1
	RenderString *v6; // esi@1

	sprintf(str, aSS_0, errmsg_save[0], errmsg_save[1]);
	v1 = (unsigned int)render_width >> 1;
	v2 = (unsigned int)render_height >> 1;
	v3 = _445C00_text(str, 128);
	v4 = _445C80_text(str, 128);
	v5 = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_27].items,
		v1 - (8 * (v4 + 2) >> 1),
		v2 - 32,
		v4 + 2,
		v3 + 2,
		0x40000000,
		8,
		8);
	v6 = v5;
	if (v5)
	{
		render_string_445770(v5, str, 0);
		script_445370_yield_to_main_thread(a1, 0x80000000, 180);
		render_string_list_remove(v6);
	}
}

//----- (00421E20) --------------------------------------------------------
bool is_machine_shop_maxed()
{
	return max_machineshop_level >= 5;
}
// 479FEC: using guessed type int max_machineshop_level;

//----- (00421E30) --------------------------------------------------------
void entity_machineshop_on_upgrade_complete(Script *receiver, Script *sender, enum SCRIPT_EVENT message, void *param)
{
	Script *v4; // edi@1
	Script *v5; // ebp@1
	Entity *v6; // esi@1
	EntityBuildingState *v7; // eax@1
	ProductionGroup *v8; // ebx@1
	int v9; // ecx@1
	bool v10; // sf@1
	int v11; // eax@10

	v4 = receiver;
	v5 = sender;
	v6 = (Entity *)receiver->param;
	v7 = (EntityBuildingState *)v6->state;
	v8 = v7->production_group;
	v9 = v7->num_upgrades + 1;
	v10 = v7->num_upgrades - 4 < 0;
	v7->num_upgrades = v9;
	if (!((unsigned __int8)(v10 ^ __OFSUB__(v9, 5)) | (v9 == 5)))
		v7->num_upgrades = 5;
	if (v6->player_side == player_side)
	{
		--__47739C_machineshop_negindex[v7->num_upgrades];
		++_47739C_machineshop.num_buildings_by_level[v7->num_upgrades];
		if (v7->num_upgrades > max_machineshop_level)
			max_machineshop_level = v7->num_upgrades;
		switch (v7->num_upgrades)
		{
		case 2:
			production_group_enable(v8, UNIT_STATS_SURV_ATV_FLAMETHROWER, 2568);
			break;
		case 3:
			production_group_enable(v8, UNIT_STATS_SURV_ANACONDA_TANK, 2624);
			production_group_enable(v8, UNIT_STATS_SURV_TANKER, 2616);
			break;
		case 4:
			production_group_enable(v8, UNIT_STATS_SURV_BARRAGE_CRAFT, 2560);
			break;
		case 5:
			production_group_enable(v8, UNIT_STATS_SURV_AUTOCANNON_TANK, 2600);
			LOBYTE_HEXRAYS(v11) = is_outpost_maxed();
			if (v11)
				attempt_unlock_aircraft();
			break;
		default:
			break;
		}
	}
	entity_4109A0_status_bar(v6);
	EventHandler_DefaultBuildingsHandler(v4, v5, message, param);
}

//----- (00421F50) --------------------------------------------------------
void EventHandler_MachineShop(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_PRODUCTION_READY:
			v4->sprite->field_88_unused = 1;
			if (spawn_unit(
				(enum UNIT_ID)(int)param,
				v4->stru60.pstru4->x_offset + v4->sprite->x,
				v4->stru60.pstru4->y_offset + v4->sprite->y,
				v4->player_side))
			{
				if (player_side == v4->player_side)
				{
					sound_play(SOUND_SURV_UNIT_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
					show_message_ex(0, aUnitReady);
				}
			}
			break;
		case EVT_MSG_UPGRADE_COMPLETE:
			entity_machineshop_on_upgrade_complete(receiver, sender, event, param);
			break;
		case EVT_MSG_SABOTAGE:
			entity_sabotage(v4, param, entity_mode_machineshop_on_death);
			break;
		case EVT_MSG_DESTROY:
			entity_402E40_destroy((Entity *)receiver->param, entity_mode_machineshop_on_death);
			break;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage(v4, param, entity_mode_machineshop_on_death);
			entity_410520_update_healthbar_color(v4);
			break;
		default:
			EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
			break;
		}
	}
}

//----- (004220B0) --------------------------------------------------------
void entity_4220B0_machineshop(Entity *a1)
{
	Entity *v1; // esi@1
	EntityBuildingState *v2; // edi@1

	v1 = a1;
	v2 = (EntityBuildingState *)a1->state;
	v2->same_buildings_count = 0;
	script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_SURV_MACHINESHOP_HANDLER);
	if (!v2->same_buildings_count && player_side == v1->player_side)
	{
		max_machineshop_level = 1;
		memset(&_47739C_machineshop, 0, sizeof(_47739C_machineshop));
	}
}
// 479FEC: using guessed type int max_machineshop_level;

//----- (00422100) --------------------------------------------------------
void UNIT_Handler_MachineShop(Script *a1)
{
	Entity *v1; // esi@1
	EntityBuildingState *v2; // edi@3

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			v1->script->event_handler = EventHandler_MachineShop;
			entity_44B100_buildings__mess_with_fog_of_war(v1);
			v1->script->script_type = SCRIPT_SURV_MACHINESHOP_HANDLER;
			entity_initialize_building(
				v1,
				2,
				entity_mode_machineshop_on_death_no_default,
				entity_mode_machineshop_set_default_production);
			v2 = (EntityBuildingState *)v1->state;    // -- START OF INLINED entity_404040_production_clanhall -like sub
			v2->same_buildings_count = 0;
			script_trigger_event_group(v1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_SURV_MACHINESHOP_HANDLER);
			if (!v2->same_buildings_count && player_side == v1->player_side)
			{
				max_machineshop_level = 1;
				memset(&_47739C_machineshop, 0, sizeof(_47739C_machineshop));
			}                                         // -- END OF INLINED
			if (!v1->sprite->cplc_ptr1_pstru20)
			{
				entity_402BB0_set_arrive_handler(v1, entity_mode_4223A0_machineshop);
				(v1->mode)(v1);
				return;
			}
			v1->mode = entity_mode_4223A0_machineshop;
		}
		(v1->mode)(v1);
	}
}

//----- (004221D0) --------------------------------------------------------
void entity_mode_machineshop_set_default_production(Entity *a1)
{
	Entity *v1; // esi@1
	enum PLAYER_SIDE v2; // eax@1
	EntityBuildingState *v3; // ebx@1
	ProductionGroup *v4; // eax@9
	ProductionGroup *v5; // esi@9
	enum LEVEL_ID v6; // eax@9
	unsigned int v7; // ecx@9
	unsigned int v8; // edx@11

	v1 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (v2 == player_side)
	{
		if (a1->mode_arrive == entity_mode_machineshop_set_default_production)
		{
			v3->same_buildings_count = 0;
			script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_SURV_MACHINESHOP_HANDLER);
			if (!v3->same_buildings_count && player_side == v1->player_side)
			{
				max_machineshop_level = 1;
				memset(&_47739C_machineshop, 0, sizeof(_47739C_machineshop));
			}
			v1->mode_arrive = 0;
			v1->mode = entity_mode_403650_building;
		}
		if (!v1->sprite->cplc_ptr1_pstru20)
			show_message_ex(0, aBuildingCompleted);
		v4 = entity_building_create_production_group(v1, PRODUCTION_GROUP_VEHICLES);
		v5 = v4;
		v3->production_group = v4;
		v6 = current_level_idx;
		v7 = levels[current_level_idx].disabled_units_mask;
		if (!(BYTE1(v7) & 0x40))
		{
			production_group_enable(v5, UNIT_STATS_SURV_DIRT_BIKE, 2592);
			v6 = current_level_idx;
		}
		v8 = levels[v6].disabled_units_mask;
		if (!(BYTE1(v8) & 0x80))
		{
			production_group_enable(v5, UNIT_STATS_SURV_4x4_PICKUP, 2584);
			v6 = current_level_idx;
		}
		if (!(levels[v6].disabled_units_mask & 0x10000))
		{
			production_group_enable(v5, UNIT_STATS_SURV_ATV, 2576);
			v6 = current_level_idx;
		}
		if (!(levels[v6].disabled_units_mask & 0x20000))
			production_group_enable(v5, UNIT_STATS_SURV_MOBILE_DERRICK, 2228);
		++_47739C_machineshop.num_buildings_by_level[1];
	}
	else if (v2 == 0)
	{
		a1->mode_arrive = entity_mode_machineshop_set_default_production;
	}
}
// 479FEC: using guessed type int max_machineshop_level;

//----- (00422330) --------------------------------------------------------
void entity_mode_machineshop_on_death_no_default(Entity *a1)
{
	EntityBuildingState *v1; // esi@1
	int v2; // edx@2
	int v3; // eax@2
	int *v4; // ecx@5
	int v5; // edx@6
	ProductionGroup *v6; // ecx@9

	v1 = (EntityBuildingState *)a1->state;
	if (player_side == a1->player_side)
	{
		v2 = max_machineshop_level;                 // INLINED recalc new max level
		--_47739C_machineshop.num_buildings_by_level[v1->num_upgrades];
		v3 = v1->num_upgrades;
		if (v3 == v2 && !_47739C_machineshop.num_buildings_by_level[v3])
		{
			if (v3 > 0)
			{
				v4 = &_47739C_machineshop.num_buildings_by_level[v3];
				do
				{
					v5 = *(v4 - 1);
					--v4;
					--v3;
				} while (!v5 && v3 > 0);
			}
			max_machineshop_level = v3;
		}
		v6 = v1->production_group;
		if (v6)
		{
			production_group_446860(v6);
			v1->production_group = 0;
		}
	}
}
// 479FEC: using guessed type int max_machineshop_level;

//----- (004223A0) --------------------------------------------------------
void entity_mode_4223A0_machineshop(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@5

	v1 = a1;
	a1->mode_arrive = 0;
	entity_mode_machineshop_set_default_production(a1);
	if (player_side == v1->player_side && !v1->sprite->cplc_ptr1_pstru20 && !is_player_faction_evolved())
		sound_play(SOUND_SURV_BUILDING_COMPLETED, 0, _4690A8_unit_sounds_volume, 16, 0);
	v2 = v1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00422430) --------------------------------------------------------
void entity_mode_machineshop_on_death(Entity *a1)
{
	Entity *v1; // edi@1
	EntityBuildingState *v2; // esi@1
	int v3; // edx@2
	int v4; // eax@2
	int *v5; // ecx@5
	int v6; // edx@6
	ProductionGroup *v7; // ecx@9

	v1 = a1;
	v2 = (EntityBuildingState *)a1->state;
	if (player_side == a1->player_side)
	{
		v3 = max_machineshop_level;                 // INLINED recalc new max level
		--_47739C_machineshop.num_buildings_by_level[v2->num_upgrades];
		v4 = v2->num_upgrades;
		if (v4 == v3 && !_47739C_machineshop.num_buildings_by_level[v4])
		{
			if (v4 > 0)
			{
				v5 = &_47739C_machineshop.num_buildings_by_level[v4];
				do
				{
					v6 = *(v5 - 1);
					--v5;
					--v4;
				} while (!v6 && v4 > 0);
			}
			max_machineshop_level = v4;
		}
		v7 = v2->production_group;
		if (v7)
		{
			production_group_446860(v7);
			v2->production_group = 0;
		}
	}
	entity_mode_building_default_on_death(v1);
}
// 479FEC: using guessed type int max_machineshop_level;

//----- (004224B0) --------------------------------------------------------
void _4224B0_update_last_level()
{
	enum LEVEL_ID v0; // eax@2

	if (single_player_game)
	{
		v0 = current_level_idx;
		if (current_level_idx >= LEVEL_MUTE_01 && current_level_idx <= LEVEL_MUTE_15)
		{
			current_mute_level = current_level_idx - 14;
			_4243C0_kknd_sve_update_last_level(pKknd_sve);
			v0 = current_level_idx;
		}
		if (v0 >= LEVEL_SURV_01_THE_NEXT_GENERATION && v0 <= LEVEL_SURV_15)
		{
			current_surv_level = v0 + 1;
			_4243C0_kknd_sve_update_last_level(pKknd_sve);
		}
	}
}

//----- (00422500) --------------------------------------------------------
void GAME_ReadRegistry()
{
	DWORD cbData; // [sp+8h] [bp-1Ch]@2
	HKEY phkResult; // [sp+Ch] [bp-18h]@1
	DWORD Type; // [sp+10h] [bp-14h]@2
	BYTE Data[16]; // [sp+14h] [bp-10h]@4

	game_installation_drive_letter = 'C';
	is_minimal_install = 1;
	strcpy(game_data_installation_dir, a_);
	if (!RegOpenKeyExA(
		HKEY_LOCAL_MACHINE,
		"SOFTWARE\\Melbourne House\\Krush, Kill 'n' Destroy Xtreme\\1.00.000",
		0,
		0x20019u,
		&phkResult))
	{
		cbData = 256;
		if (!RegQueryValueExA(phkResult, (LPCSTR)reg_GamePath, 0, &Type, (LPBYTE)game_data_installation_dir, &cbData))
			game_data_installation_dir[cbData] = 0;
		cbData = sizeof(Data);
		if (!RegQueryValueExA(phkResult, (LPCSTR)reg_DriveLetter, 0, &Type, Data, &cbData))
			game_installation_drive_letter = Data[0];
		cbData = 4;
		RegQueryValueExA(phkResult, (LPCSTR)reg_MinimumInstall, 0, &Type, (LPBYTE)&is_minimal_install, &cbData);
		RegCloseKey(phkResult);
	}
}

//----- (00422610) --------------------------------------------------------
bool GAME_ShowWait()
{
	int v0; // eax@12
	int v1; // esi@12
	char *v2; // eax@13
	//char *v3; // eax@16
	DataMapd *v4; // eax@24
	int v5; // esi@24
	int v7; // [sp+0h] [bp-80h]@13
	char v8[120]; // [sp+8h] [bp-78h]@13

	GAME_ReadRegistry();
	_4240E0_kknd_sve_read(pKknd_sve);
	GAME_ParseCommandLine();
	if (!LVL_SysInit())
	{
		GAME_Deinit();
		if (aLvl_sysinitFai)
			printf((const char *)aS, aLvl_sysinitFai);
		exit(0);
	}
	if (!GAME_SetResolution())
	{
		GAME_Deinit();
		if (aLvl_sysinitFai)
			printf((const char *)aS, aLvl_sysinitFai);
		exit(0);
	}
	REND_SetRoutines();

	if (nocd)
		strcpy(app_root_dir, a_);
	else
		sprintf(app_root_dir, aC, game_installation_drive_letter);
	v0 = netz_init(-1, nullsub_1, (int(*)(int))netz_42E820);
	v1 = v0;
	if (v0)
	{
		v2 = netz_get_error_string(v0);
		sprintf(v8, (const char *)aNetz_initFaile, v1, v2);
		GAME_Deinit();
		if (&v7 != (int *)-8)
			printf((const char *)aS, v8);
		exit(0);
	}

	wait_lvl = LVL_LoadLevel("wait.lvl");
	if (!wait_lvl)
	{
		netz_deinit();
		GAME_Deinit();
		if (aLvl_loadlevelW)
			printf((const char *)aS, aLvl_loadlevelW);
		exit(0);
	}
	_47A010_mapd_item_being_drawn[0] = 0;
	_47A010_mapd_item_being_drawn[1] = 0;
	_47A010_mapd_item_being_drawn[2] = 0;
	message_pump();
	if (!LVL_RunLevel(wait_lvl))
	{
		netz_deinit();
		GAME_Deinit();
		if (aWaitLvl_runlev)
			printf((const char *)aS, aWaitLvl_runlev);
		exit(0);
	}
	v4 = LVL_FindMapd();
	_40E400_set_palette(&v4->items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, 0);
	_47C380_mapd.mapd_cplc_render_y = 0x1EA00;     // 490
	v5 = 1;
	do
	{
		draw_list_update_and_draw();
		TimedMessagePump();
		--v5;
	} while (v5);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	LVL_Deinit();
	return 1;
}

//----- (00422860) --------------------------------------------------------
void GAME_PrepareSuperLvl(int mapd_idx)
{
	int mApd_idx; // ebp@1
	//char *v2; // eax@1
	enum LEVEL_ID v3; // ebx@5
	int v4; // ecx@5
	char *v5; // edi@5
	bool v6; // zf@7
	unsigned int v7; // ecx@8
	char v8; // dl@8
	char *v9; // esi@8
	char *v10; // edi@8
	char *v11; // esi@8
	char v12; // cl@8
	unsigned int v13; // ecx@11
	char v14; // al@11
	char *v15; // esi@11
	//char *v16; // eax@12
	DataHunk *v17; // eax@12
	DataMapd *v18; // eax@24
	//char v19[120]; // [sp+10h] [bp-78h]@1

	mApd_idx = mapd_idx;
	sprites_lvl = LVL_LoadLevel("supspr.lvl");
	if (!sprites_lvl)
	{
		LVL_Deinit();
		netz_deinit();
		GAME_Deinit();
		if (aSuperSpriteLoa)
			printf((const char *)aS, aSuperSpriteLoa);
		exit(0);
	}
	v3 = current_level_idx;
	v4 = -1;
	v5 = game_data_installation_dir;
	current_level_idx = LEVEL_INVALID;
	if (_47A2E4_mess_with_game_dir)
	{
		do
		{
			if (!v4)
				break;
			v6 = *v5++ == 0;
			--v4;
		} while (!v6);
		v7 = ~v4;
		v8 = v7;
		v9 = &v5[-(int)v7];
		v7 >>= 2;
		memcpy(game_data_root_dir, v9, 4 * v7);
		v11 = &v9[4 * v7];
		v10 = &game_data_root_dir[4 * v7];
		v12 = v8;
	}
	else
	{
		do
		{
			if (!v4)
				break;
			v6 = *v5++ == 0;
			--v4;
		} while (!v6);
		v13 = ~v4;
		v14 = v13;
		v15 = &v5[-(int)v13];
		v13 >>= 2;
		memcpy(game_data_root_dir, v15, 4 * v13);
		v11 = &v15[4 * v13];
		v10 = &game_data_root_dir[4 * v13];
		v12 = v14;
	}
	memcpy(v10, v11, v12 & 3);

	current_level_idx = v3;
	v17 = LVL_LoadLevel("super.lvl");
	current_level_lvl = v17;
	if (!v17)
	{
		LVL_Deinit();
		netz_deinit();
		GAME_Deinit();
		if (aLvl_loadlevelS)
			printf((const char *)aS, aLvl_loadlevelS);
		exit(0);
	}
	if (!LVL_SubstHunk(v17, sprites_lvl, (const char *)MOBD))
	{
		LVL_Deinit();
		netz_deinit();
		GAME_Deinit();
		if (aLvl_substhunkF)
			printf((const char *)aS, aLvl_substhunkF);
		exit(0);
	}
	if (!LVL_RunLevel(current_level_lvl))
	{
		netz_deinit();
		GAME_Deinit();
		if (aLvl_runlevelFa)
			printf((const char *)aS, aLvl_runlevelFa);
		exit(0);
	}
	v18 = LVL_FindMapd();
	_40E400_set_palette(&v18[mApd_idx].items->palette);
	render_default_stru1->field_8 &= 0xBFFFFFFF;
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)mApd_idx, 0, 0);
	render_default_stru1->clip_z = render_width;
	render_default_stru1->clip_y = 0;
	render_default_stru1->clip_w = render_height;
	sprite_47A400.pstru7 = array_466028;
	if (mApd_idx && mApd_idx != 13)
		sub_444080(mApd_idx);
	cplc_select(mApd_idx);
	cplc_406320();
}
// 47A2E4: using guessed type int _47A2E4_mess_with_game_dir;
// 47A400: using guessed type Sprite sprite_47A400;

//----- (00422AA0) --------------------------------------------------------
// id:
//     0  ->  MelbourneHouse & Intro
//     1  ->  Mission Briefing
int VIDEO_Play(int id)
{
	int v1; // esi@1
	char **v2; // edi@5
	//char *v3; // eax@16
	int result; // eax@17
	//char *v5; // eax@18
	DataHunk *v6; // eax@18
	DataHunk *v7; // ebp@18
	DataMapdItem *v8; // ecx@23
	stru1_draw_params *v9; // esi@25
	stru1_draw_params *v10; // edi@25
	RenderString *v11; // ebx@25
	KeyboardInput keyboard_input; // [sp+10h] [bp-1B8h]@9
	char a1[80]; // [sp+24h] [bp-1A4h]@7
	char v14[80]; // [sp+74h] [bp-154h]@7
	//char v15[260]; // [sp+C4h] [bp-104h]@16
return 1;
	v1 = id;
	VIDEO_IsAllocated();
	stru1_408480_reset_animation();
	stru1_set_animation(0, 0, 0x80000000, 0);
	RENDER_SetViewportAndClear();
	if (!v1)
	{
		draw_list_alloc();
        REND_DirectDrawClearScreen(1);
		sprintf(a1, (const char *)aSFmvMh_fmv_vbc, app_root_dir);
		if (VIDEO_ReadAndAllocDrawJob(a1, 0, 0, 100) == 1 && !VIDEO_IsVideoInvalid())
		{
			while (1)
			{
				input_update_keyboard();
				input_get_keyboard_state(&keyboard_input);
				if (keyboard_input.just_pressed_keys_mask)
					break;
				VIDEO_DoFrame();
				draw_list_update_and_draw();
				TimedMessagePump();
				if (VIDEO_IsVideoInvalid())
					goto LABEL_37;
			}
			VIDEO_free();
		}
	LABEL_37:
		stru1_set_animation(0, 0, 0x80000000, 0);
		sprintf(a1, (const char *)aSFmvS, app_root_dir, intro_vbc);
		if (VIDEO_ReadAndAllocDrawJob(a1, 0, 0, 100) != 1 || VIDEO_IsVideoInvalid())
			goto LABEL_43;
		while (1)
		{
			input_update_keyboard();
			input_get_keyboard_state(&keyboard_input);
			if (keyboard_input.just_pressed_keys_mask)
				goto LABEL_42;
			VIDEO_DoFrame();
			draw_list_update_and_draw();
			TimedMessagePump();
			if (VIDEO_IsVideoInvalid())
				goto LABEL_43;
		}
	}
	if (v1 != 1)
	{
		if (v1 != 2 || _47A18C_probably_play_outro_movie != 1)
			goto LABEL_44;
		_47A18C_probably_play_outro_movie = 0;
		v2 = (char **)aSurvout_vbc;
		if (current_level_idx != 14)
			v2 = (char **)aEvolvout_vbc;
		strcpy(v14, (const char *)v2);
		draw_list_alloc();
		sprintf(a1, (const char *)aSFmvS, app_root_dir, v14);
		if (VIDEO_ReadAndAllocDrawJob(a1, 0, 0, 100) != 1 || VIDEO_IsVideoInvalid())
		{
		LABEL_43:
			draw_list_free();
		LABEL_44:
			VIDEO_free();
			return 1;
		}
		while (1)
		{
			input_update_keyboard();
			input_get_keyboard_state(&keyboard_input);
			if (keyboard_input.just_pressed_keys_mask)
				break;
			VIDEO_DoFrame();
			draw_list_update_and_draw();
			TimedMessagePump();
			if (VIDEO_IsVideoInvalid())
				goto LABEL_43;
		}
	LABEL_42:
		VIDEO_free();
		goto LABEL_43;
	}
	if (current_level_idx >= LEVEL_SURV_16 && current_level_idx <= LEVEL_MUTE_25 || is_game_loading())
		goto LABEL_44;
	if (!sprites_lvl)
	{
		sprites_lvl = LVL_LoadLevel("sprites.lvl");
		if (!sprites_lvl)
			return 0;
	}

	v6 = LVL_LoadLevel(fmv_lvl);
	v7 = v6;
	if (!v6)
		return 0;
	result = LVL_SubstHunk(v6, sprites_lvl, (const char *)MOBD);
	if (result)
	{
		result = LVL_RunLevel(v7);
		if (result)
		{
			render_default_stru1->field_8 &= 0xBFFFFFFF;
			render_default_stru1->clip_z = render_width;
			render_default_stru1->clip_y = 0;
			render_default_stru1->clip_w = render_height;
			if (current_level_idx >= LEVEL_MUTE_01)
			{
				_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, 0);
				v8 = &LVL_FindMapd()->items[0];
			}
			else
			{
				_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_FOG_OF_WAR, 0, -10);
				v8 = &LVL_FindMapd()->items[1];
			}
			_40E400_set_palette(&v8->palette);
			memcpy(&stru_477990, _4785DC_syscolors_palette_entries, 0x400u);
			sprite_47A400.pstru7 = array_466028;
			cplc_select(0);
			cplc_406320();
			sprintf(v14, (const char *)aSFmvS, app_root_dir, levels[current_level_idx].vbc_filename);
			v9 = render_create_stru1(0, 38, 31, 320, 240);
			v10 = render_create_stru1(0, 240, 313, 160, 128);
			v11 = render_string_create(0, currently_running_lvl_mobd[26].items, 400, 40, 25, 28, 90, 8, 8);
			VIDEO_ReadAndAllocDrawJob_2(v14, v9, v10, v11, 320, 240, 100);
			if (!VIDEO_IsVideoInvalid())
			{
				while (1)
				{
					input_update_keyboard();
					input_get_keyboard_state(&keyboard_input);
					if (keyboard_input.just_pressed_keys_mask)
						break;
					_4393F0_call_mapd();
					VIDEO_DoFrame();
					draw_list_update_and_draw();
					TimedMessagePump();
					if (VIDEO_IsVideoInvalid())
						goto LABEL_30;
				}
				VIDEO_free();
			}
		LABEL_30:
			render_string_list_remove(v11);
			render_remove_stru1(v10);
			render_remove_stru1(v9);
			bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
			LVL_Deinit();
			free(v7);
			goto LABEL_44;
		}
	}
	return result;
}

//----- (00412850) --------------------------------------------------------
int nullsub_3(void)
{
    return 1;
}

//----- (00422F60) --------------------------------------------------------
void GAME_PrepareLevel()
{
	enum LEVEL_ID v0; // edx@1
	//char *v1; // eax@3
	//const char *v2; // ST10_4@16
	//char *v3; // eax@16
	DataHunk *level_lvl; // eax@16
	//int v5; // eax@24
	DataMapd *v6; // eax@28
	//char filename[120]; // [sp+8h] [bp-78h]@3

	v0 = current_level_idx;
	if (current_level_idx != prev_level_idx)
	{
		prev_level_idx = current_level_idx;
		if (!sprites_lvl)
		{
			sprites_lvl = LVL_LoadLevel("sprites.lvl");
			if (!sprites_lvl)
			{
				LVL_Deinit();
				netz_deinit();
				GAME_Deinit();
				if (aSpriteLoadFail)
					printf((const char *)aS, aSpriteLoadFail);
				exit(0);
			}
			v0 = current_level_idx;
		}
		if (_47A2E4_mess_with_game_dir
			|| !is_minimal_install
			|| (v0 < LEVEL_SURV_01_THE_NEXT_GENERATION || v0 > LEVEL_MUTE_15) && (v0 < LEVEL_SURV_16 || v0 > LEVEL_MUTE_25))
		{
			strcpy(game_data_root_dir, game_data_installation_dir);
		}
		else
		{
			sprintf(game_data_root_dir, aC, game_installation_drive_letter);
			v0 = current_level_idx;
		}

		level_lvl = LVL_LoadLevel(levels[v0].lvl_filename);
		current_level_lvl = level_lvl;
		if (!level_lvl)
		{
			LVL_Deinit();
			netz_deinit();
			GAME_Deinit();
			if (aLvl_loadlevelS)
				printf((const char *)aS, aLvl_loadlevelS);
			exit(0);
		}
		if (!LVL_SubstHunk(level_lvl, sprites_lvl, (const char *)MOBD))
		{
			LVL_Deinit();
			netz_deinit();
			GAME_Deinit();
			if (aLvl_substhunkF)
				printf((const char *)aS, aLvl_substhunkF);
			exit(0);
		}
	}

	LVL_LoadSlv(slvs[is_player_faction_evolved()]);
	if (!LVL_RunLevel(current_level_lvl))
	{
		netz_deinit();
		GAME_Deinit();
		if (aLvl_runlevelFa)
			printf((const char *)aS, aLvl_runlevelFa);
		exit(0);
	}
	stru1_408480_reset_animation();
	v6 = LVL_FindMapd();
	_40E400_set_palette((PALETTEENTRY *)&v6->items[1]);
	sidebar_button_list_alloc();
	boxd_40E6E0();
	_44C010_init_mission_globals();
	sidebar_initialize();
	stru31_list_alloc();
	if (!UNIT_Init())
	{
		netz_deinit();
		GAME_Deinit();
		if (aUnit_initFaile)
			printf((const char *)aS, aUnit_initFaile);
		exit(0);
	}
	stru37_stru38_list_alloc();
	nullsub_3();
	if (_4690AC_level_wav_sound_offset)
	{
		_47A01C_sound_id = sound_play_threaded(levels[current_level_idx].wav_filename, 1, _4690AC_level_wav_sound_offset, 16, 0);
	}
	render_default_stru1->field_8 &= 0xBFFFFFFF;
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, 0);
	_47A010_mapd_item_being_drawn[1] = MAPD_Draw(MAPD_MAP, 1u, 0x20000000);
	_47A010_mapd_item_being_drawn[1]->draw_job->on_update_handler = drawjob_update_handler_level_background;
	MAPD_44BD50_alter_tile_flags();
	render_default_stru1->clip_z = render_width;
	render_default_stru1->clip_y = 0;
	render_default_stru1->clip_w = render_height;
	sprite_47A400.pstru7 = array_466028;
	if (is_game_loading())
	{
		prev_level_idx = -1;
		cplc_init_scripts();
		if (!GAME_Load())
		{
			LVL_Deinit();
			netz_deinit();
			GAME_Deinit();
			if (aLoadgamestateF)
				printf((const char *)aS, aLoadgamestateF);
			exit(0);
		}
		game_state = 0;
	}
	else
	{
		cplc_init_sripts_with_reinit();
	}
}

//----- (00423320) --------------------------------------------------------
bool on_level_finished()
{
	Bitmap **v0; // esi@1
	void *v1; // eax@12

	v0 = _47A010_mapd_item_being_drawn;
	do
	{
		if (*v0)
		{
			bitmap_list_remove(*v0);
			*v0 = 0;
		}
		++v0;
	} while ((int)v0 < (int) & _47A01C_sound_id);
	nullsub_1();
	stru37_stru38_list_free();
	_44C5C0_level_cleanup();
	stru31_list_free();
	sidebar_deinit();
	per_player_sprite_palettes_47DC88_free();
	boxd_40EA30_cleanup();
	sidebar_list_free();
	if (game_state != 2 || current_level_idx >= LEVEL_SURV_16 && current_level_idx <= LEVEL_MUTE_25)
	{
		LVL_Deinit();
		sound_free_sounds();
		free(current_level_lvl);
		free(sprites_lvl);
		sprites_lvl = 0;
		prev_level_idx = -1;
	}
	else
	{
		prev_level_idx = current_level_idx;
		cplc_4060F0();
		LVL_Deinit();
		sound_free_sounds();
	}
	if (!single_player_game && !*(_DWORD *)&netz_47A740[2].str_0[0])
	{
		v1 = (void *)j_netz_430690();
		netz_42F650(v1);
		netz_42F8E0(0);
	}
	if (game_state != 1)
	{
		if (game_state != 2)
			return 0;
		return 1;
	}
	if (is_game_loading())
	{
		prev_level_idx = -1;
		current_level_idx = get_saveload_level_id();
		set_player_side_by_level();
		return 1;
	}
	if (current_level_idx < LEVEL_SURV_16 || current_level_idx > LEVEL_MUTE_25)
	{
		if (current_level_idx != LEVEL_MUTE_15 && current_level_idx != LEVEL_SURV_15)
		{
			current_level_idx = (LEVEL_ID)((int)current_level_idx + 1);
			set_player_side_by_level();
			return 1;
		}
		_47A18C_probably_play_outro_movie = 1;
	}
	return 0;
}

//----- (00423460) --------------------------------------------------------
int GAME_Main()
{
	int result; // eax@2
	int mapd_idx; // ecx@5
	Bitmap **v3; // esi@27

	timeBeginPeriod(1u);
	if (GAME_ShowWait())
	{
		if (VIDEO_Play(0))
		{
		LABEL_5:
            REND_DirectDrawClearScreen(1);
			mapd_idx = 0;
			netz_47A82C = 0;
			if (!single_player_game)
			{
				if (*(_DWORD *)&netz_47A740[2].str_0[0])
				{
					if (netz_47A834)
					{
						j_netz_430640();
						mapd_idx = 7;
					}
					else
					{
						mapd_idx = 8;
					}
				}
				else
				{
					mapd_idx = netz_468B6C_providers_idx != 0 ? 1 : 4;
				}
			}
			GAME_PrepareSuperLvl(mapd_idx);
			game_state = 0;
			do
			{
				sprite_list_init_mobd_items();
				sprite_list_update_positions();
				input_update_keyboard();
				input_update_mouse();
				_43A370_process_sound();
				stru1_animate();
				script_list_update();
				_4393F0_call_mapd();
				VIDEO_DoFrame();
				draw_list_update_and_draw();
				TimedMessagePump();
			} while (!_47DCF4_wm_quit_received && !game_state);

            for (int mapd_item = 0; mapd_item < 3; ++mapd_item)
            {
                if (_47A010_mapd_item_being_drawn[mapd_item])
                {
                    bitmap_list_remove(_47A010_mapd_item_being_drawn[mapd_item]);
                    _47A010_mapd_item_being_drawn[mapd_item] = 0;
                }
            }

			LVL_Deinit();
			dword_47A180 = 0;
			free(current_level_lvl);
			free(sprites_lvl);
			sprites_lvl = 0;
			if (is_game_loading())
			{
				prev_level_idx = -1;
				current_level_idx = get_saveload_level_id();
				set_player_side_by_level();
			}
			if (game_state != 3)
			{
				while (1)
				{
                    REND_DirectDrawClearScreen(1);
					if (!is_game_loading())
					{
						if (current_level_idx < LEVEL_SURV_16 || current_level_idx > LEVEL_MUTE_25)
						{
							//VIDEO_Play(1);
						}
						else
						{
							GAME_PrepareSuperLvl(13);
							game_state = 0;
							do
							{
								sprite_list_init_mobd_items();
								sprite_list_update_positions();
								input_update_keyboard();
								input_update_mouse();
								_43A370_process_sound();
								stru1_animate();
								script_list_update();
								_4393F0_call_mapd();
								VIDEO_DoFrame();
								draw_list_update_and_draw();
								TimedMessagePump();
							} while (!_47DCF4_wm_quit_received && !game_state);
							v3 = _47A010_mapd_item_being_drawn;
							do
							{
								if (*v3)
								{
									bitmap_list_remove(*v3);
									*v3 = 0;
								}
								++v3;
							} while ((int)v3 < (int) & _47A01C_sound_id);
							LVL_Deinit();
							dword_47A180 = 0;
							free(current_level_lvl);
							free(sprites_lvl);
							sprites_lvl = 0;
							if (is_game_loading())
							{
								prev_level_idx = -1;
								current_level_idx = get_saveload_level_id();
								set_player_side_by_level();
							}
						}
						if (_47DCF4_wm_quit_received)
							break;
					}
					GAME_PrepareLevel();
					game_state = 0;
					do
					{
						if (!single_player_game)
							is_coroutine_list_initialization_failed = dword_47A738 != 0;
						sprite_list_init_mobd_items();
						sprite_list_update_positions();
						input_update_keyboard();
						input_update_mouse();
						_43A370_process_sound();
						stru1_animate();
						boxd_40EA20();
						_44C4B0_mess_with_turrets();
						script_list_update();
						_4393F0_call_mapd();
						draw_list_update_and_draw();
						TimedMessagePump();
						if (is_game_saving())
						{
							sound_list_43A800(0);
							if (!GAME_Save())
								GAME_OnSaveFailed();
							sound_list_43A800(_4690AC_level_wav_sound_offset);
						}
					} while (!_47DCF4_wm_quit_received && !game_state);
					if (!on_level_finished())
					{
						dword_47CB0C = 0;
						VIDEO_Play(2);
						if (!_47DCF4_wm_quit_received)
							goto LABEL_5;
						break;
					}
				}
			}
			netz_deinit();
			free(wait_lvl);
			sound_free_sounds();
			GAME_Deinit();
			timeEndPeriod(1u);
			result = 0;
		}
		else
		{
			free(wait_lvl);
			sound_free_sounds();
			GAME_Deinit();
			result = 1;
		}
	}
	else
	{
		result = 1;
	}
	return result;
}

//----- (00423A70) --------------------------------------------------------
void script_custom_mission_briefing_loop(Script *a1)
{
	int v2; // edi@4
	KeyboardInput keys_state; // [sp+10h] [bp-118h]@5
	//char name[260]; // [sp+24h] [bp-104h]@4

	if (current_level_idx > LEVEL_SURV_25)
	{
		_47A1AC_is_custom_surv_mission = 0;
		_47A1A8_custom_mission_idx = current_level_idx - LEVEL_MUTE_16;
	}
	else
	{
		_47A1AC_is_custom_surv_mission = 1;
		_47A1A8_custom_mission_idx = current_level_idx - LEVEL_SURV_16;
	}
	a1->script_type = SCRIPT_TYPE_17;

	srand(GetTickCount());
	_47C380_mapd.mapd_cplc_render_y = 122880 * (rand() % 6);

	script_4084A0_animation(a1);
	_47C65C_render_string = render_string_create(0, currently_running_lvl_mobd[80].items, 84, 84, 39, 19, 90, 14, 16);
	render_string_445AE0(_47C65C_render_string);
	_47C65C_render_string->field_18 = 0;
	_47C65C_render_string->num_lines = 0;
	_47A1B0_custom_mission_briefing_ui = 0;
	_47A1A4_custom_mission_briefing_line = 0;
	dword_47A1A0 = 480;
	_423C60_custom_mission_make_briefing_lines(0);
	dword_47A19C = 0;
	v2 = 0;
	_47A198_custom_mission_briefing_sound_id = sound_play_threaded(custom_missions[_47A1A8_custom_mission_idx + 10 * _47A1AC_is_custom_surv_mission].wav_filename, 0, 16, 16, 0);
	while (1)
	{
		do
		{
			script_445370_yield_to_main_thread(a1, 0x80000000, 1);
			input_get_keyboard_state(&keys_state);
			if (keys_state.just_pressed_keys_mask & INPUT_KEYBOARD_ESCAPE_MASK)
			{
				sound_stop(_47A198_custom_mission_briefing_sound_id);
				_47A198_custom_mission_briefing_sound_id = 0;
				render_string_list_remove(_47C65C_render_string);
				_47C65C_render_string = 0;
				a1->sprite->script = 0;
				goto LABEL_12;
			}
			++v2;
		} while (v2 != 2);
		v2 = 0;
		++_47A1B0_custom_mission_briefing_ui;
		if (dword_47A19C)
		{
			if (!--dword_47A19C)
				break;
		}
		_423C60_custom_mission_make_briefing_lines(1);
	}
	sound_stop(_47A198_custom_mission_briefing_sound_id);
	_47A198_custom_mission_briefing_sound_id = 0;
	render_string_list_remove(_47C65C_render_string);
	_47C65C_render_string = 0;
	a1->sprite->script = 0;
LABEL_12:
	sprite_list_remove(a1->sprite);
	script_408500_anim(a1);
	game_state = 3;
}

//----- (00423C60) --------------------------------------------------------
void _423C60_custom_mission_make_briefing_lines(int a1)
{
	int v1; // edx@1
	int v2; // ebx@4
	int v3; // eax@4
	char *briefing; // edi@4
	int line_type; // ebp@9
	int v6; // esi@17
	int y; // esi@19
	int v8; // ebp@20
	int v9; // eax@22
	bool v10; // sf@24
	unsigned __int8 v11; // of@24
	int v12; // [sp+10h] [bp-8h]@1
	int v13; // [sp+14h] [bp-4h]@1

	v1 = 0;
	v13 = a1;
	v12 = 0;
	do
	{
		if (!v13 || render_string_4059C0(_47C65C_render_string, v1, 0))
		{
			v2 = 0;
			v3 = _47A1A4_custom_mission_briefing_line;
			briefing = (char *)custom_missions[_47A1A8_custom_mission_idx + 10 * _47A1AC_is_custom_surv_mission].briefing[_47A1A4_custom_mission_briefing_line];
			if (briefing)
			{
				v3 = _47A1A4_custom_mission_briefing_line++ + 1;
			}
			else
			{
				if (!dword_47A19C)
					dword_47A19C = 490;
				briefing = asc_464C60;
			}
			line_type = 0;
			if (*briefing == '%')
			{
				v2 = 1;
				++briefing;
				line_type = 1;
			}
			if (*briefing == '~')
			{
				v2 = 1;
				++briefing;
				line_type = 2;
			}
			if (v2 && v3 && line_type != 1 && line_type == 2)
			{
				v6 = dword_47A1A0 + 30;
				dword_47A1A0 += 30;
			}
			else
			{
				v6 = dword_47A1A0;
			}
			y = v6 - _47A1B0_custom_mission_briefing_ui;
			render_string_405A20(_47C65C_render_string, v12, y);
			_47C65C_render_string->num_lines = v12;
			_47C65C_render_string->field_18 = 0;
			render_string_405A60(_47C65C_render_string, asc_464C60, 0, y);
			_47C65C_render_string->field_18 = 0;
			render_string_405A60(_47C65C_render_string, briefing, 0, y);
			render_string_405A60(_47C65C_render_string, asc_464C88, 0, y);
			if (v2)
			{
				v8 = line_type - 1;
				if (!v8)
				{
					v9 = dword_47A1A0 + 30;
					goto LABEL_23;
				}
				if (v8 != 1)
					goto LABEL_24;
			}
			v9 = dword_47A1A0 + 20;
		LABEL_23:
			dword_47A1A0 = v9;
		}
	LABEL_24:
		v1 = v12 + 1;
		v11 = __OFSUB__(v12 + 1, 17);
		v10 = v12++ - 16 < 0;
	} while (v10 ^ v11);
}
// 47A19C: using guessed type int dword_47A19C;
// 47A1A0: using guessed type int dword_47A1A0;
// 47A1A4: using guessed type int _47A1A4_custom_mission_briefing_line;
// 47A1A8: using guessed type int _47A1A8_custom_mission_idx;
// 47A1AC: using guessed type int _47A1AC_is_custom_surv_mission;
// 47A1B0: using guessed type int _47A1B0_custom_mission_briefing_ui;

//----- (00423DD0) --------------------------------------------------------
void cplc_init_sripts_with_reinit()
{
	int v0; // esi@1

	v0 = 0;
	do
	{
		if (v0 != 84)                             //  46EE08  Script4  MOBD_20
			cplc_init_script_do_reinit(v0);
		++v0;
	} while (v0 < 196);
}

//----- (00423DF0) --------------------------------------------------------
void cplc_init_scripts()
{
	int v0; // esi@1

	v0 = 0;
	do
	{
		if (v0 != 84)                             // 46EE08  Script4  MOBD_20
		{
			if (v0 == 6                              // 46E6B8  Script4  MOBD_6_some_letters_and_symbols
				|| v0 == 75                             // 46ED30  Script4  MOBD_20                     task_431E60_mobd_20_input
				|| v0 == 77                             // 46ED60  Script4  MOBD_INGAME_MENU_CONTROLS   task_433060_ingame_menu
				|| v0 == 78                             // 46ED78  Script4  MOBD_SIDEBAR_BUTTONS        task_446ED0_sidebar_buttons
				|| v0 == 9                              // 46E700  Script4  MOBD_MISSION_OUTCOME_MODAL
				|| v0 == 79                             // 46ED90  Script4  MOBD_MISSION_OUTCOME_MODAL  task_424CE0_mission_outcome_modal
				|| v0 == 80                             // 46EDA8  Script4  MOBD_CURSORS                task_428940_cursors_handler
				|| v0 == 85                             // 46EE20  Script2  MOBD_46                     task_442BB0_mobd_46
				|| v0 == 122                            // 46F3E0  Script1  MOBD_20                     task_4269B0_mobd_20_handler
				|| v0 == 81                             // 46EDC0  Script4  MOBD_FONT_27                task_42D030_mobd_font_27_handler
				|| v0 == 73)                           // 46ED00  Script4  MOBD_FONT_ITALIC
			{
				if (v0 != 84)
					cplc_init_script_do_reinit(v0);
			}
			else
			{
				cplc_init_script_dont_reinit(v0);
			}
		}
		++v0;
	} while (v0 < 196);
}

//----- (00423E50) --------------------------------------------------------
void set_player_side_by_level()
{
	int surv_main_campaign; // ecx@3
	int surv_xtreme_campaign; // eax@7
	int v2; // ecx@13
	int v3; // eax@17

	surv_main_campaign = current_level_idx >= LEVEL_SURV_01_THE_NEXT_GENERATION && current_level_idx <= LEVEL_SURV_15;
	surv_xtreme_campaign = current_level_idx >= LEVEL_SURV_16 && current_level_idx <= LEVEL_SURV_25;
	if (surv_main_campaign | surv_xtreme_campaign)
	{
		player_side = SURVIVORS;
		current_surv_level = current_level_idx;
	}
	else
	{
		v2 = current_level_idx >= LEVEL_MUTE_01 && current_level_idx <= LEVEL_MUTE_15;
		v3 = current_level_idx >= LEVEL_MUTE_16 && current_level_idx <= LEVEL_MUTE_25;
		if (v2 | v3)
		{
			player_side = EVOLVED;
			current_mute_level = current_level_idx - 15;
		}
	}
}
// 47A2DC: using guessed type __int16 current_mute_level;
// 47A2E0: using guessed type __int16 current_surv_level;

//----- (00423ED0) --------------------------------------------------------
char GAME_ParseCommandLine()
{
	char *v0; // eax@1
	char *v1; // edi@1
	char *v2; // edx@1
	char i; // cl@1
	char v4; // cl@7
	char j; // cl@12
	char *v6; // edx@13
	char v7; // cl@19
	char v8; // cl@28
	char **v9; // esi@36
	char *v10; // ecx@36
	bool v11; // cf@37
	int v12; // ecx@41
	char **v13; // esi@45
	char *v14; // ecx@45
	bool v15; // cf@46
	int v16; // ecx@50

	dword_47A2BC = 0;
	v0 = GetCommandLineA();
	v1 = v0;
	v2 = global_console_argv;
	global_cmd_line = v0;
	for (i = *v0; *v1; i = *v1)
	{
		if (i == ' ')
			break;
		if (i == '\r')
			break;
		if (i == '\n')
			break;
		if (i == '\t')
			break;
		*v2++ = i;
		global_cmd_line = ++v1;
	}
	while (1)
	{
		v4 = *v1;
		if (*v1 != ' ' && v4 != '\r' && v4 != '\n' && v4 != '\t')
			break;
		global_cmd_line = ++v1;
	}
	*v2 = 0;
	for (j = *v1; *v1; j = *v1)
	{
		v6 = global_console_argv;
		if (j)
		{
			do
			{
				if (j == ' ')
					break;
				if (j == '\r')
					break;
				if (j == '\n')
					break;
				if (j == '\t')
					break;
				*v6++ = j;
				global_cmd_line = ++v1;
				j = *v1;
			} while (*v1);
		}
		while (1)
		{
			v7 = *v1;
			if (*v1 != ' ' && v7 != '\r' && v7 != '\n' && v7 != '\t')
				break;
			global_cmd_line = ++v1;
		}
		*v6 = 0;
		if (!strcmp(global_console_argv, (const char *)console_switch_stats))
		{
			if (*v1)
			{
				printf((const char *)errmsg_no_stats_file_specified);
				exit(1);
			}
			while (1)
			{
				v8 = *v1;
				if (*v1 != ' ' && v8 != '\r' && v8 != '\n' && v8 != '\t')
					break;
				global_cmd_line = ++v1;
			}
			global_console_argv[0] = 0;
			v0 = (char *)_424560_parse_unit_stats_table(global_console_argv);
			if (!v0)
				exit(1);
			v1 = global_cmd_line;
			units_stats_parsed_from_argv = 1;
		}
		else
		{
			v9 = (char **)console_switch_noblack;
			v10 = global_console_argv;
			while (1)
			{
				LOBYTE_HEXRAYS(v0) = *v10;
				v11 = (unsigned __int8)*v10 < *(_BYTE *)v9;
				if (*v10 != *(_BYTE *)v9)
					break;
				if (!*v10)
					goto LABEL_41;
				LOBYTE_HEXRAYS(v0) = v10[1];
				v11 = (unsigned __int8)v0 < *((_BYTE *)v9 + 1);
				if ((_BYTE)v0 != *((_BYTE *)v9 + 1))
					break;
				v10 += 2;
				v9 = (char **)((char *)v9 + 2);
				if (!(_BYTE)v0)
				{
				LABEL_41:
					v12 = 0;
					goto LABEL_43;
				}
			}
			v12 = -v11 - (v11 - 1);
		LABEL_43:
			if (v12)
			{
				v13 = (char **)console_switch_nocd;
				v14 = global_console_argv;
				while (1)
				{
					LOBYTE_HEXRAYS(v0) = *v14;
					v15 = (unsigned __int8)*v14 < *(_BYTE *)v13;
					if (*v14 != *(_BYTE *)v13)
						break;
					if (!*v14)
						goto LABEL_50;
					LOBYTE_HEXRAYS(v0) = v14[1];
					v15 = (unsigned __int8)v0 < *((_BYTE *)v13 + 1);
					if ((_BYTE)v0 != *((_BYTE *)v13 + 1))
						break;
					v14 += 2;
					v13 = (char **)((char *)v13 + 2);
					if (!(_BYTE)v0)
					{
					LABEL_50:
						v16 = 0;
						goto LABEL_52;
					}
				}
				v16 = -v15 - (v15 - 1);
			LABEL_52:
				if (!v16)
					nocd = 1;
			}
			else
			{
				_47A2EC_noblack = 1;
			}
		}
	}
	return (unsigned int)v0;
}

//----- (004240E0) --------------------------------------------------------
void _4240E0_kknd_sve_read(const char *filename)
{
	FILE *v1; // edi@1
	int v2; // ecx@2
	int *v3; // esi@3
	int v4; // ecx@11
	int *v5; // esi@12
	int v6; // [sp+8h] [bp-10Ch]@2
	int v7; // [sp+Ch] [bp-108h]@4
	char FileName[260]; // [sp+10h] [bp-104h]@1

	wsprintfA(FileName, (LPCSTR)aSS, game_data_installation_dir, filename);
	SetFileAttributesA(FileName, 0x80u);
	v1 = fopen(FileName, aR);
	if (v1)
	{
		fscanf(v1, "%03d", &v6);
		v2 = 47 - v6;
		v6 = 47 - v6;
		if (v6)
		{
			v3 = kknd_sve_array_463070;
			while (1)
			{
				fscanf(v1, "%03d", &v7);
				v2 = v6;
				v7 ^= *v3;
				if (v7 != v6)
					break;
				++v3;
				if ((int)v3 >= (int)kknd_sve_array_4630AC)
					goto LABEL_8;
			}
			v2 = 0;
			v6 = 0;
		}
	LABEL_8:
		if (v2)
			current_surv_level = 47 - v2;
		else
			current_surv_level = 0;
		fscanf(v1, "%03d", &v6);
		v4 = 69 - v6;
		v6 = 69 - v6;
		if (v6)
		{
			v5 = kknd_sve_array_4630AC;
			while (1)
			{
				fscanf(v1, "%03d", &v7);
				v4 = v6;
				v7 ^= *v5;
				if (v7 != v6)
					break;
				++v5;
				if ((int)v5 >= (int)&dword_4630E8)
					goto LABEL_17;
			}
			v4 = 0;
			v6 = 0;
		}
	LABEL_17:
		if (v4)
		{
			current_mute_level = 69 - v4;
			fclose(v1);
		}
		else
		{
			current_mute_level = 0;
			fclose(v1);
		}
	}
	else
	{
		current_surv_level = 0;
		current_mute_level = 0;
	}
}

//----- (00424270) --------------------------------------------------------
void _424270_kknd_sve_read(const char *a1, _WORD *a2, _WORD *a3)
{
	_WORD *v3; // ebx@1
	FILE *v4; // edi@1
	int v5; // ecx@2
	int *v6; // esi@3
	int v7; // ecx@11
	int *v8; // esi@12
	int v9; // [sp+8h] [bp-8h]@2
	int v10; // [sp+Ch] [bp-4h]@4

	v3 = a2;
	v4 = fopen(a1, aR);
	if (v4)
	{
		fscanf(v4, "%03d", &v9);
		v5 = 47 - v9;
		v9 = 47 - v9;
		if (v9)
		{
			v6 = kknd_sve_array_463070;
			while (1)
			{
				fscanf(v4, "%03d", &v10);
				v5 = v9;
				v10 ^= *v6;
				if (v10 != v9)
					break;
				++v6;
				if ((int)v6 >= (int)kknd_sve_array_4630AC)
					goto LABEL_8;
			}
			v5 = 0;
			v9 = 0;
		}
	LABEL_8:
		if (v5)
			*v3 = 47 - v5;
		else
			*v3 = 0;
		fscanf(v4, "%03d", &v9);
		v7 = 69 - v9;
		v9 = 69 - v9;
		if (v9)
		{
			v8 = kknd_sve_array_4630AC;
			while (1)
			{
				fscanf(v4, "%03d", &v10);
				v7 = v9;
				v10 ^= *v8;
				if (v10 != v9)
					break;
				++v8;
				if ((int)v8 >= (int)&dword_4630E8)
					goto LABEL_17;
			}
			v7 = 0;
			v9 = 0;
		}
	LABEL_17:
		if (v7)
		{
			*a3 = 69 - v7;
			fclose(v4);
		}
		else
		{
			*a3 = 0;
			fclose(v4);
		}
	}
	else
	{
		*v3 = 0;
		*a3 = 0;
	}
}
// 4630E8: using guessed type int dword_4630E8;

//----- (004243C0) --------------------------------------------------------
void _4243C0_kknd_sve_update_last_level(const char *a1)
{
	FILE *v1; // edi@1
	int v2; // ebx@3
	int *v3; // esi@5
	int v4; // ebx@8
	int *v5; // esi@10
	int v6; // [sp+8h] [bp-108h]@1
	int a2; // [sp+Ch] [bp-104h]@1
	char filename[256]; // [sp+10h] [bp-100h]@1

	a2 = 0;
	v6 = 0;
	wsprintfA(filename, (LPCSTR)aSS, game_data_installation_dir, a1);
	SetFileAttributesA(filename, 0x80u);

    short _a2, _v6;
	_424270_kknd_sve_read(filename, &_a2, &_v6);
    a2 = _a2;
    v6 = _v6;

	v1 = fopen(filename, (const char *)aW);
	if (v1)
	{
		if ((unsigned __int16)current_surv_level <= (int)(unsigned __int16)a2)
		{
			v2 = 47 - (unsigned __int16)a2;
			fprintf(v1, "%03d", (unsigned __int16)a2);
			current_surv_level = a2;
		}
		else
		{
			v2 = 47 - (unsigned __int16)current_surv_level;
			fprintf(v1, "%03d", (unsigned __int16)current_surv_level);
		}
		v3 = kknd_sve_array_463070;
		do
		{
			fprintf(v1, "%03d", *v3 ^ v2);
			++v3;
		} while ((int)v3 < (int)kknd_sve_array_4630AC);
		if ((unsigned __int16)current_mute_level <= (int)(unsigned __int16)v6)
		{
			v4 = 69 - (unsigned __int16)v6;
			fprintf(v1, "%03d", (unsigned __int16)v6);
			current_mute_level = v6;
		}
		else
		{
			v4 = 69 - (unsigned __int16)current_mute_level;
			fprintf(v1, "%03d", (unsigned __int16)current_mute_level);
		}
		v5 = kknd_sve_array_4630AC;
		do
		{
			fprintf(v1, "%03d", *v5 ^ v4);
			++v5;
		} while ((int)v5 < (int)&dword_4630E8);
		fclose(v1);
	}
}

//----- (00424560) --------------------------------------------------------
bool _424560_parse_unit_stats_table(const char *filename)
{
	const char *v1; // esi@1
	FILE *v2; // eax@1
	FILE *v3; // ebx@1
	char *v4; // esi@3
	UnitNameId *v5; // ebp@3
	const char *v6; // eax@6
	UnitStat *unit_stat; // edi@10
	char *v8; // eax@10
	int v9; // eax@12
	char *v10; // eax@16
	int v11; // esi@18
	unsigned int v12; // edx@20
	char *v13; // eax@22
	int v14; // eax@24
	char *v15; // eax@28
	int v16; // eax@30
	char *v17; // eax@37
	int v18; // eax@39
	UnitAttachmentPoint *v19; // ecx@42
	char *v20; // eax@45
	int v21; // eax@47
	UnitAttachmentPoint *v22; // ecx@50
	char *v23; // eax@54
	int v24; // eax@56
	UnitAttachmentPoint *v25; // ecx@59
	char *v26; // eax@62
	int v27; // eax@64
	char *v28; // eax@68
	int v29; // eax@70
	char *v30; // eax@74
	int v31; // eax@76
	char *v32; // eax@80
	int v33; // eax@82
	UnitAttachmentPoint *v34; // ecx@85
	UnitDamageSource *v35; // ecx@86
	char *v36; // eax@89
	int v37; // eax@91
	UnitAttachmentPoint *v38; // ecx@94
	UnitDamageSource *v39; // ecx@95
	char *v40; // eax@98
	int v41; // eax@100
	UnitAttachmentPoint *v42; // ecx@103
	UnitDamageSource *v43; // ecx@104
	BOOL result; // eax@110
	char line[1024]; // [sp+8h] [bp-400h]@2

	v1 = filename;
	v2 = fopen(filename, "rb");
	v3 = v2;
	if (v2)
	{
		if (fgets(line, 1024, v2))
		{
			do
			{
				v4 = strtok(line, asc_space);
				v5 = unit_name_id_lut;
				if (line[0] != '\n' && line[0] != '\r' && line[0] != ';')
				{
					v6 = unit_name_id_lut[0].unit_name;
					if (unit_name_id_lut[0].unit_name)
					{
						while (strcmp(v6, v4))
						{
							v6 = v5[1].unit_name;
							++v5;
							if (!v6)
								goto LABEL_107;
						}
						unit_stat = &unit_stats[v5->id];
						v8 = strtok(0, _4681EC_whitespace);
						v4 = v8;
						if (v8)
						{
							if (*v8 != '-')
							{
								v9 = atoi(v8);
								if (v9 >= 1 && v9 <= 60000)
									unit_stat->cost = v9;
								else
									printf(errmsg_unit_out_of_range, v5->unit_name, cost, 1, 60000);
							}
							v10 = strtok(0, _4681EC_whitespace);
							v4 = v10;
							if (v10)
							{
								if (*v10 != '-')
								{
									v11 = atoi(v10);
									if (v11 >= 1 && v11 <= (unit_stat->cost << 8) / 60)
									{
										unit_stat->production_time = v11;
									}
									else
									{
										v12 = (int)((unit_stat->cost << 8)
											+ ((unsigned __int64)(0xFFFFFFFF88888889i64 * (unit_stat->cost << 8)) >> 32)) >> 5;
										printf(errmsg_unit_out_of_range, v5->unit_name, aProductionTime, 1, (v12 >> 31) + v12);
									}
								}
								v13 = strtok(0, _4681EC_whitespace);
								v4 = v13;
								if (v13)
								{
									if (*v13 != '-')
									{
										v14 = atoi(v13);
										if (v14 >= 1 && v14 <= 0x7FFFFFFF)
											unit_stat->hitpoints = v14;
										else
											printf(errmsg_unit_out_of_range, v5->unit_name, aHitpoints, 1, 0x7FFFFFFF);
									}
									v15 = strtok(0, _4681EC_whitespace);
									v4 = v15;
									if (v15)
									{
										if (*v15 != '-')
										{
											v16 = atoi(v15);
											if (!v16 || unit_stat->speed)
											{
												if (v16 >= 1 && v16 <= 500)
													unit_stat->speed = v16;
												else
													printf(errmsg_unit_out_of_range, v5->unit_name, aSpeed, 1, 500);
											}
											else
											{
												printf(aWarningUnitSIs, v5->unit_name);
											}
										}
										v17 = strtok(0, _4681EC_whitespace);
										v4 = v17;
										if (v17)
										{
											if (*v17 != '-')
											{
												v18 = atoi(v17);
												if (v18 >= 0 && v18 <= 10000)
												{
													v19 = unit_stat->attach;
													if (v19 && v19->dmg_source)
														v19->reload_time = v18;
												}
												else
												{
													printf(errmsg_unit_out_of_range, v5->unit_name, aReloadTime, 0, 10000);
												}
											}
											v20 = strtok(0, _4681EC_whitespace);
											v4 = v20;
											if (v20)
											{
												if (*v20 != 45)
												{
													v21 = atoi(v20);
													if (v21 >= 5 && v21 <= 10000)
													{
														v22 = unit_stat->attach;
														if (v22 && v22->dmg_source)
															v22->reload2_time = v21;
														else
															unit_stat->reload_time = v21;
													}
													else
													{
														printf(errmsg_unit_out_of_range, v5->unit_name, aReload2Time, 5, 10000);
													}
												}
												v23 = strtok(0, _4681EC_whitespace);
												v4 = v23;
												if (v23)
												{
													if (*v23 != 45)
													{
														v24 = atoi(v23);
														if (v24 >= 1 && v24 <= 10000)
														{
															v25 = unit_stat->attach;
															if (v25 && v25->dmg_source)
																v25->volley_size = v24;
														}
														else
														{
															printf(errmsg_unit_out_of_range, v5->unit_name, aVolleySize, 1, 10000);
														}
													}
													v26 = strtok(0, _4681EC_whitespace);
													v4 = v26;
													if (v26)
													{
														if (*v26 != 45)
														{
															v27 = atoi(v26);
															if (v27 >= 1 && v27 <= 64)
																unit_stat->turning_speed = v27;
															else
																printf(errmsg_unit_out_of_range, v5->unit_name, aTurningSpeed, 1, 64);
														}
														v28 = strtok(0, _4681EC_whitespace);
														v4 = v28;
														if (v28)
														{
															if (*v28 != '-')
															{
																v29 = atoi(v28);
																if (v29 >= 32 && v29 <= 320)
																	unit_stat->firing_range = v29;
																else
																	printf(errmsg_unit_out_of_range, v5->unit_name, aFiringVisualRa, 32, 320);
															}
															v30 = strtok(0, _4681EC_whitespace);
															v4 = v30;
															if (v30)
															{
																if (*v30 != '-')
																{
																	v31 = atoi(v30);
																	if (v31 >= 50 && v31 <= 100)
																		unit_stat->accuracy = v31;
																	else
																		printf(errmsg_unit_out_of_range, v5->unit_name, aAccuracy, 50, 100);
																}
																v32 = strtok(0, _4681EC_whitespace);
																v4 = v32;
																if (v32)
																{
																	if (*v32 != 45)
																	{
																		v33 = atoi(v32);
																		if (v33 >= 1 && v33 <= 60000)
																		{
																			v34 = unit_stat->attach;
																			if (v34 && (v35 = v34->dmg_source) != 0 || (v35 = unit_stat->dmg_source) != 0)
																				v35->damage_infantry = v33;
																		}
																		else
																		{
																			printf(errmsg_unit_out_of_range, v5->unit_name, aDamageToInfant, 1, 60000);
																		}
																	}
																	v36 = strtok(0, _4681EC_whitespace);
																	v4 = v36;
																	if (v36)
																	{
																		if (*v36 != '-')
																		{
																			v37 = atoi(v36);
																			if (v37 >= 1 && v37 <= 60000)
																			{
																				v38 = unit_stat->attach;
																				if (v38 && (v39 = v38->dmg_source) != 0 || (v39 = unit_stat->dmg_source) != 0)
																					v39->damage_vehicle = v37;
																			}
																			else
																			{
																				printf(errmsg_unit_out_of_range, v5->unit_name, aDamageToVehicl, 1, 60000);
																			}
																		}
																		v40 = strtok(0, _4681EC_whitespace);
																		v4 = v40;
																		if (v40 && *v40 != '-')
																		{
																			v41 = atoi(v40);
																			if (v41 >= 1 && v41 <= 60000)
																			{
																				v42 = unit_stat->attach;
																				if (v42 && (v43 = v42->dmg_source) != 0 || (v43 = unit_stat->dmg_source) != 0)
																					v43->damage_building = v41;
																			}
																			else
																			{
																				printf(errmsg_unit_out_of_range, v5->unit_name, aDamageToBuildi, 1, 60000);
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				LABEL_107:
					if (!v5->unit_name)
						printf((const char *)errmsg_unrecognized_name, v4);
				}
			} while (fgets(line, 1024, v3));
		}
		fclose(v3);
		result = 1;
	}
	else
	{
		printf((const char *)errmsg_could_not_open_file, v1);
		result = 0;
	}
	return result;
}

//----- (004267F0) --------------------------------------------------------
bool handler_4267F0(enum UNIT_ID unit_id, int x, int y, enum PLAYER_SIDE side)
{
	enum UNIT_ID v4; // esi@1
	int v5; // edi@1
	Sprite *result; // eax@1
	int v7; // ecx@2

	v4 = unit_id;
	v5 = x;
	result = sprite_create_scripted(
		unit_stats[unit_id].mobd_idx,
		0,
		unit_stats[unit_id].script_handler,
		SCRIPT_FUNCTION,
		0);
	if (result)
	{
		v7 = v4 | (side << 16);
		result->x = v5;
		BYTE1(v7) |= 0x80u;
		result->field_88_unused = 1;
		result->y = y;
		result->cplc_ptr1 = 0;
		result->param = (void *)v7;
		result = (Sprite *)1;
	}
	return (BOOL)result;
}

//----- (00426860) --------------------------------------------------------
void _426860_4269B0_task_attachment_handler(_4269B0_task_attachment *a1)
{
	int v1; // eax@1

	v1 = a1->field_14;
	if (v1 <= 0)
	{
		if (a1->_24_iftrue__call_UNIT_Spawn__else__create_manually)
		{
			if (_4269B0_task_attachment__num_units_spawned > 0)
				--_4269B0_task_attachment__num_units_spawned;
		}
		else if (_4269B0_task_attachment__num_units_created_manually > 0)
		{
			--_4269B0_task_attachment__num_units_created_manually;
		}
		script_yield(a1->task);
	}
	else
	{
		a1->stru53_54_55_unit_stats_idx_idx = 0;
		a1->handler = _4268B0_4269B0_task_attachment_handler;
		a1->field_14 = v1 - 1;
		_4268B0_4269B0_task_attachment_handler(a1);
	}
}
// 47A2F8: using guessed type int _4269B0_task_attachment__num_units_created_manually;
// 47A370: using guessed type int _4269B0_task_attachment__num_units_spawned;

//----- (004268B0) --------------------------------------------------------
void _4268B0_4269B0_task_attachment_handler(_4269B0_task_attachment *a1)
{
	_4269B0_task_attachment *v1; // esi@1
	int v2; // eax@1
	enum UNIT_ID v3; // ebx@1
	int v4; // edi@4
	int v5; // ebp@4
	Sprite *v6; // eax@4
	int v7; // ecx@7
	int v8; // [sp+10h] [bp-4h]@4

	v1 = a1;
	v2 = a1->__468410_stru49_array_idx;
	v3 = _468410_stru49_array[v2].pstru_53_54_55->unit_stats_idx[a1->stru53_54_55_unit_stats_idx_idx];
	if (v3 == -1)
	{
		v7 = a1->field_14;
		v1->handler = _426860_4269B0_task_attachment_handler;
		if (v7 <= 0)
			script_445370_yield_to_main_thread(v1->task, 0x80000000, 1);
		else
			script_445370_yield_to_main_thread(v1->task, 0x80000000, _468410_stru49_array[v2]._8_some_task_flags);
	}
	else if (a1->_24_iftrue__call_UNIT_Spawn__else__create_manually)
	{
		spawn_unit(v3, a1->x, a1->y, player_side);
		++v1->stru53_54_55_unit_stats_idx_idx;
		script_445370_yield_to_main_thread(v1->task, 0x80000000, 6);
	}
	else
	{
		v4 = a1->field_28;
		v5 = a1->y;
		v8 = a1->x;
		v6 = sprite_create_scripted(unit_stats[v3].mobd_idx, 0, unit_stats[v3].script_handler, SCRIPT_FUNCTION, 0);
		if (v6)
		{
			v6->field_88_unused = 1;
			v6->x = v8;
			v6->y = v5;
			v6->cplc_ptr1 = 0;
			v6->param = (void *)(v3 | (v4 << 16) | 0x8000);
		}
		++v1->stru53_54_55_unit_stats_idx_idx;
		script_445370_yield_to_main_thread(v1->task, 0x80000000, 6);
	}
}

//----- (004269B0) --------------------------------------------------------
void task_4269B0_mobd_20_handler(Script *a1)
{
	Script *v1; // ebp@1
	_4269B0_task_attachment *v2; // esi@1
	Sprite *v3; // eax@3
	int v4; // edi@3
	unsigned int v5; // ebx@3
	__int32 v6; // eax@11
	stru53 *v7; // ebx@11
	int v8; // eax@19
	int v9; // eax@20
	int v10; // ecx@20
	int v11; // eax@24
	int v12; // ebx@26
	int v13; // ecx@26
	int v14; // edi@26
	int v15; // ebx@27
	int v16; // edx@35
	DrawJobDetails *v17; // [sp+10h] [bp-8h]@3
	DrawJobDetails *v18; // [sp+10h] [bp-8h]@26
	int v19; // [sp+14h] [bp-4h]@11
	int a1a; // [sp+1Ch] [bp+4h]@3

	v1 = a1;
	v2 = (_4269B0_task_attachment *)a1->param;
	if (v2 || (v2 = (_4269B0_task_attachment *)script_create_local_object(a1, 44)) == 0)
	{
		(v2->handler)(v2);
		return;
	}
	v3 = a1->sprite;
	a1a = v3->y;
	v4 = v3->cplc_ptr1_pstru20->field_18;
	v3->field_88_unused = 1;
	v5 = v1->sprite->x;
	v17 = &_47A010_mapd_item_being_drawn[0]->draw_job->job_details;
	if (v5 < (render_call_draw_handler_mode1(v17) + 0xFFFFC0) << 8)
	{
		if (v5 <= 0x40)
			v5 = 0;
	}
	else
	{
		v5 = (render_call_draw_handler_mode1(v17) << 8) - 64;
	}
	if (a1a < (unsigned int)((render_call_draw_handler_mode2(v17) + 0xFFFFC0) << 8))
	{
		if ((unsigned int)a1a <= 0x40)
			a1a = 0;
	}
	else
	{
		a1a = (render_call_draw_handler_mode2(v17) + 0xFFFFC0) << 8;
	}
	v1->param = v2;
	v6 = (player_side - 1) ^ 1;
	v2->__468410_stru49_array_idx = v4;
	v2->x = v5;
	v2->field_28 = v6 + 1;
	v2->stru53_54_55_unit_stats_idx_idx = 0;
	v2->y = a1a;
	v2->field_10 = ((player_side - 1) ^ 1) + 1;
	v19 = v4;
	v2->field_14 = _468410_stru49_array[v4].field_C;
	v2->field_18 = _468410_stru49_array[v4]._8_some_task_flags;
	v2->task = v1;
	v1->sprite->script = 0;
	sprite_list_remove(v1->sprite);
	v7 = _468410_stru49_array[v4].pstru_53_54_55;
	if (v7->unit_stats_idx[0] != -1)
	{
		if (sub_44CA50(v7->unit_stats_idx[0]))
		{
			if (!is_player_faction_evolved())
			{
				v2->_24_iftrue__call_UNIT_Spawn__else__create_manually = 1;
				goto LABEL_18;
			}
		}
		else if (is_player_faction_evolved())
		{
			v2->_24_iftrue__call_UNIT_Spawn__else__create_manually = 1;
			goto LABEL_18;
		}
		v2->_24_iftrue__call_UNIT_Spawn__else__create_manually = 0;
	}
LABEL_18:
	if (v7->unit_stats_idx[v2->stru53_54_55_unit_stats_idx_idx] != -1)
	{
		do
		{
			v8 = v2->stru53_54_55_unit_stats_idx_idx + 1;
			v2->stru53_54_55_unit_stats_idx_idx = v8;
		} while (v7->unit_stats_idx[v8] != -1);
	}
	v9 = v2->_24_iftrue__call_UNIT_Spawn__else__create_manually;
	v10 = v2->stru53_54_55_unit_stats_idx_idx;
	v2->stru53_54_55_unit_stats_idx_idx = 0;
	if (v9)
		++_4269B0_task_attachment__num_units_spawned;
	else
		++_4269B0_task_attachment__num_units_created_manually;
	if (_4269B0_task_attachment__4_some_task_flags)
	{
		v11 = _4269B0_task_attachment__4_some_task_flags
			- _468410_stru49_array[v2->__468410_stru49_array_idx]._4_some_task_flags;
		if (v11 >= 0)
		{
			v12 = v2->field_18;
			v13 = 6 * v10;
			v18 = (DrawJobDetails *)(v11 % (v12 + v13));
			v14 = -1 - v11 / (v12 + v13) + v2->field_14;
			v2->field_14 = v14;
			if (v14 > 0)
			{
				if ((int)v18 >= v13 || v2->_24_iftrue__call_UNIT_Spawn__else__create_manually)
				{
					v15 = v12 - (_DWORD)v18;
				}
				else
				{
					if (v14 < _468410_stru49_array[v19].field_C)
						v2->field_14 = v14 + 1;
					v15 = 1;
				}
			}
			else
			{
				v15 = 1;
			}
			v2->handler = _426860_4269B0_task_attachment_handler;
			script_445370_yield_to_main_thread(v1, 0x80000000, v15);
		}
		else
		{
			v2->handler = _426860_4269B0_task_attachment_handler;
			script_445370_yield_to_main_thread(v1, 0x80000000, -v11);
		}
	}
	else
	{
		v16 = v2->__468410_stru49_array_idx;
		v2->handler = _426860_4269B0_task_attachment_handler;
		script_445370_yield_to_main_thread(v1, 0x80000000, _468410_stru49_array[v16]._4_some_task_flags);
	}
}
// 47A2F8: using guessed type int _4269B0_task_attachment__num_units_created_manually;
// 47A370: using guessed type int _4269B0_task_attachment__num_units_spawned;
// 47DC68: using guessed type int _4269B0_task_attachment__4_some_task_flags;

//----- (00426C40) --------------------------------------------------------
void drawjob_update_handler_426C40_mobd(Sprite *a1, DrawJob *a2)
{
	DataMobdItem_stru0 *v2; // eax@1

	a2->job_details.z_index = a1->z_index;
	v2 = a1->_54_inside_mobd_ptr4;
	if (v2)
	{
		a2->job_details.x = (a1->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		a2->job_details.y = (a1->y >> 8) - (_47C380_mapd.mapd_cplc_render_y >> 8) - a1->_54_inside_mobd_ptr4->y_offset;
		a2->job_details.image = a1->_54_inside_mobd_ptr4->sprt;
		a2->job_details.params = render_default_stru1;
	}
	else
	{
		a2->job_details.image = 0;
		a2->job_details.params = render_default_stru1;
	}
}

//----- (00426CB0) --------------------------------------------------------
bool sprite_list_alloc()
{
	Sprite *result; // eax@2
	int v1; // edx@4

	currently_running_lvl_mobd = (DataMobd *)LVL_FindSection((const char *)MOBD);
	if (currently_running_lvl_mobd)
	{
		currently_running_lvl_mobd_valid = 1;
		result = (Sprite *)malloc(0x48440u);
		sprite_list = result;
		if (result)
		{
			sprite_list_free_pool = result;
			result->prev = (Sprite *)&sprite_list_free_pool;
			v1 = 1999;
			do
			{
				--v1;
				result->next = result + 1;
				++result;
			} while (v1);
			result->next = (Sprite *)&sprite_list_free_pool;
			sprite_list_47A4A4 = (Sprite *)&sprite_list_47A4A0;
			sprite_list_47A4A0 = (Sprite *)&sprite_list_47A4A0;
			sprite_init_47A400();
			j_drawjob_update_handler_426C40_default_sprite_handler = drawjob_update_handler_426C40_mobd;
			result = (Sprite *)1;
		}
	}
	else
	{
		currently_running_lvl_mobd_valid = 0;
		result = (Sprite *)1;
	}
	return (BOOL)result;
}
// 47A498: using guessed type int currently_running_lvl_mobd_valid;

//----- (00426D40) --------------------------------------------------------
void sprite_init_47A400()
{
	sprite_47A400.parent = 0;
	sprite_47A400.z_index = 0;
	sprite_47A400.y = 0;
	sprite_47A400.x = 0;
	sprite_47A400.z_speed = 0;
	sprite_47A400.y_speed = 0;
	sprite_47A400.x_speed = 0;
	sprite_47A400.z_speed_factor_2 = 0;
	sprite_47A400.y_speed_factor_2 = 0;
	sprite_47A400.x_speed_factor_2 = 0;
	sprite_47A400.z_speed_limit = 0x7FFFFFFF;
	sprite_47A400.y_speed_limit = 0x7FFFFFFF;
	sprite_47A400.x_speed_limit = 0x7FFFFFFF; // max signed int
	sprite_47A400.z_speed_factor_1 = 0;
	sprite_47A400.y_speed_factor_1 = 0;
	sprite_47A400.x_speed_factor_1 = 0;
	sprite_47A400._64_mobd_anim_related = 0;
	sprite_47A400._60_mobd_anim_speed = 0;
	sprite_47A400._inside_mobd_item = 0;
	sprite_47A400._inside_mobd_item_2 = 0;
	sprite_47A400._54_inside_mobd_ptr4 = 0;
	sprite_47A400.script = 0;
	sprite_47A400.cplc_ptr1 = 0;
	sprite_47A400.cplc_stru0 = 0;
	sprite_47A400.cplc_ptr1_pstru20 = 0;
	sprite_47A400.param = 0;
	sprite_47A400._80_entity__stru29__sprite__initial_hitpoints = 0;
	sprite_47A400.field_84 = 0;
	sprite_47A400.pstru7 = _4640E0_stru7_array;
	sprite_47A400.pstru58 = 0;
	sprite_47A400.field_88_unused = 0;
	sprite_47A400.field_8C_infantry_damage = 0;
	sprite_47A400.field_8E_vehicle_damage = 0;
	sprite_47A400.field_90_building_damage = 0;
}
// 47A400: using guessed type Sprite sprite_47A400;

//----- (00426E00) --------------------------------------------------------
Sprite *sprite_create(enum MOBD_ID mobd_item_idx, Script *script, Sprite *parent)
{
	Script *v3; // ebp@1
	Sprite *result; // eax@2
	Sprite *v5; // ebx@3
	enum MOBD_ID v6; // [sp+10h] [bp-4h]@1

	v6 = mobd_item_idx;
	v3 = script;
	if ((Sprite **)sprite_list_free_pool == &sprite_list_free_pool)
	{
		result = 0;
	}
	else
	{
		v5 = sprite_list_free_pool;
		result = (Sprite *)draw_list_add(
			sprite_list_free_pool,
			(void(*)(void *, DrawJob *))j_drawjob_update_handler_426C40_default_sprite_handler);
		if (result)
		{
			sprite_list_free_pool = v5->next;
			memcpy(v5, &sprite_47A400, sizeof(Sprite));
			v5->next = (Sprite *)&sprite_list_47A4A0;
			v5->prev = sprite_list_47A4A4;
			sprite_list_47A4A4->next = v5;
			sprite_list_47A4A4 = v5;
			v5->mobd_id = v6;
			v5->script = v3;
			if (v3)
				v3->sprite = v5;
			v5->drawjob = (DrawJob *)result;
			if (parent)
			{
				v5->parent = parent;
				v5->x = parent->x;
				v5->y = parent->y;
				v5->z_index = parent->z_index;
				if (!v3)
					v5->script = parent->script;
			}
			result = v5;
		}
	}
	return result;
}
// 47A400: using guessed type Sprite sprite_47A400;

//----- (00426EC0) --------------------------------------------------------
Sprite *sprite_create_scripted(enum MOBD_ID mobd_item_idx, Sprite *parent, void(*script)(Script *), enum SCRIPT_ROUTINE_TYPE task_type, Entity_stru_dmg_related *a5)
{
	Sprite *v5; // esi@1
	enum MOBD_ID v6; // edi@1
	Sprite *result; // eax@3

	v5 = parent;
	v6 = mobd_item_idx;
    //__debugbreak(); // COROUTINE CREATION ALTER CAUSED v5 AND parnet to become corrupt after cr creation & yield
	if (!script)
	{
		result = 0;
	LABEL_8:
		result = sprite_create(v6, (Script *)result, v5);
		if (result && v5)
		{
			if (a5)
			{
				result->x = a5->x_offset + v5->x;
				result->y = a5->y_offset + v5->y;
				result->z_index = a5->z_index_offset + v5->z_index;
			}
		}
		return result;
	}
	if (task_type == SCRIPT_FUNCTION)
		result = (Sprite *)script_create_function(SCRIPT_TYPE_INVALID, script);
	else if (task_type == SCRIPT_COROUTINE)
		result = (Sprite *)script_create_coroutine(SCRIPT_TYPE_INVALID, script, 0);
    else
    {
        __debugbreak();
        result = false;
    }
	if (result)
		goto LABEL_8;
	return result;
}

//----- (00426F40) --------------------------------------------------------
void sprite_list_remove(Sprite *a1)
{
	Sprite *v1; // esi@1
	DrawJob *v2; // eax@1
	DataCplcItem_ptr1 *v3; // eax@3
	DataCplc_stru0 *v4; // ecx@6

	v1 = a1;
	v2 = a1->drawjob;
	if (v2)
		v2->flags |= 0x80000000;
	v3 = a1->cplc_ptr1;
	if (v3 && v3->_20_stru20.sprite == a1)
		v3->_20_stru20.sprite = 0;
	v4 = a1->cplc_stru0;
	if (v4)
		cplc_4062E0_stru0_list_remove(v4);
	v1->prev->next = v1->next;
	v1->next->prev = v1->prev;
	v1->next = sprite_list_free_pool;
	sprite_list_free_pool = v1;
}

//----- (00426F90) --------------------------------------------------------
void sprite_list_remove_scripted(Sprite *a1)
{
	Sprite *v1; // esi@1
	Script *v2; // ecx@1
	DrawJob *v3; // eax@3
	DataCplcItem_ptr1 *v4; // eax@5
	DataCplc_stru0 *v5; // ecx@8

	v1 = a1;
	v2 = a1->script;
	if (v2)
	{
		script_deinit(v2);
		v1->script = 0;
	}
	v3 = v1->drawjob;                             // INLINED  426F40  sprite_list_remove
	if (v3)
		v3->flags |= 0x80000000;
	v4 = v1->cplc_ptr1;
	if (v4 && v4->_20_stru20.sprite == v1)
		v4->_20_stru20.sprite = 0;
	v5 = v1->cplc_stru0;
	if (v5)
		cplc_4062E0_stru0_list_remove(v5);
	v1->prev->next = v1->next;
	v1->next->prev = v1->prev;
	v1->next = sprite_list_free_pool;
	sprite_list_free_pool = v1;
}

//----- (00427000) --------------------------------------------------------
Sprite *sprite_list_find_by_mobd_id(enum MOBD_ID mobd_id)
{
	Sprite *result; // eax@1

	result = sprite_list_47A4A0;
	if ((Sprite **)sprite_list_47A4A0 == &sprite_list_47A4A0)
	{
	LABEL_4:
		result = 0;
	}
	else
	{
		while (result->mobd_id != mobd_id)
		{
			result = result->next;
			if ((Sprite **)result == &sprite_list_47A4A0)
				goto LABEL_4;
		}
	}
	return result;
}

//----- (00427020) --------------------------------------------------------
void sprite_list_update_positions()
{
	Sprite *i; // esi@2
	Script *v1; // eax@4
	int v2; // eax@5

	if (currently_running_lvl_mobd_valid)
	{
		bodx_404D50_sprite_list((Sprite *)&sprite_list_47A4A0);
		for (i = sprite_list_47A4A0; (Sprite **)i != &sprite_list_47A4A0; i = i->next)
		{
			if (is_coroutine_list_initialization_failed && (v1 = i->script) != 0)
				v2 = v1->field_1C & 1;
			else
				v2 = 1;
			if (!v2)
				continue;

			i->x += i->x_speed;
            if (i->x_speed > 0)
                boxd_404F40_sprite(i, 0, 1);
            else if (i->x_speed < 0)
                boxd_404F40_sprite(i, 1, 1);

			i->y += i->y_speed;
            if (i->y_speed > 0)
                boxd_404F40_sprite(i, 2, 1);
            else if (i->y_speed < 0)
                boxd_404F40_sprite(i, 3, 1);

			i->z_index += i->z_speed;
			if (i->x_speed == 0 && i->y_speed == 0)
			{
                boxd_404F40_sprite(i, 0, i->field_88_unused ? 1 : 0);
			}

			i->field_88_unused = 1;
			if (i->x_speed < 0)
			{
				i->x_speed += i->x_speed_factor_1;
				if (i->x_speed > 0)
                    i->x_speed = 0;
			}
			else
			{
				i->x_speed -= i->x_speed_factor_1;
				if (i->x_speed < 0)
                    i->x_speed = 0;
			}

            if (i->x_speed_factor_2)
            {
                i->x_speed += i->x_speed_factor_2;
                if (i->x_speed < 0)
                {
                    if (i->x_speed < -i->x_speed_limit)
                    {
                        i->x_speed = -i->x_speed_limit;
                        if (i->script)
                        {
                            i->script->flags_20 |= SCRIPT_FLAGS_20_X_SPEED_LIMIT;
                            i->script->field_24 |= i->script->flags_20;
                        }
                    }
                }
                else
                {
                    if (i->x_speed > i->x_speed_limit)
                    {
                        i->x_speed = i->x_speed_limit;
                        if (i->script)
                        {
                            i->script->flags_20 |= SCRIPT_FLAGS_20_X_SPEED_LIMIT;
                            i->script->field_24 |= i->script->flags_20;
                        }
                    }
                }
            }


			if (i->y_speed < 0)
			{
				i->y_speed += i->y_speed_factor_1;
				if (i->y_speed > 0)
                    i->y_speed = 0;
			}
			else
			{
				i->y_speed -= i->y_speed_factor_1;
				if (i->y_speed < 0)
                    i->y_speed = 0;
			}

            if (i->y_speed_factor_2)
            {
                i->y_speed += i->y_speed_factor_2;
                if (i->y_speed < 0)
                {
                    if (i->y_speed < -i->y_speed_limit)
                    {
                        i->y_speed = -i->y_speed_limit;
                        if (i->script)
                        {
                            i->script->flags_20 |= SCRIPT_FLAGS_20_Y_SPEED_LIMIT;
                            i->script->field_24 |= i->script->flags_20;

                        }
                    }
                }
                else
                {
                    if (i->y_speed > i->y_speed_limit)
                    {
                        i->y_speed = i->y_speed_limit;
                        if (i->script)
                        {
                            i->script->flags_20 |= SCRIPT_FLAGS_20_Y_SPEED_LIMIT;
                            i->script->field_24 |= i->script->flags_20;
                        }
                    }
                }
            }

			if (i->z_speed < 0)
			{
				i->z_speed += i->z_speed_factor_1;
				if (i->z_speed > 0)
                    i->z_speed = 0;
			}
			else
			{
				i->z_speed -= i->z_speed_factor_1;
				if (i->z_speed < 0)
                    i->z_speed = 0;
			}

			if (i->z_speed_factor_2)
			{
				i->z_speed += i->z_speed_factor_2;
				if (i->z_speed < 0)
				{
                    if (i->z_speed < -i->z_speed_limit)
                    {
                        i->z_speed = -i->z_speed_limit;
                        if (i->script)
                        {
                            i->script->flags_20 |= SCRIPT_FLAGS_20_Z_SPEED_LIMIT;
                            i->script->field_24 |= i->script->flags_20;
                        }
                    }
				}
				else
				{
                    if (i->z_speed > i->z_speed_limit)
                    {
                        i->z_speed = i->z_speed_limit;
                        if (!i->script)
                        {
                            i->script->flags_20 |= SCRIPT_FLAGS_20_Z_SPEED_LIMIT;
                            i->script->field_24 |= i->script->flags_20;
                        }
                    }
				}
			}
		}
	}
}

//----- (004272A0) --------------------------------------------------------
void sprite_load_mobd(Sprite *a1, int offset)
{
	if (a1)
	{
        DataMobdItem_stru0 **v2 = &currently_running_lvl_mobd[a1->mobd_id].items->_[offset / 4];
		a1->_inside_mobd_item = v2;
        a1->_inside_mobd_item_2 = v2;

		if (*v2)
			a1->_60_mobd_anim_speed = ((DataMobdItem_stru2 *)v2)->flags;
		a1->_64_mobd_anim_related = -1;

		sprite_427460_init_mobd_item(a1);
	}
}

//----- (004272E0) --------------------------------------------------------
void sprite_4272E0_load_mobd_item(Sprite *a1, int lookup_table_offset, int lookup_idx)
{
    auto lookup_table = (DataMobdItem_stru2 **)(
        (char *)&currently_running_lvl_mobd[a1->mobd_id].items->_ + lookup_table_offset
    );
    auto v = lookup_table[lookup_idx];

    DataMobdItem_stru0 **v3; // eax@1
	v3 = *(DataMobdItem_stru0 ***)(
        (char *)&currently_running_lvl_mobd[a1->mobd_id].items->_
            + lookup_table_offset
            + 4 * lookup_idx
        );

	a1->_inside_mobd_item = (DataMobdItem_stru0 **)v;
	if (v)
	{
		if (v->flags)
			a1->_60_mobd_anim_speed = v->flags;
		a1->_64_mobd_anim_related = -1;
		a1->_inside_mobd_item_2 = (DataMobdItem_stru0 **)v;
		sprite_427460_init_mobd_item(a1);
	}
}

//----- (00427320) --------------------------------------------------------
void sprite_427320_load_mobd_item_sound(Sprite *a1, int offset)
{
    DataMobdItem_stru0 **v2; // esi@1
    DataMobdItem_stru0 **v3; // eax@3
    DataMobdItem_stru0 **v6; // edx@6
    DataMobdItem_stru0 **v7; // eax@6
	DataMobdItem_stru0 *v9; // edx@6
	Sprite_stru58 *v10; // eax@6
	enum SOUND_ID v11; // edx@6

	v2 = a1->_inside_mobd_item;
	if (v2)
	{
		v6 = (DataMobdItem_stru0 **)((char *)currently_running_lvl_mobd[a1->mobd_id].items + offset);
		v7 = (DataMobdItem_stru0 **)((char *)v6 + (unsigned int)((char *)a1->_inside_mobd_item_2 - (char *)v2));
		a1->_inside_mobd_item = v6;
		a1->_inside_mobd_item_2 = v7;
		a1->_54_inside_mobd_ptr4 = v7[0];
		v9 = a1->_54_inside_mobd_ptr4;
		v10 = (Sprite_stru58 *)v7[4];
		a1->field_88_unused = 1;
		a1->pstru58 = v10;
		v11 = v9->_14_sound_id;
		if (v11)
			sprite_408800_play_sound(a1, v11, 16, 0);
	}
	else if (a1)
	{
        sprite_4272E0_load_mobd_item(a1, offset, 0);
		/*v3 = (DataMobdItem_stru0 **)((char *)currently_running_lvl_mobd[a1->mobd_id].items + offset);
		a1->_inside_mobd_item = v3;
        a1->_inside_mobd_item_2 = a1->_inside_mobd_item;
		if (v3[0])
			a1->_60_mobd_field_0_int = (int)v3[0];
		a1->field_64 = -1;
		sprite_427460_init_mobd_item(a1);*/
	}
}

//----- (004273B0) --------------------------------------------------------
void sprite_4273B0_load_mobd_item_sound(Sprite *a1, int mobd_lookup_offset, int mobd_lookup_id)
{
    DataMobdItem_stru0 **v3; // esi@1
    DataMobdItem_stru0 **v4; // eax@2
    DataMobdItem_stru0 **v7; // eax@6
    DataMobdItem_stru0 **v8; // edx@6
    DataMobdItem_stru0 **v9; // eax@7
	DataMobdItem_stru0 *v11; // edx@7
	Sprite_stru58 *v12; // eax@7
	enum SOUND_ID v13; // edx@7

	v3 = a1->_inside_mobd_item;
	if (v3)
	{
		v7 = (DataMobdItem_stru0 **)((char *)a1->_inside_mobd_item_2 - (char *)v3);
		v8 = *(DataMobdItem_stru0 ***)((char *)&currently_running_lvl_mobd[a1->mobd_id].items->_
			+ 4 * mobd_lookup_id
			+ mobd_lookup_offset);
		a1->_inside_mobd_item = v8;
		if (v8)
		{
			v9 = (DataMobdItem_stru0 **)((char *)v7 + (_DWORD)v8);
			a1->_inside_mobd_item_2 = v9;

			a1->_54_inside_mobd_ptr4 = v9[0];
			v11 = a1->_54_inside_mobd_ptr4;
			v12 = (Sprite_stru58 *)(*v9)->ptr_10;
			a1->field_88_unused = 1;
			a1->pstru58 = v12;
			v13 = v11->_14_sound_id;
			if (v13)
				sprite_408800_play_sound(a1, v13, 16, 0);
		}
	}
	else
	{
        sprite_4272E0_load_mobd_item(a1, mobd_lookup_offset, mobd_lookup_id);
		/*v4 = *(DataMobdItem_stru0 ***)((char *)&currently_running_lvl_mobd[a1->mobd_id].items->_
			+ 4 * mobd_lookup_id
			+ mobd_lookup_offset);
		a1->_inside_mobd_item = v4;
		if (v4)
		{
			if (v4[0])
				a1->_60_mobd_anim_speed = (int)v4[0];
			a1->field_64 = -1;
			a1->_inside_mobd_item_2 = a1->_inside_mobd_item;
			sprite_427460_init_mobd_item(a1);
		}*/
	}
}

//----- (00427450) --------------------------------------------------------
void sprite_release_mobd_item(Sprite *a1)
{
	a1->_inside_mobd_item = 0;
	a1->_inside_mobd_item_2 = 0;
	a1->_54_inside_mobd_ptr4 = 0;
	a1->pstru58 = 0;
}

//----- (00427460) --------------------------------------------------------
void sprite_427460_init_mobd_item(Sprite *pstru6)
{
	Sprite *v1; // esi@1
	int v3; // eax@2
    //DataMobdItem_stru0 **v4; // eax@3
	DataMobdItem_stru0 *v5; // ecx@3
	Script *v6; // eax@4
    DataMobdItem_stru0 *v7; // eax@7
	Script *v10; // eax@7
	DataMobdItem_stru0 *v12; // eax@10
	enum SOUND_ID v13; // edx@10
	DataMobdItem_stru1 *v14; // ecx@12
	Script *v15; // eax@13

	v1 = pstru6;
    DataMobdItem_stru2 *v2 = (DataMobdItem_stru2 *)pstru6->_inside_mobd_item_2;
	if (v2)
	{
		v3 = v1->_64_mobd_anim_related;
		if (v3 < 0)
		{
			v1->_64_mobd_anim_related = v3 & 0x7FFFFFFF;

            v5 = v2->pstru0;
			if (v5)
			{
				if (v5 == (DataMobdItem_stru0 *)-1)
				{
                    v1->_inside_mobd_item_2 = v1->_inside_mobd_item + 1;

					v7 = v1->_inside_mobd_item_2[0];
					v1->_54_inside_mobd_ptr4 = v7;

					v10 = v1->script;
					v1->pstru58 = (Sprite_stru58 *)v7->ptr_10;
					if (v10)
					{
						v10->flags_20 |= 0x10000000u;
						v1->script->field_24 |= v1->script->flags_20;
					}
				}
				else
				{
					v1->_inside_mobd_item_2 = v1->_inside_mobd_item_2 + 1;
					v1->_54_inside_mobd_ptr4 = v5;
					v1->pstru58 = (Sprite_stru58 *)v5->ptr_10;
				}
				v12 = v1->_54_inside_mobd_ptr4;
				v1->field_88_unused = 1;
				v13 = v12->_14_sound_id;
				if (v13)
					sprite_408800_play_sound(v1, v13, 16, 0);
				v14 = v1->_54_inside_mobd_ptr4->field_18;
				if (v14)
				{
					v15 = v1->script;
					if (v15)
					{
						if (v15->field_28 & 0x40000)
						{
							script_trigger_event(0, (SCRIPT_EVENT)((int)EVT_MOUSE_HOVER | 0x1), v14, v1->script);
							v1->script->flags_20 |= 0x40000u;
							v1->script->field_24 |= v1->script->flags_20;
						}
					}
				}
			}
			else
			{
				v6 = v1->script;
				v1->_inside_mobd_item_2 = 0;
				v1->_inside_mobd_item = 0;
				if (v6)
				{
					v6->flags_20 |= 0x10000000u;
					v1->script->field_24 |= v1->script->flags_20;
					v1->_64_mobd_anim_related -= v1->_60_mobd_anim_speed;
					return;
				}
			}
		}
		v1->_64_mobd_anim_related -= v1->_60_mobd_anim_speed;
	}
}

//----- (00427580) --------------------------------------------------------
void sprite_list_init_mobd_items()
{
	Sprite *i; // esi@2
	Script *v1; // eax@4
	signed __int16 v2; // ax@5

	if (currently_running_lvl_mobd_valid)
	{
		for (i = sprite_list_47A4A0; (Sprite **)i != &sprite_list_47A4A0; i = i->next)
		{
			if (is_coroutine_list_initialization_failed && (v1 = i->script) != 0)
				v2 = v1->field_1C & 1;
			else
				v2 = 1;
			if (v2)
				sprite_427460_init_mobd_item(i);
		}
	}
}
// 47A498: using guessed type int currently_running_lvl_mobd_valid;
// 47C764: using guessed type __int16 is_coroutine_list_initialization_failed;

//----- (004275D0) --------------------------------------------------------
void sprite_list_free()
{
	if (currently_running_lvl_mobd_valid)
	{
		if (sprite_list)
		{
			free(sprite_list);
			currently_running_lvl_mobd_valid = 0;
			sprite_list = 0;
		}
	}
}
// 47A498: using guessed type int currently_running_lvl_mobd_valid;

//----- (00427600) --------------------------------------------------------
void UNIT_Handler_MobileOutpost(Script *a1)
{
	Entity *v1; // esi@2
	int v2; // eax@4

	if (!_47C6DC_dont_execute_unit_handlers)
	{
		v1 = (Entity *)a1->param;
		if (!v1)
		{
			v1 = entity_list_create(a1);
			entity_mobile_outpost_init(v1);
			entity_set_draw_handlers(v1);
		}
		(v1->mode)(v1);
		v2 = v1->_134_param__unitstats_after_mobile_outpost_plant;
		if (v2)
			v1->_134_param__unitstats_after_mobile_outpost_plant = v2 - 1;
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (00427650) --------------------------------------------------------
void entity_mobile_outpost_init(Entity *a1)
{
	Entity *v1; // esi@1
	UnitStat *v2; // eax@2
	int v3; // eax@3
	UnitStat *v4; // eax@5
	int v5; // eax@6
	UnitStat *v6; // eax@8
	int v7; // edi@9
	UnitStat *v8; // eax@11
	int v9; // eax@12
	int v10; // eax@14
	Sprite *v11; // ecx@15
	int v12; // edx@15
	Script *v13; // edx@15
	UnitStat *v14; // eax@18
	int v15; // eax@19
	int v16; // ecx@21
	UnitStat *v17; // eax@21
	int v18; // eax@22
	int v19; // ecx@24
	int v20; // eax@24
	Script *v21; // edx@24

	v1 = a1;
	if (a1->sprite->cplc_ptr1)
	{
		v2 = a1->stats;
		if (v2->is_infantry)
			v3 = entity_40F0A0_get_dx(a1, a1->field_A4);
		else
			v3 = v2->field_4C != 128 ? 7424 : 4096;
		v1->sprite->x = v3 + (v1->sprite->x & 0xFFFFE000);
		v4 = v1->stats;
		if (v4->is_infantry)
			v5 = entity_40F100_get_dy(v1, v1->field_A4);
		else
			v5 = v4->field_4C != 128 ? 7424 : 4096;
		v1->sprite->y = v5 + (v1->sprite->y & 0xFFFFE000);
		v6 = v1->stats;
		v1->field_A4 = 0;
		if (v6->is_infantry)
			v7 = entity_40F100_get_dy(v1, 0);
		else
			v7 = v6->field_4C != 128 ? 7424 : 4096;
		v8 = v1->stats;
		if (v8->is_infantry)
			v9 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v9 = v8->field_4C != 128 ? 7424 : 4096;
		v10 = entity_40DE80_boxd(v1, v9 + (v1->sprite->x & 0xFFFFE000), v7 + (v1->sprite->y & 0xFFFFE000), 0);
		if (v10 != 5)
		{
			v11 = v1->sprite;
			v1->sprite_x = v11->x;
			v1->sprite_y = v11->y;
			v1->sprite_x_2 = v1->sprite_x;
			v12 = v1->sprite_y;
			v1->_DC_order = ENTITY_ORDER_MOVE;
			v1->sprite_y_2 = v12;
			v1->field_A4 = v10;
			v13 = v1->script;
			v1->sprite_map_x = v11->x >> 13;
			v1->sprite_map_y = v11->y >> 13;
			v13->event_handler = MessageHandler_MobileOutpost;
			entity_mode_415540_infantry(v1);
			return;
		}
		goto LABEL_17;
	}
	if (!entity_413860_boxd(a1))
	{
	LABEL_17:
		entity_mode_419760_infantry_destroyed(v1);
		return;
	}
	v14 = v1->stats;
	if (v14->is_infantry)
		v15 = entity_40F0A0_get_dx(v1, v1->field_A4);
	else
		v15 = v14->field_4C != 128 ? 7424 : 4096;
	v16 = v15 + (v1->sprite_map_x << 13);
	v17 = v1->stats;
	v1->sprite_x = v16;
	if (v17->is_infantry)
		v18 = entity_40F100_get_dy(v1, v1->field_A4);
	else
		v18 = v17->field_4C != 128 ? 7424 : 4096;
	v19 = v1->sprite_x;
	v20 = (v1->sprite_map_y << 13) + v18;
	v21 = v1->script;
	v1->sprite_y = v20;
	v1->_DC_order = ENTITY_ORDER_MOVE;
	v1->sprite_x_2 = v19;
	v1->sprite_y_2 = v20;
	v1->_134_param__unitstats_after_mobile_outpost_plant = 0;
	v1->_98_465610_accuracy_dmg_bonus_idx = 0;
	v21->event_handler = EventHandler_General_Scout;
	v1->mode_return = entity_mode_4278C0_mobile_outpost;
	entity_4172D0(v1);
}

//----- (004278C0) --------------------------------------------------------
void entity_mode_4278C0_mobile_outpost(Entity *a1)
{
	a1->script->event_handler = MessageHandler_MobileOutpost;
	entity_mode_415540_infantry(a1);
}

//----- (004278D0) --------------------------------------------------------
void MessageHandler_MobileOutpost(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v4);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v4);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v4);
			break;
		case EVT_ENTITY_MOVE:
			entity_move(v4, (_47CAF0_task_attachment1_move_task *)param);
			break;

		case EVT_MSG_1507_stru11:
			entity_41A850_evt1507_mess_with_stru11(v4, param);
			break;
		case EVT_MSG_1509_stru11:
			entity_41A980_evt1509_unset_stru11(v4, param);
			break;
		case EVT_MSG_DAMAGE:
			entity_41A610_evt1503(v4, param);
			entity_410710_status_bar(v4);
			break;
		case EVT_MSG_1497:
			entity_41A6D0_evt1497(v4, (Entity *)param);
			break;
		case EVT_MSG_1522_plan_building_construction:
			entity_4279E0_mobile_outpost_clanhall_wagon_plant(v4);
			break;
		default:
			return;
		}
	}
}

//----- (004279E0) --------------------------------------------------------
void entity_4279E0_mobile_outpost_clanhall_wagon_plant(Entity *a1)
{
	Entity *v1; // esi@1
	Sprite *v2; // eax@1
	int v3; // ebx@1
	int v4; // ebp@1
	int v5; // eax@1
	int v6; // edx@1
	int v7; // edi@1
	Sprite *v8; // eax@2
	bool v9; // zf@6
	Sprite *v10; // eax@6
	int v11; // ecx@6
	int v12; // ebx@6
	int v13; // edi@6
	Sprite *v14; // eax@7
	unsigned int v15; // edx@7
	Script *v16; // ST00_4@9

	v1 = a1;
	v2 = a1->sprite;
	v3 = v2->x_speed;
	v4 = v2->y_speed;
	v2->x_speed = 0;
	a1->sprite->y_speed = 0;
	entity_40DEC0_boxd(a1, a1->sprite_map_x, a1->sprite_map_y, a1->field_A4);
	v5 = v1->unit_id;
	v6 = (int)&v1->stru60.ptr_C->field_0;
	v1->_134_param__unitstats_after_mobile_outpost_plant = v5;
	v7 = (v5 != UNIT_STATS_SURV_MOBILE_OUTPOST) + UNIT_STATS_SURV_OUTPOST;
	v1->unit_id = (UNIT_ID)v7;
	*(_DWORD *)(v6 + 4) = -11776;
	v1->stru60.ptr_C->y_offset = -1280;
	sprite_408800_play_sound(v1->sprite, SOUND_MobileOutpost_ClanhallWagon_Planted, _4690A8_unit_sounds_volume, 0);
	if (entity_40DD00_boxd(v1))
	{
		script_trigger_event(v1->script, EVT_SHOW_UI_CONTROL, 0, task_mobd17_cursor);
		entity_410CD0_eventTextString(v1);
		v1->script->event_handler = (void(*)(Script *, Script *, enum SCRIPT_EVENT, void *))nullsub_2;
		if (v1->unit_id == UNIT_STATS_SURV_OUTPOST)
		{
			v1->sprite->mobd_id = MOBD_SURV_OUTPOST;
			sprite_4272E0_load_mobd_item(v1->sprite, 1232, 0);
		}
		else
		{
			v1->sprite->mobd_id = MOBD_MUTE_CLANHALL;
		}
		sprite_load_mobd(v1->sprite, 0);
		v9 = v7 == UNIT_STATS_SURV_OUTPOST;
		v1->sprite->field_88_unused = 1;
		v1->sprite->field_88_unused = 1;
		v10 = v1->sprite;
		v11 = v1->stru60.ptr_C->x_offset;
		v12 = v10->x;
		v13 = v1->stru60.ptr_C->x_offset;
		if (v9)
		{
			v10->x = ((v12 + v13) & 0xFFFFE000) - v11 + 2048;
			v1->sprite->field_88_unused = 1;
			v14 = v1->sprite;
			v15 = ((v14->y + v1->stru60.ptr_C->y_offset) & 0xFFFFE000) - v1->stru60.ptr_C->y_offset + 4096;
		}
		else
		{
			v10->x = ((v12 + v13) & 0xFFFFE000) - v11 + 7936;
			v1->sprite->field_88_unused = 1;
			v14 = v1->sprite;
			v15 = ((v14->y + v1->stru60.ptr_C->y_offset) & 0xFFFFE000) - v1->stru60.ptr_C->y_offset + 3328;
		}
		v14->y = v15;
		v16 = v1->script;
		v1->mode = entity_427C30_after_mobile_outpost_clanhall_wagon_plant;
		script_445370_yield_to_main_thread(v16, 0x10000000, 0);
	}
	else
	{
		v8 = v1->sprite;
		v1->unit_id = (UNIT_ID)v1->_134_param__unitstats_after_mobile_outpost_plant;
		entity_40DE80_boxd(v1, v8->x, v8->y, 0);
		v1->sprite->x_speed = v3;
		v1->sprite->y_speed = v4;
	}
}

//----- (00427BB0) --------------------------------------------------------
void entity_427BB0_mobile_outpost_clanhall_planting(Entity *a1)
{
	Entity *v1; // esi@1
	int v2; // edx@1
	Script *v3; // eax@3

	v1 = a1;
	v2 = 1232;
	if (a1->unit_id != UNIT_STATS_SURV_OUTPOST)
		v2 = 968;
	sprite_4272E0_load_mobd_item(a1->sprite, v2, 1);
	v3 = v1->script;
	v1->mode = entity_mode_427BF0_mobile_outpost_clanhall_planting;
	script_445370_yield_to_main_thread(v3, 0x80000000, 30);
}

//----- (00427BF0) --------------------------------------------------------
void entity_mode_427BF0_mobile_outpost_clanhall_planting(Entity *a1)
{
	Entity *v1; // esi@1
	int v2; // edx@1
	Script *v3; // eax@3

	v1 = a1;
	v2 = 1232;
	if (a1->unit_id != UNIT_STATS_SURV_OUTPOST)
		v2 = 968;
	sprite_4272E0_load_mobd_item(a1->sprite, v2, 2);
	v3 = v1->script;
	v1->mode = entity_427C30_after_mobile_outpost_clanhall_wagon_plant;
	script_445370_yield_to_main_thread(v3, 0x80000000, 30);
}

//----- (00427C30) --------------------------------------------------------
void entity_427C30_after_mobile_outpost_clanhall_wagon_plant(Entity *a1)
{
	Entity *v1; // esi@1
	enum UNIT_ID v2; // edi@1
	enum PLAYER_SIDE v3; // ecx@1
	Sprite *v4; // eax@1
	Script *v5; // ST00_4@6

	v1 = a1;
	entity_40DDD0_boxd(a1);
	v2 = v1->unit_id;
	v3 = v1->player_side;
	v1->unit_id = (UNIT_ID)v1->_134_param__unitstats_after_mobile_outpost_plant;
	v4 = spawn_unit(v2, v1->sprite->x, v1->sprite->y, v3);
	if (v4)
	{
		if (v2 == UNIT_STATS_SURV_OUTPOST)
			v4->cplc_ptr1_pstru20 = &_468910_DataCplcItem_ptr1_stru20_outpost;
		else
			v4->cplc_ptr1_pstru20 = &_4688E0_DataCplcItem_ptr1_stru20_clanhall;
		v4->_80_entity__stru29__sprite__initial_hitpoints = (void *)v1->hitpoints;
	}
	v5 = v1->script;
	v1->mode = entity_remove_unit_after_mobile_derrick_outpost_clanhall_plant;
	script_445370_yield_to_main_thread(v5, 0x80000000, 10);
}
// 4688E0: using guessed type DataCplcItem_ptr1_stru20 _4688E0_DataCplcItem_ptr1_stru20_clanhall;
// 468910: using guessed type DataCplcItem_ptr1_stru20 _468910_DataCplcItem_ptr1_stru20_outpost;

//----- (00427CA0) --------------------------------------------------------
bool stru37_stru38_list_alloc()
{
	stru37 *v0; // eax@1
	int v1; // ecx@2
	stru38 *v2; // eax@4
	int v3; // ecx@5
	BOOL result; // eax@7

	v0 = (stru37 *)malloc(0x1130u);
	stru37_list = v0;
	if (!v0)
		goto LABEL_11;
	stru37_list_free_pool = v0;
	v1 = 0;
	do
	{
		v0[v1].next = &v0[v1 + 1];
		v0 = stru37_list;
		++v1;
	} while (v1 < 99);
	stru37_list[99].next = 0;
	stru37_list_47A500 = (stru37 *)&stru37_list_47A500;
	stru37_list_47A504 = (stru37 *)&stru37_list_47A500;
	v2 = (stru38 *)malloc(0x1A90u);
	stru38_list = v2;
	if (v2)
	{
		stru38_list_free_pool = v2;
		v3 = 0;
		do
		{
			v2[v3].next = &v2[v3 + 1];
			v2 = stru38_list;
			++v3;
		} while (v3 < 99);
		stru38_list[99].next = 0;
		stru38_list_47A4B0 = (stru38 *)&stru38_list_47A4B0;
		stru38_list_47A4B4 = (stru38 *)&stru38_list_47A4B0;
		result = script_create_function(SCRIPT_TYPE_INVALID, script_4280A0_stru38_list__production_loop) != 0;
	}
	else
	{
	LABEL_11:
		result = 0;
	}
	return result;
}

//----- (00427D60) --------------------------------------------------------
void stru37_list_427D60_enqueue_item(int *pcash, int *pcost, int cost_per_time_step, Script *production_task, void *production_task_param, int a6)
{
	stru37_list_427D80_enqueue_item(pcash, pcost, *pcost, cost_per_time_step, production_task, production_task_param, a6);
}

//----- (00427D80) --------------------------------------------------------
void stru37_list_427D80_enqueue_item(int *pcash, int *pcost, int cost, int cost_per_time_step, Script *production_task, void *production_task_param, int a7)
{
	stru37 *v7; // esi@1
	stru38 *v8; // ecx@6
	stru38 *v9; // eax@9
	stru37 *v10; // ecx@13
	stru38 *v11; // edx@13
	stru37 *v12; // eax@13

	v7 = stru37_list_free_pool;
	if (stru37_list_free_pool)
		stru37_list_free_pool = stru37_list_free_pool->next;
	else
		v7 = 0;
	if (v7)
	{
		v7->_14_pcost = pcost;
		v7->_18_pcash = pcash;
		v7->_28_production_task = production_task;
		v7->_C_cost_per_time_step = cost_per_time_step;
		v7->_8_cost_per_time_step = cost_per_time_step;
		v7->_10_cost = cost;
		v7->field_1C = 0;
		v7->_28_production_task_param = production_task_param;
		v7->_20_pcost_plus1 = 0;
		if (a7 == -1 || (v8 = stru38_list_47A4B0, (stru38 **)stru38_list_47A4B0 == &stru38_list_47A4B0))
		{
		LABEL_9:
			v9 = stru38_list_free_pool;
			if (stru38_list_free_pool)
				stru38_list_free_pool = stru38_list_free_pool->next;
			else
				v9 = 0;
			if (v9)
			{
				v10 = (stru37 *)&v9->pstru37;
				v9->field_34 = 0;
				v9->_C_pstru37 = (stru37 *)&v9->pstru37;
				v9->field_3C = a7;
				v10->next = v10;
				v9->field_40 = 1;
				v11 = stru38_list_47A4B0;
				v9->prev = (stru38 *)&stru38_list_47A4B0;
				v9->next = v11;
				stru38_list_47A4B0->prev = v9;
				stru38_list_47A4B0 = v9;
				v12 = v9->pstru37;
				v7->prev = v10;
				v7->next = v12;
				v10->next->prev = v7;
				v10->next = v7;
			}
		}
		else
		{
			while (v8->field_3C != a7)
			{
				v8 = v8->next;
				if ((stru38 **)v8 == &stru38_list_47A4B0)
					goto LABEL_9;
			}
			++v8->field_40;
			v7->next = v8->pstru37;
			v7->prev = (stru37 *)&v8->pstru37;
			v8->pstru37->prev = v7;
			for (v8->pstru37 = v7; (stru37 **)v7 != &v8->pstru37; v7 = v7->next)
				v7->_C_cost_per_time_step = v7->_8_cost_per_time_step / v8->field_40;
		}
	}
}

//----- (00427E90) --------------------------------------------------------
void stru37_list_427E90_enqueue_infantry(int *pcash, int *pcost, int cost_per_time_step, Script *production_task, void *production_task_param, int a6)
{
	stru37_list_427EB0_enqueue_infantry(
		pcash,
		pcost,
		*pcost,
		cost_per_time_step,
		production_task,
		production_task_param,
		a6);
}

//----- (00427EB0) --------------------------------------------------------
void stru37_list_427EB0_enqueue_infantry(int *pcash, int *pcost, int cost, int cost_per_time_step, Script *production_task, void *production_task_param, int a7)
{
	stru37 *v7; // esi@1
	stru38 *v8; // ecx@6
	stru38 *v9; // eax@9
	stru37 *v10; // ecx@13
	stru38 *v11; // edx@13
	stru37 *v12; // eax@13
	int v13; // eax@16

	v7 = stru37_list_free_pool;
	if (stru37_list_free_pool)
		stru37_list_free_pool = stru37_list_free_pool->next;
	else
		v7 = 0;
	if (v7)
	{
		v7->_14_pcost = pcost;
		v7->_18_pcash = pcash;
		v7->_10_cost = cost;
		v7->_20_pcost_plus1 = pcost + 1;
		v7->_C_cost_per_time_step = cost_per_time_step;
		v7->_8_cost_per_time_step = cost_per_time_step;
		v7->field_1C = 0;
		v7->_28_production_task = production_task;
		v7->_28_production_task_param = production_task_param;
		if (a7 == -1 || (v8 = stru38_list_47A4B0, (stru38 **)stru38_list_47A4B0 == &stru38_list_47A4B0))
		{
		LABEL_9:
			v9 = stru38_list_free_pool;
			if (stru38_list_free_pool)
				stru38_list_free_pool = stru38_list_free_pool->next;
			else
				v9 = 0;
			if (v9)
			{
				v10 = (stru37 *)&v9->pstru37;
				v9->field_34 = 0;
				v9->_C_pstru37 = (stru37 *)&v9->pstru37;
				v9->field_3C = a7;
				v10->next = v10;
				v9->field_40 = 1;
				v11 = stru38_list_47A4B0;
				v9->prev = (stru38 *)&stru38_list_47A4B0;
				v9->next = v11;
				stru38_list_47A4B0->prev = v9;
				stru38_list_47A4B0 = v9;
				v12 = v9->pstru37;
				v7->prev = v10;
				v7->next = v12;
				v10->next->prev = v7;
				v10->next = v7;
			}
		}
		else
		{
			while (v8->field_3C != a7)
			{
				v8 = v8->next;
				if ((stru38 **)v8 == &stru38_list_47A4B0)
					goto LABEL_9;
			}
			++v8->field_40;
			v7->next = v8->pstru37;
			v7->prev = (stru37 *)&v8->pstru37;
			v8->pstru37->prev = v7;
			for (v8->pstru37 = v7; (stru37 **)v7 != &v8->pstru37; v7 = v7->next)
			{
				v13 = v7->_8_cost_per_time_step / v8->field_40;
				v7->_C_cost_per_time_step = v13;
				if (v13 < 10)
					v7->_C_cost_per_time_step = 10;
			}
		}
	}
}

//----- (00427FD0) --------------------------------------------------------
void stru38_list_427FD0(int *pcost, int a2)
{
	stru38 *i; // esi@1
	stru37 *v3; // eax@2
	int v4; // eax@8
	stru38 *v5; // eax@9

	for (i = stru38_list_47A4B0; (stru38 **)i != &stru38_list_47A4B0; i = i->next)
	{
		v3 = i->pstru37;
		if ((stru37 **)v3 != &i->pstru37)
		{
			while (v3->_14_pcost != pcost)
			{
				v3 = v3->next;
				if ((stru37 **)v3 == &i->pstru37)
					goto LABEL_10;
			}
			if (a2)
				*v3->_18_pcash += v3->_10_cost - *v3->_14_pcost;
			v3->next->prev = v3->prev;
			v3->prev->next = v3->next;
			v3->next = stru37_list_free_pool;
			stru37_list_free_pool = v3;
			v4 = i->field_40 - 1;
			i->field_40 = v4;
			if (!v4)
			{
				v5 = i->prev;
				i->next->prev = v5;
				i->prev->next = i->next;
				i->next = stru38_list_free_pool;
				stru38_list_free_pool = i;
				i = v5;
			}
		}
	LABEL_10:
		;
	}
}

//----- (00428070) --------------------------------------------------------
void add_integer(int *a1, int a2)
{
	*a1 += a2;
}

//----- (00428080) --------------------------------------------------------
void stru37_stru38_list_free()
{
	free(stru37_list);
	free(stru38_list);
}

//----- (004280A0) --------------------------------------------------------
void script_4280A0_stru38_list__production_loop(Script *task)
{
	BOOL v1; // eax@1
	stru38 *v2; // edi@1
	stru37 *v3; // esi@2
	int v4; // ebp@2
	int *v5; // eax@3
	int *v6; // eax@10
	int v7; // ebx@14
	int *v8; // eax@16
	int *v9; // eax@20
	int v10; // ecx@20
	stru37 *v11; // eax@21
	int v12; // ecx@21
	stru38 *v13; // eax@22
	stru37 *j; // ecx@26
	stru37 *v15; // edx@31
	int v16; // eax@31
	stru37 *v17; // eax@32
	stru37 **v18; // ecx@33
	int v19; // eax@33
	stru38 *v20; // eax@34
	BOOL i; // [sp+0h] [bp-4h]@1

	v1 = _44CDC0_sidebar_is_units_limit();
	v2 = stru38_list_47A4B0;
	for (i = v1; (stru38 **)v2 != &stru38_list_47A4B0; v2 = v2->next)
	{
		v3 = v2->pstru37;
		v4 = 0;
		if ((stru37 **)v3 != &v2->pstru37)
		{
			while (1)
			{
				v5 = v3->_18_pcash;
				if (v5 == (int *)((char *)&game_globals_per_player + 4 * player_side) && i && v3->_20_pcost_plus1)
					break;
				if (*v5)
				{
					v3->field_1C += v3->_C_cost_per_time_step;
					if (v3->field_1C >= 256)
					{
						if (*v3->_18_pcash)
						{
							while (*v3->_14_pcost > 0)
							{
								--*v3->_18_pcash;
								v6 = v3->_14_pcost;
								v3->field_1C -= 256;
								--*v6;
								if (!*v3->_14_pcost)
								{
									v7 = 0;
									if (v3->_28_production_task)
										script_trigger_event(
											task,
											EVT_MSG_PRODUCTION_READY,
											v3->_28_production_task_param,
											v3->_28_production_task);
									v8 = v3->_20_pcost_plus1;
									if (v8)
									{
										--*v8;
										if (*v3->_20_pcost_plus1 > 0)
											v7 = 1;
									}
									if (v7)
									{
										v9 = v3->_14_pcost;
										v10 = v3->_10_cost;
										v3->field_1C = 0;
										*v9 = v10;
									}
									else
									{
										v11 = v3->prev;
										v3->next->prev = v11;
										v3->prev->next = v3->next;
										v3->next = stru37_list_free_pool;
										stru37_list_free_pool = v3;
										v12 = v2->field_40 - 1;
										v2->field_40 = v12;
										if (v12)
										{
											v4 = 1;
											v3 = v11;
										}
										else
										{
											v13 = v2->prev;
											v3 = 0;
											v4 = 0;
											v2->next->prev = v13;
											v2->prev->next = v2->next;
											v2->next = stru38_list_free_pool;
											stru38_list_free_pool = v2;
											v2 = v13;
										}
									}
									break;
								}
								if (v3->field_1C < 256 || !*v3->_18_pcash)
									break;
							}
						}
					}
				}
				if (v3)
				{
					if (v4)
					{
						for (j = v2->pstru37; (stru37 **)j != &v2->pstru37; j = j->next)
							j->_C_cost_per_time_step = j->_8_cost_per_time_step / v2->field_40;
						v4 = 0;
					}
					v3 = v3->next;
					if ((stru37 **)v3 != &v2->pstru37)
						continue;
				}
				goto LABEL_35;
			}
			v15 = v3->prev;
			*v3->_20_pcost_plus1 = 0;
			*v3->_14_pcost = 0;
			v3->next->prev = v3->prev;
			v3->prev->next = v3->next;
			v3->next = stru37_list_free_pool;
			stru37_list_free_pool = v3;
			v16 = v2->field_40 - 1;
			v2->field_40 = v16;
			if (v16)
			{
				while (1)
				{
					v17 = v15;
					if ((stru37 **)v15 == &v2->pstru37)
						break;
					v18 = &v15->prev;
					v15 = v15->prev;
					*v17->_20_pcost_plus1 = 0;
					*v17->_14_pcost = 0;
					v17->next->prev = *v18;
					(*v18)->next = v17->next;
					v17->next = stru37_list_free_pool;
					stru37_list_free_pool = v17;
					v19 = v2->field_40 - 1;
					v2->field_40 = v19;
					if (!v19)
						goto LABEL_34;
				}
			}
			else
			{
			LABEL_34:
				v20 = v2->prev;
				v2->next->prev = v20;
				v2->prev->next = v2->next;
				v2->next = stru38_list_free_pool;
				stru38_list_free_pool = v2;
				v2 = v20;
			}
		}
	LABEL_35:
		;
	}
	script_445370_yield_to_main_thread(task, 0x80000000, 1);
}

//----- (00428730) --------------------------------------------------------
bool stru13construct_list_alloc()
{
	stru13construct *v0; // eax@1
	int v1; // ecx@2
	BOOL result; // eax@4

	memset(&_47A608_stru13_associated_array, 0, sizeof(_47A608_stru13_associated_array));
	v0 = (stru13construct *)malloc(0x400u);
	stru13construct_list = v0;
	if (v0)
	{
		stru13construct_list_free_pool = v0;
		v1 = 0;
		do
		{
			v0[v1].next = &v0[v1 + 1];
			v0 = stru13construct_list;
			++v1;
		} while (v1 < 31);
		stru13construct_list[31].next = 0;
		stru13construct_list_47A638 = (stru13construct *)&stru13construct_list_47A638;
		stru13construct_list_47A63C = (stru13construct *)&stru13construct_list_47A638;
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (004287A0) --------------------------------------------------------
void stru13_list_free()
{
	free(stru13construct_list);
}

//----- (004287B0) --------------------------------------------------------
int stru13construct_list_get_saveload_packed_size()
{
	stru13construct *v0; // ecx@1
	int result; // eax@1

	v0 = stru13construct_list_47A638;
	for (result = 0; (stru13construct **)v0 != &stru13construct_list_47A638; result += 24)
		v0 = v0->next;
	return result;
}

//----- (004287D0) --------------------------------------------------------
bool stru13construct_list_saveload_pack(stru13constructSaveStruct *a1)
{
	stru13construct *v1; // eax@1
	char *v2; // ecx@2

	v1 = stru13construct_list_47A638;
	if ((stru13construct **)stru13construct_list_47A638 != &stru13construct_list_47A638)
	{
		v2 = (char *)&a1->field_8;
		do
		{
			*((_DWORD *)v2 - 2) = v1->field_8;
			*((_DWORD *)v2 - 1) = v1->field_C;
			*(_DWORD *)v2 = v1->field_10;
			*((_DWORD *)v2 + 1) = v1->_14_cost;
			*((_DWORD *)v2 + 2) = v1->_18_cost;
			*((_DWORD *)v2 + 3) = v1->_1C_cost_per_time_step;
			v1 = v1->next;
			v2 += 24;
		} while ((stru13construct **)v1 != &stru13construct_list_47A638);
	}
	return 1;
}

//----- (00428820) --------------------------------------------------------
bool stru13construct_list_saveload_unpack(int save_data, int save_data_size)
{
	int v2; // ebx@1
	int v3; // esi@2
	stru13construct *v4; // eax@3
	stru13construct *v5; // edx@7
	int v6; // ecx@7
	BOOL result; // eax@10

	v2 = save_data_size;
	if (save_data_size)
	{
		v3 = save_data + 8;
		while (1)
		{
			v4 = stru13construct_list_free_pool;
			if (stru13construct_list_free_pool)
				stru13construct_list_free_pool = stru13construct_list_free_pool->next;
			else
				v4 = 0;
			if (!v4)
				break;
			v5 = stru13construct_list_47A638;
			v4->prev = (stru13construct *)&stru13construct_list_47A638;
			v4->next = v5;
			stru13construct_list_47A638->prev = v4;
			stru13construct_list_47A638 = v4;
			v4->field_8 = *(_DWORD *)(v3 - 8);
			v4->field_C = *(_DWORD *)(v3 - 4);
			v4->field_10 = *(_DWORD *)v3;
			v4->_14_cost = *(_DWORD *)(v3 + 4);
			v4->_1C_cost_per_time_step = *(_DWORD *)(v3 + 12);
			v6 = *(_DWORD *)(v3 + 8);
			v4->_18_cost = v6;
			if (v6)
				stru37_list_427D80_enqueue_item(
				(int *)&game_globals_per_player + v4->field_C,
					&v4->_18_cost,
					v4->_14_cost,
					v4->_1C_cost_per_time_step,
					0,
					0,
					-1);
			v3 += 24;
			v2 -= 24;
			if (!v2)
				return 1;
		}
		result = 0;
	}
	else
	{
		result = 1;
	}
	return result;
}

//----- (004288D0) --------------------------------------------------------
bool is_building_or_tower_available(enum UNIT_ID unit_id)
{
	enum UNIT_ID v1; // esi@1

	v1 = unit_id;
	if ((int)unit_id < (int)UNIT_STATS_SURV_GUARD_TOWER
		|| (int)unit_id >(int)UNIT_STATS_MUTE_ROTARY_CANNON)
	{
		if (is_player_faction_evolved())
		{
			if (is_building_available(v1))
				return 1;
		}
		else if (is_building_available(v1))
		{
			return 1;
		}
	}
	else if (is_player_faction_evolved())
	{
		if (is_tower_available(v1))
			return 1;
	}
	else if (is_tower_available(v1))
	{
		return 1;
	}
	return 0;
}

//----- (0042C810) --------------------------------------------------------
bool sub_42C810(Sprite **sprite_list, int x, int y, int a4, int map_x, int a6, int a7)
{
	int v7; // ebx@1
	int v8; // ecx@1
	int v9; // edi@1
	int v10; // edx@1
	int v11; // ebp@2
	int v12; // esi@3
	Entity *v13; // eax@4
	int v14; // ecx@6
	enum UNIT_ID v15; // eax@10
	int v16; // eax@17
	int v17; // ebp@18
	int v18; // edi@19
	Sprite **v19; // esi@20
	int v21; // [sp+10h] [bp-14h]@1
	BOOL v22; // [sp+14h] [bp-10h]@1
	int v23; // [sp+18h] [bp-Ch]@1
	Sprite **v24; // [sp+20h] [bp-4h]@1
	int a3a; // [sp+28h] [bp+4h]@1
	int a4a; // [sp+2Ch] [bp+8h]@20
	int map_xa; // [sp+30h] [bp+Ch]@2

	v24 = sprite_list;
	v7 = y >> 13;
	v9 = (y >> 13) - 4;
	v22 = 1;
	v21 = 0;
	v10 = x >> 13;
	v23 = v10;
	a3a = (y >> 13) + map_x;
	v8 = a3a;
	if (v9 < a3a + 3)
	{
		map_xa = v10 - 3;
		v11 = v10 + a4 + 3;
		do
		{
			v12 = map_xa;
			if (map_xa < v11)
			{
				while (1)
				{
					v13 = boxd_40EE10_prolly_get_building(v12, v9);
					if (v13)
					{
						if (v13->player_side == player_side)
						{
							v14 = v13->unit_id;
							if (v14 < (int)UNIT_STATS_SURV_GUARD_TOWER || v14 >(int)UNIT_STATS_MUTE_ROTARY_CANNON)
								break;
						}
					}
					if (++v12 >= v11)
						goto LABEL_15;
				}
				v15 = v13->unit_id;
				if (v15 != UNIT_STATS_SURV_DRILL_RIG && v15 != UNIT_STATS_MUTE_DRILL_RIG
					|| a6 >= (int)UNIT_STATS_SURV_GUARD_TOWER && a6 <= (int)UNIT_STATS_MUTE_ROTARY_CANNON)
				{
					v21 = 1;
				}
			}
		LABEL_15:
			++v9;
		} while (v9 < a3a + 3);
		v10 = v23;
		v8 = a3a;
	}
	v16 = 0;
	if (v7 < v8)
	{
		v17 = v10 + a4;
		do
		{
			v18 = v10;
			if (v10 < v17)
			{
				v19 = &v24[v16];
				a4a = v17 - v10 + v16;
				do
				{
					if (a7)
					{
						v22 = 0;
						(*v19)->drawjob->flags |= 0x40000000u;
					}
					else
					{
						(*v19)->drawjob->flags &= 0xBFFFFFFF;
						if (boxd_40EE70(v18, v7) && v21)
						{
							sprite_load_mobd(*v19, 560);
						}
						else
						{
							sprite_load_mobd(*v19, 548);
							v22 = 0;
						}
						(*v19)->field_88_unused = 1;
						(*v19)->x = v18 << 13;
						(*v19)->field_88_unused = 1;
						(*v19)->y = v7 << 13;
					}
					++v18;
					++v19;
				} while (v18 < v17);
				v10 = v23;
				v16 = a4a;
				v8 = a3a;
			}
			++v7;
		} while (v7 < v8);
	}
	return v22;
}

//----- (0042C9C0) --------------------------------------------------------
void sub_42C9C0(Sprite **sprite_list)
{
	Sprite **v1; // esi@1
	int v2; // edi@1

	v1 = sprite_list;
	v2 = 20;
	do
	{
		sprite_list_remove(*v1);
		++v1;
		--v2;
	} while (v2);
}

//----- (0042D030) --------------------------------------------------------
void script_42D030_sidebar_tooltips(Script *a1)
{
	const char *v1; // edi@2
	int v2; // esi@2
	void *v3; // ebx@2
	ScriptEvent *i; // eax@3
	int v5; // eax@9
	int v6; // eax@10
	int v7; // edx@13
	int v8; // eax@18
	int v9; // esi@23
	int v10; // eax@23
	RenderString *v11; // esi@23
	int v12; // edi@23
	ScriptEvent *j; // eax@24
	int v14; // [sp+10h] [bp-54h]@2
	char v15[80]; // [sp+14h] [bp-50h]@21

	dword_47A5A0 = 10;
	_47A734_sidebar_tooltips_task = a1;
	while (1)
	{
		v1 = 0;
		v2 = 0;
		v3 = 0;
		v14 = 0;
		do
		{
			script_445370_yield_to_main_thread(a1, 0x40000000, 0);
			for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
			{
				if (i->event == EVT_MSG_1511_sidebar_click_category)
				{
					v3 = i->param;
					v2 = 1;
				}
				script_discard_event(i);
			}
		} while (!v2);
		if (v3)
		{
			v5 = *((_DWORD *)v3 + 2);
			if (v5)
			{
				v6 = *(_DWORD *)(v5 + 60);
				if (v6 >= 0)
				{
					v7 = 1;
					if (v6 == 87)
					{
                        // _447310_minimap inlined?
						if (*(DataMobdItem **)(*((_DWORD *)v3 + 9) + 76) == &currently_running_lvl_mobd[*(_DWORD *)(*((_DWORD *)v3 + 9) + 12)].items[165])
							v7 = 0;
						v1 = 0;
					}
					if (v7)
					{
						v8 = v6;
						v1 = unit_stats[v8].name;
						v14 = unit_stats[v8].cost;
					}
				}
				else if (v6 >= -11)
				{
					v1 = sidebar_category_labels[-v6 - 1];
				}
			}
		}
		if (v1)
		{
			if (v14)
				sprintf(v15, aSD, v1, v14);
			else
				strcpy(v15, v1);
			v9 = _445C00_text(v15, 40);
			v10 = _445C80_text(v15, 40);
			*(_DWORD *)(*((_DWORD *)v3 + 9) + 136) = 1;
			v11 = render_string_create(
				0,
				currently_running_lvl_mobd[MOBD_FONT_27].items,
				(*(_DWORD *)(*((_DWORD *)v3 + 9) + 16) >> 8) - (8 * v10 + 8),
				(*(_DWORD *)(*((_DWORD *)v3 + 9) + 20) >> 8) + 22,
				v10 + 2,
				v9 + 2,
				0x20000005,
				8,
				8);
			v12 = 0;
			v11->field_18 = 0;
			v11->num_lines = 0;
			render_string_445770(v11, v15, 0);
			do
			{
				script_445370_yield_to_main_thread(a1, 0x40000000, 0);
				for (j = script_get_next_event(a1); j; j = script_get_next_event(a1))
				{
					if (j->event == EVT_SHOW_UI_CONTROL)
						v12 = 1;
					script_discard_event(j);
				}
			} while (!v12);
			render_string_list_remove(v11);
		}
	}
}
// 47A5A0: using guessed type int dword_47A5A0;

//----- (0042D220) --------------------------------------------------------
void _41AC50_read_keyboard_input___42D220_handler(const char *a1, int a2)
{
	const char *v2; // esi@1

	v2 = a1;
	render_string_445AE0(_47A730_render_string);
	_47A730_render_string->field_18 = 0;
	_47A730_render_string->num_lines = 0;
	render_string_42D260(_47A730_render_string, v2, 0);
}

//----- (0042D260) --------------------------------------------------------
char render_string_42D260(RenderString *a1, const char *a2, DataMobdItem *a3)
{
	RenderString *v3; // edi@1
	const char *v4; // ebx@1
	DrawJob *v5; // ecx@1
	int v6; // eax@1
	int v7; // ebp@1
	int v8; // esi@1
	int v9; // ecx@5
	stru8 *v10; // ecx@6
	int v11; // edx@6
	int v12; // ebp@6
	int v13; // eax@6
	int v14; // edx@6
    DataMobdItem_stru0 *v15; // eax@12
    DataMobdItem_stru1 *v16; // eax@14
	bool v17; // zf@17
	int v19; // [sp+10h] [bp-Ch]@2
	int v20; // [sp+14h] [bp-8h]@6
	int v21; // [sp+18h] [bp-4h]@1

	v3 = a1;
	v4 = a2;
	v5 = a1->pstru8->drawjob;
	LOBYTE_HEXRAYS(v6) = *a2;
	v7 = v5->job_details.x + 8;
	v21 = v5->job_details.x + 8;
	v8 = v5->job_details.x + 8;
	while (*v4)
	{
		v6 = _443D60_strlen_before_newline(v4);
		v19 = v6;
		if (!v6)
			v19 = 1;
		if (*v4 == 10)
		{
			v8 = v7;
			v9 = v3->num_lines + 1;
			v3->field_18 = 0;
			v3->num_lines = v9;
			++v4;
		}
		else
		{
			v10 = v3->pstru8;
			v11 = v3->num_lines + 1;
			v12 = v3->field_18;
			v20 = v10->drawjob->job_details.y + 8 * v11;
			v13 = v11 * v3->field_C;
			v14 = v13 + v12 + 1;
			if (v13 + v12 != -1)
			{
				do
				{
					v10 = v10->next;
					--v14;
				} while (v14);
			}
			if (v12 > 1)
				v8 = v10->drawjob->job_details.x;
			LOBYTE_HEXRAYS(v6) = v19;
			if (v19)
			{
				do
				{
					if (a3)
						v15 = a3->_[*v4 + 1];
					else
						v15 = v3->mobd_font__see_sub405A60->_[1 + *v4];
					v10->drawjob->job_details.image = v15->sprt;
					v10->drawjob->job_details.y = v20 - v15->y_offset;
					v10->drawjob->job_details.x = v8 - v15->x_offset;
					v16 = v15->field_18;
					if (v16)
						v8 = v10->drawjob->job_details.x + (v16->x_offset >> 8);
					else
						v8 = v10->drawjob->job_details.x + 8;
					v10 = v10->next;
					++v4;
					v10->drawjob->job_details.x = v8;
					LOBYTE_HEXRAYS(v6) = v19 - 1;
					v17 = v19 == 1;
					++v3->field_18;
					--v19;
				} while (!v17);
			}
			v7 = v21;
		}
	}
	return v6;
}

//----- (0042D390) --------------------------------------------------------
void script_42D390_cursors(Script *a1)
{
	RenderString *v1; // eax@1
	void *v6; // eax@4
	int v7; // edx@4
	int v8; // ecx@4
	unsigned int v9; // kr04_4@4
	bool v10; // zf@5
	char v11[56]; // [sp+Ch] [bp-38h]@4

	memset(byte_47A5A8, 0, sizeof(byte_47A5A8));
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_27].items, 144, 304, 42, 3, 0x20000005, 8, 8);
	_47A730_render_string = v1;
	if (!v1)
	{
		script_yield(a1);
		v1 = _47A730_render_string;
	}
	render_string_445AE0(v1);
	_47A730_render_string->field_18 = 0;
	_47A730_render_string->num_lines = 0;
	render_string_42D260(_47A730_render_string, byte_47A5A8, 0);
	if (input_get_string(byte_47A5A8, 0x26u, _41AC50_read_keyboard_input___42D220_handler, 1, a1))
	{
        strcpy(v11, byte_47A5A8);

		v6 = __47CA80_array_idx_and_netz_player_side;
		v7 = 8 * (_DWORD)__47CA80_array_idx_and_netz_player_side;

		sprintf(byte_47A5A8, aSS_1, &netz_47A740[2].player_name[4 * (v7 - (_DWORD)v6)], v11);
		v9 = strlen(byte_47A5A8) + 1;
		v8 = v9 - 1;
		if (v9 != 1)
		{
			v10 = netz_47A834 == 0;
			byte_47A5A8[v8 + 1] = _468A58_sound_id;
			if (v10)
				netz_44A220(73, byte_47A5A8, v8 + 2);
			else
				netz_44A160(73, byte_47A5A8, v8 + 2);
			show_message(byte_47A5A8);
		}
	}
	render_string_list_remove(_47A730_render_string);
	_47A730_render_string = 0;
	script_yield(a1);
}
// 42D390: using guessed type char var_38[56];


//----- (0042D560) --------------------------------------------------------
int _42D560_get_mobd_lookup_id_rotation(int x, int y)
{
	int result; // eax@4
	int v3; // edx@13
	int v4; // ecx@19
	int v5; // edx@23

    // 0 north
    // 64 east
    // 128 south
    // 192 west

	if (x)
	{
        if (!y)
        {
            if (x < 0)
            {
                return 192; // x < 0, y = 0 - west
            }
            else
            {
                return 64; // x > 0, y = 0 - east
            }
        }
        else
        {
			if (x < 0)
			{
				v4 = -x;
				if (y < 0)
				{
					v5 = -y;
					if (v4 < -y)
						return -_42D639_mobd_lookup(v4, v5) & 0xFF;
					else
						return _42D63B_mobd_do_lookup(v4, v5) + 192;
				}
				else if (v4 > y)
				{
					return 192 - _42D63B_mobd_do_lookup(v4, y);
				}
				else
				{
					return _42D639_mobd_lookup(v4, y) + 128;
				}
			}
			else if (y > 0)
			{
				if (x < y)
					return 128 - _42D639_mobd_lookup(x, y);
				else
					return _42D63B_mobd_do_lookup(x, y) + 64;
			}
			else
			{
				v3 = -y;
				if (x > -y)
					return 64 - _42D63B_mobd_do_lookup(x, v3);
				else
					return _42D639_mobd_lookup(x, v3);
			}
		}
	}
	else if (y)
	{
		if (y < 0)
			return 0; // x = 0, y < 0 - north
		else
			return 128; // x = 0, y > 0 - south
	}
	else
	{
        return 0;
	}
}

//----- (0042D639) --------------------------------------------------------
__int16 _42D639_mobd_lookup(int x, int y)
{
    return _42D63B_mobd_do_lookup(y, x);
}

//----- (0042D63B) --------------------------------------------------------
__int16 _42D63B_mobd_do_lookup(int x, int y)
{
	return _468A6C_mobd_lookups[(unsigned int)(y << 6) / (signed __int64)x];
}

//----- (0042D64D) --------------------------------------------------------
unsigned int math_42D64D_prolly_vec_length(int a1, int a2)
{
	return math_42D669_prolly_vec_length(a2 * a2 + a1 * a1);
}

//----- (0042D669) --------------------------------------------------------
unsigned int math_42D669_prolly_vec_length(unsigned int a1)
{
	unsigned int v1; // ecx@0
	unsigned int result; // eax@1
	unsigned int v3; // ecx@2
	unsigned int v4; // ebx@2
	int v5; // edx@2
	unsigned int v6; // edi@4

	result = a1;
	if (a1 >= 2)
	{
		_BitScanReverse((DWORD *)&v1, a1);
		v3 = v1 >> 1;
		result = 1 << v3;
		v4 = 1 << v3;
		v5 = 1 << v3 << v3;
		while ((--v3 & 0x80000000) == 0)
		{
			v4 >>= 1;
			v6 = v5 + ((v4 + 2 * result) << v3);
			if (v6 <= a1)
			{
				result += v4;
				v5 = v6;
			}
		}
	}
	return result;
}

//----- (0042D6B0) --------------------------------------------------------
void EventHandler_42D6B0_evolved_mission8_ai(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	stru24 *v4; // esi@1
	stru24_EnemyNode *v5; // eax@4
	stru24_EnemyNode *v6; // edx@8
	stru24_stru10_convoy *v7; // eax@11
	int v8; // eax@16
	stru24_WandererNode *v9; // eax@17
	stru24_WandererNode *v10; // edx@21
	int v11; // eax@24
	stru24_AttackerNode *v12; // eax@24
	enum PLAYER_SIDE v13; // edx@28
	stru24_AttackerNode *v14; // esi@28
	stru24_AttackerNode *v15; // eax@30
	enum PLAYER_SIDE v16; // edx@34
	stru24_AttackerNode *v17; // esi@34
	int v18; // edx@36
	enum PLAYER_SIDE v19; // ecx@37
	stru24_EnemyNode *v20; // eax@38
	stru24_stru10_convoy *v21; // ecx@42
	stru24_stru160 *v22; // edi@42
	stru24_stru160 *v23; // eax@43
	stru24_stru40 *v24; // edx@44
	stru24_stru160 *v25; // edi@45
	void *v26; // ecx@45
	int v27; // ecx@49
	stru24_stru40 *v28; // eax@50
	bool v29; // zf@53
	enum PLAYER_SIDE v30; // ecx@53
	stru24_AttackerNode *v31; // ecx@54
	stru24_stru160 *v32; // edi@54
	int v33; // eax@55
	Sprite *v34; // ecx@56
	stru24_AttackerNode *v35; // eax@62
	stru24_stru10_convoy *v36; // [sp+14h] [bp+4h]@42
	int v37; // [sp+18h] [bp+8h]@42
			 // context -> stru24
	v4 = (stru24 *)receiver->param;
	if (event == EVT_SHOW_UI_CONTROL)
	{
		v18 = *((_DWORD *)param + 5);
		if (v18 && (v19 = v4->_2A0_player_side, v18 != v19))
		{
			v20 = (stru24_EnemyNode *)*((_DWORD *)param + v19 + 9);
			if (v20)
			{
				v20->next->prev = v20->prev;
				v20->prev->next = v20->next;
				v20->next = v4->enemy_list_free_pool;
				v4->enemy_list_free_pool = v20;
			}
			else
			{
				show_message_ex(0, aWarningUnreg_0);
			}
		}
		else if (*((_DWORD *)param + 4) == 25)
		{
			v21 = (stru24_stru10_convoy *)*((_DWORD *)param + v4->_2A0_player_side + 9);
			v36 = v21;
			v22 = (stru24_stru160 *)v21->field_C;
			v37 = v21->field_C;
			if (v22)
			{
				v23 = (stru24_stru160 *)v22->_C_next;
				if ((void **)v23 != &v22->_C_next)
				{
					v24 = (stru24_stru40 *)&v4->list_40_30;
					do
					{
						v25 = v23->prev;
						v26 = v23->_C_next;
						v23->next->prev = v25;
						v23->prev->next = v23->next;
						*((_DWORD *)v26 + 73) |= 0x80u;
						*((_DWORD *)v26 + 55) = 0;
						*((_DWORD *)v26 + 2) = 0;
						*((_DWORD *)v26 + 56) = 0;
						v23->field_8 = 0;
						v23->next = (stru24_stru160 *)v24->next;
						v23->prev = (stru24_stru160 *)v24;
						v24->next->prev = (stru24_stru40 *)v23;
						v24->next = (stru24_stru40 *)v23;
						v23 = v25->next;
						v22 = (stru24_stru160 *)v37;
					} while (v23 != (stru24_stru160 *)(v37 + 12));
					v21 = v36;
				}
				v22->next->prev = v22->prev;
				v22->prev->next = v22->next;
				v22->next = v4->list_160_head;
				v4->list_160_head = v22;
			}
			v21->next->prev = v21->prev;
			v21->prev->next = v21->next;
			v21->next = v4->list_10_convoy_head;
			v4->list_10_convoy_head = v21;
		}
		else
		{
			v27 = *((_DWORD *)param + 73);
			if (v27 & 0x80)
			{
				v28 = (stru24_stru40 *)*((_DWORD *)param + v4->_2A0_player_side + 9);
				if (v28)
				{
					v28->next->prev = v28->prev;
					v28->prev->next = v28->next;
					v28->next = v4->list_40_head;
					v4->list_40_head = v28;
				}
				else
				{
					show_message_ex(0, aWarningUnregis);
				}
			}
			else
			{
				v29 = (BYTE1(v27) & 2) == 0;
				v30 = v4->_2A0_player_side;
				if (v29)
				{
					v35 = (stru24_AttackerNode *)*((_DWORD *)param + v30 + 9);
					v35->next->prev = v35->prev;
					v35->prev->next = v35->next;
					v35->next = v4->attacker_list_free_pool;
					v4->attacker_list_free_pool = v35;
				}
				else
				{
					v31 = (stru24_AttackerNode *)*((_DWORD *)param + v30 + 9);
					v32 = v31->list_8;
					if (v32)
					{
						v33 = (int)v32->_C_next;
						if ((void **)v33 != &v32->_C_next)
						{
							v34 = v31->entity->sprite;
							while (v34 != *(Sprite **)(*(_DWORD *)(v33 + 12) + 92))
							{
								v33 = *(_DWORD *)v33;
								if ((void **)v33 == &v32->_C_next)
									return;
							}
							*(_DWORD *)(*(_DWORD *)v33 + 4) = *(_DWORD *)(v33 + 4);
							**(_DWORD **)(v33 + 4) = *(_DWORD *)v33;
							*(_DWORD *)v33 = v32->field_20;
							v32->field_20 = v33;
						}
					}
					else
					{
						v31->next->prev = v31->prev;
						v31->prev->next = v31->next;
						v31->next = v4->marshalling_nodes_list__evmission8_only_free_pool;
						v4->marshalling_nodes_list__evmission8_only_free_pool = v31;
					}
				}
			}
		}
	}
	else
	{
		if (event != EVT_MSG_1521_entity_created)
			return;
		if (is_enemy(v4->_2A0_player_side, (Entity *)param))
		{
			v5 = v4->enemy_list_free_pool;
			if (v5)
				v4->enemy_list_free_pool = v5->next;
			else
				v5 = 0;
			if (v5)
			{
				*((_DWORD *)param + v4->_2A0_player_side + 9) = (int)v5;
				v5->entity = (Entity *)param;
				v6 = v4->enemy_list_108;
				v5->prev = (stru24_EnemyNode *)&v4->enemy_list_108;
				v5->next = v6;
				v4->enemy_list_108->prev = v5;
				v4->enemy_list_108 = v5;
			}
			else
			{
				show_message_ex(0, aWarningOutOfEnemyNodes);
			}
			return;
		}
		if (*((_DWORD *)param + 4) == 25)
		{
			v7 = v4->list_10_convoy_head;
			if (v7)
				v4->list_10_convoy_head = v7->next;
			else
				v7 = 0;
			if (v7)
			{
				*((_DWORD *)param + v4->_2A0_player_side + 9) = (int)v7;
				v7->_8_entity = (Entity *)param;
				v7->field_C = 0;
				v7->next = (stru24_stru10_convoy *)v4->next;
				v7->prev = (stru24_stru10_convoy *)v4;
				v4->next->prev = (stru24 *)v7;
				v4->next = (stru24 *)v7;
				return;
			}
		LABEL_22:
			show_message_ex(0, aWarningOutOfWa);
			return;
		}
		v8 = *((_DWORD *)param + 75);
		if (v8 > 1)
		{
			v9 = v4->wanderer_list_free_pool;
			if (v9)
				v4->wanderer_list_free_pool = v9->next;
			else
				v9 = 0;
			if (v9)
			{
				*((_DWORD *)param + v4->_2A0_player_side + 9) = (int)v9;
				v9->entity = (Entity *)param;
				v10 = v4->wanderer_list_18;
				v9->prev = (stru24_WandererNode *)&v4->wanderer_list_18;
				v9->next = v10;
				v4->wanderer_list_18->prev = v9;
				v4->wanderer_list_18 = v9;
				return;
			}
			goto LABEL_22;
		}
		if (v8 == 1)
		{
			v11 = *((_DWORD *)param + 73);
			LOBYTE_HEXRAYS(v11) = v11 & 0x7F;
			BYTE1(v11) |= 2u;
			*((_DWORD *)param + 73) = v11;
			v12 = v4->marshalling_nodes_list__evmission8_only_free_pool;
			if (v12)
				v4->marshalling_nodes_list__evmission8_only_free_pool = v12->next;
			else
				v12 = 0;
			if (v12)
			{
				v13 = v4->_2A0_player_side;
				v14 = (stru24_AttackerNode *)&v4->marshalling_nodes_list__evmission8_only_60;
				*((_DWORD *)param + v13 + 9) = (int)v12;
				v12->entity = (Entity *)param;
				v12->list_8 = 0;
				v12->next = v14->next;
				v12->prev = v14;
				v14->next->prev = v12;
				v14->next = v12;
			}
			else
			{
				show_message_ex(0, aWarningOutOfMa);
			}
		}
		else
		{
			v15 = v4->attacker_list_free_pool;
			if (v15)
				v4->attacker_list_free_pool = v15->next;
			else
				v15 = 0;
			if (v15)
			{
				v16 = v4->_2A0_player_side;
				v17 = (stru24_AttackerNode *)&v4->attacker_list_48;
				*((_DWORD *)param + v16 + 9) = (int)v15;
				v15->entity = (Entity *)param;
				v15->list_8 = 0;
				v15->next = v17->next;
				v15->prev = v17;
				v17->next->prev = v15;
				v17->next = v15;
			}
			else
			{
				show_message_ex(0, aWarningOutOfAt);
			}
		}
	}
}

//----- (0042DA90) --------------------------------------------------------
void script_42DA90_ai(Script *a2)
{
	stru24 *v1; // ebx@1
	stru24_AttackerNode *v2; // edi@2
	Entity *v3; // eax@3
	stru24 *v4; // esi@3
	Sprite *v5; // eax@3
	int v6; // ebp@3
	stru24 *i; // eax@3
	Entity *v8; // ecx@4
	Sprite *v9; // ecx@5
	int v10; // ebx@5
	Sprite *v11; // edx@6
	int v12; // ecx@6
	int v13; // edx@8
	int v14; // ebx@8
	int v15; // ecx@10
	stru24_stru160 *v16; // edx@15
	stru24_stru160 *v17; // eax@16
	stru24_stru160 **v18; // ecx@19
	Entity *v19; // eax@21
	Entity *v20; // edx@21
	int v21; // [sp+8h] [bp-18h]@3
	int v22; // [sp+Ch] [bp-14h]@3
	stru24_AttackerNode *v23; // [sp+Ch] [bp-14h]@15
	stru24 *v24; // [sp+10h] [bp-10h]@1
	char *v25; // [sp+14h] [bp-Ch]@2
	enum PLAYER_SIDE v26; // [sp+18h] [bp-8h]@21
	Entity *v27; // [sp+1Ch] [bp-4h]@21

	v1 = (stru24 *)a2->param;
	v24 = v1;
	if (v1->next != v1)
	{
		v2 = v1->marshalling_nodes_list__evmission8_only_60;
		v25 = (char *)&v1->marshalling_nodes_list__evmission8_only_60;
		if ((stru24_AttackerNode **)v2 != &v1->marshalling_nodes_list__evmission8_only_60)
		{
			do
			{
				v3 = v2->entity;
				v4 = 0;
				v22 = 0x7FFFFFFF;
				v3->sprite->field_88_unused = 1;
				v5 = v3->sprite;
				v6 = v5->x;
				v21 = v5->y;
				for (i = v1->next; i != v1; i = i->next)
				{
					v8 = i->_8_entity;
					if (!v8->destroyed)
					{
						v8->sprite->field_88_unused = 1;
						v9 = i->_8_entity->sprite;
						v10 = v9->x;
						v9->field_88_unused = 1;
						if (v10 - v6 <= 0)
						{
							v11 = i->_8_entity->sprite;
							v12 = v6 - v11->x;
						}
						else
						{
							v11 = i->_8_entity->sprite;
							v12 = v11->x - v6;
						}
						v13 = v11->y;
						v14 = v13 - v21;
						if (v13 - v21 <= 0)
							v14 = v21 - v13;
						v15 = v14 + v12;
						if (v15 < v22)
						{
							v22 = v15;
							v4 = i;
						}
						v1 = v24;
					}
				}
				if (v4)
				{
					v23 = v2->prev;
					v16 = (stru24_stru160 *)v4->struC;
					if (!v16)
					{
						v17 = v1->list_160_head;
						if (v17)
						{
							v4->struC = (stru24_struC *)v17;
							v1->list_160_head = v1->list_160_head->next;
						}
						else
						{
							v4->struC = 0;
						}
						v18 = (stru24_stru160 **)v4->struC;
						if (v18)
						{
							*v18 = v1->list_11C;
							v4->struC->field_4 = (int)&v1->list_11C;
							v1->list_11C->prev = (stru24_stru160 *)v4->struC;
							v1->list_11C = (stru24_stru160 *)v4->struC;
							v4->struC->_C_param = &v4->struC->_C_param;
							v4->struC->field_10 = (int)&v4->struC->_C_param;
							v4->struC->field_1C = 0;
						}
					}
					v2->list_8 = v16;
					v19 = v4->_8_entity;
					v20 = v2->entity;
					v26 = v1->_2A0_player_side;
					v27 = v19;
					script_trigger_event(v19->script, EVT_MSG_1527, &v26, v20->script);
					v2->next->prev = v2->prev;
					v2->prev->next = v2->next;
					v2->next = (stru24_AttackerNode *)v4->struC->_C_param;
					v2->prev = (stru24_AttackerNode *)&v4->struC->_C_param;
					*((_DWORD *)v4->struC->_C_param + 1) = (int)v2;
					v4->struC->_C_param = v2;
					v2 = v23;
				}
				v2 = v2->next;
			} while ((char *)v2 != v25);
		}
	}
	stru24_42E070(v1);
	script_445370_yield_to_main_thread(a2, 0x80000000, 60);
}

//----- (0042DC70) --------------------------------------------------------
void script_42DC70_ai(Script *a1)
{
	a1->handler = script_42DA90_ai;
	script_445370_yield_to_main_thread(a1, 0x80000000, 60);
}

//----- (0042DC90) --------------------------------------------------------
void EventHandler_42DC90_evolved_mission5_ai(Script *a1, Script *a2, enum SCRIPT_EVENT event, Entity *param)
{
	stru24 *v4; // esi@1
	stru24_EnemyNode *v5; // eax@4
	stru24_EnemyNode *v6; // edx@8
	stru24_AttackerNode *v7; // eax@11
	stru24_AttackerNode *v8; // edx@15
	stru24_WandererNode *v9; // eax@17
	enum PLAYER_SIDE v10; // ecx@23
	enum PLAYER_SIDE v11; // edx@24
	stru24_EnemyNode *v12; // eax@25
	stru24_AttackerNode *v13; // eax@29
	stru24_stru40 *v14; // eax@32
						// 40B720: context -> stru24
	v4 = (stru24 *)a1->param;
	if (event == EVT_SHOW_UI_CONTROL)
	{
		v10 = param->player_side;
		if (v10 == 0)
			goto LABEL_37;
		v11 = v4->_2A0_player_side;
		if (v10 != v11)
		{
			v12 = (stru24_EnemyNode *)param->_24_ai_node_per_player_side._0_ai_node_per_player_side[v11];
			if (v12)
			{
				v12->next->prev = v12->prev;
				v12->prev->next = v12->next;
				v12->next = v4->enemy_list_free_pool;
				v4->enemy_list_free_pool = v12;
			}
			else
			{
				show_message_ex(0, aWarningUnreg_0);
			}
			return;
		}
		if (v10)
		{
			v14 = (stru24_stru40 *)param->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side];
			if (v14)
			{
				v14->next->prev = v14->prev;
				v14->prev->next = v14->next;
				v14->next = v4->list_40_head;
				v4->list_40_head = v14;
			}
			else
			{
				show_message_ex(0, aWarningUnreg_2);
			}
		}
		else
		{
		LABEL_37:
			v13 = (stru24_AttackerNode *)param->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side];
			if (v13)
			{
				v13->next->prev = v13->prev;
				v13->prev->next = v13->next;
				v13->next = v4->attacker_list_free_pool;
				v4->attacker_list_free_pool = v13;
			}
			else
			{
				show_message_ex(0, aWarningUnreg_1);
			}
		}
	}
	else if (event == EVT_MSG_1521_entity_created)
	{
		if (is_enemy(v4->_2A0_player_side, param))
		{
			v5 = v4->enemy_list_free_pool;
			if (v5)
				v4->enemy_list_free_pool = v5->next;
			else
				v5 = 0;
			if (v5)
			{
				param->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v5;
				v5->entity = param;
				v6 = v4->enemy_list_108;
				v5->prev = (stru24_EnemyNode *)&v4->enemy_list_108;
				v5->next = v6;
				v4->enemy_list_108->prev = v5;
				v4->enemy_list_108 = v5;
			}
			else
			{
				show_message_ex(0, aWarningOutOfEnemyNodes);
			}
		}
		else if (param->player_side)
		{
			v9 = v4->wanderer_list_free_pool;
			if (v9)
				v4->wanderer_list_free_pool = v9->next;
			else
				v9 = 0;
			if (v9)
			{
				param->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v9;
				v9->entity = param;
				param->_12C_prison_bunker_spawn_type = 2;
				v9->next = v4->wanderer_list_18;
				v9->prev = (stru24_WandererNode *)&v4->wanderer_list_18;
				v4->wanderer_list_18->prev = v9;
				v4->wanderer_list_18 = v9;
			}
			else
			{
				show_message_ex(0, aWarningOutOfWa);
			}
		}
		else
		{
			v7 = v4->attacker_list_free_pool;
			if (v7)
				v4->attacker_list_free_pool = v7->next;
			else
				v7 = 0;
			if (v7)
			{
				param->_24_ai_node_per_player_side._0_ai_node_per_player_side[v4->_2A0_player_side] = (int)v7;
				v7->entity = param;
				v8 = v4->attacker_list_48;
				v7->prev = (stru24_AttackerNode *)&v4->attacker_list_48;
				v7->next = v8;
				v4->attacker_list_48->prev = v7;
				v4->attacker_list_48 = v7;
			}
			else
			{
				show_message_ex(0, aWarningOutOfNe);
			}
		}
	}
}

//----- (0042DE80) --------------------------------------------------------
void script_42DE80(Script *a1)
{
	stru24 *v1; // ebx@1
	stru24_AttackerNode *v2; // eax@1
	stru24_AttackerNode **v3; // edi@1
	stru24_AttackerNode *v4; // esi@3
	Entity *v5; // edi@4
	stru24_AttackerNode **v6; // ebp@4

	v1 = (stru24 *)a1->param;
	v2 = v1->attacker_list_48;
	v3 = &v1->attacker_list_48;
	if ((stru24_AttackerNode **)v2 != &v1->attacker_list_48)
	{
		if (entity_425820_find(v2->entity, 76800))
		{
			v4 = *v3;
			if ((stru24_AttackerNode **)*v3 != v3)
			{
				do
				{
					v5 = v4->entity;
					v6 = &v4->prev->next;
					entity_4258C0_init_palettes_inc_unit_counter(v4->entity, player_side);
					script_trigger_event_group(v5->script, EVT_MSG_1521_entity_created, v5, SCRIPT_TYPE_39030);
					entity_mode_415540_infantry(v5);
					v4->next->prev = v4->prev;
					v4->prev->next = v4->next;
					v4->next = v1->attacker_list_free_pool;
					v1->attacker_list_free_pool = v4;
					v4 = *v6;
				} while ((stru24_AttackerNode **)*v6 != &v1->attacker_list_48);
			}
		}
	}
	stru24_42E070(v1);
	script_445370_yield_to_main_thread(a1, 0x80000000, 60);
}

//----- (0042DF20) --------------------------------------------------------
void script_42DF20(Script *a1)
{
	a1->handler = script_42DE80;
	script_445370_yield_to_main_thread(a1, 0x80000000, 60);
}

//----- (0042DF40) --------------------------------------------------------
Entity *stru24_42DF40(stru24 *a1, Entity *a2, int *a3)
{
	Entity *v3; // ebp@1
	Sprite *v4; // esi@1
	int v5; // eax@1
	int v6; // edx@1
	stru24 *v7; // ebx@2
	Entity *v8; // ecx@5
	Sprite *v9; // ecx@7
	int v10; // esi@7
	int v11; // esi@7
	bool v12; // zf@7
	bool v13; // sf@7
	Sprite *v14; // esi@7
	int v15; // ecx@8
	int v16; // esi@10
	int v17; // ebp@10
	int v18; // ecx@12
	int v20; // [sp+10h] [bp-10h]@1
	Entity *v21; // [sp+14h] [bp-Ch]@1
	Entity *v22; // [sp+18h] [bp-8h]@1
	char *v23; // [sp+1Ch] [bp-4h]@2

	v3 = a2;
	v22 = a2;
	v21 = 0;
	a2->sprite->field_88_unused = 1;
	v4 = a2->sprite;
	v5 = v4->x;
	v20 = v4->y;
	v6 = 0x7FFFFFFF;
	if (v3->unit_id != 19)
	{
		v7 = (stru24 *)a1->enemy_list_108;
		v23 = (char *)&a1->enemy_list_108;
		if ((stru24_EnemyNode **)v7 != &a1->enemy_list_108)
		{
			while (1)
			{
				v8 = v7->_8_entity;
				if (!v8->destroyed && v8->player_side != v3->player_side)
				{
					v8->sprite->field_88_unused = 1;
					v9 = v7->_8_entity->sprite;
					v10 = v9->x;
					v9->field_88_unused = 1;
					v11 = v10 - v5;
					v12 = v11 == 0;
					v13 = v11 < 0;
					v14 = v7->_8_entity->sprite;
					if (v13 || v12)
						v15 = v5 - v14->x;
					else
						v15 = v14->x - v5;
					v16 = v14->y;
					v17 = v16 - v20;
					if (v16 - v20 <= 0)
						v17 = v20 - v16;
					v18 = v17 + v15;
					if (v18 < v6)
					{
						v6 = v18;
						v21 = v7->_8_entity;
					}
				}
				v7 = v7->next;
				if ((char *)v7 == v23)
					break;
				v3 = v22;
			}
		}
	}
	*a3 = v6;
	return v21;
}

//----- (0042E030) --------------------------------------------------------
void stru24_42E030(stru24 *a1, Entity *a2)
{
	Entity *v2; // esi@1
	stru24 *v3; // edi@1
	Entity *v4; // eax@1
	int v5; // ecx@2
	Script *v6; // edx@2
	int v7; // [sp+8h] [bp-Ch]@1
	int v8; // [sp+Ch] [bp-8h]@2
	Entity *v9; // [sp+10h] [bp-4h]@2

	v2 = a2;
	v3 = a1;
	v4 = stru24_42DF40(a1, a2, &v7);
	if (v4)
	{
		v5 = v3->_2A0_player_side;
		v6 = v2->script;
		v9 = v4;
		v8 = v5;
		script_trigger_event(0, EVT_ENTITY_ATTACK, &v8, v6);
	}
}

//----- (0042E070) --------------------------------------------------------
void stru24_42E070(stru24 *a1)
{
	stru24 *v1; // ebp@1
	stru24_WandererNode *v2; // esi@1
	char *v3; // ebx@1
	Entity *v4; // edi@2
	int v5; // eax@2
	int v6; // eax@7
	stru24_WandererNode *v7; // ecx@9
	stru24_stru40 *i; // edi@11
	Entity *v9; // esi@12
	Entity *v10; // eax@15
	int a3; // [sp+10h] [bp-Ch]@4
    _47CAF0_task_attachment1_attack_task v14;

	v1 = a1;
	v2 = a1->wanderer_list_18;
	v3 = (char *)&a1->wanderer_list_18;
	if ((stru24_WandererNode **)v2 != &a1->wanderer_list_18)
	{
		do
		{
			v4 = v2->entity;
			v5 = v4->_12C_prison_bunker_spawn_type;
			if (v5)
			{
				if (v5 & 1 && stru24_42DF40(v1, v2->entity, &a3) && a3 < 51200)
					v4->_12C_prison_bunker_spawn_type = 1;
				v6 = v4->_12C_prison_bunker_spawn_type - 1;
				v4->_12C_prison_bunker_spawn_type = v6;
				if (!v6 && v4->unit_id != 19)
				{
					v7 = v2->prev;
					v2->next->prev = v7;
					v2->prev->next = v2->next;
					v2->next = (stru24_WandererNode *)v1->list_40_30;
					v2->prev = (stru24_WandererNode *)&v1->list_40_30;
					v1->list_40_30->prev = (stru24_stru40 *)v2;
					v1->list_40_30 = (stru24_stru40 *)v2;
					v2 = v7;
				}
			}
			v2 = v2->next;
		} while ((char *)v2 != v3);
	}
	for (i = v1->list_40_30; (stru24_stru40 **)i != &v1->list_40_30; i = i->next)
	{
		v9 = i->_C__entity;
		if (!v9->entity_8 && !v9->_E0_current_attack_target || v9->mode == entity_mode_415690)
		{
			v10 = stru24_42DF40(v1, i->_C__entity, &a3);
			if (v10)
			{
				v14.player_side = v1->_2A0_player_side;
                v14.target = v10;
				script_trigger_event(0, EVT_ENTITY_ATTACK, &v14, v9->script);
			}
		}
	}
}

//----- (00430F10) --------------------------------------------------------
void _430F10_unit_inits()
{
	memset(&_47B3E0_outpost_levels, 0, sizeof(_47B3E0_outpost_levels));
	_47B3E0_unit_int_outpost_clanhall = 0;
	_47B3D0_building_production_group = 0;
	_47B3B8_tower_production_group = 0;
	_47B3D4_aircraft_production_group = 0;
	memset(&_477378_clanhall, 0, sizeof(_477378_clanhall));
	_47B3C0_player_outposts_clanhalls[0] = 0;
	_47B3C0_player_outposts_clanhalls[1] = 0;
	max_outpost_level = 1;
	_47B3C0_player_outposts_clanhalls[2] = 0;
	max_clanhall_level = 1;
	_47B3C0_player_outposts_clanhalls[3] = 0;
}

//----- (00430F70) --------------------------------------------------------
void entity_register_player_main_building(Entity *a1)
{
	int v1; // edx@1
	Entity **v2; // eax@1

	v1 = 0;
	v2 = _47B3C0_player_outposts_clanhalls;
	while (*v2)
	{
		++v2;
		++v1;
		if ((int)v2 >= (int) & _47B3D0_building_production_group)
			return;
	}
	_47B3C0_player_outposts_clanhalls[v1] = a1;
}

//----- (00430F90) --------------------------------------------------------
void entity_430F90_clanhall(Entity *a1)
{
	ProductionGroup *v1; // esi@1
	int v2; // edx@2
	Entity **v3; // eax@2
	int v4; // ecx@7
	Entity **v5; // eax@7

	v1 = _47B3D4_aircraft_production_group;
	if (a1 == _47B3D4_aircraft_production_group->_C_entity)
	{
		v2 = 0;
		v3 = _47B3C0_player_outposts_clanhalls;
		while (*v3 != a1)
		{
			++v3;
			++v2;
			if ((int)v3 >= (int) & _47B3D0_building_production_group)
				goto LABEL_7;
		}
		_47B3C0_player_outposts_clanhalls[v2] = 0;
	LABEL_7:
		v4 = 0;
		v5 = _47B3C0_player_outposts_clanhalls;
		while (!*v5)
		{
			++v5;
			++v4;
			if ((int)v5 >= (int) & _47B3D0_building_production_group)
				return;
		}
		v1->_C_entity = _47B3C0_player_outposts_clanhalls[v4];
		_47B3D4_aircraft_production_group->outpost_clanhall = _47B3C0_player_outposts_clanhalls[v4];
	}
}

//----- (00431000) --------------------------------------------------------
int get_max_outpost_level()
{
	return max_outpost_level;
}
// 47B404: using guessed type int max_outpost_level;

//----- (00431010) --------------------------------------------------------
bool is_outpost_maxed()
{
	return max_outpost_level >= 5;
}
// 47B404: using guessed type int max_outpost_level;

//----- (00431020) --------------------------------------------------------
void entity_outpost_on_upgrade_complete(Script *receiver, Script *sender, enum SCRIPT_EVENT message, void *param)
{
	Script *v4; // ebp@1
	Entity *v5; // ebx@1
	EntityBuildingState *v6; // eax@1
	ProductionGroup *v7; // edi@1
	int new_building_level; // ecx@1
	int can_unlock_towers; // esi@4
	unsigned int v10; // ecx@10
	enum LEVEL_ID v11; // eax@12
	unsigned int v12; // ecx@17
	enum LEVEL_ID v13; // eax@19
	unsigned int v14; // eax@22
	int v15; // eax@26
	Script *a2a; // [sp+10h] [bp-4h]@1

	v4 = receiver;
	a2a = sender;
	v5 = (Entity *)receiver->param;
	v6 = (EntityBuildingState *)v5->state;
	v7 = v6->production_group;
	new_building_level = v6->num_upgrades + 1;
	v6->num_upgrades = new_building_level;
	if (new_building_level > 5)
		v6->num_upgrades = 5;
	if (v5->player_side == player_side)
	{
		can_unlock_towers = 0;
		--__47B3E0_outpost_levels_negindex[v6->num_upgrades];
		++_47B3E0_outpost_levels.num_buildings_by_level[v6->num_upgrades];
		if (v6->num_upgrades > max_outpost_level)
		{
			max_outpost_level = v6->num_upgrades;
			can_unlock_towers = 1;
		}
		switch (v6->num_upgrades)
		{
		case 2:
			if (!(levels[current_level_idx].disabled_units_mask & 0x200000))
				production_group_enable(v7, UNIT_STATS_SURV_FLAMER, 2880);
			if (can_unlock_towers)
			{
				sub_447000();
				v10 = levels[current_level_idx].disabled_units_mask;
				if (!(BYTE1(v10) & 8))
					production_group_enable(_47B3B8_tower_production_group, UNIT_STATS_SURV_GUARD_TOWER, 2400);
			}
			break;
		case 3:
			v11 = current_level_idx;
			if (!(levels[current_level_idx].disabled_units_mask & 0x400000))
			{
				production_group_enable(v7, UNIT_STATS_SURV_SABOTEUR, 2856);
				v11 = current_level_idx;
			}
			if (!(levels[v11].disabled_units_mask & 0x800000))
			{
				production_group_enable(v7, UNIT_STATS_SURV_SAPPER, 2864);
				v11 = current_level_idx;
			}
			if (can_unlock_towers)
			{
				v12 = levels[v11].disabled_units_mask;
				if (!(BYTE1(v12) & 1))
					production_group_enable(_47B3B8_tower_production_group, UNIT_STATS_SURV_MISSILE_BATTERY, 2384);
			}
			break;
		case 4:
			v13 = current_level_idx;
			if (!(levels[current_level_idx].disabled_units_mask & 0x1000000))
			{
				production_group_enable(v7, UNIT_STATS_SURV_RPG_LAUNCHER, 2840);
				v13 = current_level_idx;
			}
			if (can_unlock_towers)
			{
				v14 = levels[v13].disabled_units_mask;
				if (!(BYTE1(v14) & 2))
					production_group_enable(_47B3B8_tower_production_group, UNIT_STATS_SURV_CANNON_TOWER, 2392);
			}
			break;
		case 5:
			if (!(levels[current_level_idx].disabled_units_mask & 0x2000000))
				production_group_enable(v7, UNIT_STATS_SURV_SNIPER, 2832);
			LOBYTE_HEXRAYS(v15) = is_machine_shop_maxed();
			if (v15)
				attempt_unlock_aircraft();
			break;
		default:
			break;
		}
	}
	entity_4109A0_status_bar(v5);
	EventHandler_DefaultBuildingsHandler(v4, a2a, message, param);
}

//----- (00431270) --------------------------------------------------------
void EventHandler_Outpost(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_DESTROY:
			entity_402E40_destroy((Entity *)receiver->param, entity_mode_outpost_on_death);
			break;
		case EVT_MSG_PRODUCTION_READY:            // param = unit_stats_idx
			if (param == (void *)UNIT_STATS_SURV_BOMBER)// Bomber
			{
				if (v4->player_side == player_side)
				{
					show_message_ex(0, aAirStrikeReady);
					on_airstrike_ready();
				}
			}
			else
			{
				v4->sprite->field_88_unused = 1;
				if (spawn_unit(
					(enum UNIT_ID)(int)param,
					v4->sprite->x + v4->stru60.pstru4->x_offset,
					v4->sprite->y + v4->stru60.pstru4->y_offset,
					v4->player_side))
				{
					if (v4->player_side == player_side)
					{
						sound_play(SOUND_SURV_UNIT_READY, 0, _4690A8_unit_sounds_volume, 16, 0);
						show_message_ex(0, aUnitReady);
					}
				}
				else
				{
					show_message_ex(0, aCouldntCreateNewUnit);
				}
			}
			break;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage(v4, param, entity_mode_outpost_on_death);
			entity_410520_update_healthbar_color(v4);
			break;
		case EVT_MSG_SABOTAGE:
			entity_sabotage(v4, param, entity_mode_outpost_on_death);
			break;
		case EVT_MSG_UPGRADE_COMPLETE:
			entity_outpost_on_upgrade_complete(receiver, sender, event, param);
			break;
		default:
			EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
			break;
		}
	}
}

//----- (00431410) --------------------------------------------------------
void entity_mode_outpost_enable_basic_construction(Entity *a1)
{
	Entity *v1; // edi@1
	EntityBuildingState *v2; // esi@2
	enum LEVEL_ID v3; // eax@7
	int *v4; // esi@7

	v1 = a1;
	if (player_side == a1->player_side)
	{
		v2 = (EntityBuildingState *)a1->state;
		v2->same_buildings_count = 0;
		script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_SURV_OUTPOST_HANDLER);
		if (!v2->same_buildings_count)
		{
			if (!_47B3E0_unit_int_outpost_clanhall && !_47B3D0_building_production_group)
				_47B3D0_building_production_group = entity_building_create_production_group(v1, PRODUCTION_GROUP_BUILDINGS);
			if (!_47B3B8_tower_production_group)
			{
				_47B3B8_tower_production_group = entity_building_create_production_group(v1, PRODUCTION_GROUP_TOWERS);
				v3 = current_level_idx;
				v4 = &surv_basic_buildings[0].mobd_lookup_table_offset;
				do
				{
					if (!(levels[v3].disabled_units_mask & *(v4 - 2)))
					{
						production_group_enable(_47B3D0_building_production_group, (enum UNIT_ID)*(v4 - 1), *v4);
						v3 = current_level_idx;
					}
					v4 += 3;
				} while ((int)v4 < (int)&surv_basic_infantry[0].unit_stats_idx);
				if (!_47B3D4_aircraft_production_group)
					_47B3D4_aircraft_production_group = entity_building_create_production_group(v1, PRODUCTION_GROUP_AIRCRAFT);
				max_outpost_level = 1;
				memset(&_47B3E0_outpost_levels, 0, sizeof(_47B3E0_outpost_levels));
			}
		}
	}
}

//----- (00431500) --------------------------------------------------------
void UNIT_Handler_Outpost(Script *a1)
{
	Entity *v1; // esi@1
	int v2; // ecx@4
	Entity **v3; // eax@4
	void *v4; // eax@12

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			if (v1->player_side == player_side)     // -- INLINED 00430F70 entity_register_player_base
			{
				v2 = 0;
				v3 = _47B3C0_player_outposts_clanhalls;
				while (*v3)
				{
					++v3;
					++v2;
					if ((int)v3 >= (int) & _47B3D0_building_production_group)
						goto LABEL_9;
				}
				_47B3C0_player_outposts_clanhalls[v2] = v1;
			}                                         // -- END OF INLINED
		LABEL_9:
			v1->script->event_handler = EventHandler_Outpost;
			entity_44B100_buildings__mess_with_fog_of_war(v1);
			entity_initialize_building(
				v1,
				3,
				entity_mode_outpost_on_death_update_production,
				entity_mode_outpost_set_default_production);
			entity_mode_outpost_enable_basic_construction(v1);
			if (v1->sprite->cplc_ptr1_pstru20)
				v1->mode = entity_mode_431680_outpost_arrive;
			else
				entity_402BB0_set_arrive_handler(v1, entity_mode_431680_outpost_arrive);
			v4 = a1->sprite->_80_entity__stru29__sprite__initial_hitpoints;
			if (v4)
			{
				v1->hitpoints = (int)v4;
				entity_410520_update_healthbar_color(v1);
			}
		}
		(v1->mode)(v1);
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (004315D0) --------------------------------------------------------
void entity_mode_outpost_set_default_production(Entity *a1)
{
	Entity *v1; // esi@1
	enum PLAYER_SIDE v2; // eax@1
	EntityBuildingState *v3; // ebx@1
	ProductionGroup *v4; // eax@6
	ProductionGroup *v5; // edi@6
	int *v6; // esi@6
	enum LEVEL_ID v7; // eax@6

	v1 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (v2 == player_side)
	{
		if (a1->mode_arrive == entity_mode_outpost_set_default_production)
		{
			entity_mode_outpost_enable_basic_construction(a1);
			v1->mode_arrive = 0;
			v1->mode = entity_mode_403650_building;
		}
		if (!v1->sprite->cplc_ptr1_pstru20)
			show_message_ex(0, aBuildingCompleted);
		v4 = entity_building_create_production_group(v1, PRODUCTION_GROUP_INFANTRY);
		v5 = v4;
		v6 = &surv_basic_infantry[0].mobd_lookup_table_offset;
		v3->production_group = v4;
		v7 = current_level_idx;
		do
		{
			if (!(levels[v7].disabled_units_mask & *(v6 - 2)))
			{
				production_group_enable(v5, (enum UNIT_ID)*(v6 - 1), *v6);
				v7 = current_level_idx;
			}
			v6 += 3;
		} while ((int)v6 < (int)&dword_468FDC);
		++_47B3E0_outpost_levels.num_buildings_by_level[1];
	}
	else if (v2 == 0)
	{
		a1->mode_arrive = entity_mode_outpost_set_default_production;
	}
}

//----- (00431680) --------------------------------------------------------
void entity_mode_431680_outpost_arrive(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@5

	v1 = a1;
	a1->mode_arrive = 0;
	entity_mode_outpost_set_default_production(a1);
	if (player_side == v1->player_side && !v1->sprite->cplc_ptr1_pstru20 && !is_player_faction_evolved())
		sound_play(SOUND_SURV_BUILDING_COMPLETED, 0, _4690A8_unit_sounds_volume, 16, 0);
	v2 = v1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	v1->script->script_type = SCRIPT_SURV_OUTPOST_HANDLER;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00431710) --------------------------------------------------------
void entity_mode_outpost_on_death_update_production(Entity *a1)
{
	Entity *v1; // edi@1
	enum PLAYER_SIDE v2; // edx@1
	EntityBuildingState *v3; // ecx@1
	int v4; // esi@2
	enum LEVEL_ID v5; // ecx@5
	enum UNIT_ID v6; // edx@13
	int v7; // eax@18
	ProductionGroup *v8; // edx@28
	int v9; // ecx@29
	Entity **v10; // eax@29
	int v11; // ecx@34
	Entity **v12; // eax@34
	Entity *v13; // [sp+10h] [bp-4h]@1

	v1 = a1;
	v13 = a1;
	v2 = a1->player_side;
	v3 = (EntityBuildingState *)a1->state;
	if (player_side != v2)
		return;
	--_47B3E0_outpost_levels.num_buildings_by_level[v3->num_upgrades];
	v4 = v3->num_upgrades;
	if (v4 != max_outpost_level || _47B3E0_outpost_levels.num_buildings_by_level[v4])
		goto LABEL_22;
	if (v4 <= 0)
		goto LABEL_21;
	v5 = current_level_idx;
	do
	{
		if (v4 == 2)
		{
			if (levels[v5].disabled_units_mask & 0x800)
				goto LABEL_18;
			v6 = UNIT_STATS_SURV_GUARD_TOWER;
			goto LABEL_16;
		}
		if (v4 == 3)
		{
			if (levels[v5].disabled_units_mask & 0x100)
				goto LABEL_18;
			v6 = UNIT_STATS_SURV_MISSILE_BATTERY;
		LABEL_16:
			production_group_disable(_47B3B8_tower_production_group, v6);
		LABEL_17:
			v5 = current_level_idx;
			goto LABEL_18;
		}
		if (v4 == 4)
		{
			if (!(levels[v5].disabled_units_mask & 0x200))
				production_group_disable(_47B3B8_tower_production_group, UNIT_STATS_SURV_CANNON_TOWER);
			_447250_toggle_aircraft();
			goto LABEL_17;
		}
	LABEL_18:
		v7 = __47B3E0_outpost_levels_negindex[v4--];
	} while (!v7 && v4 > 0);
	v1 = v13;
LABEL_21:
	max_outpost_level = v4;
LABEL_22:
	if (building_limits_count(v1->unit_id) == 1)
	{
		if (_47B3D0_building_production_group)
		{
			production_group_4467E0(_47B3D0_building_production_group, UNIT_STATS_SURV_OUTPOST);
			_47B3E0_unit_int_outpost_clanhall = 1;
		}
		production_group_446860(_47B3B8_tower_production_group);
		_447250_toggle_aircraft();
		production_group_446860(_47B3D4_aircraft_production_group);
		_47B3D4_aircraft_production_group = 0;
		_47B3B8_tower_production_group = 0;
		disable_minimap();
	}
	else
	{
		if (max_outpost_level < 2)
			disable_minimap();
		v8 = _47B3D4_aircraft_production_group;
		if (v1 == _47B3D4_aircraft_production_group->_C_entity)
		{
			v9 = 0;
			v10 = _47B3C0_player_outposts_clanhalls;
			while (*v10 != v1)
			{
				++v10;
				++v9;
				if ((int)v10 >= (int) & _47B3D0_building_production_group)
					goto LABEL_34;
			}
			_47B3C0_player_outposts_clanhalls[v9] = 0;
		LABEL_34:
			v11 = 0;
			v12 = _47B3C0_player_outposts_clanhalls;
			while (!*v12)
			{
				++v12;
				++v11;
				if ((int)v12 >= (int) & _47B3D0_building_production_group)
					return;
			}
			v8->_C_entity = _47B3C0_player_outposts_clanhalls[v11];
			_47B3D4_aircraft_production_group->outpost_clanhall = _47B3C0_player_outposts_clanhalls[v11];
		}
	}
}

//----- (004318E0) --------------------------------------------------------
void _4318E0_free_building_production()
{
	if (_47B3D0_building_production_group)
	{
		production_group_446860(_47B3D0_building_production_group);
		_47B3D0_building_production_group = 0;
	}
}

//----- (00431900) --------------------------------------------------------
void entity_mode_outpost_on_death(Entity *a1)
{
	Entity *v1; // esi@1

	v1 = a1;
	entity_mode_outpost_on_death_update_production(a1);
	entity_mode_building_default_on_death(v1);
}

//----- (00431920) --------------------------------------------------------
void render_sw_initialize()
{
	if (global_wnd_bpp == 8)
		render_sw_hdc = GetDC(global_hwnd);
}

//----- (00431940) --------------------------------------------------------
void render_sw_free_palette()
{
	HPALETTE v0; // eax@3

	if (global_wnd_bpp == 8)
	{
		if (render_sw_default_palette)
		{
			v0 = SelectPalette(render_sw_hdc, render_sw_default_palette, 0);
			DeleteObject(v0);
		}
		render_sw_palette = 0;
	}
}

//----- (00431980) --------------------------------------------------------
void _431980_update_primary_palette(PALETTEENTRY *palette_entries)
{
	PALETTEENTRY *v1; // edx@1
	int v2; // eax@4
	char *v3; // ecx@9
	BYTE *v4; // eax@9
	int v5; // eax@11
	_BYTE *v6; // ecx@14
	int v7; // eax@14
	HPALETTE v8; // esi@16
	int v9; // [sp-Ch] [bp-410h]@4
	_BYTE v10[1024]; // [sp+0h] [bp-404h]@14
	int v11; // [sp+400h] [bp-4h]@14

	v1 = palette_entries;
	if (global_wnd_bpp == 8)
	{
		dword_47C018 = 0;
		dword_468FD4 = 1;
		dword_468FD8 = 2;
		dword_468FDC = 4;
		if (palette_entries)
			memcpy(_47B408_palette_entries, palette_entries, sizeof(_47B408_palette_entries));
		else
			v1 = _47B408_palette_entries;
		if (global_fullscreen == 1)
		{
			v3 = (char *)&RenderDD_primary_palette_values[0].peGreen;
			v4 = &v1->peBlue;
			do
			{
				v4[&RenderDD_primary_palette_values[0].peGreen - (BYTE *)v1] = 0;
				*(v3 - 1) = *(v4 - 2);
				*v3 = *(v4 - 1);
				v4[(char *)RenderDD_primary_palette_values - (char *)v1] = *v4;
				v3 += 4;
				v4 += 4;
			} while ((int)v3 < (int)&render_sw_hdc + 1);
			v5 = render_dd_is_primary_surface_lost();
			if (!v5)
			{
				v5 = (int)pddpal_primary;
				if (pddpal_primary)
					v5 = pddpal_primary->SetEntries(0, 0, 256, RenderDD_primary_palette_values);
			}
		}
		else
		{
			v6 = v10;
			v7 = (int)&v1->peGreen;
			v11 = 256;
			do
			{
				*(_BYTE *)(&v10[2] - (_BYTE *)v1 + v7) = 0;
				*v6 = *(_BYTE *)(v7 + 1);
				*(_BYTE *)(v10 - (_BYTE *)v1 + v7) = *(_BYTE *)v7;
				*(_BYTE *)(&v10[1] - (_BYTE *)v1 + v7) = *(_BYTE *)(v7 - 1);
				v6 += 4;
				v7 += 4;
				--v11;
			} while (v11);
			v8 = render_sw_palette;
			if (render_sw_palette)
			{
				render_sw_palette = _431B60_create_palette((PALETTEENTRY *)v10, 256);
				SelectPalette(render_sw_hdc, render_sw_palette, 0);
				DeleteObject(v8);
			}
			else
			{
				render_sw_palette = _431B60_create_palette((PALETTEENTRY *)v10, 256);
				render_sw_default_palette = SelectPalette(render_sw_hdc, render_sw_palette, 0);
			}
			v5 = RealizePalette(render_sw_hdc);
		}
	}
}

//----- (00431B60) --------------------------------------------------------
HPALETTE _431B60_create_palette(PALETTEENTRY *a1, int num_entries)
{
	PALETTEENTRY *v2; // ebx@1
	int v3; // ecx@1
	char *v4; // esi@1
	char *v5; // edi@1
	int v6; // eax@1
	char *v7; // ebp@1
	int v8; // edx@1
	int v9; // eax@4
	int v10; // edx@4
	int v11; // eax@6
	int v12; // edx@6
	int v14; // [sp+14h] [bp-408h]@1
    struct
    {
        LOGPALETTE plpal; // [sp+18h] [bp-404h]@1
        char pixels[0x400];
    } v15;

	v2 = a1;
    v15.plpal.palVersion = 768;
    v15.plpal.palNumEntries = 256;
	memset(v15.plpal.palPalEntry, 0, 0x400u);
	v14 = num_entries - 10;
	v3 = &v15.plpal.palPalEntry[0].peBlue - (BYTE *)a1;
	v4 = (char *)((char *)&v15.plpal.palNumEntries + 1 - (char *)v2);
	v5 = (char *)((char *)v15.plpal.palPalEntry - (char *)v2);
	v6 = (int)&v2->peGreen;
	v7 = (char *)(&v15.plpal.palPalEntry[0].peGreen - (BYTE *)v2);
	v8 = 10;
	do
	{
		*(_BYTE *)(v3 + v6) = 0;
		*(_BYTE *)(v6 + 1) = v4[v6];
		*(_BYTE *)v6 = v5[v6];
		*(_BYTE *)(v6 - 1) = v7[v6];
		v6 += 4;
		--v8;
	} while (v8);
	if (v14 > 10)
	{
		v9 = (int)&v2[10].peGreen;
		v10 = v14 - 10;
		do
		{
			v4[v9] = *(_BYTE *)(v9 + 1);
			v5[v9] = *(_BYTE *)v9;
			v7[v9] = *(_BYTE *)(v9 - 1);
			*(_BYTE *)(v9 + v3) = 5;
			v9 += 4;
			--v10;
		} while (v10);
	}
	v11 = (int)&v2[246].peGreen;
	v12 = 10;
	do
	{
		*(_BYTE *)(v11 + v3) = 0;
		*(_BYTE *)(v11 + 1) = v4[v11];
		*(_BYTE *)v11 = v5[v11];
		*(_BYTE *)(v11 - 1) = v7[v11];
		v11 += 4;
		--v12;
	} while (v12);
	return CreatePalette(&v15.plpal);
}

//----- (00431C40) --------------------------------------------------------
void *_431C40_on_WM_ACTIVATEAPP_software_render(void *result)
{
	int v1; // edx@2
	int i; // ecx@2
	int v3; // eax@9
	PALETTEENTRY *v4; // edx@10
	char *v5; // ecx@14
	BYTE *v6; // eax@14
	IDirectDrawPalette *v7; // eax@16
	PALETTEENTRY *v8; // ecx@19
	int v9; // eax@19
	HPALETTE v10; // esi@21
	int v11; // [sp-Ch] [bp-410h]@9
	PALETTEENTRY v12[256]; // [sp+0h] [bp-404h]@19
	int v13; // [sp+400h] [bp-4h]@19

	if (global_wnd_bpp == 8)
	{
		v1 = dword_468FDC << 8;
		for (i = 0; i < v1; ++i)
		{
			if (((*(&_47B408_palette_entries[0].peRed + i) << 8) & 0xFFFFFF00) >= 0xFF00)
				result = (void *)255;
			else
				result = (void *)*(&_47B408_palette_entries[0].peRed + i);
			*(&palette_47BC10[0].peRed + i) = (unsigned __int8)result;
		}

		v4 = palette_47BC10;
		dword_47C018 = 0;
		dword_468FD4 = 1;
		dword_468FD8 = 2;
		dword_468FDC = 4;
		if (palette_47BC10)
			memcpy(_47B408_palette_entries, palette_47BC10, sizeof(_47B408_palette_entries));
		else
			v4 = _47B408_palette_entries;
		if (global_fullscreen == 1)
		{
			v5 = (char *)&RenderDD_primary_palette_values[0].peGreen;
			v6 = &v4->peBlue;
			do
			{
				v6[&RenderDD_primary_palette_values[0].peGreen - (BYTE *)v4] = 0;
				*(v5 - 1) = *(v6 - 2);
				*v5 = *(v6 - 1);
				v6[(char *)RenderDD_primary_palette_values - (char *)v4] = *v6;
				v5 += 4;
				v6 += 4;
			} while ((int)v5 < (int)&render_sw_hdc + 1);
			v7 = (IDirectDrawPalette *)render_dd_is_primary_surface_lost();
			if (!v7)
			{
				v7 = pddpal_primary;
				if (pddpal_primary)
					v7 = (IDirectDrawPalette *)pddpal_primary->SetEntries(
						0,
						0,
						256,
						RenderDD_primary_palette_values);
			}
		}
		else
		{
			v8 = v12;
			v9 = (int)&v4->peGreen;
			v13 = 256;
			do
			{
				*(_BYTE *)(&v12[0].peBlue - (BYTE *)v4 + v9) = 0;
				v8->peRed = *(_BYTE *)(v9 + 1);
				*(_BYTE *)((char *)v12 - (char *)v4 + v9) = *(_BYTE *)v9;
				*(_BYTE *)(&v12[0].peGreen - (BYTE *)v4 + v9) = *(_BYTE *)(v9 - 1);
				++v8;
				v9 += 4;
				--v13;
			} while (v13);
			v10 = render_sw_palette;
			if (render_sw_palette)
			{
				render_sw_palette = _431B60_create_palette(v12, 256);
				SelectPalette(render_sw_hdc, render_sw_palette, 0);
				DeleteObject(v10);
			}
			else
			{
				render_sw_palette = _431B60_create_palette(v12, 256);
				render_sw_default_palette = SelectPalette(render_sw_hdc, render_sw_palette, 0);
			}
			v7 = (IDirectDrawPalette *)RealizePalette(render_sw_hdc);
		}
        result = v7;
	}
	return result;
}

//----- (00431E60) --------------------------------------------------------
void script_431E60_mobd_20_input(Script *a1)
{
	int v1; // esi@1
	__int16 v2; // bx@3
	KeyboardInput out; // [sp+Ch] [bp-14h]@3

	v1 = 0;
	dword_47C6C4 = 0;
	a1->field_1C = 1;
	script_445370_yield_to_main_thread(a1, 0x80000000, 2);
	if (!script_create_coroutine(SCRIPT_TYPE_INVALID, script_425400, 0))
		game_state = 3;
	while (1)
	{
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
		input_get_keyboard_state(&out);
		v2 = out.just_pressed_keys_mask;
		if (v1 > 0)
			--v1;
		if (out.just_pressed_keys_mask && !dword_47C6C4)
		{
			if (!v1 && out.just_pressed_keys_mask & INPUT_KEYBOARD_ESCAPE_MASK)
			{
				v1 = 4;
				script_trigger_event(a1, EVT_MSG_1530_OPEN_GAME_MENU, 0, task_47C028);
			}
			if (v2 & INPUT_KEYBOARD_TAB_MASK)
				script_44A700_minimap(a1);
		}
	}
}

//----- (00431F10) --------------------------------------------------------
void script_431F10_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	Sprite *v3; // ebx@1
	void *v4; // eax@2
	bool v5; // zf@4
	int v6; // eax@4
	ScriptEvent *i; // eax@9
	int v8; // edx@10
	int v9; // edx@13
	int v10; // eax@19
	int v11; // ecx@19
	void *v12; // ecx@22
	int v13; // eax@22
	int v14; // ecx@23
	__int64 v15; // rax@28
	int v16; // eax@28
	int v17; // [sp+10h] [bp-10Ch]@1
	int v18; // [sp+14h] [bp-108h]@1
	//char name[260]; // [sp+18h] [bp-104h]@36

	v1 = a1->sprite;
	a1->script_type = SCRIPT_TYPE_DA000001;
	v18 = 0;
	v17 = 0;
	v1->drawjob->on_update_handler = (DrawJobUpdateHandler)drawjob_update_handler_4483E0_sidebar;
	v1->z_index += 768;
	sprite_load_mobd(v1, 36);
	v2 = sprite_create(MOBD_INGAME_MENU_CONTROLS, 0, 0);
	v3 = v2;
	if (v2)
	{
		v2->drawjob->on_update_handler = (DrawJobUpdateHandler)drawjob_update_handler_4483E0_sidebar;
		sprite_load_mobd(v2, 48);
		v4 = v1->param;
		if (v4 == (void *)2)
		{
			v3->x = v1->x + dword_4690B4;
		}
		else
		{
			v5 = v4 == (void *)1;
			v6 = _4690A8_unit_sounds_volume;
			if (!v5)
				v6 = _4690AC_level_wav_sound_offset;
			v3->x = v1->x + ((v6 << 7) / 16 << 8);
		}
		v3->y = v1->y;
		v3->z_index = v1->x + 256;
	}
	do
	{
		if (script_445370_yield_to_main_thread(a1, 0xC0000000, 1) & 0x40000000)
		{
			for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
			{
				v8 = i->event;
				if (v8 > (int)EVT_MSG_1511_sidebar_click_category)
				{
					v9 = v8 - EVT_SHOW_UI_CONTROL;
					if (v9)
					{
						if (v9 == 16)
							v18 = 1;
					}
					else
					{
						v17 = 0;
					}
				}
				else if (v8 == EVT_MSG_1511_sidebar_click_category)
				{
					v17 = 1;
				}
				script_discard_event(i);
			}
		}
		if (v17)
		{
			task_mobd17_cursor->sprite->field_88_unused = 1;
			v10 = task_mobd17_cursor->sprite->x;
			v3->x = v10;
			v11 = v1->x;
			if (v10 < v11 || (v11 += 0x8000, v10 > v11))
				v3->x = v11;
			v12 = v1->param;
			v13 = v3->x;
			if (v12 == (void *)2)
			{
				dword_4690B4 = v13 - v1->x;
				v14 = 32 - (dword_4690B4 >> 8) / 4;
				if (v14 < 1)
					v14 = 1;
				if (v14 >= 32)
					LOWORD_HEXRAYS(v14) = 32;
				input_428470(v14);
			}
			else
			{
				v15 = 16 * ((v13 - v1->x) >> 8);
				v16 = ((BYTE4(v15) & 0x7F) + (int)v15) >> 7;
				if (v12 == (void *)1)
				{
					_4690A8_unit_sounds_volume = v16;
				}
				else
				{
					_4690AC_level_wav_sound_offset = v16;
					if (v16)
						goto LABEL_44;
					if (dword_4690B0 && _47C5D4_sound_threaded_snd_id)
					{
						sound_stop(_47C5D4_sound_threaded_snd_id);
						v16 = _4690AC_level_wav_sound_offset;
					}
					if (v16)
					{
					LABEL_44:
						if (!dword_4690B0)
						{
							sound_play_threaded(levels[current_level_idx].wav_filename, 1, _4690AC_level_wav_sound_offset, 16, 0);
							v16 = _4690AC_level_wav_sound_offset;
						}
						if (v16)
						{
							sound_list_43A800(v16);
							v16 = _4690AC_level_wav_sound_offset;
						}
					}
					dword_4690B0 = v16;
				}
			}
		}
	} while (!v18);
	sprite_list_remove(v3);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (004321A0) --------------------------------------------------------
void script_4321A0_ingame_menu(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	Sprite *v3; // eax@3
	Script *v4; // ecx@4
	int v5; // ecx@4
	Sprite *v6; // eax@5
	Script *v7; // edx@6
	int v8; // ecx@6

	v1 = a1->sprite;
	dword_47C6C4 = 1;
	script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
	_47C65C_render_string = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
		248,
		88,
		22,
		8,
		0x200003E9,
		14,
		5);
	render_string_445AE0(_47C65C_render_string);
	_47C65C_render_string->field_18 = 0;
	_47C65C_render_string->num_lines = 0;
	render_string_443D80(_47C65C_render_string, aSfxVolumeMusicVolume, 0);
	v2 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_433DB0_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v2)
		v2->script->field_1C = 1;
	v3 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_431F10_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v3)
	{
		v4 = v3->script;
		v3->param = (void *)1;
		v4->field_1C = 1;
		v5 = v3->y;
		v3->x -= 12800;
		v3->y = v5 + 18432;
	}
	v6 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_431F10_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v6)
	{
		v7 = v6->script;
		v6->param = 0;
		v7->field_1C = 1;
		v8 = v6->y;
		v6->x -= 12800;
		v6->y = v8 + 35840;
	}
	else
	{
		game_state = 3;
	}
}
// 47A2C4: using guessed type int game_state;
// 47C6C4: using guessed type int dword_47C6C4;

//----- (004322D0) --------------------------------------------------------
void script_4322D0_ingame_menu(Script *a1)
{
	Script *v1; // esi@1
	RenderString *v2; // eax@1
	int v3; // edi@2
	int v4; // ebp@2
	char *v5; // esi@4
	int v6; // ecx@8
	char v7; // al@9
	int v8; // ecx@12
	Sprite *v9; // eax@21
	int v10; // [sp+10h] [bp-6Ch]@6
	Script *v11; // [sp+14h] [bp-68h]@1
	char v12[39]; // [sp+18h] [bp-64h]@11
	char v13; // [sp+3Fh] [bp-3Dh]@15

	v1 = a1;
	v11 = a1;
	script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
	v2 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 120, 70, 42, 15, 0x200003E9, 14, 5);
	_47C65C_render_string = v2;
	if (v2)
	{
		v3 = 0;
		v4 = 5;
		if (current_level_idx < LEVEL_SURV_16 || current_level_idx > LEVEL_MUTE_25)
			v5 = off_469030[current_level_idx];
		else
			v5 = *(char **)&aNoFreeLinks[4 * current_level_idx + 12];
		render_string_445AE0(v2);
		v10 = 0;
		do
		{
			if (!*v5)
				break;
			v6 = 0;
			while (1)
			{
				v7 = *v5;
				if (*v5 == '\n' || !v7)
					break;
				v12[v6++] = v7;
				++v5;
			}
			v12[v6] = 0;
			v8 = v6 + 1;
			if (*v5 == '\n')
				++v5;
			if (v8 > 40)
				v13 = 0;
			_47C65C_render_string->field_18 = v4;
			_47C65C_render_string->num_lines = v3;
			render_string_443D80(_47C65C_render_string, v12, 0);
			if (v10)
			{
				++v3;
			}
			else
			{
				v3 += 2;
				v4 = 0;
			}
			++v10;
		} while (v10 < 11);
		v1 = v11;
	}
	v9 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_433D20_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v9)
		v9->script->field_1C = 1;
	sprite_load_mobd(task_47C028->sprite, 12);
}

//----- (00432400) --------------------------------------------------------
void script_432400_ingame_menu_create_sprites(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	Sprite *v3; // eax@3
	Sprite *v4; // eax@5
	Sprite *v5; // eax@9
	Sprite *v6; // eax@11
	Sprite *v7; // eax@13
	Sprite *v8; // eax@15

	v1 = a1->sprite;
	v2 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, a1->sprite, script_433780_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v2)
		v2->script->field_1C = 1;
	v3 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_433A60_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v3)
		v3->script->field_1C = 1;
	v4 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_433960_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v4)
		v4->script->field_1C = 1;
	if (single_player_game && !_47C6D8_use__466098_cost_multipliers)
	{
		v5 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_433880_ingame_menu, SCRIPT_COROUTINE, 0);
		if (v5)
			v5->script->field_1C = 1;
		v6 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_433810_ingame_menu, SCRIPT_COROUTINE, 0);
		if (v6)
			v6->script->field_1C = 1;
		v7 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_4339F0_ingame_menu, SCRIPT_COROUTINE, 0);
		if (v7)
			v7->script->field_1C = 1;
		v8 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1, script_4338F0_ingame_menu, SCRIPT_COROUTINE, 0);
		if (v8)
			v8->script->field_1C = 1;
	}
	sprite_load_mobd(v1, 0);
}
// 468B5C: using guessed type int single_player_game;

//----- (00432510) --------------------------------------------------------
void script_432510_ingame_menu_create_sprites(Script *a1)
{
	Script *v1; // esi@1

	v1 = a1;
	sprite_create_scripted(MOBD_FONT_ITALIC, a1->sprite, script_432F00_ingame_menu, SCRIPT_COROUTINE, 0);
	sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_434390_ingame_menu, SCRIPT_COROUTINE, 0);
	sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_434220_ingame_menu, SCRIPT_COROUTINE, 0);
	sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_434310_ingame_menu, SCRIPT_COROUTINE, 0);
	sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_4342A0_ingame_menu, SCRIPT_COROUTINE, 0);
	sprite_create_scripted(MOBD_45, v1->sprite, script_434460_DA000007, SCRIPT_COROUTINE, 0);
	dword_47C6F8 = 1;
}

//----- (004325B0) --------------------------------------------------------
void script_4325B0_ingame_menu_trigger_events(Script *a1)
{
	Script *v1; // esi@1

	v1 = a1;
	dword_47C6F8 = 0;
	stru29_list_443BF0_remove_some();
	script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000006);
	script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000007);
	script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000008);
	script_trigger_event_group(v1, EVT_MSG_1546_repair_at_station, 0, SCRIPT_TYPE_1);
	script_trigger_event_group(v1, EVT_MSG_1546_repair_at_station, 0, SCRIPT_TYPE_19);
}
// 47C6F8: using guessed type int dword_47C6F8;

//----- (00432620) --------------------------------------------------------
void script_432620_ingame_menu(Script *a1)
{
	Script *v1; // esi@1
	Sprite *v2; // eax@1
	Sprite *v3; // eax@3
	Sprite *v4; // eax@5
	Sprite *v5; // eax@7
	Sprite *v6; // eax@9
	Sprite *v7; // eax@11
	Sprite *v8; // edi@11

	v1 = a1;
	script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
	v2 = sprite_create_scripted(MOBD_FONT_ITALIC, v1->sprite, script_432F20_ingame_menu_read_keyboard_input, SCRIPT_COROUTINE, 0);
	if (v2)
		v2->script->field_1C = 1;
	v3 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_434040_ingame_menu_load_game_related, SCRIPT_COROUTINE, 0);
	if (v3)
		v3->script->field_1C = 1;
	v4 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_434190_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v4)
		v4->script->field_1C = 1;
	v5 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_4340B0_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v5)
		v5->script->field_1C = 1;
	v6 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_434120_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v6)
		v6->script->field_1C = 1;
	v7 = sprite_create(MOBD_INGAME_MENU_CONTROLS, 0, 0);
	v8 = v7;
	if (v7)
	{
		v7->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		v7->x = v1->sprite->x;
		v7->y = v1->sprite->y;
		v7->z_index = v1->sprite->z_index + 1;
		sprite_load_mobd(v7, 24);
		task_47C028->param = v8;
	}
}

//----- (00432730) --------------------------------------------------------
void script_432730_ingame_menu(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // ebp@1
	int v3; // ebx@2
	int v4; // esi@2
	ScriptEvent *v5; // eax@3
	enum SCRIPT_EVENT v6; // ecx@4

	v1 = a1;
	v2 = a1->sprite;
	a1 = (Script *)a1->param;
	v2->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	sprite_load_mobd(v2, 696);
	_47C668_ingame_menu_sprites[(int)a1] = v1->sprite;
	while (1)
	{
		v3 = 0;
		v4 = 0;
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			v5 = script_get_next_event(v1);
			if (v5)
			{
				while (1)
				{
					v6 = v5->event;
					if (v6 != EVT_MOUSE_HOVER)
					{
						if (v6 == EVT_MSG_1511_sidebar_click_category)
							goto LABEL_8;
						if (v6 == EVT_MSG_1528)
							break;
					}
				LABEL_9:
					script_discard_event(v5);
					v5 = script_get_next_event(v1);
					if (!v5)
						goto LABEL_10;
				}
				v3 = 1;
			LABEL_8:
				v4 = 1;
				goto LABEL_9;
			}
		LABEL_10:
			;
		} while (!v4);
		if (v3)
			break;
		script_trigger_event(v1, EVT_MSG_1511_sidebar_click_category, &a1, receiver);
	}
	_47C668_ingame_menu_sprites[(int)a1] = 0;
	sprite_list_remove(v2);
	script_yield(v1);
}

//----- (00432800) --------------------------------------------------------
void script_432800_ingame_menu(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // ecx@1
	int v3; // ebp@2
	int v4; // ebx@2
	ScriptEvent *i; // esi@3
	enum SCRIPT_EVENT v6; // eax@4
	Sprite *v7; // [sp+10h] [bp-4h]@1

	v1 = a1;
	v2 = a1->sprite;
	a1 = (Script *)a1->param;
	v7 = v2;
	v2->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	sprite_load_mobd(v2, 696);
	_47C668_ingame_menu_sprites[(int)a1] = v1->sprite;
	while (1)
	{
		v3 = 0;
		v4 = 0;
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v6 = i->event;
				switch (v6)
				{
				case 0xFFFFFFFE:
					stru29_list_443AE0_find_by_sprite(v1->sprite);
					break;
				case 0x5E7u:
					v4 = 1;
					break;
				case 0x5F8u:
					v3 = 1;
					v4 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v4);
		if (v3)
			break;
		script_trigger_event(v1, EVT_MSG_1511_sidebar_click_category, &a1, receiver);
	}
	_47C668_ingame_menu_sprites[(int)a1] = 0;
	sprite_list_remove(v7);
	script_yield(v1);
}

//----- (004328F0) --------------------------------------------------------
void _41AC50_read_keyboard_input___handler_4328F0(const char *a1, int a2)
{
	const char *v2; // esi@1
	unsigned __int16 v3; // ST08_2@1

	v2 = a1;
	v3 = a2;
	_47C65C_render_string->field_18 = 0;
	_47C65C_render_string->num_lines = 6;
	render_string_443D80(_47C65C_render_string, asc_46BB14, 0);
	_47C65C_render_string->field_18 = 0;
	render_string_443D80(_47C65C_render_string, v2, 0);
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	_47C664_ingame_menu_sprite->x = render_string_443EE0(_47C65C_render_string, v3, 6) << 8;
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	_47C664_ingame_menu_sprite->y = 0xC200;
}

//----- (00432990) --------------------------------------------------------
void script_432990_ingame_menu_read_keyboard_input(Script *a1, int a2, int a3)
{
	Sprite *v3; // esi@1
	int v4; // edi@1
	RenderString *v5; // eax@4
	int v6; // esi@8
	int v7; // edi@8
	Sprite *v8; // eax@10
	int v9; // edi@18
	int v10; // ebx@18
	stru175 *v11; // esi@18
	Script *v12; // ebp@30
	int v13; // esi@30
	int v14; // edi@30
	int v15; // ebx@30
	ScriptEvent *i; // eax@30
	int v17; // edx@32
	int v18; // esi@60
	int v19; // edi@60
	int v20; // eax@62
	char v21; // bl@62
	int v22; // eax@70
	int v23; // [sp+10h] [bp-54h]@5
	int v24; // [sp+14h] [bp-50h]@4
	Script *v25; // [sp+18h] [bp-4Ch]@1
	int v26; // [sp+1Ch] [bp-48h]@1
	Sprite *a1a; // [sp+20h] [bp-44h]@1
	int v28; // [sp+24h] [bp-40h]@1
	int v29; // [sp+28h] [bp-3Ch]@1
	int v30; // [sp+2Ch] [bp-38h]@1
	char a2a[12]; // [sp+30h] [bp-34h]@20
	char v32[40]; // [sp+3Ch] [bp-28h]@65

	v3 = a1->sprite;
	v28 = a2;
	v25 = a1;
	a1a = a1->sprite;
	v4 = a2 != 0 ? 256 : 96;
	v29 = 0;
	v26 = 0;
	v30 = a2 != 0 ? 256 : 96;
	if (a2)
		a1->script_type = SCRIPT_TYPE_DA000008;
	else
		a1->script_type = SCRIPT_TYPE_DA000001;
	receiver = a1;
	v5 = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
		216,
		a2 != 0 ? 240 : 80,
		22,
		10,
		0x200007D0,
		14,
		5);
	_47C65C_render_string = v5;
	_47C664_ingame_menu_sprite = v3;
	v24 = _47C050_array_idx - 4;
	if (_47C050_array_idx - 4 >= 0)
	{
		v23 = 4;
	}
	else
	{
		v24 = 0;
		v23 = _47C050_array_idx;
	}
	if (v5)
	{
		render_string_445AE0(v5);
		v6 = 0;
		v7 = (v4 + 14) << 8;
		do
		{
			if (v28)
				v8 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, 0, script_432800_ingame_menu, SCRIPT_COROUTINE, 0);
			else
				v8 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, 0, script_432730_ingame_menu, SCRIPT_COROUTINE, 0);
			if (v8)
			{
				v8->script->field_1C = 1;
				v8->script->param = (void *)v6;
				v8->x = 0xE800;
				v8->y = v7;
				v8->z_index = 2560;
				if (v28)
				{
					v8->script->script_type = SCRIPT_TYPE_DA000008;
					stru29_list_4439F0(v8, 0, 0, 1, 0);
				}
				else
				{
					v8->script->script_type = SCRIPT_TYPE_DA000001;
				}
			}
			++v6;
			v7 += 4096;
		} while (v6 < 5);
	}
	a1a->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	a1a->z_index = 1280;
	while (1)
	{
		while (1)
		{
			while (1)
			{
				render_string_445AE0(_47C65C_render_string);
				_47C65C_render_string->field_18 = 0;
				_47C65C_render_string->num_lines = 0;
				a1a->x = 59392;
				a1a->y = (16 * v23 + v30 + 14) << 8;
				sprite_load_mobd(a1a, 1064);
				v9 = v24;
				v10 = 5;
				v11 = &_47C050_array[v24];
				do
				{
					if ((int)v11 >= (int) & _47C050_array[2])
					{
						if ((int)v11 >= (int) & _47C050_array[10])
							sprintf(a2a, aD_1, v9);
						else
							sprintf(a2a, aD_0, v9);
					}
					else
					{
						sprintf(a2a, aD, v9);
					}
					render_string_443D80(_47C65C_render_string, a2a, 0);
					if (v11->str_0[0])
						render_string_443D80(_47C65C_render_string, v11->str_0, 0);
					render_string_443D80(_47C65C_render_string, asc_464C88, 0);
					++v9;
					++v11;
					--v10;
				} while (v10);
				do
				{
					if (v26 > 0)
						--v26;
				} while (!(script_445370_yield_to_main_thread(v25, 0xC0000000, 1) & 0x40000000));
				v12 = v25;
				v13 = 0;
				v14 = 0;
				v15 = 0;
				for (i = script_get_next_event(v25); i; i = script_get_next_event(v25))
				{
					switch (i->event)
					{
					case EVT_MSG_1511_sidebar_click_category:
						v17 = *(_DWORD *)i->param;
						if (v17 < 5)
						{
							if (v26)
							{
								if (v26 > 85)
								{
									v26 = 0;
									if (v23 == v17)
										v13 = 1;
								}
								v23 = *(_DWORD *)i->param;
							}
							else
							{
								v26 = 100;
								v23 = *(_DWORD *)i->param;
							}
						}
						break;
					case EVT_MSG_SHOW_UNIT_HINT:
						if (v23 <= 0)
						{
							if (v24 > 0)
								--v24;
						}
						else
						{
							--v23;
						}
						break;
					case EVT_SHOW_UI_CONTROL:
						if (v23 >= 4)
						{
							if (v24 < 15)
								++v24;
						}
						else
						{
							++v23;
						}
						break;
					case EVT_MSG_1549:
						v15 = 1;
						break;
					case EVT_ENTITY_MOVE:
						v14 = 1;
						break;
					case EVT_MSG_1528:
						v29 = 1;
						break;
					default:
						break;
					}
					script_discard_event(i);
				}
				if (v29)
				{
					if (_47C65C_render_string)
					{
						render_string_list_remove(_47C65C_render_string);
						_47C65C_render_string = 0;
					}
					sprite_list_remove(a1a);
					script_yield(v25);
				}
				_47C050_array_idx = v23 + v24;
				if (a3)
					break;
				if ((v13 || v15) && _438740_save_lst())
				{
					if (v28)
					{
						sub_43BAA0();
						script_deinit(_47C6E0_task);
						_47C6E0_task = 0;
						stru29_list_free();
					}
					else
					{
						script_trigger_event_group(v25, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
						sprite_list_remove((Sprite *)task_47C028->param);
						if (v25 != task_47C028)
							script_trigger_event(v25, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
					}
				}
			}
			if (!v13)
				break;
		LABEL_59:
			_47C664_ingame_menu_sprite->field_88_unused = 1;
			_47C664_ingame_menu_sprite->y = 0xC200;
			sprite_load_mobd(a1a, 1096);
			dword_47C6C4 = 1;
			if (input_get_string(
				_47C050_array[_47C050_array_idx].str_0,
				0xBu,
				_41AC50_read_keyboard_input___handler_4328F0,
				1,
				v12))
			{
				v18 = 0;
				v19 = 0;
				while (1)
				{
					v20 = _47C050_array_idx;
					v21 = _47C050_array[_47C050_array_idx].str_0[v19];
					if (!v21)
						goto LABEL_69;
					v32[v18++] = isalpha(v21) || isdigit(v21) ? v21 : 95;
					if (++v19 >= 40)
						break;
					v12 = v25;
				}
				v20 = _47C050_array_idx;
				v12 = v25;
			LABEL_69:
				if (v18 > 0)
				{
					v22 = v20;
					memcpy(&_47C050_array[v22], v32, v18);
					_47C050_array[v22].level_id = current_level_idx;
					if (_438840_save_lst())
						script_trigger_event(v12, EVT_MSG_1530_OPEN_GAME_MENU, 0, task_47C028);
				}
			}
			dword_47C6C4 = 0;
		}
		if (v14)
		{
			v12 = v25;
			goto LABEL_59;
		}
	}
}
// 47C6C4: using guessed type int dword_47C6C4;
// 432990: using guessed type char var_28[40];

//----- (00432F00) --------------------------------------------------------
void script_432F00_ingame_menu(Script *a1)
{
	script_432990_ingame_menu_read_keyboard_input(a1, 1, 0);
}

//----- (00432F20) --------------------------------------------------------
void script_432F20_ingame_menu_read_keyboard_input(Script *a1)
{
	script_432990_ingame_menu_read_keyboard_input(a1, 0, 0);
}

//----- (00432F30) --------------------------------------------------------
void script_432F30_ingame_menu_read_keyboard_input(Script *a1)
{
	script_432990_ingame_menu_read_keyboard_input(a1, 0, 1);
}

//----- (00432F40) --------------------------------------------------------
void script_432F40_ingame_menu(Script *a1)
{
	Sprite *v1; // eax@1
	Sprite *v2; // eax@3
	Sprite *v3; // eax@5
	Sprite *v4; // eax@7
	Sprite *v5; // eax@9
	Sprite *v6; // eax@11
	Sprite *v7; // edi@11

	script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
	v1 = sprite_create_scripted(MOBD_FONT_ITALIC, a1->sprite, script_432F30_ingame_menu_read_keyboard_input, SCRIPT_COROUTINE, 0);
	if (v1)
		v1->script->field_1C = 1;
	v2 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, a1->sprite, script_433E60_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v2)
		v2->script->field_1C = 1;
	v3 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, a1->sprite, script_433FB0_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v3)
		v3->script->field_1C = 1;
	v4 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, a1->sprite, script_433ED0_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v4)
		v4->script->field_1C = 1;
	v5 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, a1->sprite, script_433F40_ingame_menu, SCRIPT_COROUTINE, 0);
	if (v5)
		v5->script->field_1C = 1;
	v6 = sprite_create(MOBD_INGAME_MENU_CONTROLS, 0, 0);
	v7 = v6;
	if (v6)
	{
		v6->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		v6->x = a1->sprite->x;
		v6->y = a1->sprite->y;
		v6->z_index = a1->sprite->z_index + 256;
		sprite_load_mobd(v6, 24);
		task_47C028->param = v7;
	}
}

//----- (00433060) --------------------------------------------------------
void script_433060_ingame_menu_DA000000(Script *a1)
{
	Script *v1; // esi@1
	signed __int16 v2; // bp@1
	Sprite *v3; // edi@1
	DrawJob *v4; // ecx@1
	int v5; // eax@1
	ScriptEvent *i; // eax@7
	int v7; // edi@27
	ScriptEvent *j; // ebp@29
	Script *v9; // eax@33
	Sprite *v10; // eax@54
	Sprite *v11; // eax@56
	Sprite *v12; // eax@58
	Sprite *v13; // eax@60
	int v14; // [sp+10h] [bp-8h]@1
	Sprite *v15; // [sp+14h] [bp-4h]@1
	int a1a; // [sp+1Ch] [bp+4h]@5

	v1 = a1;
	v2 = 1;
	v3 = a1->sprite;
	task_47C028 = a1;
	a1->script_type = SCRIPT_TYPE_DA000000;
	v4 = v3->drawjob;
	v3->field_88_unused = 1;
	v5 = render_width;
	v3->field_88_unused = 1;
	LOBYTE_HEXRAYS(v5) = v5 & 0xFE;
	v3->y = 0x4000;
	v3->x = v5 << 7;
	v3->z_index = 1000;
	v4->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	a1->field_1C = 1;
	v14 = 0;
	v15 = v3;
	dword_47C030 = 0;
	script_4084A0_animation(a1);
	while (1)
	{
		if (single_player_game)
		{
			a1a = 0;
			is_coroutine_list_initialization_failed = 0;
			script_trigger_event(v1, EVT_MSG_1533, 0, task_mobd17_cursor);
			sub_408460();
			sprite_load_mobd(v3, 60);
		}
		else
		{
			if (dword_47C030)
			{
				dword_47C030 = 0;
				script_trigger_event(v1, EVT_MSG_1533, 0, task_mobd17_cursor);
				sprite_load_mobd(v3, 60);
			}
			a1a = 0;
			sub_408460();
		}
		do
		{
			script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				if (i->event == EVT_MSG_1530_OPEN_GAME_MENU)
				{
					a1a = 1;
				}
				else if (i->event == 1531)
				{
					v14 = 1;
				}
				script_discard_event(i);
			}
			if (is_coroutine_list_initialization_failed)
				a1a = 1;
			if (v14)
				a1a = 0;
		} while (!a1a);
		if (single_player_game)
			break;
		if (!is_coroutine_list_initialization_failed)
		{
			script_trigger_event(v1, EVT_MSG_1532, 0, task_mobd17_cursor);
			while (!is_coroutine_list_initialization_failed)
				script_445370_yield_to_main_thread(v1, 0x80000000, 1);
			if (dword_47050C == 1)
			{
				dword_47C030 = 1;
			LABEL_26:
				script_432400_ingame_menu_create_sprites(v1);
				goto LABEL_27;
			}
		}
		dword_47C030 = 0;
	LABEL_27:
		_408410_palettes();
		v7 = 1;
		do
		{
			if (script_445370_yield_to_main_thread(v1, 0xC0000000, 1) & 0x40000000)
			{
				for (j = script_get_next_event(v1); j; j = script_get_next_event(v1))
				{
					switch (j->event)
					{
					case EVT_MSG_1530_OPEN_GAME_MENU:
						switch (v7)
						{
						case 5:
							script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
							if (!_47C65C_render_string)
								goto LABEL_45;
							render_string_list_remove(_47C65C_render_string);
							v9 = task_47C028;
							if (v1 != task_47C028)
								goto LABEL_46;
							goto LABEL_47;
						case 6:
							script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
							sprite_list_remove((Sprite *)task_47C028->param);
							v9 = task_47C028;
							if (v1 != task_47C028)
								goto LABEL_46;
							goto LABEL_47;
						case 7:
							script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
							sprite_list_remove((Sprite *)task_47C028->param);
							v9 = task_47C028;
							if (v1 != task_47C028)
								goto LABEL_46;
							goto LABEL_47;
						case 3:
						case 4:
							script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000003);
							if (!_47C65C_render_string)
								goto LABEL_45;
							render_string_list_remove(_47C65C_render_string);
							_47C65C_render_string = 0;
							if (v1 == task_47C028)
								goto LABEL_47;
							script_trigger_event(v1, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
							v7 = 1;
							script_432400_ingame_menu_create_sprites(v1);
							goto LABEL_64;
						case 2:
							if (_47C65C_render_string)
							{
								render_string_list_remove(_47C65C_render_string);
								_47C65C_render_string = 0;
							}
							script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
						LABEL_45:
							v9 = task_47C028;
							if (v1 != task_47C028)
								LABEL_46:
							script_trigger_event(v1, EVT_MSG_1522_plan_building_construction, 0, v9);
							goto LABEL_47;
						case 1:
							goto LABEL_51;
						default:
							goto LABEL_64;
						}
					case EVT_MSG_1522_plan_building_construction:
					LABEL_47:
						v7 = 1;
						script_432400_ingame_menu_create_sprites(v1);
						break;
					case EVT_MSG_1531:
						v14 = 1;
						a1a = 0;
						break;
					case EVT_ENTITY_MOVE:
						v7 = 2;
						script_4321A0_ingame_menu(v1);
						break;
					case EVT_MSG_1526_infiltrate:
						v7 = 5;
						script_4322D0_ingame_menu(v1);
						break;
					case EVT_MSG_1528:
					LABEL_51:
						if (single_player_game || dword_47C030)
							a1a = 0;
						break;
					case EVT_MSG_1527:
						v7 = 4;
						script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
						_47C65C_render_string = render_string_create(
							0,
							currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
							256,
							96,
							22,
							8,
							0x200003E9,
							14,
							5);
						render_string_445AE0(_47C65C_render_string);
						_47C65C_render_string->field_18 = 0;
						_47C65C_render_string->num_lines = 0;
						render_string_443D80(_47C65C_render_string, aAreYouSureYouW, 0);
						v10 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_433C30_ingame_menu, SCRIPT_COROUTINE, 0);
						if (v10)
							v10->script->field_1C = 1;
						v11 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_433C90_ingame_menu, SCRIPT_COROUTINE, 0);
						if (v11)
							v11->script->field_1C = 1;
						break;
					case EVT_ENTITY_ATTACK:
						v7 = 3;
						script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
						_47C65C_render_string = render_string_create(
							0,
							currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
							256,
							96,
							22,
							8,
							0x200003E9,
							14,
							5);
						render_string_445AE0(_47C65C_render_string);
						_47C65C_render_string->field_18 = 0;
						_47C65C_render_string->num_lines = 0;
						render_string_443D80(_47C65C_render_string, aAreYouSureYo_0, 0);
						v12 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_433AF0_ingame_menu, SCRIPT_COROUTINE, 0);
						if (v12)
							v12->script->field_1C = 1;
						v13 = sprite_create_scripted(MOBD_INGAME_MENU_CONTROLS, v1->sprite, script_433BA0_ingame_menu, SCRIPT_COROUTINE, 0);
						if (v13)
							v13->script->field_1C = 1;
						break;
					case EVT_MSG_1509_stru11:
						v7 = 6;
						script_432620_ingame_menu(v1);
						break;
					case EVT_MSG_1507_stru11:
						v7 = 7;
						script_432F40_ingame_menu(v1);
						break;
					default:
						break;
					}
				LABEL_64:
					script_discard_event(j);
				}
				v2 = 1;
			}
			if (!is_coroutine_list_initialization_failed)
				a1a = 0;
		} while (a1a);
		script_trigger_event_group(v1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000002);
		v3 = v15;
	}
	is_coroutine_list_initialization_failed = v2;
	script_trigger_event(v1, EVT_MSG_1532, 0, task_mobd17_cursor);
	goto LABEL_26;
}

//----- (00433640) --------------------------------------------------------
void script_433640(Script *a1, enum SCRIPT_TYPE event, int x_offset, int y_offset, int z_index_offset)
{
	Script *v5; // edi@1
	Sprite *v6; // esi@1
	Sprite *v7; // edx@1
	Sprite *v8; // eax@1
	int v9; // ebp@1
	Sprite *v10; // eax@1

	v5 = a1;
	v6 = a1->sprite;
	a1->script_type = event;
	v6->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	v7 = v6->parent;
	v6->field_88_unused = 1;
	v7->field_88_unused = 1;
	v8 = v6->parent;
	v9 = v8->x;
	v6->field_88_unused = 1;
	v6->x = v9 + (x_offset << 8);
	v6->y = v8->y + (y_offset << 8);
	v6->z_index = v8->z_index + (z_index_offset << 8);
	v10 = sprite_create(MOBD_INGAME_MENU_CONTROLS, 0, 0);
	if (v10)
	{
		v10->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		v10->x = v6->x;
		v10->y = v6->y;
		v10->z_index = v6->z_index + 256;
		v5->param = v10;
	}
}

//----- (004336E0) --------------------------------------------------------
void script_4336E0(Script *script, enum SCRIPT_TYPE type, int x_offset, int y_offset, int z_index_offset)
{
	Script *v5; // edi@1
	Sprite *v6; // esi@1
	Sprite *v7; // edx@1
	Sprite *v8; // eax@1
	int v9; // ebp@1
	Sprite *v10; // eax@1

	v5 = script;
	v6 = script->sprite;
	script->script_type = type;
	v6->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	v7 = v6->parent;
	v6->field_88_unused = 1;
	v7->field_88_unused = 1;
	v8 = v6->parent;
	v9 = v8->x;
	v6->field_88_unused = 1;
	v6->x = v9 + (x_offset << 8);
	v6->y = v8->y + (y_offset << 8);
	v6->z_index = v8->z_index + (z_index_offset << 8);
	v10 = sprite_create(MOBD_45, 0, 0);
	if (v10)
	{
		v10->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		v10->x = v6->x;
		v10->y = v6->y;
		v10->z_index = v6->z_index + 256;
		v5->param = v10;
	}
}

//----- (00433780) --------------------------------------------------------
void script_433780_ingame_menu(Script *a1)
{
	signed __int16 v1; // ax@2
	Sprite *v2; // edi@6

	if (!single_player_game || (v1 = 18, _47C6D8_use__466098_cost_multipliers))
		v1 = 66;
	script_433640(a1, SCRIPT_TYPE_DA000002, -92, v1, 1);
	if (script_434500(a1, CURSOR_MOBD_OFFSET_MISSION_ARROW_SW, 0, 0))
	{
		script_trigger_event(a1, EVT_ENTITY_MOVE, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}
// 468B5C: using guessed type int single_player_game;

//----- (00433810) --------------------------------------------------------
void script_433810_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000002, -92, 42, 2);
	if (script_434500(a1, 888, 0, 0))
	{
		script_trigger_event(a1, EVT_MSG_1509_stru11, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00433880) --------------------------------------------------------
void script_433880_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000002, -92, 66, 3);
	if (script_434500(a1, 900, 0, 0))
	{
		script_trigger_event(a1, EVT_MSG_1507_stru11, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (004338F0) --------------------------------------------------------
void script_4338F0_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000002, -92, 90, 4);
	if (script_434500(a1, CURSOR_MOBD_OFFSET_MISSION_ARROW_S_BLINK, 0, 0))
	{
		script_trigger_event(a1, EVT_MSG_1526_infiltrate, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00433960) --------------------------------------------------------
void script_433960_ingame_menu(Script *a1)
{
	signed __int16 v1; // ax@2
	Sprite *v2; // edi@6

	if (!single_player_game || (v1 = 114, _47C6D8_use__466098_cost_multipliers))
		v1 = 90;
	script_433640(a1, SCRIPT_TYPE_DA000002, -92, v1, 5);
	if (script_434500(a1, CURSOR_MOBD_OFFSET_BORDERLESS_CURSOR, 0, 0))
	{
		script_trigger_event(a1, EVT_MSG_1528, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}
// 468B5C: using guessed type int single_player_game;

//----- (004339F0) --------------------------------------------------------
void script_4339F0_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000002, -92, 138, 6);
	if (script_434500(a1, 876, 0, 0))
	{
		script_trigger_event(a1, EVT_MSG_1527, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00433A60) --------------------------------------------------------
void script_433A60_ingame_menu(Script *a1)
{
	signed __int16 v1; // ax@2
	Sprite *v2; // edi@6

	if (!single_player_game || (v1 = 162, _47C6D8_use__466098_cost_multipliers))
		v1 = 114;
	script_433640(a1, SCRIPT_TYPE_DA000002, -92, v1, 7);
	if (script_434500(a1, 828, 0, 0))
	{
		script_trigger_event(a1, EVT_ENTITY_ATTACK, 0, task_47C028);
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}
// 468B5C: using guessed type int single_player_game;

//----- (00433AF0) --------------------------------------------------------
void script_433AF0_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@7

	script_433640(a1, SCRIPT_TYPE_DA000003, -90, 120, 1);
	if (script_434500(a1, 780, 1, 0))
	{
		if (!single_player_game)
		{
			if (netz_468B50_available_units_denom <= 2)
				*(_DWORD *)&netz_47A740[2].str_0[0] = 1;
			netz_449FF0();
			is_coroutine_list_initialization_failed = 0;
			dword_47C030 = -1;
			dword_47050C = -1;
			dword_47A738 = 0;
			dword_47CB14 = -1;
			dword_47A180 = 6;
		}
		script_408500_anim(a1);
		script_47A3CC_die();
		game_state = 3;
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}
// 468B50: using guessed type int netz_468B50_available_units_denom;
// 468B5C: using guessed type int single_player_game;
// 47050C: using guessed type int dword_47050C;
// 47A180: using guessed type int dword_47A180;
// 47A2C4: using guessed type int game_state;
// 47A738: using guessed type int dword_47A738;
// 47C030: using guessed type int dword_47C030;
// 47C764: using guessed type __int16 is_coroutine_list_initialization_failed;

//----- (00433BA0) --------------------------------------------------------
void script_433BA0_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@6

	script_433640(a1, SCRIPT_TYPE_DA000003, 0, 120, 1);
	if (script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_4_STILL, 1, 0))
	{
		script_trigger_event_group(0, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000003);
		if (_47C65C_render_string)
		{
			render_string_list_remove(_47C65C_render_string);
			_47C65C_render_string = 0;
		}
		if (task_47C028)
			script_trigger_event(0, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00433C30) --------------------------------------------------------
void script_433C30_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000003, -90, 120, 1);
	if (script_434500(a1, 780, 1, 0))
		game_state = 2;
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}
// 47A2C4: using guessed type int game_state;

//----- (00433C90) --------------------------------------------------------
void script_433C90_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@6

	script_433640(a1, SCRIPT_TYPE_DA000003, 0, 120, 1);
	if (script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_4_STILL, 1, 0))
	{
		script_trigger_event_group(0, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000003);
		if (_47C65C_render_string)
		{
			render_string_list_remove(_47C65C_render_string);
			_47C65C_render_string = 0;
		}
		if (task_47C028)
			script_trigger_event(0, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00433D20) --------------------------------------------------------
void script_433D20_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@6

	script_433640(a1, SCRIPT_TYPE_DA000001, -55, 185, 3);
	if (script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_4_RUNNING, 1, 0))
	{
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
		if (_47C65C_render_string)
			render_string_list_remove(_47C65C_render_string);
		if (a1 != task_47C028)
			script_trigger_event(a1, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00433DB0) --------------------------------------------------------
void script_433DB0_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@6

	script_433640(a1, SCRIPT_TYPE_DA000001, -200, 153, 3);
	script_445370_yield_to_main_thread(a1, 0x80000000, 2);
	dword_47C6C4 = 0;
	if (script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_4_RUNNING, 1, 0))
	{
		if (_47C65C_render_string)
		{
			render_string_list_remove(_47C65C_render_string);
			_47C65C_render_string = 0;
		}
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
		if (a1 != task_47C028)
			script_trigger_event(a1, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}
// 47C6C4: using guessed type int dword_47C6C4;

//----- (00433E60) --------------------------------------------------------
void script_433E60_ingame_menu(Script *a1)
{
	BOOL v1; // esi@2
	Sprite *v2; // esi@4

	_438630_read_save_lst();
	script_433640(a1, SCRIPT_TYPE_DA000001, -80, 153, 3);
	do
	{
		v1 = script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_5_RUNNING, 1, 0);
		if (!v1)
			break;
		script_trigger_event(a1, EVT_ENTITY_MOVE, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00433ED0) --------------------------------------------------------
void script_433ED0_ingame_menu(Script *a1)
{
	BOOL v1; // edi@2
	Sprite *v2; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000001, -180, 153, 3);
	do
	{
		v1 = script_434500(a1, 744, 2, 0);
		script_trigger_event(a1, EVT_MSG_SHOW_UNIT_HINT, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00433F40) --------------------------------------------------------
void script_433F40_ingame_menu(Script *a1)
{
	BOOL v1; // edi@2
	Sprite *v2; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000001, -130, 153, 3);
	do
	{
		v1 = script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_3_STILL, 2, 0);
		script_trigger_event(a1, EVT_SHOW_UI_CONTROL, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00433FB0) --------------------------------------------------------
void script_433FB0_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@4

	script_433640(a1, SCRIPT_TYPE_DA000001, 0, 153, 3);
	if (script_434500(a1, 816, 1, 0))
	{
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
		sprite_list_remove((Sprite *)task_47C028->param);
		if (a1 != task_47C028)
			script_trigger_event(a1, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00434040) --------------------------------------------------------
void script_434040_ingame_menu_load_game_related(Script *a1)
{
	BOOL v1; // esi@2
	Sprite *v2; // esi@4

	_438630_read_save_lst();
	script_433640(a1, SCRIPT_TYPE_DA000001, -80, 153, 3);
	do
	{
		v1 = script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_5_FLASHING, 1, 0);
		if (!v1)
			break;
		script_trigger_event(a1, EVT_MSG_1549, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (004340B0) --------------------------------------------------------
void script_4340B0_ingame_menu(Script *a1)
{
	BOOL v1; // edi@2
	Sprite *v2; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000001, -180, 153, 3);
	do
	{
		v1 = script_434500(a1, 744, 2, 0);
		script_trigger_event(a1, EVT_MSG_SHOW_UNIT_HINT, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00434120) --------------------------------------------------------
void script_434120_ingame_menu(Script *a1)
{
	BOOL v1; // edi@2
	Sprite *v2; // edi@3

	script_433640(a1, SCRIPT_TYPE_DA000001, -130, 153, 3);
	do
	{
		v1 = script_434500(a1, CURSOR_MOBD_OFFSET_UPGRADE_3_STILL, 2, 0);
		script_trigger_event(a1, EVT_SHOW_UI_CONTROL, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00434190) --------------------------------------------------------
void script_434190_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@4

	script_433640(a1, SCRIPT_TYPE_DA000001, 0, 153, 3);
	if (script_434500(a1, 816, 1, 0))
	{
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000001);
		sprite_list_remove((Sprite *)task_47C028->param);
		if (a1 != task_47C028)
			script_trigger_event(a1, EVT_MSG_1522_plan_building_construction, 0, task_47C028);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}

//----- (00434220) --------------------------------------------------------
void script_434220_ingame_menu(Script *a1)
{
	BOOL v1; // esi@2
	Sprite *v2; // esi@4

	_438630_read_save_lst();
	script_4336E0(a1, SCRIPT_TYPE_DA000007, 100, 105, 3);
	stru29_list_4439F0(a1->sprite, 0, 0, 1, 0);
	do
	{
		v1 = script_434500(a1, 1764, 1, 1);
		if (!v1)
			break;
		script_trigger_event(a1, EVT_MSG_1549, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (004342A0) --------------------------------------------------------
void script_4342A0_ingame_menu(Script *a1)
{
	BOOL v1; // edi@2
	Sprite *v2; // edi@3

	script_4336E0(a1, SCRIPT_TYPE_DA000006, 10, 105, 3);
	stru29_list_4439F0(a1->sprite, 0, 0, 1, 0);
	do
	{
		v1 = script_434500(a1, 1740, 2, 1);
		script_trigger_event(a1, EVT_MSG_SHOW_UNIT_HINT, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00434310) --------------------------------------------------------
void script_434310_ingame_menu(Script *a1)
{
	BOOL v1; // edi@2
	Sprite *v2; // edi@3

	script_4336E0(a1, SCRIPT_TYPE_DA000006, 10, 139, 3);
	stru29_list_4439F0(a1->sprite, 0, 0, 1, 0);
	do
	{
		v1 = script_434500(a1, 1728, 2, 1);
		script_trigger_event(a1, EVT_SHOW_UI_CONTROL, 0, receiver);
	} while (v1);
	v2 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00434390) --------------------------------------------------------
void script_434390_ingame_menu(Script *a1)
{
	Sprite *v1; // edi@3

	script_4336E0(a1, SCRIPT_TYPE_DA000007, 100, 139, 3);
	stru29_list_4439F0(a1->sprite, 0, 1, 1, 0);
	if (script_434500(a1, 1752, 1, 1))
	{
		dword_47C6F8 = 0;
		stru29_list_443BF0_remove_some();
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000006);
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000007);
		script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_DA000008);
		script_trigger_event_group(a1, EVT_MSG_1546_repair_at_station, 0, SCRIPT_TYPE_1);
		script_trigger_event_group(a1, EVT_MSG_1546_repair_at_station, 0, SCRIPT_TYPE_19);
	}
	v1 = a1->sprite;
	sprite_list_remove((Sprite *)a1->param);
	sprite_list_remove(v1);
	script_yield(a1);
}
// 47C6F8: using guessed type int dword_47C6F8;

//----- (00434460) --------------------------------------------------------
void script_434460_DA000007(Script *a1)
{
	int v1; // edi@1
	Sprite *v2; // ebx@1
	int v3; // ecx@1
	int v4; // eax@1
	ScriptEvent *i; // eax@2

	v1 = 0;
	v2 = a1->sprite;
	a1->script_type = SCRIPT_TYPE_DA000007;
	v2->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
	v3 = v2->y;
	v4 = v2->z_index;
	v2->x += 25600;
	v2->y = v3 - 12800;
	v2->z_index = v4 + 1;
	sprite_load_mobd(v2, 1392);
	do
	{
		script_445370_yield_to_main_thread(a1, 0x40000000, 0);
		for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
		{
			if (i->event == EVT_MSG_1528)
				v1 = 1;
			script_discard_event(i);
		}
	} while (!v1);
	sprite_list_remove(v2);
	script_yield(a1);
}

//----- (00434500) --------------------------------------------------------
bool script_434500(Script *a1, int mobd_offset, int a3, int a4)
{
	Script *v4; // ebp@1
	Sprite *v5; // edi@1
	int v6; // ebx@2
	ScriptEvent *i; // esi@4
	int v8; // eax@5
	int v9; // eax@12
	int v10; // ebx@22
	int v11; // esi@23
	ScriptEvent *j; // eax@24
	int v13; // edi@31
	int v14; // esi@32
	ScriptEvent *k; // eax@33
	int v17; // [sp+10h] [bp-8h]@1
	Sprite *v18; // [sp+14h] [bp-4h]@1

	v4 = a1;
	v17 = mobd_offset;
	v5 = a1->sprite;
	v18 = (Sprite *)a1->param;
	while (1)
	{
		while (1)
		{
			v6 = 0;
			if (script_445370_yield_to_main_thread(v4, 0xC0000000, 1) != 0x80000000)
				break;
			sprite_4272E0_load_mobd_item(v18, v17, 0);
			sprite_4272E0_load_mobd_item(v5, 720, a3);
		}
		for (i = script_get_next_event(v4); i; i = script_get_next_event(v4))
		{
			v8 = i->event;
			if (v8 > (int)EVT_MSG_1511_sidebar_click_category)
			{
				v9 = v8 - EVT_SHOW_UI_CONTROL;
				if (v9)
				{
					if (v9 == 16)
						v6 |= 1u;
				}
				else
				{
					v6 |= 8u;
				}
			}
			else if (v8 == EVT_MSG_1511_sidebar_click_category)
			{
				v6 |= 4u;
			}
			else if (v8 == EVT_MOUSE_HOVER)
			{
				if (a4)
					stru29_list_443AE0_find_by_sprite(v5);
				v6 |= 0x10u;
			}
			script_discard_event(i);
		}
		if (v6 & 1)
			return 0;
		if (!dword_47C6C4)
		{
			if (v6 & 0x10)
			{
				sprite_4272E0_load_mobd_item(v18, v17, 2);
				sprite_4272E0_load_mobd_item(v5, 720, a3);
			}
			if (v6 & 4)
				break;
		}
	}
	sprite_4272E0_load_mobd_item(v18, v17, 1);
	sprite_4272E0_load_mobd_item(v5, 708, a3);
	v10 = 1;
	do
	{
		v11 = script_445370_yield_to_main_thread(v4, 0x50000000, 0);
		if (!(v11 & 0x40000000))
			break;
		for (j = script_get_next_event(v4); j; j = script_get_next_event(v4))
		{
			if (j->event == EVT_MSG_1528)
				v10 = 0;
			script_discard_event(j);
		}
		if (v10)
			goto LABEL_31;
	} while (!(v11 & 0x10000000));
	if (!v10)
		return 0;
LABEL_31:
	sprite_4272E0_load_mobd_item(v18, v17, 2);
	sprite_4272E0_load_mobd_item(v5, 720, a3);
	v13 = 1;
	do
	{
		v14 = script_445370_yield_to_main_thread(v4, 0x50000000, 0);
		if (!(v14 & 0x40000000))
			break;
		for (k = script_get_next_event(v4); k; k = script_get_next_event(v4))
		{
			if (k->event == EVT_MSG_1528)
				v13 = 0;
			script_discard_event(k);
		}
		if (v13)
			return 1;
	} while (!(v14 & 0x10000000));
	if (!v13)
		return 0;
	return 1;
}

//----- (00435790) --------------------------------------------------------
void EventHandler_PowerStation(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Script *v4; // edi@1
	Script *v5; // ebx@1
	Entity *v6; // esi@1
	EntityBuildingState *v7; // eax@4
	int v8; // ecx@4
	bool v9; // sf@4

	v4 = receiver;
	v5 = sender;
	v6 = (Entity *)receiver->param;
	if (event == EVT_MSG_DAMAGE)
	{
		entity_402E90_on_damage(v6, param, entity_mode_powerstation_on_death);
		entity_410520_update_healthbar_color(v6);
	}
	else if (event == EVT_MSG_DESTROY)
	{
		entity_402E40_destroy((Entity *)receiver->param, entity_mode_powerstation_on_death);
	}
	else
	{
		if (event == EVT_MSG_UPGRADE_COMPLETE)
		{
			v7 = (EntityBuildingState *)v6->state;
			v8 = v7->num_upgrades + 1;
			v9 = v7->num_upgrades - 7 < 0;
			v7->num_upgrades = v8;
			if (!((unsigned __int8)(v9 ^ __OFSUB__(v8, 8)) | (v8 == 8)))
				v7->num_upgrades = 8;
			entity_4109A0_status_bar(v6);
		}
		EventHandler_DefaultBuildingsHandler(v4, v5, event, param);
	}
}

//----- (00435820) --------------------------------------------------------
void UNIT_Handler_PowerStation(Script *a1)
{
	Entity *v1; // esi@1

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			v1->script->event_handler = EventHandler_PowerStation;
			entity_44B100_buildings__mess_with_fog_of_war(v1);
			v1->script->script_type = SCRIPT_POWER_STATION_HANDLER;
			entity_initialize_building(v1, 2, 0, 0);
			if (!v1->sprite->cplc_ptr1_pstru20)
			{
				entity_402BB0_set_arrive_handler(v1, entity_mode_powerstation_completed);
				(v1->mode)(v1);
				return;
			}
			v1->mode = entity_mode_powerstation_completed;
		}
		(v1->mode)(v1);
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (004358A0) --------------------------------------------------------
void entity_mode_powerstation_spawn_tanker(Entity *a1)
{
	Entity *v1; // esi@1
	Sprite *v2; // eax@5
	enum UNIT_ID v3; // ecx@5
	Sprite *v4; // eax@6
	int v5; // edx@6
	Sprite *v6; // eax@9
	int v7; // edx@9
	enum PLAYER_SIDE v8; // [sp-4h] [bp-8h]@6
	enum PLAYER_SIDE v9; // [sp-4h] [bp-8h]@9

	v1 = a1;
	if (a1->mode_arrive == entity_mode_powerstation_spawn_tanker)
	{
		a1->mode_arrive = 0;
		a1->mode = entity_mode_403650_building;
	}
	script_trigger_event_group(a1->script, EVT_MSG_1549, 0, SCRIPT_TYPE_CA000012);
	if (v1->player_side)
	{
		v2 = v1->sprite;
		v3 = v1->unit_id;
		if (v2->cplc_ptr1_pstru20)
		{
			v2->field_88_unused = 1;
			v4 = v1->sprite;
			v5 = v4->y;
			v8 = v1->player_side;
			if (v3 == UNIT_STATS_SURV_POWER_STATION)
				spawn_unit(UNIT_STATS_SURV_TANKER, v4->x, v5 + 24576, v8);
			else
				spawn_unit(UNIT_STATS_MUTE_TANKER, v4->x, v5 + 24576, v8);
		}
		else
		{
			v2->field_88_unused = 1;
			v6 = v1->sprite;
			v7 = v6->y;
			v9 = v1->player_side;
			if (v3 == UNIT_STATS_SURV_POWER_STATION)
				spawn_unit(UNIT_STATS_SURV_TANKER, v6->x - 0x2000, v7 + 0x2000, v9);
			else
				spawn_unit(UNIT_STATS_MUTE_TANKER, v6->x, v7 + 0x4000, v9);
		}
	}
	else
	{
		v1->mode_arrive = entity_mode_powerstation_spawn_tanker;
	}
}

//----- (00435980) --------------------------------------------------------
void entity_mode_powerstation_completed(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1
	enum SOUND_ID v3; // ecx@6
	int v4; // [sp-Ch] [bp-10h]@6

	v1 = a1;
	a1->mode_arrive = 0;
	entity_mode_powerstation_spawn_tanker(a1);
	v2 = v1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (player_side == v1->player_side && !v1->sprite->cplc_ptr1_pstru20)
	{
		show_message_ex(0, aBuildingCompleted);
		if (is_player_faction_evolved())
		{
			v4 = _4690A8_unit_sounds_volume;
			v3 = SOUND_MUTE_BUILDING_COMPLETED;
		}
		else
		{
			v4 = _4690A8_unit_sounds_volume;
			v3 = SOUND_SURV_BUILDING_COMPLETED;
		}
		sound_play(v3, 0, v4, 16, 0);
	}
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00435A20) --------------------------------------------------------
void entity_mode_powerstation_on_death(Entity *a1)
{
	Entity *v1; // esi@1

	v1 = a1;
	script_trigger_event_group(a1->script, EVT_MSG_1539, 0, SCRIPT_TANKER_CONVOY_HANDLER);
	entity_mode_building_default_on_death(v1);
}

//----- (00437DA0) --------------------------------------------------------
int HUNK_FixPointers(void *data, RllcHunk *rllc)
{
	char *data_base; // esi@1
	unsigned int v3; // eax@1
	unsigned int *v4; // ebx@2
	void *addr; // ecx@3
	int *pdata_hunk; // ebp@4
	int v7; // edi@4
	stru2 *v8; // eax@5
	int(*v9)(void *, int); // ecx@6
	unsigned int num_rebases; // edx@9
	int **ptr; // ecx@9
	int v12; // edx@9
	int *v13; // edi@10
	int prev_data_hunk; // [sp+10h] [bp-10h]@1
	unsigned int v16; // [sp+14h] [bp-Ch]@1
	stru2 *v17 = 0; // [sp+18h] [bp-8h]@0
	unsigned int v18; // [sp+1Ch] [bp-4h]@1

	data_base = (char *)data;
	v3 = 0;
	v18 = rllc->num_relocations;
	prev_data_hunk = 0;
	v16 = 0;
	if (rllc->num_relocations)
	{
		v4 = &rllc->relocations;
		while (1)
		{
			addr = (void *)*v4;
			if (*v4 & 0x80000000)
			{
				pdata_hunk = (int *)&data_base[(unsigned int)addr & 0x7FFFFFFF];
				v7 = *pdata_hunk;
				if (*pdata_hunk == prev_data_hunk)
				{
					*pdata_hunk = (int)v17->draw_handler;
				}
				else
				{
					v8 = stru2_list_create(*pdata_hunk);
					v17 = v8;
					if (!v8)
						return 0;
					v9 = v8->draw_handler;
					v3 = v16;
					prev_data_hunk = v7;
					*pdata_hunk = (int)v9;
				}
			}
			else if ((unsigned int)addr & 0x40000000)
			{
				num_rebases = v4[1];
				++v4;
				ptr = (int **)&data_base[(unsigned int)addr & 0xBFFFFFFF];
				++v3;
				v12 = num_rebases + 1;
				do
				{
					v13 = *ptr;
					++ptr;
					--v12;
					*(ptr - 1) = (int *)((char *)v13 + (_DWORD)data_base);
				} while (v12);
			}
			else
			{
				*(_DWORD *)((char *)addr + (_DWORD)data_base) += (int)data_base;
			}
			++v3;
			++v4;
			v16 = v3;
			if (v3 >= v18)
				return 1;
		}
	}
	return 1;
}

//----- (00437E80) --------------------------------------------------------
void EventHandler_RepairStation(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // ecx@3

	if (event == EVT_MSG_UPGRADE_COMPLETE)
	{
		v4 = (Entity *)receiver->param;
		++*((_DWORD *)v4->state + 1);
		entity_4109A0_status_bar(v4);
	}
	else
	{
		EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
	}
}

//----- (00437EB0) --------------------------------------------------------
void UNIT_Handler_RepairStation(Script *a1)
{
	Entity *v1; // esi@1

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			v1->script->event_handler = EventHandler_RepairStation;
			v1->script->script_type = SCRIPT_REPAIR_STATION_HANDLER;
			entity_44B100_buildings__mess_with_fog_of_war(v1);
			entity_initialize_building(v1, 1, 0, 0);
			if (!v1->sprite->cplc_ptr1_pstru20)
			{
				entity_402BB0_set_arrive_handler(v1, entity_mode_437F30_repairstation);
				(v1->mode)(v1);
				return;
			}
			v1->mode = entity_mode_437F30_repairstation;
		}
		(v1->mode)(v1);
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (00437F30) --------------------------------------------------------
void entity_mode_437F30_repairstation(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1
	DrawJob *v3; // eax@2
	enum SOUND_ID v4; // ecx@6
	int v5; // [sp-Ch] [bp-10h]@6

	v1 = a1;
	*((_DWORD *)a1->state + 2) = 0;
	v2 = a1->turret;
	if (v2)
	{
		v2->turret_sprite->_60_mobd_anim_speed = 0;
		v3 = a1->turret->turret_sprite->drawjob;
		v3->flags &= 0xBFFFFFFF;
	}
	if (player_side == a1->player_side && !a1->sprite->cplc_ptr1_pstru20)
	{
		show_message_ex(0, aBuildingCompleted);
		if (is_player_faction_evolved())
		{
			v5 = _4690A8_unit_sounds_volume;
			v4 = SOUND_MUTE_BUILDING_COMPLETED;
		}
		else
		{
			v5 = _4690A8_unit_sounds_volume;
			v4 = SOUND_SURV_BUILDING_COMPLETED;
		}
		sound_play(v4, 0, v5, 16, 0);
	}
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00437FE0) --------------------------------------------------------
void EventHandler_UpgradeProcess(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	int v4; // ecx@1

	v4 = (int)receiver->param;
	if (event == EVT_MSG_1545)
		*(_DWORD *)(v4 + 12) = 1;
}

//----- (00438000) --------------------------------------------------------
void EntityUpgradeAttachment_438000(EntityUpgradeAttachment *a1)
{
	EntityUpgradeAttachment *v1; // esi@1
	int *v2; // edi@1

	v1 = a1;
	v2 = (int *)a1->_18_sprite->param;
	stru38_list_427FD0(v2, 0);
	*v2 = 0;
	sprite_list_remove(v1->_18_sprite);
	script_yield(v1->script);
}

//----- (00438030) --------------------------------------------------------
void EntityUpgradeAttachment_438030(EntityUpgradeAttachment *a1)
{
	EntityUpgradeAttachment *v1; // esi@1
	Sprite *v2; // ecx@1
	int v3; // eax@1
	int v4; // edx@3

	v1 = a1;
	v2 = a1->_18_sprite;
	v3 = *(_DWORD *)v2->param;
	if (v3 <= 0)
	{
		v1->handler = EntityUpgradeAttachment_438000;
		return;
	}
	v4 = (v3 << 8) / 300;
	if (v4 > 50)
	{
		if (v4 > 100)
		{
			if (v4 > 150)
			{
				if (v4 > 200)
				{
					if (v4 > 220)
					{
						if (v1->field_8 != 1)
						{
							v1->field_8 = 1;
							sprite_load_mobd(v2, 604);
						}
					}
					else if (v1->field_8 != 2)
					{
						sprite_427320_load_mobd_item_sound(v2, 640);
						v1->field_8 = 2;
						v1->handler = EntityUpgradeAttachment_438160_handler;
						return;
					}
				}
				else if (v1->field_8 != 3)
				{
					sprite_427320_load_mobd_item_sound(v2, 676);
					v1->field_8 = 3;
					v1->handler = EntityUpgradeAttachment_438160_handler;
					return;
				}
			}
			else if (v1->field_8 != 4)
			{
				sprite_427320_load_mobd_item_sound(v2, 712);
				v1->field_8 = 4;
				v1->handler = EntityUpgradeAttachment_438160_handler;
				return;
			}
		}
		else if (v1->field_8 != 5)
		{
			sprite_427320_load_mobd_item_sound(v2, 748);
			v1->field_8 = 5;
			v1->handler = EntityUpgradeAttachment_438160_handler;
			return;
		}
	}
	else if (v1->field_8 != 6)
	{
		sprite_427320_load_mobd_item_sound(v2, 784);
		v1->field_8 = 6;
		v1->handler = EntityUpgradeAttachment_438160_handler;
		return;
	}
	v1->handler = EntityUpgradeAttachment_438160_handler;
}

//----- (00438160) --------------------------------------------------------
void EntityUpgradeAttachment_438160_handler(EntityUpgradeAttachment *a1)
{
	int v1; // eax@3

	if (*(_DWORD *)&a1->_18_sprite_parent->field_8C_infantry_damage || a1->field_C)
	{
		a1->handler = EntityUpgradeAttachment_438000;
	}
	else
	{
		v1 = a1->field_4 - 1;
		a1->field_4 = v1;
		if (v1 <= 0)
		{
			a1->field_4 = 8;
			a1->handler = EntityUpgradeAttachment_438030;
		}
	}
}

//----- (004381A0) --------------------------------------------------------
void script_4381A0_upgrade_process(Script *a1)
{
	EntityUpgradeAttachment *v1; // eax@1
	Sprite *v2; // edx@3

	v1 = (EntityUpgradeAttachment *)a1->param;
	if (!v1)
	{
		v1 = (EntityUpgradeAttachment *)script_create_local_object(a1, 32);
		if (v1)
		{
			a1->param = v1;
			v1->field_4 = 0;
			v1->field_8 = 0;
			v2 = a1->sprite->parent;
			v1->field_C = 0;
			v1->_18_sprite_parent = v2;
			v1->_18_sprite = a1->sprite;
			v1->script = a1;
			v1->handler = EntityUpgradeAttachment_438160_handler;
			a1->script_type = SCRIPT_UPGRADE_PROCESS;
			a1->event_handler = EventHandler_UpgradeProcess;
		}
	}
	(v1->handler)(v1);
}

//----- (00438200) --------------------------------------------------------
void EventHandler_ResearchBuilding(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Script *v4; // ebp@1
	Entity *v5; // edi@1
	EntityBuildingState *v6; // ebx@1
	int v7; // eax@3
	int *v8; // ebx@3
	Sprite *v9; // eax@4
	int v10; // edx@4
	int v11; // edx@4
	int v12; // ecx@4
	int v13; // ecx@4
	int v14; // edx@4
	Script *v15; // ecx@4
	EntityBuildingState *v16; // [sp+10h] [bp-4h]@1

	v4 = receiver;
	v5 = (Entity *)receiver->param;
	v6 = (EntityBuildingState *)v5->state;
	v16 = (EntityBuildingState *)v5->state;
	if (!v5->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_COMMENCE_UPGRADE:
			v7 = v6->field_8__0_for_repstation;
			v8 = &v6->field_8__0_for_repstation;
			if (!v7)
			{
				*v8 = 300;
				v9 = sprite_create_scripted(
					MOBD_CURSORS,
					*((Sprite **)param + 23),
					script_4381A0_upgrade_process,
					SCRIPT_FUNCTION,
					0);
				v9->field_88_unused = 1;
				v10 = *(_DWORD *)(*((_DWORD *)param + 26) + 4);
				v9->field_88_unused = 1;
				v9->x += v10;
				v11 = *(_DWORD *)(*((_DWORD *)param + 26) + 8);
				v12 = v9->y;
				v9->param = v8;
				v13 = v11 + 0x100A00 + v12;
				v14 = v9->z_index;
				v9->y = v13;
				v15 = v9->script;
				v9->parent = (Sprite *)param;
				v9->z_index = v14 + 0x200000;
				v15->param = 0;
				v16->oilspot_for_drillrig__task_for_researchlab = v9->script;
				v5->sprite->parent = (Sprite *)*((_DWORD *)param + 76);
				stru37_list_427D60_enqueue_item((int *)&game_globals_per_player + v5->player_side, v8, 42, v4, param, -1);
				if (v5->player_side == player_side)
				{
					show_message_ex(0, aCommencingUpgrade);
					if (is_player_faction_evolved())
						sound_play(SOUND_MUTE_COMMENCING_UPGRADE, 0, _4690A8_unit_sounds_volume, 16, 0);
					else
						sound_play(SOUND_SURV_COMMENCING_UPGRADE, 0, _4690A8_unit_sounds_volume, 16, 0);
				}
			}
			break;
		case EVT_MSG_PRODUCTION_READY:
			script_trigger_event(receiver, EVT_MSG_UPGRADE_COMPLETE, *((void **)param + 76), task_mobd17_cursor);
			if (v5->player_side == player_side)
			{
				show_message_ex(0, aUpgradeComplete);
				if (is_player_faction_evolved())
				{
					if ((char)kknd_rand() % -2)
						sound_play(SOUND_MUTE_UPGRADE_COMPLETE_2, 0, _4690A8_unit_sounds_volume, 16, 0);
					else
						sound_play(SOUND_MUTE_UPGRADE_COMPLETE_1, 0, _4690A8_unit_sounds_volume, 16, 0);
				}
				else if ((char)kknd_rand() % -2)
				{
					sound_play(SOUND_SURV_UPGRADE_COMPLETE_2, 0, _4690A8_unit_sounds_volume, 16, 0);
				}
				else
				{
					sound_play(SOUND_SURV_UPGRADE_COMPLETE_1, 0, _4690A8_unit_sounds_volume, 16, 0);
				}
			}
			break;
		case EVT_MSG_SABOTAGE:
			entity_sabotage(v5, param, entity_mode_researchlab_on_death);
			break;
		case EVT_MSG_DESTROY:
			entity_402E40_destroy(v5, entity_mode_researchlab_on_death);
			break;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage(v5, param, entity_mode_researchlab_on_death);
			entity_410520_update_healthbar_color(v5);
			break;
		default:
			EventHandler_DefaultBuildingsHandler(receiver, sender, event, param);
			break;
		}
	}
}

//----- (004384D0) --------------------------------------------------------
void UNIT_Handler_ResearchBuilding(Script *a1)
{
	Entity *v1; // esi@1

	v1 = (Entity *)a1->param;
	if (!_47C6DC_dont_execute_unit_handlers)
	{
		if (!v1)
		{
			v1 = entity_list_create(a1);
			v1->script->event_handler = EventHandler_DefaultBuildingsHandler;
			entity_44B100_buildings__mess_with_fog_of_war(v1);
			entity_initialize_building(v1, 1, 0, 0);
			*((_DWORD *)v1->state + 2) = 0;
			*(_DWORD *)v1->state = 0;
			if (!v1->sprite->cplc_ptr1_pstru20)
			{
				entity_402BB0_set_arrive_handler(v1, entity_mode_researchlab_completed);
				(v1->mode)(v1);
				return;
			}
			v1->mode = entity_mode_researchlab_completed;
		}
		(v1->mode)(v1);
	}
}
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (00438550) --------------------------------------------------------
void entity_mode_researchlab_completed(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1
	enum SOUND_ID v3; // ecx@6
	int v4; // [sp-Ch] [bp-10h]@6

	v1 = a1;
	v2 = a1->turret;
	if (v2)
		v2->turret_sprite->drawjob->flags &= 0xBFFFFFFF;
	if (player_side == a1->player_side && !a1->sprite->cplc_ptr1_pstru20)
	{
		show_message_ex(0, aBuildingCompleted);
		if (is_player_faction_evolved())
		{
			v4 = _4690A8_unit_sounds_volume;
			v3 = SOUND_MUTE_BUILDING_COMPLETED;
		}
		else
		{
			v4 = _4690A8_unit_sounds_volume;
			v3 = SOUND_SURV_BUILDING_COMPLETED;
		}
		sound_play(v3, 0, v4, 16, 0);
	}
	v1->script->event_handler = EventHandler_ResearchBuilding;
	v1->script->script_type = SCRIPT_RESEARCH_BUILDING_HANDLER;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		v1->mode = entity_mode_4034B0;
		entity_mode_403650_building(v1);
	}
	else
	{
		v1->mode = entity_mode_403650_building;
		entity_mode_403650_building(v1);
	}
}

//----- (00438600) --------------------------------------------------------
void entity_mode_researchlab_on_death(Entity *a1)
{
	Entity *v1; // edi@1
	int *v2; // esi@1

	v1 = a1;
	v2 = (int *)((char *)a1->state + 8);
	if (*v2)
	{
		stru38_list_427FD0(v2, 0);
		*v2 = 0;
	}
	entity_mode_building_default_on_death(v1);
}

//----- (00438630) --------------------------------------------------------
int _438630_read_save_lst()
{
	FILE *v0; // ebx@1
	stru175 *v1; // eax@2
	stru175 *v2; // edx@3
	int v3; // eax@4
	int v4; // eax@7
	int v5; // edx@10
	int v7; // [sp+Ch] [bp-18h]@7
	stru175 *v8; // [sp+10h] [bp-14h]@10
	enum LEVEL_ID v9; // [sp+14h] [bp-10h]@7
	int v10; // [sp+18h] [bp-Ch]@7
	int v11; // [sp+1Ch] [bp-8h]@7
	int v12; // [sp+20h] [bp-4h]@7

	sprintf(byte_47C230, aSSave_lst, game_data_installation_dir);
	v0 = fopen(byte_47C230, aR);
	if (v0)
	{
		_47C050_array_idx = 0;
		v1 = _47C050_array;
		do
		{
			v2 = v1;
			++v1;
			*(_DWORD *)&v2->str_0[0] = 0;
			*(_DWORD *)&v2->str_0[4] = 0;
			*(_DWORD *)&v2->str_0[8] = 0;
		} while ((int)v1 < (int)byte_47C230);
		v3 = fscanf(v0, aActiveslotD, &_47C050_array_idx);
		if (!v3)
			_47C050_array_idx = 0;
		if (v3 != -1)
		{
			while (1)
			{
				v10 = 0;
				v11 = 0;
				v12 = 0;
				v4 = fscanf(v0, aSlotDSD, &v7, &v10, &v9);
				if (!v4 || v4 == -1)
					break;
				if (v7 <= 19)
				{
					v5 = v7;
					v8 = &_47C050_array[v7];
					strcpy(_47C050_array[v7].str_0, (const char *)&v10);
					_47C050_array[v5].level_id = v9;
				}
			}
		}
		fclose(v0);
	}
	return 0;
}

//----- (00438740) --------------------------------------------------------
bool _438740_save_lst()
{
	int v0; // esi@1
	FILE *v1; // eax@3
	FILE *v2; // ebx@3
	int v3; // edi@4
	stru175 *v4; // esi@4
	BOOL result; // eax@8

	v0 = _47C050_array_idx;
	if (_47C050_array[_47C050_array_idx].str_0[0]
		&& (sprintf(byte_47C230, aSGameD_sav, game_data_installation_dir, _47C050_array_idx),
			_41CAE0_prepare_to_load_level(byte_47C230, _47C050_array[v0].level_id))
		&& (game_state = 1,
			sprintf(byte_47C230, aSSave_lst, game_data_installation_dir),
			SetFileAttributesA(byte_47C230, 0x80u),
			v1 = fopen(byte_47C230, (const char *)aW),
			(v2 = v1) != 0))
	{
		fprintf(v1, aActiveslotD, _47C050_array_idx);
		v3 = 0;
		v4 = _47C050_array;
		do
		{
			if (v4->str_0[0])
				fprintf(v2, aSlotDSD, v3, v4, v4->level_id);
			++v4;
			++v3;
		} while ((int)v4 < (int)byte_47C230);
		fclose(v2);
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00438840) --------------------------------------------------------
bool _438840_save_lst()
{
	int v0; // esi@1
	FILE *v1; // eax@3
	FILE *v2; // ebx@3
	int v3; // edi@4
	stru175 *v4; // esi@4
	BOOL result; // eax@8

	v0 = _47C050_array_idx;
	if (_47C050_array[_47C050_array_idx].str_0[0]
		&& (sprintf(byte_47C230, aSGameD_sav, game_data_installation_dir, _47C050_array_idx),
			_41CB30_prepare_to_save_level(byte_47C230, _47C050_array[v0].level_id))
		&& (sprintf(byte_47C230, aSSave_lst, game_data_installation_dir),
			SetFileAttributesA(byte_47C230, 0x80u),
			v1 = fopen(byte_47C230, (const char *)aW),
			(v2 = v1) != 0))
	{
		fprintf(v1, aActiveslotD, _47C050_array_idx);
		v3 = 0;
		v4 = _47C050_array;
		do
		{
			if (v4->str_0[0])
				fprintf(v2, aSlotDSD, v3, v4, v4->level_id);
			++v4;
			++v3;
		} while ((int)v4 < (int)byte_47C230);
		fclose(v2);
		result = 1;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (004391D0) --------------------------------------------------------
void _4391D0_mapd_handler(Mapd_stru0 *a1, void *a2)
{
	a1->mapd_cplc_render_x = *((_DWORD *)a2 + 4) - (render_default_stru1->clip_z << 7);
	a1->mapd_cplc_render_y = *((_DWORD *)a2 + 5) - (render_default_stru1->clip_w << 7);
	a1->mapd_cplc_item0_ptr_field_C = *((_DWORD *)a2 + 6);
}

//----- (00439200) --------------------------------------------------------
void drawjob_update_handler_mapd_menu(Bitmap *a1, DrawJob *a2)
{
	a2->job_details.image = a1->draw_job_scrl;
	a2->job_details.z_index = a1->z_index;
	a2->job_details.x = -(_47C380_mapd.mapd_cplc_render_x >> 8);
	a2->job_details.y = -(_47C380_mapd.mapd_cplc_render_y >> 8);
	a2->job_details.params = render_default_stru1;
}

//----- (00439230) --------------------------------------------------------
bool LVL_InitMapd()
{
	DataMapd *v0; // eax@1
	BOOL result; // eax@2
	int v2; // ecx@3
	Bitmap *v3; // eax@5
	int v4; // edx@7
	Bitmap *v5; // ecx@8

	v0 = LVL_FindMapd();
	currently_running_lvl_mapd = v0;
	if (v0)
	{
		v2 = 0;
		currently_running_lvl_mapd_num_items = 0;
		if (v0->items)
		{
			do
				currently_running_lvl_mapd_num_items = ++v2;
			while (v0[v2].items);
		}
		currently_running_lvl_mapd_valid = 1;
		v3 = (Bitmap *)malloc(0x140u);
		bitmap_list = v3;
		if (v3)
		{
			bitmap_list_free_pool = v3;
			v3->prev = (Bitmap *)&bitmap_list_free_pool;
			v4 = 15;
			do
			{
				v5 = v3;
				++v3;
				--v4;
				v5->next = v3;
			} while (v4);
			v3->next = (Bitmap *)&bitmap_list_free_pool;
			bitmap_list_47C364 = (Bitmap *)&bitmap_list_47C360;
			bitmap_list_47C360 = (Bitmap *)&bitmap_list_47C360;
			_47C390_mapd = 0;
			_47C380_mapd.mapd_cplc_item0_ptr_field_C = 0;
			_47C380_mapd.mapd_cplc_render_y = 0;
			_47C380_mapd.mapd_cplc_render_x = 0;
			mapd_j_4391D0_handler = _4391D0_mapd_handler;
			j_drawjob_update_handler_mapd_menu = drawjob_update_handler_mapd_menu;
			result = 1;
		}
		else
		{
			result = 0;
		}
	}
	else
	{
		currently_running_lvl_mapd_valid = 0;
		result = 1;
	}
	return result;
}

//----- (00439300) --------------------------------------------------------
Bitmap *MAPD_Draw(enum MAPD_ID mapd_idx, unsigned int image_id, int z_index)
{
	unsigned int imAge_id; // ebx@1
	Bitmap *result; // eax@2
	enum MAPD_ID mApd_idx; // edi@3
	DataMapdItem *v6; // eax@3
	Bitmap *v7; // esi@9
	DrawJob *v8; // ecx@10
	MapdScrlImage *img; // eax@10

	imAge_id = image_id;
	if (mapd_idx <= (unsigned int)currently_running_lvl_mapd_num_items)
	{
		mApd_idx = mapd_idx;
		v6 = currently_running_lvl_mapd[mapd_idx].items;
		if ((DataHunk *)v6 == currently_running_lvl)
		{
			result = 0;
		}
		else if (image_id <= v6->num_images)
		{
			if ((Bitmap **)bitmap_list_free_pool == &bitmap_list_free_pool)
			{
				result = 0;
			}
			else
			{
				v7 = bitmap_list_free_pool;
				result = (Bitmap *)draw_list_add(
					bitmap_list_free_pool,
					(void(*)(void *, DrawJob *))j_drawjob_update_handler_mapd_menu);
				v7->draw_job = (DrawJob *)result;
				if (result)
				{
					bitmap_list_free_pool = v7->next;
					v7->next = (Bitmap *)&bitmap_list_47C360;
					v7->prev = bitmap_list_47C364;
					bitmap_list_47C364->next = v7;
					bitmap_list_47C364 = v7;
					v8 = v7->draw_job;
					img = currently_running_lvl_mapd[mApd_idx].items->images[imAge_id];
					v7->draw_job_scrl = img;
					v8->job_details.image = img;
					v7->z_index = z_index;
					result = v7;
				}
			}
		}
		else
		{
			result = 0;
		}
	}
	else
	{
		result = 0;
	}
	return result;
}
// 47C37C: using guessed type int currently_running_lvl_mapd_num_items;

//----- (004393C0) --------------------------------------------------------
void bitmap_list_remove(Bitmap *a1)
{
	DrawJob *v1; // eax@1

	v1 = a1->draw_job;
	if (v1)
		v1->flags |= 0x80000000;
	a1->prev->next = a1->next;
	a1->next->prev = a1->prev;
	a1->next = bitmap_list_free_pool;
	bitmap_list_free_pool = a1;
}

//----- (004393F0) --------------------------------------------------------
void _4393F0_call_mapd()
{
	if (currently_running_lvl_mapd_valid && _47C390_mapd)
	{
		if (mapd_j_4391D0_handler)
			mapd_j_4391D0_handler(&_47C380_mapd, (void *)_47C390_mapd);
	}
}
// 47C38C: using guessed type int currently_running_lvl_mapd_valid;
// 47C390: using guessed type int _47C390_mapd;

//----- (00439420) --------------------------------------------------------
void bitmap_list_free()
{
	if (currently_running_lvl_mapd_valid)
	{
		if (bitmap_list)
			free(bitmap_list);
	}
}

//----- (00439440) --------------------------------------------------------
bool sound_initialize()
{
	int v0; // eax@1
	int *v1; // esi@1
	int v2; // eax@3
	int *v3; // esi@3
	int v4; // esi@5
	int *v5; // edi@5
	Sound *v6; // ecx@9
	BOOL result; // eax@10
	int v8; // eax@11
	int v9; // [sp+Ch] [bp-4h]@5

	v0 = 0;
	v1 = sound_volumes;
    for (int i = 0; i < 16; ++i)
    {
        //*v1 = (signed __int64)(__FYL2X__((double)(v0 + 1) * 0.05882352941176471, 0.69314718055994528623) * 1000.0);
        *v1 = 1000.0 * 0.69314718055994528623 * log2((double)(v0 + 1) * 0.05882352941176471);
        ++v1;
        ++v0;
    }
	v2 = 0;
	v3 = sound_pans;
    for (int i = 0; i < 16; ++i)
	{
		//*v3 = (signed __int64)(__FYL2X__((double)(v2 + 1) * 0.05882352941176471, 0.69314718055994528623) * 1000.0);
        *v3 = 1000.0 * 0.69314718055994528623 * log2((double)(v2 + 1) * 0.05882352941176471);
		++v3;
		++v2;
	}
	v4 = 17;
	v5 = Sound_47C578;
	v9 = 17;
	do
	{
		//*v5 = (signed __int64)(__FYL2X__((double)v9 * 0.05882352941176471, 0.69314718055994528623) * -1000.0);
        *v5 = -1000.0 * 0.69314718055994528623 * log2((double)v9 * 0.05882352941176471);
		--v4;
		++v5;
		v9 = v4;
	} while (v4 >= 1);
	sound_initialized = 0;
	sound_list_last_id = 0;
	sound_list_end = 0;
	sound_list_free_pool = (Sound *)&sound_list_end;
	sound_list_47C3D4 = (Sound *)&sound_list_end;
	sound_list_head = 0;
	if (DirectSoundCreate(0, &pds, 0))
		return 1;
	if (pds->SetCooperativeLevel(global_hwnd, 1))
	{
		pds->Release();
		pds = 0;
		return 1;
	}
	sound_list = (Sound *)malloc(0xA40u);
	memset(sound_list, 0, 0xA40u);
	v6 = sound_list;
	if (sound_list)
	{
		v8 = 0;
		while (1)
		{
			v6[v8].next = &v6[v8 + 1];
			++v8;
			if (v8 >= 7)
				break;
			v6 = sound_list;
		}
		sound_list[7].next = 0;
		sound_list_end = 0;
		sound_list_free_pool = (Sound *)&sound_list_end;
		sound_list_47C3D4 = (Sound *)&sound_list_end;
		sound_list_head = sound_list;
		sound_initialized = 1;
		result = 1;
	}
	else
	{
		pds->Release();
		pds = 0;
		result = 1;
	}
	return result;
}

//----- (00439610) --------------------------------------------------------
bool LVL_LoadSlv(const char *slv_filename)
{
	DataHunk *v1; // eax@2
	DataSectionOffset *v2; // eax@4
	sound_stru_2 **v3; // edx@4
	char *v4; // esi@4
	int v5; // ecx@7
	int v6; // ecx@9
	sound_stru_2 **v7; // eax@10
	sound_stru_2 *v8; // edx@11

	_47C5C0_can_sound = 0;
	if (sound_initialized)
	{
		v1 = LVL_LoadLevel(slv_filename);
		faction_slv = v1;
		if (v1 || (v1 = LVL_LoadLevel(shared_slv_filename), (faction_slv = v1) != 0))
		{
			v2 = v1->section_table;
			v3 = 0;
			_47C4E0_sounds = 0;
			v4 = (char *)&v2->ptr;
			if (v2->ptr)
			{
				do
				{
					if (!strncmp(aSoun, v2->name, 4u))
						_47C4E0_sounds = *(sound_stru_2 ***)v4;
					v5 = *((_DWORD *)v4 + 2);
					v4 += 8;
					v2 = (DataSectionOffset *)(v4 - 4);
				} while (v5);
				v3 = _47C4E0_sounds;
			}
			v6 = 0;
			if (*v3)
			{
				v7 = v3;
				do
				{
					v8 = v7[1];
					++v7;
					++v6;
				} while (v8);
			}
			_47C4E8_num_sounds = v6;
			_47C5C0_can_sound = 1;
		}
	}
	return 1;
}

//----- (004396C0) --------------------------------------------------------
int sound_play(enum SOUND_ID sound_id, int a2, int volume_offset, int pan_offset, Script *script)
{
return 0;
	void *v5; // eax@0
	int v6; // eax@3
	Sound *v7; // eax@4
	int result; // eax@7
	sound_stru_2 *v9; // esi@10
	Sound *v10; // ebx@12
	IDirectSoundBuffer **v11; // edi@20
	IDirectSoundBuffer *v12; // eax@21
	bool v13; // zf@21
	unsigned int v14; // ecx@25
	void *v15; // eax@27
	Sound *v16; // eax@33
	Sound *v17; // eax@35
	Sound *v18; // eax@37
	Sound *v19; // eax@46
	Sound *v20; // eax@48
	Sound *v21; // eax@50
	int v22; // [sp+0h] [bp-3Ch]@3
	DSBUFFERDESC v23; // [sp+Ch] [bp-30h]@4
	int v24; // [sp+20h] [bp-1Ch]@1
	IDirectSoundBuffer *v25; // [sp+24h] [bp-18h]@21
	void *v26; // [sp+28h] [bp-14h]@24
	char *v27; // [sp+2Ch] [bp-10h]@24
	unsigned int v28; // [sp+30h] [bp-Ch]@24
	const void *v29; // [sp+34h] [bp-8h]@21
	int a3a; // [sp+38h] [bp-4h]@4

	v24 = a2;

	v7 = 0;
	v23.dwFlags = 0;
	v23.dwSize = 0;
	v23.dwBufferBytes = 0;
	a3a = 0;
	v23.dwReserved = 0;
	v23.lpwfxFormat = 0;
	if (volume_offset)
	{
		if (_47C5C0_can_sound && sound_id < _47C4E8_num_sounds)
		{
			v9 = _47C4E0_sounds[sound_id];
			if (v9 != faction_slv && v9)
			{
				v10 = sound_list_head;
				if (sound_list_head)
				{
					sound_list_head = sound_list_head->next;
					memset(v10, 0, sizeof(Sound));
					if (!++sound_list_last_id)
						sound_list_last_id = 1;
					v10->id = sound_list_last_id;
					v7 = sound_list_free_pool;
					v10->next = sound_list_free_pool;
					v10->prev = (Sound *)&sound_list_end;
					sound_list_free_pool->prev = v10;
					sound_list_free_pool = v10;
				}
				if (v10)
				{
					v10->task = script;
					v10->sound_volume_offset = volume_offset;
					v10->sound_pan_offset = pan_offset;
					v10->field_14 = -2;
					sound_stru_2_43A710(v9, &v23.lpwfxFormat, &a3a, (unsigned int *)&v23.dwBufferBytes);
					v11 = &v10->pdsb;
					v23.dwSize = 20;
					v23.dwFlags = 232;
					if (pds->CreateSoundBuffer(&v23, &v10->pdsb, 0))
					{
						v16 = v10->next;
						if (v16)
							v16->prev = v10->prev;
						v17 = v10->prev;
						if (v17)
							v17->next = v10->next;
						v18 = sound_list_head;
						v10->next = sound_list_head;
						sound_list_head = v10;

						result = 0;
					}
					else
					{
						v12 = *v11;
						v13 = *v11 == 0;
						v29 = (const void *)a3a;
						v25 = v12;
						if (v13
							|| !a3a
							|| !v23.dwBufferBytes
							|| v12->Lock(0, v23.dwBufferBytes, &v26, (LPDWORD)&script, (LPVOID *)&v27, (LPDWORD)&v28, 0))
						{
							(*v11)->Release();
							v19 = v10->next;
							*v11 = 0;
							if (v19)
								v19->prev = v10->prev;
							v20 = v10->prev;
							if (v20)
								v20->next = v10->next;
							v21 = sound_list_head;
							v10->next = sound_list_head;
							sound_list_head = v10;

							result = 0;
						}
						else
						{
							memcpy(v26, v29, (unsigned int)script);
							v14 = v28;
							if (v28)
							{
								memcpy(v27, (char *)script + (_DWORD)v29, v28);
								v14 = v28;
							}
							v25->Unlock(v26, (DWORD)script, v27, v14);
							v10->pdsb->SetPan(sound_pans[pan_offset]);
							v10->pdsb->SetVolume(sound_volumes[volume_offset]);
							v15 = (void *)dword_47C5D0;
							if (dword_47C5D0)
								++v10->field_18;
							else
								v15 = (void *)v10->pdsb->Play(0, 0, v24);

							result = v10->id;
						}
					}
				}
				else
				{

					result = 0;
				}
			}
			else
			{
				result = 0;
			}
		}
		else
		{
			result = 0;
		}
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00439AA0) --------------------------------------------------------
int sound_play_threaded(const char *name_, int a2, int sound_volume_offset, int sound_pan_offset, Script *task)
{
	int result; // eax@2
	Sound *v6; // ebx@3
	Sound *v7; // eax@6
	int v8; // eax@10
	int v9; // esi@11
	int v10; // eax@11
	const char *v11; // edi@13
	int v12; // eax@13
	int v13; // ecx@13
	void *v14; // eax@13
	int v15; // [sp+0h] [bp-10h]@10
	const char *v16; // [sp+Ch] [bp-4h]@1


	char cwd[1024];
	char name[1024];
	sprintf(
		name,
		(const char *)aSLevelsS,
		_getcwd(cwd, sizeof(cwd)),
		name_
	);

	v16 = name;
	if (sound_initialized)
	{
		v6 = sound_list_head;
		if (!sound_list_head)
			goto LABEL_18;
		sound_list_head = sound_list_head->next;
		memset(v6, 0, sizeof(Sound));
		if (!++sound_list_last_id)
			sound_list_last_id = 1;
		v6->id = sound_list_last_id;
		v7 = sound_list_free_pool;
		v6->next = sound_list_free_pool;
		v6->prev = (Sound *)&sound_list_end;
		sound_list_free_pool->prev = v6;
		sound_list_free_pool = v6;
		if (v6)
		{
			v9 = v6->flags | 8;
			v6->task = task;
			v6->field_14 = -3;
			v6->sound_volume_offset = sound_volume_offset;
			v6->flags = v9;
			v10 = v9;
			if (a2 == 1)
			{
				LOBYTE_HEXRAYS(v10) = v9 | 0x10;
				v6->flags = v10;
			}
			v11 = v16;
			v6->sound_pan_offset = sound_pan_offset;
			strcpy(v6->filename, v11);
			v12 = _beginthread((_beginthread_proc_type)_439C10_sound_thread, 0x1000u, v6);
			v13 = v6->id;
			v6->hthread = v12;
			_47C5D4_sound_threaded_snd_id = v13;
			v14 = (void *)v6->flags;
			LOBYTE_HEXRAYS(v14) = (unsigned __int8)v14 | 8;
			v6->flags = (int)v14;

			result = v6->id;
		}
		else
		{
		LABEL_18:
			result = 0;
		}
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00439C10) --------------------------------------------------------
void _439C10_sound_thread(Sound *a1)
{
	Sound *v1; // esi@1
	char *v2; // ebp@1
	const char *v3; // ecx@1
	File *v4; // ecx@5
	IDirectSoundBuffer **v5; // ebx@7
	int v6; // eax@8
	DWORD v7; // edi@9
	int v8; // eax@9
	Sound *v9; // ecx@12
	unsigned int v10; // edi@13
	unsigned int v11; // eax@15
	unsigned int v12; // edi@15
	int v13; // eax@18
	int v14; // eax@20
	unsigned int v15; // edx@22
	int v16; // eax@25
	int v17; // eax@31
	int v18; // edi@32
	int v19; // eax@35
	DWORD v20; // eax@38
	DWORD v21; // edi@40
	int v22; // eax@40
	Sound *v23; // ecx@43
	unsigned int v24; // edi@44
	int v25; // eax@46
	unsigned int v26; // edx@46
	unsigned int v27; // edi@46
	int v28; // eax@46
	int v29; // eax@55
	unsigned int v30; // edx@57
	int v31; // eax@57
	int v32; // eax@67
	int v33; // eax@69
	File *v34; // ecx@71
	int v35; // ebx@75
	int v36; // eax@76
	DWORD v37; // eax@78
	char *v38; // edi@84
	char v39; // dl@85
	unsigned int v40; // ecx@85
	int v41; // eax@90
	Sound *v42; // eax@91
	Sound *v43; // eax@93
	Sound *v44; // eax@96
	Sound *v45; // eax@98
	int num_bytes; // [sp+108h] [bp-70h]@9
	void *v47; // [sp+10Ch] [bp-6Ch]@9
	void *v48; // [sp+110h] [bp-68h]@9
	unsigned int v49; // [sp+114h] [bp-64h]@8
	unsigned int v50; // [sp+118h] [bp-60h]@1
	int v51; // [sp+11Ch] [bp-5Ch]@1
	unsigned int v52; // [sp+120h] [bp-58h]@1
	unsigned int a3; // [sp+124h] [bp-54h]@6
	WAVEFORMATEX out_data; // [sp+128h] [bp-50h]@6
	WAVEFORMATEX v55; // [sp+13Ch] [bp-3Ch]@71
	DSBCAPS v56; // [sp+150h] [bp-28h]@8
	DSBUFFERDESC v57; // [sp+164h] [bp-14h]@1

	v1 = a1;
	v57.dwFlags = 0;
	v57.dwBufferBytes = 0;
	v2 = 0;
	v3 = a1->filename;
	v57.dwReserved = 0;
	v52 = 0;
	v50 = 0;
	v51 = 0;
	v57.dwSize = 0;
	v57.lpwfxFormat = 0;
	if (a1 != (Sound *)0xFFFFFFBC && *v3)
		v1->file = File::open(v3);
	else
		a1->file = 0;
	v4 = v1->file;
	if (!v4 || !file_read_wav(v4, &out_data, &a3))
	{
		v1->file->close();
		v44 = v1->next;
		v1->flags = v1->flags & 0xFFFFFFF7 | 0x40;
		if (v44)
			v44->prev = v1->prev;
		v45 = v1->prev;
		if (v45)
			v45->next = v1->next;
		v1->next = sound_list_head;
		sound_list_head = v1;
		_endthread();
	}
	v1->field_40 = a3;
	v5 = &v1->pdsb;
	v57.dwBufferBytes = 3 * out_data.nAvgBytesPerSec;
	v57.lpwfxFormat = &out_data;
	v57.dwSize = 20;
	v57.dwFlags = 232;
	if (pds->CreateSoundBuffer(&v57, &v1->pdsb, 0))
	{
		v1->file->close();
		v42 = v1->next;
		v1->flags = v1->flags & 0xFFFFFFF7 | 0x40;
		if (v42)
			v42->prev = v1->prev;
		v43 = v1->prev;
		if (v43)
			v43->next = v1->next;
		v1->next = sound_list_head;
		sound_list_head = v1;
		_endthread();
	}
	(*v5)->SetPan(sound_pans[v1->sound_pan_offset]);
	(*v5)->SetVolume(sound_volumes[v1->sound_volume_offset]);
	v6 = v1->flags;
	LOBYTE_HEXRAYS(v6) = v6 | 8;
	v56.dwSize = 20;
	v1->flags = v6;
	(*v5)->GetCaps(&v56);
	(*v5)->GetCurrentPosition((LPDWORD)&v52, (LPDWORD)&v50);
	v49 = v1->field_40;
	if (!v52)
	{
		v7 = v56.dwBufferBytes - v50;
		v8 = (*v5)->Lock(v50, v56.dwBufferBytes - v50, &v48, (LPDWORD)&a1, &v47, (LPDWORD)&num_bytes, 0);
		if (v8 == DSERR_BUFFERLOST)
		{
			(*v5)->Restore();
			v8 = (*v5)->Lock(v50, v7, &v48, (LPDWORD)&a1, &v47, (LPDWORD)&num_bytes, 0);
		}
		if (v8)
		{
			v17 = v1->flags;
			LOBYTE_HEXRAYS(v17) = v17 | 0x20;
			v1->flags = v17;
		}
		else
		{
			v9 = a1;
			if (a1)
			{
				v10 = v49;
				if (v49 < (unsigned int)a1)
					v9 = (Sound *)v49;
				v11 = v1->file->read(v48, (int)v9);
				v9 = a1;
				v12 = v10 - v11;
				v49 = v12;
				v2 = (char *)a1 + v50;
				if ((unsigned int)a1 + v50 >= v56.dwBufferBytes)
					v2 -= v56.dwBufferBytes;
				if (v11 < (unsigned int)a1)
				{
					memset((char *)v48 + v11, 0, (unsigned int)a1 - v11);
					v13 = v1->flags;
					v9 = a1;
					v12 = v49;
					LOBYTE_HEXRAYS(v13) = v13 | 0x20;
					v1->flags = v13;
				}
				if (v47)
				{
					v14 = num_bytes;
					if (v12 < num_bytes)
						v14 = v12;
					v15 = v1->file->read(v47, v14);
					v49 = v12 - v15;
					v2 = (char *)(v50 + num_bytes);
					if (v50 + num_bytes >= v56.dwBufferBytes)
						v2 -= v56.dwBufferBytes;
					if (v15 < num_bytes)
					{
						memset((char *)v47 + v15, 0, num_bytes - v15);
						v16 = v1->flags;
						LOBYTE_HEXRAYS(v16) = v16 | 0x20;
						v1->flags = v16;
					}
					v9 = a1;
				}
			}
			(*v5)->Unlock(v48, (DWORD)v9, v47, num_bytes);
			if (dword_47C5D0)
				++v1->field_18;
			else
				(*v5)->Play(0, 0, 1);
			v1->flags &= 0xFFFFFFF7;
			Sleep(0xAu);
		}
	}
	v18 = v51;
	do
	{
		if (v1->flags & 0x20)
			goto LABEL_89;
		while (!v18)
		{
			v19 = v1->flags;
			if (v19 & 0x20)
				break;
			if (!(v19 & 4))
			{
				LOBYTE_HEXRAYS(v19) = v19 | 8;
				v1->flags = v19;
				v1->pdsb->GetCurrentPosition((LPDWORD)&v52, (LPDWORD)&v50);
				if (v52 < (unsigned int)v2)
					v20 = v56.dwBufferBytes + v52 - (_DWORD)v2;
				else
					v20 = v52 - (_DWORD)v2;
				v21 = v20;
				v22 = v1->pdsb->Lock((DWORD)v2, v20, &v48, (LPDWORD)&a1, &v47, (LPDWORD)&num_bytes, 0);
				if (v22 == DSERR_BUFFERLOST)
				{
					v1->pdsb->Restore();
					v22 = v1->pdsb->Lock((DWORD)v2, v21, &v48, (LPDWORD)&a1, &v47, (LPDWORD)&num_bytes, 0);
				}
				if (!v22)
				{
					v23 = a1;
					if (a1)
					{
						v24 = v49;
						if (v49 < (unsigned int)a1)
							v23 = (Sound *)v49;
						v25 = v1->file->read(v48, (int)v23);
						v23 = a1;
						v26 = v25;
						v27 = v24 - v25;
						v28 = v1->flags & 0x10;
						v49 = v27;
						if (v28)
							v2 += v26;
						else
							v2 = &v2[(_DWORD)a1];
						if ((unsigned int)v2 >= v56.dwBufferBytes)
							v2 -= v56.dwBufferBytes;
						if (v26 < (unsigned int)a1 && !v28)
						{
							memset((char *)v48 + v26, 0, (unsigned int)a1 - v26);
							v23 = a1;
							v27 = v49;
						}
						v51 = v26 == 0;
						if (v47)
						{
							v29 = num_bytes;
							if (v27 < num_bytes)
								v29 = v27;
							v30 = v1->file->read(v47, v29);
							v31 = v1->flags & 0x10;
							v49 = v27 - v30;
							if (v31)
								v2 += v30;
							else
								v2 += num_bytes;
							if ((unsigned int)v2 >= v56.dwBufferBytes)
								v2 -= v56.dwBufferBytes;
							if (v30 < num_bytes && !v31)
								memset((char *)v47 + v30, 0, num_bytes - v30);
							v51 = v30 == 0;
							v23 = a1;
						}
					}
					v1->pdsb->Unlock(v48, (DWORD)v23, v47, num_bytes);
				}
				v32 = v1->flags;
				v18 = v51;
				LOBYTE_HEXRAYS(v32) = v32 & 0xF7;
				v1->flags = v32;
			}
			Sleep(0x64u);
		}
		v33 = v1->flags;
		if (!(v33 & 0x20))
		{
			if (v33 & 0x10)
			{
				v34 = v1->file;
				v18 = 0;
				v49 = v1->field_40;
				v51 = 0;
				v34->seek(0, 0);
				file_read_wav(v1->file, &v55, &v50);
			}
			else
			{
				v18 = 1;
				v51 = 1;
			}
		}
	} while (!v18);
	if (!(v1->flags & 0x20))
	{
		v35 = 0;
		do
		{
			v36 = v1->flags;
			if (v36 & 0x20)
				break;
			LOBYTE_HEXRAYS(v36) = v36 | 8;
			v1->flags = v36;
			v1->pdsb->GetCurrentPosition((LPDWORD)&v52, (LPDWORD)&v50);
			if (v52 < (unsigned int)v2)
				v37 = v56.dwBufferBytes + v52 - (_DWORD)v2;
			else
				v37 = v52 - (_DWORD)v2;
			if (!v1->pdsb->Lock((DWORD)v2, v37, &v48, (LPDWORD)&a1, &v47, (LPDWORD)&num_bytes, 0))
			{
				if (a1)
				{
					memset(v48, 0, (unsigned int)a1);
					v2 = &v2[(_DWORD)a1];
					if ((unsigned int)v2 >= v56.dwBufferBytes)
						v2 -= v56.dwBufferBytes;
					v38 = (char *)v47;
					if (v47)
					{
						v39 = num_bytes;
						v40 = (unsigned int)num_bytes >> 2;
						memset(v47, 0, 4 * ((unsigned int)num_bytes >> 2));
						memset(&v38[4 * v40], 0, v39 & 3);
						v2 += num_bytes;
						if ((unsigned int)v2 >= v56.dwBufferBytes)
							v2 -= v56.dwBufferBytes;
					}
				}
				v1->pdsb->Unlock(v48, (DWORD)a1, v47, num_bytes);
			}
			v1->flags &= 0xFFFFFFF7;
			Sleep(0x64u);
			++v35;
		} while (v35 < 50);
	}
LABEL_89:
	v1->pdsb->Stop();
	v1->file->close();
	v41 = v1->flags;
	v1->file = 0;
	LOBYTE_HEXRAYS(v41) = v41 | 0x40;
	v1->flags = v41;
	_endthread();
}

//----- (0043A2B0) --------------------------------------------------------
void sound_stop(int sound_id)
{
	Sound *v1; // esi@3
	int v2; // eax@7
	int v3; // eax@10

	if (sound_id && sound_initialized)
	{
		v1 = sound_list_free_pool;
		if (sound_list_free_pool->id == sound_id)
		{
		LABEL_6:
			if (v1->field_14 == -3)
			{
				v2 = v1->flags;
				LOBYTE_HEXRAYS(v2) = v2 | 0x20;
				v1->flags = v2;
			}
			else
			{
				v1->pdsb->Stop();
				v1->pdsb->SetCurrentPosition(0);
			}
			if (v1->field_18)
			{
				v3 = v1->flags;
				v1->field_18 = 0;
				LOBYTE_HEXRAYS(v3) = v3 & 0xFB;
				v1->flags = v3;
			}
		}
		else
		{
			while ((int *)v1 != &sound_list_end)
			{
				v1 = v1->next;
				if (v1->id == sound_id)
					goto LABEL_6;
			}
		}
	}
}

//----- (0043A320) --------------------------------------------------------
void sound_free_sounds()
{
	Sound *v0; // ecx@1
	Sound *v1; // esi@3

	v0 = sound_list_free_pool;
	if (sound_list_free_pool)
	{
		do
		{
			if ((int *)v0 == &sound_list_end)
				break;
			v1 = v0->next;
			sound_list_remove(v0);
			v0 = v1;
		} while (v1);
	}
	_47C5C0_can_sound = 0;
	if (faction_slv)
	{
		free(faction_slv);
		faction_slv = 0;
	}
}

//----- (0043A370) --------------------------------------------------------
void _43A370_process_sound()
{
	Sound *v0; // esi@1
	IDirectSoundBuffer *v1; // eax@4
	Sound *v2; // edi@7
	IDirectSoundBuffer *v3; // eax@9
	int *v4; // edi@9
	int v5; // ebx@9
	int v6; // ebp@9
	int *v7; // ecx@9
	int v8; // eax@10
	IDirectSoundBuffer *v9; // ecx@15
	int v10; // eax@15
	IDirectSoundBuffer *v11; // eax@19
	int *v12; // edi@19
	int v13; // ebx@19
	int v14; // ebp@19
	int *v15; // ecx@19
	int v16; // eax@20
	IDirectSoundBuffer *v17; // ecx@25
	int v18; // eax@25
	int i; // [sp+1Ch] [bp-8h]@1
	int v20; // [sp+20h] [bp-4h]@9

	v0 = sound_list_free_pool;
	for (i = 0; (int *)v0 != &sound_list_end; v0 = v0->next)
	{
		if (!v0)
			break;
		if (!(v0->flags & 8))
		{
			v1 = v0->pdsb;
			if (v1)
			{
				v1->GetStatus((LPDWORD)&i);
				if (i & 1 || v0->flags & 4)
				{
					if (v0->field_20)
					{
						v3 = v0->pdsb;
						v4 = &v0->sound_volume_offset;
						--v0->field_20;
						v3->GetVolume((LPLONG)&v0->sound_volume_offset);
						v5 = 100000;
						v6 = 0;
						v20 = 17;
						v7 = sound_volumes;
						while (1)
						{
							v8 = abs(*v7 - *v4);
							if (!v8)
								break;
							if (v5 > v8)
							{
								v20 = v6;
								v5 = v8;
							}
							++v7;
							++v6;
							if ((int)v7 >= (int)&sound_list_head)
							{
								v6 = v20;
								break;
							}
						}
						v9 = v0->pdsb;
						v10 = v0->field_24 + v6;
						*v4 = v10;
						v9->SetVolume(sound_pans[v10]);
						if (!v0->field_20 && v0->task)
							script_trigger_event(0, EVT_MSG_sound_neg4, 0, v0->task);
					}
					if (v0->field_2C)
					{
						v11 = v0->pdsb;
						v12 = &v0->sound_pan_offset;
						--v0->field_2C;
						v11->GetPan((LPLONG)&v0->sound_pan_offset);
						v13 = 100000;
						v14 = 0;
						v20 = 16;
						v15 = sound_pans;
						while (1)
						{
							v16 = abs(*v15 - *v12);
							if (!v16)
								break;
							if (v13 > v16)
							{
								v20 = v14;
								v13 = v16;
							}
							++v15;
							++v14;
							if ((int)v15 >= (int)&sound_list)
							{
								v14 = v20;
								break;
							}
						}
						v17 = v0->pdsb;
						v18 = v0->field_30 + v14;
						*v12 = v18;
						v17->SetPan(sound_pans[v18]);
						if (!v0->field_2C)
						{
							if (v0->task)
								script_trigger_event(0, EVT_MSG_sound_neg5, 0, v0->task);
						}
					}
				}
				else
				{
					v2 = v0->next;
					sound_list_remove(v0);
					v0 = v2;
				}
			}
		}
	}
}

//----- (0043A510) --------------------------------------------------------
void sound_deinit()
{
	Sound *v0; // ecx@1
	Sound *v1; // esi@3

	v0 = sound_list_free_pool;                    // INLINED 43A320
	if (sound_list_free_pool)
	{
		do
		{
			if ((int *)v0 == &sound_list_end)
				break;
			v1 = v0->next;
			sound_list_remove(v0);
			v0 = v1;
		} while (v1);
	}
	_47C5C0_can_sound = 0;
	if (faction_slv)
	{
		free(faction_slv);
		faction_slv = 0;
	}
	if (sound_initialized == 1)
	{
		sound_initialized = 0;
		pds->Release();
		pds = 0;
		free(sound_list);
	}
}

//----- (0043A590) --------------------------------------------------------
bool file_read_wav(File *file, WAVEFORMATEX *out_data, unsigned int *a3)
{
	File *v3; // ebx@1
	unsigned int v4; // ebp@1
	__int16 *v5; // esi@8
	char v7[4]; // [sp+10h] [bp-Ch]@2
	unsigned int v8; // [sp+14h] [bp-8h]@3
	void *out_dataa; // [sp+18h] [bp-4h]@1

	v3 = file;
	v4 = 0;
	out_dataa = out_data;
	if (file)
	{
		file->read(v7, 4);
		if (!memcmp(RIFF, v7, 4u))
		{
			v3->read(&v8, 4);
			v3->read(v7, 4);
			if (!memcmp(WAVE, v7, 4u) && v3->read(v7, 4) == 4)
			{
				while (v4 < 0x20)
				{
					if (!memcmp(fmt, v7, 4u))
					{
						v3->read(&v8, 4);
						if (v8 < 0xE)
							return 0;
						v5 = (__int16 *)out_dataa;
						v3->read(out_dataa, 14);
						if (*v5 == 1)
						v3->read(v5 + 7, 2);
						v4 = 0;
						if (v3->read(v7, 4) == 4)
						{
							while (v4 < 0x20)
							{
								if (!memcmp(aData, v7, 4u))
								{
									v3->read(&v8, 4);
									if (a3)
										*a3 = v8;
									return 1;
								}
								++v4;
								if (v3->read(v7, 4) != 4)
									break;
							}
						}
					}
					++v4;
					if (v3->read(v7, 4) != 4)
						return 0;
				}
			}
		}
	}
	return 0;
}

//----- (0043A710) --------------------------------------------------------
bool sound_stru_2_43A710(sound_stru_2 *a1, WAVEFORMATEX **a2, int *a3, unsigned int *out_buffer_size)
{
	char *v4; // eax@7
	unsigned int v5; // edi@9
	int v6; // ecx@10
	unsigned int v7; // esi@10
	WAVEFORMATEX *v8; // eax@10

	if (a2)
		*a2 = 0;
	if (a3)
		*a3 = 0;
	if (out_buffer_size)
		*out_buffer_size = 0;
	v4 = (char *)&a1->data;
	if (a1->riff_fourcc == 0x46464952 && a1->data_fourcc == 0x45564157)// 'RIFF' 'WAVE'
	{
		v5 = (unsigned int)&v4[a1->riff_chunk_size - 4];
		if ((unsigned int)v4 < v5)
		{
			while (1)
			{
				v6 = *(_DWORD *)v4;
				v7 = *((_DWORD *)v4 + 1);
				v8 = (WAVEFORMATEX *)(v4 + 8);
				if (v6 == 0x20746D66)                 // 'fmt '
				{
					if (a2 && !*a2)
					{
						if (v7 < 0xE)
							return 0;
						*a2 = v8;
						if ((!a3 || *a3) && (!out_buffer_size || *out_buffer_size))
							return 1;
					}
				}
				else if (v6 == 0x61746164 && (a3 && !*a3 || out_buffer_size && !*out_buffer_size))// 'data'
				{
					if (a3)
						*a3 = (int)v8;
					if (out_buffer_size)
						*out_buffer_size = v7;
					if (!a2 || *a2)
						return 1;
				}
				v4 = (char *)v8 + ((v7 + 1) & 0xFFFFFFFE);
				if ((unsigned int)v4 >= v5)
					return 0;
			}
		}
	}
	return 0;
}

//----- (0043A800) --------------------------------------------------------
void sound_list_43A800(int a1)
{
	Sound *v1; // eax@3
	IDirectSoundBuffer *v2; // edx@6

	if (_47C5D4_sound_threaded_snd_id && sound_initialized)
	{
		v1 = sound_list_free_pool;
		if (sound_list_free_pool->id == _47C5D4_sound_threaded_snd_id)
		{
		LABEL_6:
			v2 = v1->pdsb;
			v1->sound_volume_offset = a1;
			if (v2)
				v2->SetVolume(sound_volumes[a1]);
		}
		else
		{
			while ((int *)v1 != &sound_list_end)
			{
				v1 = v1->next;
				if (v1->id == _47C5D4_sound_threaded_snd_id)
					goto LABEL_6;
			}
		}
	}
}
// 47C398: using guessed type int sound_list_end;

//----- (0043A850) --------------------------------------------------------
void sound_list_remove(Sound *a1)
{
	Sound *v1; // esi@1
	int v2; // edx@5
	File *v3; // ecx@7
	IDirectSoundBuffer *v4; // eax@9
	Sound *v5; // eax@13
	Sound *v6; // eax@15

	v1 = a1;
	if (a1)
	{
		if (_47C5D4_sound_threaded_snd_id == a1->id)
			_47C5D4_sound_threaded_snd_id = 0;
		if (a1->field_14 == -3)
		{
			v2 = a1->flags | 0x20;
			a1->flags = v2;
			if (!(v2 & 0x40))
			{
				do
					Sleep(0x14u);
				while (!(v1->flags & 0x40));
			}
			v3 = v1->file;
			if (v3)
			{
				v3->close();
				v1->file = 0;
			}
		}
		v4 = v1->pdsb;
		if (v4)
		{
			v4->Stop();
			v1->pdsb->Release();
			v1->pdsb = 0;
		}
		if (v1->task)
			script_trigger_event(0, EVT_MSG_sound_neg3, 0, v1->task);
		v5 = v1->next;
		v1->task = 0;
		if (v5)
			v5->prev = v1->prev;
		v6 = v1->prev;
		if (v6)
			v6->next = v1->next;
		v1->next = sound_list_head;
		sound_list_head = v1;
	}
}

//----- (0043BA40) --------------------------------------------------------
void script_43BA40(Script *a1, int a2, int(*a3)(void), int a4)
{
	int v4; // esi@1
	Script *v5; // edi@1
	int v6; // eax@2

	v4 = a2;
	v5 = a1;
	do
		v6 = a3();
	while (!script_443780(v5, v4, v6, a4));
}

//----- (0043BA70) --------------------------------------------------------
void script_netz_43BA70(Script *a1)
{
	script_408500_anim(a1);
	script_yield(a1);
}

//----- (0043BA90) --------------------------------------------------------
Script *netz_43BA90_create_script_43BA70()
{
	return script_create_coroutine(SCRIPT_TYPE_INVALID, script_netz_43BA70, 0);
}

//----- (0043BAA0) --------------------------------------------------------
void sub_43BAA0()
{
	dword_47C6C4 = 1;
}
// 47C6C4: using guessed type int dword_47C6C4;

//----- (0043BAB0) --------------------------------------------------------
void _43BAB0_move_cursor(Sprite *a1)
{
	Sprite *v1; // esi@1
	enum SCRIPT_TYPE v2; // eax@1
	int v3; // eax@4
	int v4; // edx@4
	int v5; // eax@8
	int v6; // eax@9
	int v7; // ebx@21
	int v8; // eax@21

	v1 = _47C6E0_task->sprite;
	v2 = a1->script->script_type;
	if (v2 > SCRIPT_TYPE_14)
	{
		if (v2 > SCRIPT_TYPE_19)
		{
			if (v2 == SCRIPT_TYPE_DA000006 || v2 == SCRIPT_TYPE_DA000007)
			{
				v3 = 8704;
				v4 = 4096;
				goto LABEL_21;
			}
			if (v2 == SCRIPT_TYPE_DA000008)
			{
				v3 = 1024;
				v4 = 0;
				goto LABEL_21;
			}
		}
		else
		{
			if (v2 == SCRIPT_TYPE_19)
				goto LABEL_14;
			v5 = v2 - 15;
			if (!v5)
			{
				v3 = 6400;
				v4 = 10240;
				goto LABEL_21;
			}
			v6 = v5 - 1;
			if (!v6)
			{
				v3 = 512;
				v4 = 3072;
				goto LABEL_21;
			}
			if (v6 == 2)
			{
				v3 = 5120;
				v4 = 5120;
				goto LABEL_21;
			}
		}
		v3 = 15360;
		v4 = 10240;
		goto LABEL_21;
	}
	if (v2 == SCRIPT_TYPE_14)
	{
		v3 = 512;
		v4 = 0;
		goto LABEL_21;
	}
	if (v2 == 1)
	{
	LABEL_14:
		v3 = 29696;
		v4 = 6144;
		goto LABEL_21;
	}
	v3 = 15360;
	v4 = 10240;
LABEL_21:
	v1->field_88_unused = 1;
	v7 = v3 + a1->x;
	a1->field_88_unused = 1;
	v1->x = v7;
	v1->field_88_unused = 1;
	v8 = v4 + a1->y;
	v1->field_88_unused = 1;
	v1->y = v8;
	input_4283A0_set_cursor_pos(v7 >> 8, v8 >> 8);
}

//----- (0043C040) --------------------------------------------------------
void script_43C040_cursors_handler(Script *a1)
{
	netz_47C6BC_mapd_idx = 0;
	netz_47C6C0_mapd_idx = 0;
	if (!_47C6E0_task)
	{
        stru29_list_alloc();
		sprite_create_scripted(MOBD_79, 0, (void(*)(Script *))script_mobd79__main_menu_mouse_handler, SCRIPT_COROUTINE, 0);
	}
	sprite_list_remove(a1->sprite);
	script_yield(a1);
}

//----- (0043CD20) --------------------------------------------------------
void script_43CD20_mobd45_begin_surv_campaign(Script *a1)
{
	Sprite *v1; // eax@1
	Sprite *v2; // esi@1
	int v3; // ebx@1
	ScriptEvent *i; // eax@2
	enum SCRIPT_EVENT v5; // edx@3

	v1 = a1->sprite;
	v1->x = 48640;
	v1->y = 43008;
	v2 = a1->sprite;
	v2->parent = 0;
	a1->script_type = SCRIPT_TYPE_15;
	stru29_list_4439F0(v2, 0, 0, 0, 0);
	sprite_load_mobd(v2, 1380);
	v3 = 0;
	do
	{
		script_445370_yield_to_main_thread(a1, 0x40000000, 0);
		for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
		{
			v5 = i->event;
			switch (v5)
			{
			case EVT_MOUSE_HOVER:
                stru29_list_443AE0_find_by_sprite(a1->sprite);
				break;
			case EVT_MSG_1511_sidebar_click_category:
				v3 = 1;
				break;
			case EVT_MSG_1528:
				v3 = 1;
				break;
			}
			script_discard_event(i);
		}
	} while (!v3);
	player_side = SURVIVORS;
	current_level_idx = LEVEL_SURV_01_THE_NEXT_GENERATION;
	script_408500_anim(a1);
	_47C6D8_use__466098_cost_multipliers = 0;
	single_player_game = 1;
	netz_42E7F0();
	stru29_list_remove_all(a1);
	game_state = 1;
	script_deinit(_47C6E0_task);
	_47C6E0_task = 0;
}
// 468B5C: using guessed type int single_player_game;
// 47A2C4: using guessed type int game_state;

//----- (0043CE30) --------------------------------------------------------
void script_43CE30_mobd45_begin_mute_campaign(Script *a1)
{
	Sprite *v1; // eax@1
	Sprite *v2; // esi@1
	int v3; // ebx@1
	ScriptEvent *i; // eax@2
	enum SCRIPT_EVENT v5; // edx@3

	v1 = a1->sprite;
	v1->x = 0x1AC00;
	v1->y = 0xA800;
	v2 = a1->sprite;
	v2->parent = 0;
	a1->script_type = SCRIPT_TYPE_15;
	stru29_list_4439F0(v2, 0, 0, 0, 0);
	sprite_load_mobd(v2, 1380);
	v3 = 0;
	do
	{
		script_445370_yield_to_main_thread(a1, 0x40000000, 0);
		for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
		{
			v5 = i->event;
			switch (v5)
			{
			case EVT_MOUSE_HOVER:
                stru29_list_443AE0_find_by_sprite(a1->sprite);
			case EVT_MSG_1511_sidebar_click_category:
				v3 = 1;
				break;
			case EVT_MSG_1528:
				v3 = 1;
				break;
			}
			script_discard_event(i);
		}
	} while (!v3);
	player_side = EVOLVED;
	current_level_idx = LEVEL_MUTE_01;
	script_408500_anim(a1);
	_47C6D8_use__466098_cost_multipliers = 0;
	single_player_game = 1;
	netz_42E7F0();
	stru29_list_remove_all(a1);
	game_state = 1;
	script_deinit(_47C6E0_task);
	_47C6E0_task = 0;
}

//----- (0043CF50) --------------------------------------------------------
void script_43CF50_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 0;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5->items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, -10);
	cplc_select(0);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043D090) --------------------------------------------------------
void script_43D090_mobd45_directx_ipx(Script *a1)
{
	Sprite *v1; // edi@3
	Sprite *v2; // eax@3
	int v3; // eax@3
	int v4; // edi@3
	DataMapd *v7; // eax@11
	DWORD pcbBuffer; // [sp+Ch] [bp-4h]@2

	if (dword_46E404)
	{
		pcbBuffer = 12;
		GetUserNameA(netz_default_player_name, &pcbBuffer);
	}
	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_2;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	v3 = netz_42FAC0(aDirectxIpx);
	v4 = v3;
	if (v3 != -1)
	{
		if (netz_468B6C_providers[v3].is_directplay_initialized)
		{
			while (!script_443780(a1, 1792, 1, 0))
				;
			_46E420_starting_cash_idx = 1280;
			if (netz_42E170(v4, netz_default_player_name))
			{
				netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
				netz_47C6C0_mapd_idx = 4;
				script_408500_anim(a1);
                stru29_list_realloc(a1);
				bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
				script_445370_yield_to_main_thread(a1, 0x80000000, 3);
				v7 = LVL_FindMapd();
				_40E400_set_palette(&v7[4].items->palette);
				_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)4, 0, -10);
				cplc_select(4);
				cplc_406320();
				script_445370_yield_to_main_thread(a1, 0x80000000, 1);
				script_4084A0_animation(a1);
				script_yield(a1);
			}
		}
		else
		{
			while (!script_443780(a1, 1792, 0, 0))
				;
		}
	}
}

//----- (0043D270) --------------------------------------------------------
void script_43D270_mobd45_directx_serial(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	int v3; // edi@1
	DataMapd *v6; // eax@9

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_2;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	v3 = netz_42FAC0(aDirectxSerial);
	if (v3 != -1)
	{
		if (netz_468B6C_providers[v3].is_directplay_initialized)
		{
			while (!script_443780(a1, 1904, 1, 0))
				;
			_46E420_starting_cash_idx = 1280;
			if (netz_42E170(v3, netz_default_player_name))
			{
				netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
				netz_47C6C0_mapd_idx = 5;
				script_408500_anim(a1);
                stru29_list_realloc(a1);
				bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
				script_445370_yield_to_main_thread(a1, 0x80000000, 3);
				v6 = LVL_FindMapd();
				_40E400_set_palette(&v6[5].items->palette);
				_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)5, 0, -10);
				cplc_select(5);
				cplc_406320();
				script_445370_yield_to_main_thread(a1, 0x80000000, 1);
				script_4084A0_animation(a1);
				script_yield(a1);
			}
		}
		else
		{
			while (!script_443780(a1, 1904, 0, 0))
				;
		}
	}
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043D430) --------------------------------------------------------
void script_43D430_mobd45_directx_modem(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	int v3; // edi@1
	DataMapd *v6; // eax@9

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_2;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	v3 = netz_42FAC0(aDirectxModem);
	if (v3 != -1)
	{
		if (netz_468B6C_providers[v3].is_directplay_initialized)
		{
			while (!script_443780(a1, 1888, 1, 0))
				;
			_46E420_starting_cash_idx = 1280;
			if (netz_42E170(v3, netz_default_player_name))
			{
				netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
				netz_47C6C0_mapd_idx = 6;
				script_408500_anim(a1);
                stru29_list_realloc(a1);
				bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
				script_445370_yield_to_main_thread(a1, 0x80000000, 3);
				v6 = LVL_FindMapd();
				_40E400_set_palette(&v6[6].items->palette);
				_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)6, 0, -10);
				cplc_select(6);
				cplc_406320();
				script_445370_yield_to_main_thread(a1, 0x80000000, 1);
				script_4084A0_animation(a1);
				script_yield(a1);
			}
		}
		else
		{
			while (!script_443780(a1, 1888, 0, 0))
				;
		}
	}
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043D5F0) --------------------------------------------------------
void script_43D5F0_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	netz_free_provider_async();
	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 0;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5->items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, -10);
	cplc_select(0);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043D740) --------------------------------------------------------
void script_43D740_mobd45_evt17(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 6;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5[6].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)6, 0, -10);
	cplc_select(6);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043D890) --------------------------------------------------------
void script_43D890_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 6;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5[6].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)6, 0, -10);
	cplc_select(6);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043D9E0) --------------------------------------------------------
void input_get_string_43D9E0_handler(const char *a1, int a2)
{
	const char *v2; // esi@1
	unsigned __int16 v3; // ST08_2@1
	stru8 *v4; // eax@1
	int v5; // ecx@1

	v2 = a1;
	v3 = a2;
	render_string_445AE0(_47C65C_render_string);
	_47C65C_render_string->field_18 = 0;
	_47C65C_render_string->num_lines = 0;
	render_string_443D80(_47C65C_render_string, v2, 0);
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	v4 = _47C65C_render_string->pstru8;
	v5 = _47C65C_render_string->field_C + v3 + 1;
	if (_47C65C_render_string->field_C + v3 != -1)
	{
		do
		{
			v4 = v4->next;
			--v5;
		} while (v5);
	}
	_47C664_ingame_menu_sprite->x = v4->drawjob->job_details.x << 8;
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	_47C664_ingame_menu_sprite->y = 46080;
}

//----- (0043DA80) --------------------------------------------------------
void script_43DA80_mobd45_modem(Script *a1)
{
	Sprite *v1; // esi@1
	netz_modem *v2; // ebx@1
	Sprite *v3; // edi@3
	RenderString *v4; // edx@3
	char *v5; // ebx@3
	int v6; // edi@4
	ScriptEvent *i; // eax@5
	enum SCRIPT_EVENT v8; // edx@6
	Sprite *v10; // eax@18
	int v11; // edx@18
	int v12; // ecx@18
	int v13; // esi@18
	char v14; // al@19

	v1 = a1->sprite;
	v2 = (netz_modem *)a1->param;
	_47C664_ingame_menu_sprite = sprite_create(MOBD_FONT_ITALIC, 0, a1->sprite);
	_47C65C_render_string = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
		346,
		164,
		22,
		3,
		90,
		14,
		16);
	if (!_47C65C_render_string)
	{
		sprite_list_remove(v1);
		script_yield(a1);
	}
	v1->x = 0x16800;
	v1->y = 0xB000;
	v1->z_index = 90;
	v3 = a1->sprite;
	v4 = _47C65C_render_string;
	v3->parent = 0;
	a1->script_type = SCRIPT_TYPE_18;
	stru29_list_4439F0(v3, v4, 0, 0, 0);
	sprite_load_mobd(v3, 1356);
	v5 = v2->name;
	v1->parent = _47C664_ingame_menu_sprite;
	while (1)
	{
		render_string_445AE0(_47C65C_render_string);
		_47C65C_render_string->field_18 = 0;
		_47C65C_render_string->num_lines = 0;
		render_string_443D80(_47C65C_render_string, v5, 0);
		v6 = 0;
		do
		{
			script_445370_yield_to_main_thread(a1, 0x40000000, 0);
			for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
			{
				v8 = i->event;
				switch (v8)
				{
				case EVT_MOUSE_HOVER:
                    stru29_list_443AE0_find_by_sprite(a1->sprite);
					break;
				case EVT_MSG_1511_sidebar_click_category:
					v6 = 1;
					break;
				case EVT_MSG_1528:
					v6 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v6);
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->x = 92672;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 46080;
		_47C664_ingame_menu_sprite->z_index = 10;
		sprite_load_mobd(_47C664_ingame_menu_sprite, 1096);
		dword_47C6C4 = 1;
		input_get_string(v5, 0xBu, input_get_string_43D9E0_handler, 1, a1);
		v10 = _47C6E0_task->sprite;
		v11 = v10->y >> 8;
		v12 = v10->x >> 8;
		v10->field_88_unused = 1;
		input_4283A0_set_cursor_pos(v12, v11);
		dword_47C6C4 = 0;
		v13 = 0;
		do
		{
			v14 = v5[v13];
			if (!v14)
				break;
			if (!isalpha(v14) && !isdigit(v5[v13]))
				v5[v13] = 95;
			++v13;
		} while (v13 < 10);
		v5[11] = 0;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->x = 92672;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 46080;
		sprite_release_mobd_item(_47C664_ingame_menu_sprite);
	}
}
// 47C6C4: using guessed type int dword_47C6C4;

//----- (0043DCF0) --------------------------------------------------------
void input_get_string_43DCF0_handler(const char *a1, int a2)
{
	const char *v2; // esi@1
	unsigned __int16 v3; // ST08_2@1
	stru8 *v4; // eax@1
	int v5; // ecx@1

	v2 = a1;
	v3 = a2;
	render_string_445AE0(_47C604_mission_briefing);
	_47C604_mission_briefing->field_18 = 0;
	_47C604_mission_briefing->num_lines = 0;
	render_string_443D80(_47C604_mission_briefing, v2, 0);
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	v4 = _47C604_mission_briefing->pstru8;
	v5 = _47C604_mission_briefing->field_C + v3 + 1;
	if (_47C604_mission_briefing->field_C + v3 != -1)
	{
		do
		{
			v4 = v4->next;
			--v5;
		} while (v5);
	}
	_47C664_ingame_menu_sprite->x = v4->drawjob->job_details.x << 8;
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	_47C664_ingame_menu_sprite->y = 60416;
}

//----- (0043DD90) --------------------------------------------------------
void script_43DD90_mobd45_modem(Script *a1)
{
	Script *v1; // ebx@1
	netz_modem *v2; // edi@1
	Sprite *v3; // esi@1
	int v4; // ebp@1
	Sprite *v5; // esi@3
	RenderString *v6; // edx@3
	const char *v7; // edi@3
	ScriptEvent *i; // eax@5
	enum SCRIPT_EVENT v9; // edx@6
	const char *v11; // esi@18
	int v12; // ebp@18
	int v13; // edx@22
	int v14; // ecx@22
	Sprite *v15; // eax@22
	int v16; // edx@22
	int v17; // ecx@22
	netz_modem *v18; // [sp+10h] [bp-10h]@1
	Script *v19; // [sp+14h] [bp-Ch]@18
	int v20; // [sp+18h] [bp-8h]@18
	int v21; // [sp+1Ch] [bp-4h]@18
	Script *a1a; // [sp+24h] [bp+4h]@3

	v1 = a1;
	v2 = (netz_modem *)a1->param;
	v3 = a1->sprite;
	v18 = (netz_modem *)a1->param;
	v4 = 0;
	_47C604_mission_briefing = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
		320,
		220,
		22,
		3,
		90,
		14,
		16);
	if (!_47C604_mission_briefing)
	{
		sprite_list_remove(v3);
		script_yield(a1);
	}
	v3->x = 85504;
	v3->y = 59392;
	v3->z_index = 90;
	v5 = a1->sprite;
	v6 = _47C604_mission_briefing;
	v5->parent = 0;
	a1->script_type = SCRIPT_TYPE_18;
	stru29_list_4439F0(v5, v6, 0, 0, 0);
	sprite_load_mobd(v5, 1356);
	v7 = v2->phone;
	a1a = (Script *)v7;
	while (1)
	{
		render_string_445AE0(_47C604_mission_briefing);
		_47C604_mission_briefing->field_18 = 0;
		_47C604_mission_briefing->num_lines = 0;
		render_string_443D80(_47C604_mission_briefing, v7, 0);
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v9 = i->event;
				switch (v9)
				{
				case EVT_MOUSE_HOVER:
                    stru29_list_443AE0_find_by_sprite(v1->sprite);
					break;
				case EVT_MSG_1511_sidebar_click_category:
					v4 = 1;
					break;
				case EVT_MSG_1528:
					v4 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v4);
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->x = 86016;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 60416;
		_47C664_ingame_menu_sprite->z_index = 10;
		sprite_load_mobd(_47C664_ingame_menu_sprite, 1096);
		dword_47C6C4 = 1;
		input_get_string(v7, 0xBu, input_get_string_43DCF0_handler, 1, v1);
		v19 = 0;
		v11 = v7;
		v20 = 0;
		v12 = 0;
		v21 = 0;
		do
		{
			if (isdigit(*v11))
				*((_BYTE *)&v19 + v12++) = *v11;
			++v11;
		} while ((int)&v11[-20 - (_DWORD)v18] < 12);
		*((_BYTE *)&v19 + v12) = 0;
		v13 = v20;
		a1a->next = v19;
		v14 = v21;
		a1a->prev = (Script *)v13;
		a1a->locals_list = (ScriptLocalObject *)v14;
		v15 = _47C6E0_task->sprite;
		v16 = v15->y >> 8;
		v17 = v15->x >> 8;
		v15->field_88_unused = 1;
		input_4283A0_set_cursor_pos(v17, v16);
		dword_47C6C4 = 0;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->x = 86016;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 60416;
		sprite_release_mobd_item(_47C664_ingame_menu_sprite);
		v7 = (const char *)a1a;
		v4 = 0;
	}
}
// 47C6C4: using guessed type int dword_47C6C4;

//----- (0043E010) --------------------------------------------------------
void script_43E010_mobd45_modem(Script *a1)
{
	netz_modem *v1; // ebp@1
	Sprite *v2; // esi@1
	RenderString *v3; // ebx@1
	Sprite *v4; // esi@3
	Sprite *v5; // eax@3
	int v6; // eax@6
	char a2[12]; // [sp+10h] [bp-Ch]@4

	v1 = (netz_modem *)a1->param;
	v2 = a1->sprite;
	v3 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 296, 274, 12, 3, 90, 14, 16);
	if (!v3)
	{
		sprite_list_remove(v2);
		script_yield(a1);
	}
	v2->x = 32512;
	v2->y = 67584;
	v2->z_index = 90;
	v4 = a1->sprite;
	v5 = sprite_create(MOBD_45, 0, a1->sprite);
	v4->mobd_id = MOBD_45;
	v4->parent = v5;
	v5->parent = 0;
	v5->z_index = 0;
	v4->z_index = 1;
	a1->script_type = SCRIPT_TYPE_10;
	stru29_list_4439F0(v4, v3, 0, 1, 0);
	while (1)
	{
		render_string_445AE0(v3);
		v3->field_18 = 0;
		v3->num_lines = 0;
		_itoa(dword_46E408[v1->baud], a2, 10);
		render_string_443D80(v3, a2, 0);
		while (!script_443780(a1, 2008, 1, 0))
			;
		v6 = v1->baud + 1;
		v1->baud = v6;
		if (v6 >= 5)
			v1->baud = 0;
	}
}

//----- (0043E110) --------------------------------------------------------
int script_43E110_modem(Script *a1, netz_modem *param, int a3)
{
	netz_modem *v3; // ebx@1
	Script *v4; // ebp@1
	Sprite *v5; // eax@1
	Script *v6; // eax@2
	Sprite *v7; // eax@4
	Script *v8; // eax@5
	Sprite *v9; // eax@7
	Script *v10; // eax@8
	Sprite *v11; // esi@10
	Sprite *v12; // eax@10
	int v13; // edi@11
	int v14; // esi@11
	int v15; // esi@17
	int result; // eax@22

	v3 = param;
	v4 = a1;
	v5 = sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43E010_mobd45_modem, SCRIPT_COROUTINE, 0);
	if (v5)
	{
		v6 = v5->script;
		if (v6)
			v6->param = v3;
	}
	v7 = sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43DA80_mobd45_modem, SCRIPT_COROUTINE, 0);
	if (v7)
	{
		v8 = v7->script;
		if (v8)
			v8->param = v3;
	}
	v9 = sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43DD90_mobd45_modem, SCRIPT_COROUTINE, 0);
	if (v9)
	{
		v10 = v9->script;
		if (v10)
			v10->param = v3;
	}
	v11 = v4->sprite;
	v12 = sprite_create(MOBD_45, 0, v4->sprite);
	v11->mobd_id = MOBD_45;
	v11->parent = v12;
	v12->parent = 0;
	v12->z_index = 0;
	v11->z_index = 1;
	v4->script_type = SCRIPT_TYPE_10;
	stru29_list_4439F0(v11, 0, 1, 1, 0);
	do
	{
		v13 = 0;
		v14 = 0;
		while (!isalpha(v3->name[v14]))
		{
			if (++v14 >= 12)
				goto LABEL_16;
		}
		v13 = 1;
	LABEL_16:
		if (v13)
		{
			v13 = 0;
			v15 = 0;
			while (!isdigit(v3->phone[v15]))
			{
				if (++v15 >= 12)
					goto LABEL_22;
			}
			v13 = 1;
		}
	LABEL_22:
		result = script_443780(v4, a3, v13 != 0, 0);
	} while (!result);
	return result;
}

//----- (0043E230) --------------------------------------------------------
void script_43E230_mobd45_modems(Script *a1)
{
	Script *v1; // ebx@1
	netz_modem *v2; // edx@1
	int v3; // ebp@1
	int v4; // eax@5
	FILE *v5; // edi@6
	netz_modem *i; // esi@7
	int v7; // ecx@10
	DataMapd *v10; // eax@14
	netz_modem v11; // [sp+10h] [bp-24h]@1

	*(_DWORD *)&v11.phone[0] = 0;                 // INLINED memset`s
	v1 = a1;
	*(_DWORD *)&v11.name[0] = 0;
	*(_DWORD *)&v11.phone[4] = 0;
	*(_DWORD *)&v11.name[4] = 0;
	*(_DWORD *)&v11.phone[8] = 0;
	v11.baud = 0;
	*(_DWORD *)&v11.name[8] = 0;
	script_43E110_modem(a1, &v11, 1776);
	v2 = netz_modem_list_free_pool;
	v3 = v11.baud;
	if (netz_modem_list_free_pool)
		netz_modem_list_free_pool = netz_modem_list_free_pool->next;
	else
		v2 = 0;
	if (v2)
	{
		v4 = (int)v2->name;
		++netz_modem_list_used;
		*(_DWORD *)v4 = 0;
		*(_DWORD *)(v4 + 4) = 0;
		*(_DWORD *)(v4 + 8) = 0;
		strcpy(v2->name, v11.name);
		*(_DWORD *)&v2->phone[0] = 0;
		*(_DWORD *)&v2->phone[4] = 0;
		*(_DWORD *)&v2->phone[8] = 0;
		v1 = a1;
		strcpy(v2->phone, v11.phone);
		v2->baud = v3;
		v2->next = netz_modem_list;
		v2->prev = (netz_modem *)&netz_modem_list;
		netz_modem_list->prev = v2;
		netz_modem_list = v2;
	}
	v5 = fopen(aModem_lst, (const char *)aW);
	if (v5)
	{
		for (i = netz_modem_list; (netz_modem **)i != &netz_modem_list; i = i->next)
			fprintf(v5, format, i->name, i->phone, i->baud);
		fclose(v5);
	}
	v7 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 6;
	netz_47C6BC_mapd_idx = v7;
	script_408500_anim(v1);
    stru29_list_realloc(v1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(v1, 0x80000000, 3);
	v10 = LVL_FindMapd();
	_40E400_set_palette(&v10[6].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)6, 0, -10);
	cplc_select(6);
	cplc_406320();
	script_445370_yield_to_main_thread(v1, 0x80000000, 1);
	script_4084A0_animation(v1);
	script_yield(v1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043E470) --------------------------------------------------------
void script_43E470_mobd45_modems(Script *a1)
{
	netz_modem *v1; // eax@1
	int v2; // ecx@1
	netz_modem *v3; // ebx@4
	FILE *v4; // edi@5
	netz_modem *i; // esi@6
	int v6; // ecx@9
	DataMapd *v9; // eax@13
	netz_modem a2; // [sp+10h] [bp-24h]@5

	v1 = netz_modem_list;
	v2 = 0;
	if ((netz_modem **)netz_modem_list == &netz_modem_list)
	{
	LABEL_4:
		v3 = 0;
	}
	else
	{
		while (v2 != netz_modem_47C6CC_idx)
		{
			v1 = v1->next;
			++v2;
			if ((netz_modem **)v1 == &netz_modem_list)
				goto LABEL_4;
		}
		v3 = v1;
	}
	*(_DWORD *)&a2.name[0] = *(_DWORD *)&v3->name[0];
	*(_DWORD *)&a2.name[4] = *(_DWORD *)&v3->name[4];
	*(_DWORD *)&a2.name[8] = *(_DWORD *)&v3->name[8];
	*(_DWORD *)&a2.phone[0] = *(_DWORD *)&v3->phone[0];
	*(_DWORD *)&a2.phone[4] = *(_DWORD *)&v3->phone[4];
	*(_DWORD *)&a2.phone[8] = *(_DWORD *)&v3->phone[8];
	a2.baud = v3->baud;
	script_43E110_modem(a1, &a2, 1808);
	*(_DWORD *)&v3->name[0] = *(_DWORD *)&a2.name[0];
	*(_DWORD *)&v3->name[4] = *(_DWORD *)&a2.name[4];
	*(_DWORD *)&v3->name[8] = *(_DWORD *)&a2.name[8];
	*(_DWORD *)&v3->phone[0] = *(_DWORD *)&a2.phone[0];
	*(_DWORD *)&v3->phone[4] = *(_DWORD *)&a2.phone[4];
	*(_DWORD *)&v3->phone[8] = *(_DWORD *)&a2.phone[8];
	v3->baud = a2.baud;
	v4 = fopen(aModem_lst, (const char *)aW);
	if (v4)
	{
		for (i = netz_modem_list; (netz_modem **)i != &netz_modem_list; i = i->next)
			fprintf(v4, format, i->name, i->phone, i->baud);
		fclose(v4);
	}
	v6 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 6;
	netz_47C6BC_mapd_idx = v6;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v9 = LVL_FindMapd();
	_40E400_set_palette(&v9[6].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)6, 0, -10);
	cplc_select(6);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (0043E670) --------------------------------------------------------
void script_43E670_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 0;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5->items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, -10);
	cplc_select(0);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043E7B0) --------------------------------------------------------
void script_43E7B0_mobd45(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_4;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (!script_443780(a1, 2068, 1, 0))
		;
}

//----- (0043E820) --------------------------------------------------------
void script_43E820_mobd45(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_4;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (!script_443780(a1, 1996, 1, 0))
		;
}

//----- (0043E890) --------------------------------------------------------
void script_43E890_mobd45_modems(Script *a1)
{
	int v1; // ebx@1
	int v2; // esi@1
	int v3; // ebp@1
	int v4; // eax@2
	netz_modem *i; // esi@2
	Sprite **v6; // edi@6
	Sprite **v8; // ecx@15
	Sprite *v9; // edx@16
	ScriptEvent *j; // eax@22
	int v12; // [sp+10h] [bp-54h]@1
	char v13[80]; // [sp+14h] [bp-50h]@12

	v1 = 0;
	v2 = 0;
	v12 = 0;
	v3 = 0;
	netz_modem_47C6CC_idx = 0;
	sprite_load_mobd(_47C664_ingame_menu_sprite, 1080);
	while (1)
	{
		_47C664_ingame_menu_sprite->x = 43008;
		v4 = 0;
		_47C664_ingame_menu_sprite->y = (v2 << 12) + 30720;
		_47C664_ingame_menu_sprite->z_index = 10;
		for (i = netz_modem_list; v4 < v3; ++v4)
		{
			if ((netz_modem **)i == &netz_modem_list)
				break;
			i = i->next;
		}
		render_string_445AE0(_47C65C_render_string);
		_47C65C_render_string->field_18 = 0;
		_47C65C_render_string->num_lines = 0;
		if ((netz_modem **)i != &netz_modem_list)
		{
			v6 = _47C668_ingame_menu_sprites;
			do
			{
                stru29_list_clear_bit_by_sprite(*v6, 1);

				sprintf(v13, aSS_2, i->name, i->phone);
				render_string_443D80(_47C65C_render_string, v13, 0);
				render_string_443D80(_47C65C_render_string, asc_464C88, 0);
				i = i->next;
				++v6;
				++v1;
			} while ((int)v6 < (int)&unk_47C690 && (netz_modem **)i != &netz_modem_list);
		}
		if (v1 < 10)
		{
			v8 = &_47C668_ingame_menu_sprites[v1];
			do
			{
				v9 = *v8;
				++v8;
                stru29_list_set_bit_by_sprite(v9, 1);
				;
			} while ((int)v8 < (int)&unk_47C690);
		}
		v1 = 0;
		script_445370_yield_to_main_thread(a1, 0x40000000, 0);
		for (j = script_get_next_event(a1); j; j = script_get_next_event(a1))
		{
			switch (j->event)
			{
			case EVT_MSG_SHOW_UNIT_HINT:
				if (v3 > 0)
					--v3;
				break;
			case EVT_SHOW_UI_CONTROL:
				if (v3 < netz_modem_list_used - 10)
					++v3;
				break;
			case EVT_MSG_1511_sidebar_click_category:
				if (*(_DWORD *)j->param < netz_modem_list_used)
					v12 = *(_DWORD *)j->param;
				break;
			case EVT_MSG_1513:
				if (v12 > 0)
					--v12;
				if (v3 >= netz_modem_list_used - 10)
				{
					v3 = netz_modem_list_used - 11;
					if (netz_modem_list_used - 11 < 0)
						v3 = 0;
				}
				break;
			default:
				break;
			}
			script_discard_event(j);
		}
		v2 = v12;
		netz_modem_47C6CC_idx = v3 + v12;
	}
}
// 47C6CC: using guessed type int netz_modem_47C6CC_idx;

//----- (0043EA90) --------------------------------------------------------
void script_43EA90_mobd45(Script *a1)
{
	Sprite *v1; // eax@1
	Sprite *v2; // esi@1
	int v3; // ebx@2
	ScriptEvent *i; // eax@3
	enum SCRIPT_EVENT v5; // edx@4

	v1 = a1->sprite;
	v1->x = 17408;
	v1->y = 43008;
	v2 = a1->sprite;
	v2->parent = 0;
	a1->script_type = SCRIPT_TYPE_15;
	stru29_list_4439F0(v2, 0, 0, 0, 0);
	sprite_load_mobd(v2, 1308);
	while (1)
	{
		v3 = 0;
		do
		{
			script_445370_yield_to_main_thread(a1, 0x40000000, 0);
			for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
			{
				v5 = i->event;
				switch (v5)
				{
				case EVT_MOUSE_HOVER:
                    stru29_list_443AE0_find_by_sprite(a1->sprite);
					break;
				case EVT_MSG_1511_sidebar_click_category:
					v3 = 1;
					break;
				case EVT_MSG_1528:
					v3 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v3);
		script_trigger_event(0, EVT_MSG_SHOW_UNIT_HINT, 0, _47C664_ingame_menu_sprite->script);
	}
}

//----- (0043EB80) --------------------------------------------------------
void script_43EB80_mobd45(Script *a1)
{
	Sprite *v1; // eax@1
	Sprite *v2; // esi@1
	int v3; // ebx@2
	ScriptEvent *i; // eax@3
	enum SCRIPT_EVENT v5; // edx@4

	v1 = a1->sprite;
	v1->x = 131584;
	v1->y = 40960;
	v2 = a1->sprite;
	v2->parent = 0;
	a1->script_type = SCRIPT_TYPE_15;
	stru29_list_4439F0(v2, 0, 0, 0, 0);
	sprite_load_mobd(v2, 1320);
	while (1)
	{
		v3 = 0;
		do
		{
			script_445370_yield_to_main_thread(a1, 0x40000000, 0);
			for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
			{
				v5 = i->event;
				switch (v5)
				{
				case EVT_MOUSE_HOVER:
                    stru29_list_443AE0_find_by_sprite(a1->sprite);
					break;
				case EVT_MSG_1511_sidebar_click_category:
					v3 = 1;
					break;
				case EVT_MSG_1528:
					v3 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v3);
		script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47C664_ingame_menu_sprite->script);
	}
}

//----- (0043EC70) --------------------------------------------------------
void script_43EC70_mobd45(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // ecx@1
	Sprite *v3; // esi@1
	int v4; // ebx@2
	ScriptEvent *i; // eax@3
	enum SCRIPT_EVENT v6; // edx@4

	v1 = a1;
	v2 = a1->sprite;
	a1 = (Script *)a1->param;
	_47C668_ingame_menu_sprites[(int)a1] = v2;
	v3 = v1->sprite;
	v3->parent = 0;
	v1->script_type = SCRIPT_TYPE_16;
	stru29_list_4439F0(v3, 0, 0, 0, 0);
	sprite_load_mobd(v3, 1332);
	while (1)
	{
		v4 = 0;
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v6 = i->event;
				switch (v6)
				{
				case EVT_MOUSE_HOVER:
                    stru29_list_443AE0_find_by_sprite(v1->sprite);
					break;
				case EVT_MSG_1511_sidebar_click_category:
					v4 = 1;
					break;
				case EVT_MSG_1528:
					v4 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v4);
		script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, &a1, _47C664_ingame_menu_sprite->script);
	}
}

//----- (0043ED60) --------------------------------------------------------
void script_43ED60_mobd45_modems(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	netz_modem *v3; // eax@3
	int v4; // ecx@3
	FILE *v5; // edi@8
	netz_modem *i; // esi@9

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_7;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (1)
	{
		while (!script_443780(a1, 1952, netz_modem_list_used, 0))
			;
		v3 = netz_modem_list;
		v4 = 0;
		if ((netz_modem **)netz_modem_list != &netz_modem_list)
		{
			while (v4 != netz_modem_47C6CC_idx)
			{
				v3 = v3->next;
				++v4;
				if ((netz_modem **)v3 == &netz_modem_list)
					goto LABEL_8;
			}
			v3->next->prev = v3->prev;
			v3->prev->next = v3->next;
			v3->next = netz_modem_list_free_pool;
			netz_modem_list_free_pool = v3;
		}
	LABEL_8:
		--netz_modem_list_used;
		v5 = fopen(aModem_lst, (const char *)aW);
		if (v5)
		{
			for (i = netz_modem_list; (netz_modem **)i != &netz_modem_list; i = i->next)
				fprintf(v5, format, i->name, i->phone, i->baud);
			fclose(v5);
		}
		script_trigger_event(0, EVT_MSG_1513, 0, _47C664_ingame_menu_sprite->script);
	}
}
// 47C6CC: using guessed type int netz_modem_47C6CC_idx;

//----- (0043EE90) --------------------------------------------------------
void script_43EE90_mobd45(Script *a1)
{
	Script *v1; // edi@1
	void *v2; // ebx@1
	int v3; // esi@1
	Sprite *v4; // eax@2
	RenderString *v5; // eax@5
	Sprite *v6; // esi@7
	RenderString *v7; // ebx@7
	Sprite *v8; // eax@7
	int v9; // ecx@9
	DataMapd *v12; // eax@13
	Sprite *v13; // [sp+14h] [bp+4h]@1

	v1 = a1;
	v13 = a1->sprite;
	sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43EA90_mobd45, SCRIPT_COROUTINE, 0);
	sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43EB80_mobd45, SCRIPT_COROUTINE, 0);
	_47C664_ingame_menu_sprite = sprite_create_scripted(MOBD_FONT_ITALIC, 0, script_43E890_mobd45_modems, SCRIPT_COROUTINE, 0);
	v2 = 0;
	v3 = 30720;
	do
	{
		v4 = sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43EC70_mobd45, SCRIPT_COROUTINE, 0);
		if (v4)
		{
			v4->script->param = v2;
			v4->x = 43008;
			v4->y = v3;
			v4->z_index = 5;
		}
		v3 += 4096;
		v2 = (char *)v2 + 1;
	} while (v3 < 71680);
	v5 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 160, 104, 42, 12, 90, 14, 16);
	_47C65C_render_string = v5;
	if (!v5)
	{
		sprite_list_remove(v13);
		script_yield(v1);
		v5 = _47C65C_render_string;
	}
	v6 = v1->sprite;
	v7 = v5;
	v8 = sprite_create(MOBD_45, 0, v1->sprite);
	v6->mobd_id = MOBD_45;
	v6->parent = v8;
	v8->parent = 0;
	v8->z_index = 0;
	v6->z_index = 1;
	v1->script_type = SCRIPT_TYPE_7;
	stru29_list_4439F0(v6, v7, 0, 1, 0);
	v13->parent->parent = _47C664_ingame_menu_sprite;
	while (!script_443780(v1, 1920, netz_modem_list_used < 20, 0))
		;
	v9 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 9;
	netz_47C6BC_mapd_idx = v9;
	script_408500_anim(v1);
    stru29_list_realloc(v1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(v1, 0x80000000, 3);
	v12 = LVL_FindMapd();
	_40E400_set_palette(&v12[9].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)9, 0, -10);
	cplc_select(9);
	cplc_406320();
	script_445370_yield_to_main_thread(v1, 0x80000000, 1);
	script_4084A0_animation(v1);
	script_yield(v1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043F0E0) --------------------------------------------------------
void script_43F0E0_mobd45_modems(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	netz_modem *v3; // eax@3
	int i; // ecx@3
	int v5; // eax@8
	void *v6; // esi@9
	int v7; // eax@13
	int v8; // ecx@17
	DataMapd *v11; // eax@21
	int v12; // [sp+0h] [bp-Ch]@8

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_7;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	do
	{
		while (!script_443780(a1, 1856, netz_modem_list_used, 0))
			;
		v3 = netz_modem_list;
		for (i = 0; (netz_modem **)v3 != &netz_modem_list; ++i)
		{
			if (i == netz_modem_47C6CC_idx)
				break;
			v3 = v3->next;
		}

		v6 = (void *)netz_42F8E0(0);

		ShowCursor(1);
		netz_42F9C0(0, 0);
		ShowCursor(0);
	} while (v6);
	v8 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 8;
	netz_47C6BC_mapd_idx = v8;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v11 = LVL_FindMapd();
	_40E400_set_palette(&v11[8].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)8, 0, -10);
	cplc_select(8);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (0043F330) --------------------------------------------------------
void script_43F330_mobd45(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	netz_modem *v3; // eax@3
	int i; // ecx@3
	int v5; // eax@8
	int v6; // esi@9
	int v7; // ecx@12
	DataMapd *v10; // eax@16
	int v11; // [sp+0h] [bp-Ch]@8

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_7;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	do
	{
		while (!script_443780(a1, 1840, netz_modem_list_used, 0))
			;
		v3 = netz_modem_list;
		for (i = 0; (netz_modem **)v3 != &netz_modem_list; ++i)
		{
			if (i == netz_modem_47C6CC_idx)
				break;
			v3 = v3->next;
		}

		ShowCursor(1);
		v6 = netz_42F8E0(1);
		ShowCursor(0);
	} while (v6);
	v7 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 7;
	netz_47C6BC_mapd_idx = v7;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v10 = LVL_FindMapd();
	_40E400_set_palette(&v10[7].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)7, 0, -10);
	cplc_select(7);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (0043F520) --------------------------------------------------------
void script_43F520_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	int v3; // ecx@3
	DataMapd *v6; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_7;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (!script_443780(a1, 1936, netz_modem_list_used, 0))
		;
	v3 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 10;
	netz_47C6BC_mapd_idx = v3;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v6 = LVL_FindMapd();
	_40E400_set_palette(&v6[10].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)10, 0, -10);
	cplc_select(10);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (0043F670) --------------------------------------------------------
void script_43F670_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_free_provider_async();
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 1;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5[1].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_FOG_OF_WAR, 0, -10);
	cplc_select(1);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043F7C0) --------------------------------------------------------
void script_43F7C0(Script *a1)
{
	Script *v1; // ebx@1
	Sprite *v2; // esi@1
	RenderString *v3; // edi@3
	stru29 *v4; // eax@5
	bool v5; // zf@5
	bool v6; // sf@5
	int v7; // eax@9
	int v8; // ebx@13
	char *v9; // esi@13
	const char *v10; // edx@16
	ScriptEvent *i; // eax@24
	int v12; // [sp+0h] [bp-14h]@9
	int v13; // [sp+Ch] [bp-8h]@7
	int v14; // [sp+10h] [bp-4h]@1

	v1 = a1;
	v14 = 1;
	v2 = sprite_create(MOBD_FONT_ITALIC, a1, 0);
	if (!v2)
		script_yield(a1);
	v3 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 69, 219, 27, 10, 90, 14, 16);
	if (!v3)
	{
		sprite_list_remove(v2);
		script_yield(a1);
	}
	v4 = stru29_list_4439F0(v2, v3, 0, 1, 0);
	v4->field_C |= 1u;
	sprite_load_mobd(v2, 1080);
	v2->x = 21248;
	v2->field_88_unused = 1;
	v2->y = 60160;
	v2->z_index = 77;
	v2->drawjob->flags |= 0x40000000u;
	v5 = dword_47C700 == 0;
	v6 = dword_47C700++ < 0;
	if (!v6 && !v5)
		dword_47C700 = 0;
	while (1)
	{
		v13 = script_445370_yield_to_main_thread(v1, 0xC0000000, 1);
		netz_42F9C0(0, 0);
		if (v14)
		{
			render_string_445AE0(v3);
			v8 = 0;
			v3->num_lines = 0;
			dword_47C6B8 = 0;
			v9 = (char *)&netz_47A740[3].ptr_4;
			do
			{
				if (*(v9 - 24) && *(_DWORD *)v9)
				{
					++v8;
					render_string_443D80(v3, v9 - 21, 0);
					v10 = aEvol;
					if (!*(v9 - 22))
						v10 = aSurv;
					render_string_443D80(v3, v10, 0);
					render_string_443D80(v3, player_colors[*(v9 - 23)], 0);
					render_string_445770(v3, asc_464C88, 0);
				}
				v9 += 28;
			} while ((int)v9 < (int)&netz_47A840);
			if (v8 > 1)
				dword_47C6B8 = v8 - 1;
			v1 = a1;
		}
		if (v13 & 0x40000000)
		{
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				if (i->event != EVT_MSG_MISSION_FAILED && i->event == EVT_MSG_1548_sidebar)
					v14 = 0;
				script_discard_event(i);
			}
		}
	}
}

//----- (0043F9E0) --------------------------------------------------------
void script_43F9E0_mobd45(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // ecx@1
	Sprite *v3; // esi@1
	int v4; // ebx@2
	ScriptEvent *i; // eax@3
	enum SCRIPT_EVENT v6; // edx@4

	v1 = a1;
	v2 = a1->sprite;
	a1 = (Script *)a1->param;
	_47C668_ingame_menu_sprites[(int)a1] = v2;
	v3 = v1->sprite;
	v3->parent = 0;
	v1->script_type = SCRIPT_TYPE_16;
	stru29_list_4439F0(v3, 0, 0, 0, 0);
	sprite_load_mobd(v3, 1344);
	while (1)
	{
		v4 = 0;
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v6 = i->event;
				switch (v6)
				{
				case 0xFFFFFFFE:
                    stru29_list_443AE0_find_by_sprite(v1->sprite);
					break;
				case 0x5E7u:
					v4 = 1;
					break;
				case 0x5F8u:
					v4 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v4);
		script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, &a1, _47C664_ingame_menu_sprite->script);
	}
}

//----- (0043FAD0) --------------------------------------------------------
void script_43FAD0_mobd45_evt5(Script *a1)
{
	void *v1; // edi@1
	Sprite *v2; // esi@1
	int v3; // esi@3
	Sprite *v4; // eax@4
	Sprite *v5; // esi@7
	RenderString *v6; // edi@7
	stru29 *v7; // eax@9
	int v8; // eax@10
	int v9; // ebx@10
	int v10; // eax@18
	int v11; // esi@21
	char *v12; // eax@23
	ScriptEvent *i; // eax@32
	int v14; // eax@40
	int v15; // [sp+0h] [bp-18h]@18
	int v16; // [sp+Ch] [bp-Ch]@1
	int v17; // [sp+10h] [bp-8h]@9
	Sprite *v18; // [sp+14h] [bp-4h]@1

	v1 = 0;
	v16 = 1;
	dword_47C608 = 0;
	dword_47C660 = 0;
	v2 = sprite_create(MOBD_FONT_ITALIC, a1, 0);
	v18 = v2;
	if (!v2)
		script_yield(a1);
	_47C664_ingame_menu_sprite = v2;
	v3 = 38912;
	while (1)
	{
		v4 = sprite_create_scripted(MOBD_45, 0, (void(*)(Script *))script_43F9E0_mobd45, SCRIPT_COROUTINE, 0);
		if (v4)
		{
			v4->script->param = v1;
			v4->x = 50432;
			v4->y = v3;
			v4->z_index = 5;
		}
		v3 += 4096;
		v1 = (char *)v1 + 1;
		if (v3 >= 79872)
		{
			v5 = v18;
			v6 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 183, 136, 20, 12, 90, 14, 16);
			if (!v6)
			{
				sprite_list_remove(v18);
				script_yield(a1);
			}
			v7 = stru29_list_4439F0(v18, v6, 0, 1, 0);
			v7->field_C |= 1u;
			sprite_load_mobd(v5, 1080);
			v5->x = 50432;
			v5->field_88_unused = 1;
			v5->y = 38912;
			v5->z_index = 77;
			dword_47C5F8 = -1;
			v17 = 1;
			while (1)
			{
				v8 = -(v17 != 0);
				LOBYTE_HEXRAYS(v8) = v8 & 0x38;
				v9 = script_445370_yield_to_main_thread(a1, 0xC0000000, v8 + 300);
				if (netz_42E430(0))
					v17 = 0;
				if (v16 && dword_46E3F0 == -2)
				{
					if (v9 & 0x80000000 && !netz_47A834)
					{
						netz_47A934 = 1;
						netz_42F9C0(0, 0);
					}
					render_string_445AE0(v6);
					v11 = 0;
					v6->num_lines = 0;
					do
					{
						if (netz_42E430(v11))
						{
							v12 = netz_42E410(v11);
							v6->field_18 = 0;
							render_string_443D80(v6, v12, 0);
							render_string_445770(v6, asc_464C88, 0);
							++dword_47C660;
						}
						++v11;
					} while (v11 < 10);
					if (dword_47C660 != dword_47C5F8)
					{
						dword_47C5F8 = dword_47C660;
						script_trigger_event_group(a1, EVT_MSG_1528, 0, a1->script_type);
						if (dword_47C660)
						{
							if (dword_47C608 > dword_47C660 - 1)
								dword_47C608 = dword_47C660 - 1;
						}
						else
						{
							dword_47C608 = 0;
						}
					}
					v5 = v18;
				}
				if (v9 & 0x40000000)
				{
					for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
					{
						if (i->event != EVT_MSG_MISSION_FAILED)
						{
							if (i->event == EVT_MSG_1511_sidebar_click_category)
							{
								if (*(_DWORD *)i->param < dword_47C660)
									dword_47C608 = *(_DWORD *)i->param;
							}
							else if (i->event == EVT_MSG_1548_sidebar)
							{
								v16 = 0;
							}
						}
						script_discard_event(i);
					}
				}
				v14 = dword_47C608;
				v5->field_88_unused = 1;
				if (v14 <= 0)
					v5->y = 38912;
				else
					v5->y = (dword_47C608 << 12) + 38912;
			}
		}
	}
}

//----- (0043FDE0) --------------------------------------------------------
void script_43FDE0_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_free_provider_async();
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 1;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5[1].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_FOG_OF_WAR, 0, -10);
	cplc_select(1);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (0043FF30) --------------------------------------------------------
void script_43FF30_mobd45(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	int v3; // eax@7
	Sprite *v4; // esi@10
	void *v5; // eax@10
	int v6; // eax@12
	void *v7; // ecx@13
	void *v8; // eax@15
	int v9; // esi@16
	int v10; // eax@22
	int v11; // eax@29
	DataMapd *v14; // eax@37
	int v15; // [sp+0h] [bp-Ch]@12
__debugbreak();
	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_5;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	dword_47C5F8 = -1;
	if (!script_create_coroutine(SCRIPT_TYPE_5, script_43FAD0_mobd45_evt5, 0))
		game_state = 3;
	while (1)
	{
		dword_46E3F0 = -2;
		do
			v3 = dword_47C660 && netz_42E430(dword_47C608) && dword_46E3F0 == -2;
		while (!script_443780(a1, 1824, v3, 0));
		v4 = a1->sprite;
		sprite_4272E0_load_mobd_item(v4->parent, 1692, 0);
		sprite_4272E0_load_mobd_item(v4, 1824, 3);
		dword_468B54 = -1;
		_46E420_starting_cash_idx = 1280;
		v7 = (void *)netz_42F9E0(dword_47C608);
		if (!v7)
		{
			v8 = (void *)-1;
			v9 = 0;
			dword_46E3F0 = -1;
			while ((dword_468B54 == -1 || v8 == (void *)-1) && v9 < 1800)
			{
				script_445370_yield_to_main_thread(a1, 0x80000000, 1);
				netz_42F9C0(0, 0);
				v8 = (void *)dword_46E3F0;
				++v9;
			}
			if (!v8)
				break;
		}
		dword_468B54 = -1;
		netz_42F650((void *)j_netz_430690());
	}
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 8;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v14 = LVL_FindMapd();
	_40E400_set_palette(&v14[8].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)8, 0, -10);
	cplc_select(8);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (004402A0) --------------------------------------------------------
void script_4402A0_mobd45_evt5(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	int v3; // eax@4
	unsigned int v4; // eax@7
	void *v5; // eax@7
	int v6; // eax@9
	void *v7; // ecx@10
	int v8; // ecx@13
	DataMapd *v11; // eax@17
	int v12; // [sp+0h] [bp-Ch]@9

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_5;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	do
		v3 = dword_47C6EC && dword_46E3F0 == -2;
	while (!script_443780(a1, 1980, v3, 0));
	dword_47C6F4 = 1;
	v4 = clock();
	srand(v4);
	v5 = (void *)(strlen(netz_default_player_name) + 1);
	memcpy(
		netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].player_name,
		netz_default_player_name,
		(unsigned int)v5);

	v7 = (void *)netz_42F8E0(1);
	if (!v7)
	{
		v8 = netz_47C6C0_mapd_idx;
		netz_47C6C0_mapd_idx = 7;
		netz_47C6BC_mapd_idx = v8;
		script_408500_anim(a1);
        stru29_list_realloc(a1);
		bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
		script_445370_yield_to_main_thread(a1, 0x80000000, 3);
		v11 = LVL_FindMapd();
		_40E400_set_palette(&v11[7].items->palette);
		_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)7, 0, -10);
		cplc_select(7);
		cplc_406320();
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
		script_4084A0_animation(a1);
		script_yield(a1);
	}
}
// 46E3F0: using guessed type int dword_46E3F0;
// 477344: using guessed type int _477344_esp;
// 47734C: using guessed type int _47734C_coroutine_int;
// 47C6C8: using guessed type int stru29_list_initialized;
// 47C6F4: using guessed type int dword_47C6F4;

//----- (004404D0) --------------------------------------------------------
void script_4404D0_mobd45_evt8(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // ebx@1
	Sprite *v3; // eax@2
	Sprite *v4; // eax@4
	Sprite *v5; // eax@6
	unsigned int v6; // eax@9
	void *v7; // eax@9
	int v8; // eax@11
	Sprite *v9; // eax@15
	Script *v10; // eax@16
	Sprite *v11; // eax@19
	Sprite *v12; // eax@21
	Script *v13; // eax@22
	Sprite *v14; // eax@24
	Sprite *v15; // eax@28
	Sprite *v16; // eax@30
	Sprite *v17; // eax@32
	Script *v18; // eax@33
	int v19; // [sp+0h] [bp-Ch]@11

	v1 = a1;
	v2 = a1->sprite;
	a1->script_type = SCRIPT_TYPE_8;
	if (netz_47C6C0_mapd_idx == 15)
	{
		v3 = sprite_create_scripted(MOBD_45, v2, script_441FC0_mobd45_evt8, SCRIPT_COROUTINE, 0);
		if (v3)
		{
			v3->x = 10240;
			v3->y = 62976;
		}
		v4 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_441780_mobd45_evt8, SCRIPT_COROUTINE, 0);
		if (v4)
		{
			v4->x = 45056;
			v4->y = 62976;
		}
		v5 = sprite_create_scripted(MOBD_45, v2, script_4421F0_mobd45_evt8, SCRIPT_COROUTINE, 0);
		if (v5)
		{
			v5->x = 83968;
			v5->y = 62976;
		}
	}
	else if (netz_47C6BC_mapd_idx != 4)
	{
		v6 = clock();
		srand(v6);
		v7 = (void *)(strlen(netz_default_player_name) + 1);
		memcpy(
			netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].player_name,
			netz_default_player_name,
			(unsigned int)v7);

		netz_42F8E0(1);
	}
	v9 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_440810_mobd45, SCRIPT_COROUTINE, 0);
	if (v9)
	{
		v10 = v9->script;
		if (v10)
			v10->script_type = v1->script_type;
	}
	else
	{
		game_state = 3;
	}
	v11 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_441470_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v11)
	{
		v11->x = 75264;
		v11->y = 17152;
	}
	v12 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_440CA0_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v12)
	{
		v12->x = 14080;
		v12->y = 27904;
		v13 = v12->script;
		if (v13)
			v13->script_type = v1->script_type;
	}
	v14 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_441050_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v14)
	{
		v14->x = 70656;
		v14->y = 27904;
	}
	if (netz_47C6C0_mapd_idx == 15)
	{
		BYTE1(_46E420_starting_cash_idx) = 5;
	}
	else
	{
		v15 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_441680_mobd45_evt8, SCRIPT_COROUTINE, 0);
		if (v15)
		{
			v15->x = 97280;
			v15->y = 38400;
		}
	}
	v16 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_441260_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v16)
	{
		v16->x = 58368;
		v16->y = 38400;
	}
	v17 = sprite_create_scripted(MOBD_45, v2, (void(*)(Script *))script_440ED0_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v17)
	{
		v17->x = 0x2000;
		v17->y = 38400;
		v18 = v17->script;
		if (v18)
			v18->script_type = v1->script_type;
	}
	sprite_list_remove(v2);
	script_yield(v1);
}
// 477344: using guessed type int _477344_esp;
// 47734C: using guessed type int _47734C_coroutine_int;
// 47A2C4: using guessed type int game_state;
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00440770) --------------------------------------------------------
void input_get_string_440770_handler(const char *a1, int a2)
{
	const char *v2; // esi@1
	unsigned __int16 v3; // ST08_2@1
	stru8 *v4; // eax@1
	int v5; // ecx@1

	v2 = a1;
	v3 = a2;
	render_string_445AE0(_47C65C_render_string);
	_47C65C_render_string->field_18 = 0;
	_47C65C_render_string->num_lines = 0;
	render_string_443D80(_47C65C_render_string, v2, 0);
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	v4 = _47C65C_render_string->pstru8;
	v5 = _47C65C_render_string->field_C + v3 + 1;
	if (_47C65C_render_string->field_C + v3 != -1)
	{
		do
		{
			v4 = v4->next;
			--v5;
		} while (v5);
	}
	_47C664_ingame_menu_sprite->x = v4->drawjob->job_details.x << 8;
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	_47C664_ingame_menu_sprite->y = 22528;
}

//----- (00440810) --------------------------------------------------------
void script_440810_mobd45(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // ebx@1
	stru8 *v3; // eax@8
	int v4; // ecx@8
	Sprite *v5; // esi@10
	RenderString *v6; // edx@10
	char v7; // cl@14
	int v8; // ebx@17
	ScriptEvent *i; // eax@18
	enum SCRIPT_EVENT v10; // edx@19
	Sprite *v12; // eax@31
	int v13; // edx@31
	int v14; // ecx@31
	int v15; // esi@31
	char v16; // al@32
	int v17; // eax@41
	stru8 *v18; // ecx@44
	int v19; // eax@44
	int v20; // [sp+0h] [bp-Ch]@41

	v1 = a1;
	v2 = a1->sprite;
	_47C65C_render_string = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_ITALIC].items,
		144,
		72,
		14,
		3,
		9,
		14,
		16);
	if (!_47C65C_render_string)
	{
		sprite_list_remove(v2);
		script_yield(a1);
	}
	_47C664_ingame_menu_sprite = sprite_create(MOBD_FONT_ITALIC, 0, v2);
	if (!_47C664_ingame_menu_sprite)
	{
		sprite_list_remove(v2);
		render_string_list_remove(_47C65C_render_string);
		script_yield(a1);
	}
	if (netz_47C6C0_mapd_idx != LEVEL_MUTE_01 && !netz_47A834)
	{
		strcpy(netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].player_name, netz_default_player_name);
		v1 = a1;
	}
	render_string_445AE0(_47C65C_render_string);
	_47C65C_render_string->field_18 = 0;
	_47C65C_render_string->num_lines = 0;
	render_string_443D80(_47C65C_render_string, netz_default_player_name, 0);
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	v3 = _47C65C_render_string->pstru8;
	v4 = _47C65C_render_string->field_C + 1;
	if (_47C65C_render_string->field_C != -1)
	{
		do
		{
			v3 = v3->next;
			--v4;
		} while (v4);
	}
	_47C664_ingame_menu_sprite->x = v3->drawjob->job_details.x << 8;
	_47C664_ingame_menu_sprite->field_88_unused = 1;
	_47C664_ingame_menu_sprite->y = 22528;
	v2->parent = _47C664_ingame_menu_sprite;
	v5 = v1->sprite;
	v6 = _47C65C_render_string;
	v5->parent = 0;
	v1->script_type = SCRIPT_TYPE_18;
	stru29_list_4439F0(v5, v6, 0, 0, 0);
	sprite_load_mobd(v5, 1368);
	v2->x = 40960;
	v2->field_88_unused = 1;
	v2->y = 22528;
	while (1)
	{
		if (netz_47C6C0_mapd_idx != 15)
		{
			if (netz_47A834)
				v7 = 65;
			else
				v7 = 66;
			netz_42E450(netz_47A834, 0, v7);
		}
		v8 = 0;
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
			{
				v10 = i->event;
				switch (v10)
				{
				case EVT_MOUSE_HOVER:
                    stru29_list_443AE0_find_by_sprite(v1->sprite);
					break;
				case EVT_MSG_1511_sidebar_click_category:
					v8 = 1;
					break;
				case EVT_MSG_1528:
					v8 = 1;
					break;
				}
				script_discard_event(i);
			}
		} while (!v8);
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->x = 40960;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 22528;
		_47C664_ingame_menu_sprite->z_index = 10;
		sprite_load_mobd(_47C664_ingame_menu_sprite, 1096);
		dword_47C6C4 = 1;
		input_get_string(netz_default_player_name, 8u, input_get_string_440770_handler, 1, v1);
		v12 = _47C6E0_task->sprite;
		v13 = v12->y >> 8;
		v14 = v12->x >> 8;
		v12->field_88_unused = 1;
		input_4283A0_set_cursor_pos(v14, v13);
		v15 = 0;
		dword_47C6C4 = 0;
		do
		{
			v16 = netz_default_player_name[v15];
			if (!v16)
				break;
			if (!isalpha(v16) && !isdigit(netz_default_player_name[v15]))
				netz_default_player_name[v15] = 95;
			++v15;
		} while (v15 < 7);
		LOBYTE_HEXRAYS(dword_468CE8) = 0;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->x = 40960;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 22528;
		sprite_release_mobd_item(_47C664_ingame_menu_sprite);
		if (netz_47C6C0_mapd_idx != 15 && netz_47A834)
		{
			j_netz_430670((int)netz_default_player_name);
		}
		strcpy((char *)(28 * (_DWORD)__47CA80_array_idx_and_netz_player_side + 4695939), netz_default_player_name);
		render_string_445AE0(_47C65C_render_string);
		_47C65C_render_string->field_18 = 0;
		_47C65C_render_string->num_lines = 0;
		render_string_443D80(_47C65C_render_string, netz_default_player_name, 0);
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		v18 = _47C65C_render_string->pstru8;
		v19 = _47C65C_render_string->field_C + 1;
		if (_47C65C_render_string->field_C != -1)
		{
			do
			{
				v18 = v18->next;
				--v19;
			} while (v19);
		}
		_47C664_ingame_menu_sprite->x = v18->drawjob->job_details.x << 8;
		_47C664_ingame_menu_sprite->field_88_unused = 1;
		_47C664_ingame_menu_sprite->y = 22528;
		if (netz_47C6C0_mapd_idx != 15)
			netz_42E450((void *)netz_47C6C0_mapd_idx, 0, 65);
		v1 = a1;
	}
}

//----- (00440CA0) --------------------------------------------------------
void script_440CA0_mobd45_evt8(Script *a1)
{
	RenderString *v1; // edi@4
	Sprite *v2; // esi@4
	Sprite *v3; // eax@4
	bool v4; // sf@7
	unsigned __int8 v5; // of@7
	char v6; // dl@11
	void *v7; // ecx@14
	char *v8; // eax@14
	int v9; // eax@20
	int v10; // eax@23
	int v11; // esi@24
	char v12; // cl@27
	void *v13; // eax@29

	if (netz_47C6C0_mapd_idx == LEVEL_MUTE_01)
		byte_47C654 = 0;
	else
		byte_47C654 = netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_9;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 164, 116, 10, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
	while (1)
	{
		while (1)
		{
			while (1)
			{
				render_string_445AE0(v1);
				v1->field_18 = 0;
				v1->num_lines = 0;
				render_string_443D80(v1, player_colors[byte_47C654], 0);
				if (netz_47C6C0_mapd_idx != 15)
					break;
				while (!script_443780(a1, 2056, 1, 2))
					;
				v5 = __OFSUB__(byte_47C654 + 1, 15);
				v4 = (char)(byte_47C654++ - 14) < 0;
				if (!(v4 ^ v5))
					byte_47C654 = 0;
			}
			if (netz_47A834)
				break;
			do
			{
				v11 = script_443570(a1, 2056, 1, 2);
				render_string_445AE0(v1);
				v1->field_18 = 0;
				v1->num_lines = 0;
				render_string_443D80(v1, player_colors[byte_47C654], 0);
			} while (!v11);
			if (v11 == 300)
			{
				byte_47C654 = netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_9;
			}
			else
			{
				v12 = byte_47C654 + 1;
				v5 = __OFSUB__(byte_47C654 + 1, 15);
				v4 = (char)(byte_47C654++ - 14) < 0;
				if (!(v4 ^ v5))
				{
					v12 = 0;
					byte_47C654 = 0;
				}
				v13 = __47CA80_array_idx_and_netz_player_side;
				netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_9 = v12;
				netz_42E450(v13, 1, 69);
				byte_47C654 = netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_9;
			}
		}
		while (!script_443780(a1, 2056, 1, 2))
			;
		v6 = byte_47C654;
		do
		{
			if (++v6 >= 15)
				v6 = 0;
			v7 = 0;
			v8 = (char *)&netz_47A740[3].ptr_4;
			while (v7 == __47CA80_array_idx_and_netz_player_side || !*(v8 - 24) || !*(_DWORD *)v8 || *(v8 - 23) != v6)
			{
				v8 += 28;
				v7 = (char *)v7 + 1;
				if ((int)v8 >= (int)&netz_47A840)
				{
					v9 = 0;
					goto LABEL_22;
				}
			}
			v9 = 1;
		LABEL_22:
			;
		} while (v9);
		byte_47C654 = v6;
		v10 = 7 * (_DWORD)__47CA80_array_idx_and_netz_player_side;
		netz_47A740[4 * v10 / 0x1Cu + 2].field_9 = v6;
		netz_42E450((void *)v10, 0, 65);
	}
}
// 47A840: using guessed type int netz_47A840;
// 47C654: using guessed type char byte_47C654;

//----- (00440ED0) --------------------------------------------------------
void script_440ED0_mobd45_evt8(Script *a1)
{
	RenderString *v1; // ebp@4
	Sprite *v2; // edi@4
	Sprite *v3; // eax@4
	const char *v4; // edx@5
	void *v5; // eax@12
	bool v6; // zf@12
	int v7; // eax@15

	if (netz_47C6C0_mapd_idx == LEVEL_MUTE_01)
		_47C658_faction_index = 0;
	else
		_47C658_faction_index = netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_A;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 142, 156, 10, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
	while (1)
	{
		while (1)
		{
			v1->field_18 = 0;
			v1->num_lines = 0;
			v4 = aEvol_0;
			if (!_47C658_faction_index)
				v4 = a2;
			render_string_443D80(v1, v4, 0);
			if (netz_47C6C0_mapd_idx != 15)
				break;
			while (!script_443780(a1, 2032, 1, 2))
				;
			_47C658_faction_index ^= 1u;
		}
		if (netz_47A834)
			break;
		do
			v7 = script_443570(a1, 2032, 1, 2);
		while (!v7);
		if (v7 == 300)
		{
			_47C658_faction_index = netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_A;
		}
		else
		{
		LABEL_12:
			v5 = netz_47A834;
			v6 = netz_47A834 == 0;
			_47C658_faction_index ^= 1u;
			netz_47A740[(int)__47CA80_array_idx_and_netz_player_side + 2].field_A = _47C658_faction_index;
			if (v6)
				netz_42E450(v5, 0, 66);
			else
				netz_42E450(v5, 0, 65);
		}
	}
	while (!script_443780(a1, 2032, 1, 2))
		;
	goto LABEL_12;
}
// 47C658: using guessed type char _47C658_faction_index;

//----- (00441050) --------------------------------------------------------
void script_441050_mobd45_evt8(Script *a1)
{
	RenderString *v1; // edi@3
	Sprite *v2; // esi@3
	Sprite *v3; // eax@3
	bool v4; // sf@6
	unsigned __int8 v5; // of@6
	char a2; // [sp+10h] [bp-14h]@4

	if (netz_47C6C0_mapd_idx == 15)
		BYTE3(_46E420_starting_cash_idx) = 0;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 406, 116, 20, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
	while (1)
	{
		sprintf(&a2, aS_0, off_46C358[SBYTE3(_46E420_starting_cash_idx)]);
		v1->field_18 = 0;
		v1->num_lines = 0;
		render_string_445AE0(v1);
		render_string_443D80(v1, &a2, 0);
		while (!script_443780(a1, 2156, 1, 0))
			;
		v5 = __OFSUB__(BYTE3(_46E420_starting_cash_idx) + 1, 15);
		v4 = (char)(BYTE3(_46E420_starting_cash_idx)++ - 14) < 0;
		if (!(v4 ^ v5))
			BYTE3(_46E420_starting_cash_idx) = 0;
		if (netz_47C6C0_mapd_idx != 15)
			netz_44A2A0(64, (int)&_46E420_starting_cash_idx, 5);
	}
}
// 46C358: using guessed type char *off_46C358[15];
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441150) --------------------------------------------------------
void script_441150_mobd45_evt8(Script *a1)
{
	int v1; // ebx@1
	RenderString *v2; // esi@1
	Sprite *v3; // edi@1
	Sprite *v4; // eax@1
	char v6[20]; // [sp+10h] [bp-14h]@7

	v1 = -1;
	v2 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 406, 116, 20, 3, 9, 14, 16);
	v3 = a1->sprite;
	v4 = sprite_create(MOBD_45, 0, a1->sprite);
	v3->mobd_id = MOBD_45;
	v3->parent = v4;
	v4->parent = 0;
	v4->z_index = 0;
	v3->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v3, v2, 0, 1, 0);
    stru29_list_set_bit_by_sprite(a1->sprite, 1);
	while (1)
	{
		if (v1 != SBYTE3(_46E420_starting_cash_idx))
		{
			sprintf(v6, aS_0, off_46C358[SBYTE3(_46E420_starting_cash_idx)]);
			v2->field_18 = 0;
			v2->num_lines = 0;
			render_string_445AE0(v2);
			render_string_443D80(v2, v6, 0);
			v1 = SBYTE3(_46E420_starting_cash_idx);
		}
		script_443780(a1, 2156, 0, 0);
	}
}

//----- (00441240) --------------------------------------------------------
bool _441240_techbunker_should_create()
{
	BOOL result; // eax@2

	if (_47C6D8_use__466098_cost_multipliers || (result = 1, !single_player_game))
		result = SBYTE2(_46E420_starting_cash_idx);
	return result;
}

//----- (00441260) --------------------------------------------------------
void script_441260_mobd45_evt8(Script *a1)
{
	RenderString *v1; // ebp@3
	Sprite *v2; // esi@3
	Sprite *v3; // eax@3
	const char *v4; // edx@4

	if (netz_47C6C0_mapd_idx == 15)
		BYTE2(_46E420_starting_cash_idx) = 0;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 340, 156, 10, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
	while (1)
	{
		v1->field_18 = 0;
		v1->num_lines = 0;
		v4 = "ON ";
		if (!BYTE2(_46E420_starting_cash_idx))
			v4 = "OFF";
		render_string_443D80(v1, v4, 0);
		while (!script_443780(a1, 2096, 1, 2))
			;
		BYTE2(_46E420_starting_cash_idx) ^= 1u;
		if (netz_47C6C0_mapd_idx != 15)
			netz_44A2A0(64, (int)&_46E420_starting_cash_idx, 5);
	}
}

//----- (00441340) --------------------------------------------------------
void script_441340_mobd45_evt8(Script *a1)
{
	RenderString *v1; // edi@1
	Sprite *v2; // esi@1
	Sprite *v3; // eax@1
	const char *v5; // edx@7
	int v6; // [sp+10h] [bp-4h]@1

	v6 = -1;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 340, 156, 10, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
    stru29_list_set_bit_by_sprite(a1->sprite, 1);
	while (1)
	{
		if (v6 != SBYTE2(_46E420_starting_cash_idx))
		{
			v1->field_18 = 0;
			v1->num_lines = 0;
			v5 = "ON ";
			if (!BYTE2(_46E420_starting_cash_idx))
				v5 = "OFF";
			render_string_443D80(v1, v5, 0);
			v6 = SBYTE2(_46E420_starting_cash_idx);
		}
		script_443780(a1, 2096, 0, 2);
	}
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441430) --------------------------------------------------------
int get_current_level_starting_cash()
{
	int result; // eax@3

	if (!single_player_game || _47C6D8_use__466098_cost_multipliers)
		result = atoi(_46E420_starting_cash[(char)_46E420_starting_cash_idx]);
	else
		result = levels[current_level_idx].starting_cash;
	return result;
}
// 468B5C: using guessed type int single_player_game;
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441470) --------------------------------------------------------
void script_441470_mobd45_evt8(Script *a1)
{
	RenderString *v1; // ebp@3
	Sprite *v2; // esi@3
	Sprite *v3; // eax@3

	if (netz_47C6C0_mapd_idx == LEVEL_MUTE_01)
		LOBYTE_HEXRAYS(_46E420_starting_cash_idx) = 0;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 424, 74, 10, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
	while (1)
	{
		v1->field_18 = 0;
		v1->num_lines = 0;
		render_string_443D80(v1, _46E420_starting_cash[(char)_46E420_starting_cash_idx], 0);
		while (!script_443780(a1, 2140, 1, 0))
			;
		LOBYTE_HEXRAYS(_46E420_starting_cash_idx) = (_46E420_starting_cash_idx + 1) & 7;
		if (netz_47C6C0_mapd_idx != 15)
			netz_44A2A0(64, (int)&_46E420_starting_cash_idx, 5);
	}
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441550) --------------------------------------------------------
void script_441550_mobd45_evt8(Script *a1)
{
	int v1; // ebp@1
	RenderString *v2; // edi@1
	Sprite *v3; // esi@1
	Sprite *v4; // eax@1

	v1 = -1;
	v2 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 424, 74, 10, 3, 9, 14, 16);
	v3 = a1->sprite;
	v4 = sprite_create(MOBD_45, 0, a1->sprite);
	v3->mobd_id = MOBD_45;
	v3->parent = v4;
	v4->parent = 0;
	v4->z_index = 0;
	v3->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v3, v2, 0, 1, 0);
    stru29_list_set_bit_by_sprite(a1->sprite, 1);
	while (1)
	{
		if (v1 != (char)_46E420_starting_cash_idx)
		{
			v2->field_18 = 0;
			v2->num_lines = 0;
			render_string_443D80(v2, _46E420_starting_cash[(char)_46E420_starting_cash_idx], 0);
			v1 = (char)_46E420_starting_cash_idx;
		}
		script_443780(a1, 2140, 0, 0);
	}
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441630) --------------------------------------------------------
int _441630_get_current_level_field14__get_max_upgrade_level(int a1)
{
	int v1; // ecx@1
	int v2; // ecx@3
	int result; // eax@8

	v1 = a1 - 61;
	if (v1)
	{
		if (v1 == 1)
			v2 = 4;
		else
			v2 = 5;
	}
	else
	{
		v2 = 3;
	}
	if (!single_player_game || _47C6D8_use__466098_cost_multipliers)
		result = SBYTE1(_46E420_starting_cash_idx);
	else
		result = levels[current_level_idx].field_14;
	if (v2 < result)
		result = v2;
	return result;
}
// 468B5C: using guessed type int single_player_game;
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441680) --------------------------------------------------------
void script_441680_mobd45_evt8(Script *a1)
{
	RenderString *v1; // ebx@3
	Sprite *v2; // esi@3
	Sprite *v3; // eax@3
	bool v4; // zf@6
	bool v5; // sf@6
	unsigned __int8 v6; // of@6
	char v7[8]; // [sp+10h] [bp-8h]@4

	if (netz_47C6C0_mapd_idx == 15)
		BYTE1(_46E420_starting_cash_idx) = 5;
	v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 500, 156, 10, 3, 9, 14, 16);
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, v1, 0, 1, 0);
	while (1)
	{
		sprintf(v7, aD_2, SBYTE1(_46E420_starting_cash_idx));
		v1->field_18 = 0;
		v1->num_lines = 0;
		render_string_443D80(v1, v7, 0);
		while (!script_443780(a1, 2112, 1, 2))
			;
		v6 = __OFSUB__(BYTE1(_46E420_starting_cash_idx) + 1, 5);
		v4 = BYTE1(_46E420_starting_cash_idx) == 4;
		v5 = (char)(BYTE1(_46E420_starting_cash_idx)++ - 4) < 0;
		if (!((unsigned __int8)(v5 ^ v6) | v4))
			BYTE1(_46E420_starting_cash_idx) = 2;
		if (netz_47C6C0_mapd_idx != 15)
			netz_44A2A0(64, (int)&_46E420_starting_cash_idx, 5);
	}
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00441780) --------------------------------------------------------
void script_441780_mobd45_evt8(Script *a1)
{
	RenderString *v1; // ebp@2
	Sprite *v2; // esi@2
	Sprite *v3; // eax@2
	int i; // eax@2
	DataMobdItem *v5; // edx@8
	RenderString *v6; // edi@8
	Sprite *v7; // esi@8
	Sprite *v8; // eax@8
	char a2[4]; // [sp+10h] [bp-10h]@5
	char v11[8]; // [sp+18h] [bp-8h]@14

	if (netz_47C6C0_mapd_idx == LEVEL_MUTE_01)
	{
		v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 284, 252, 10, 3, 9, 14, 16);
		v2 = a1->sprite;
		v3 = sprite_create(MOBD_45, 0, a1->sprite);
		v2->mobd_id = MOBD_45;
		v2->parent = v3;
		v3->parent = 0;
		v3->z_index = 0;
		v2->z_index = 1;
		a1->script_type = SCRIPT_TYPE_8;
		stru29_list_4439F0(v2, v1, 0, 1, 0);
		for (i = dword_46E3FC; ; i = dword_46E3FC++ + 1)
		{
			if (i > 3)
			{
				i = 1;
				dword_46E3FC = 1;
			}
			sprintf(a2, aD_2, i);
			v1->field_18 = 0;
			v1->num_lines = 0;
			render_string_443D80(v1, a2, 0);
			while (!script_443780(a1, 1656, 1, 2))
				;
		}
	}
	v5 = currently_running_lvl_mobd[MOBD_FONT_ITALIC].items;
	*(_DWORD *)a2 = -1;
	v6 = render_string_create(0, v5, 500, 156, 10, 3, 9, 14, 16);
	v7 = a1->sprite;
	v8 = sprite_create(MOBD_45, 0, a1->sprite);
	v7->mobd_id = MOBD_45;
	v7->parent = v8;
	v8->parent = 0;
	v8->z_index = 0;
	v7->z_index = 1;
	a1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v7, v6, 0, 1, 0);
    stru29_list_set_bit_by_sprite(a1->sprite, 1);
	while (1)
	{
		if (*(_DWORD *)a2 != SBYTE1(_46E420_starting_cash_idx))
		{
			sprintf(v11, aD_2, SBYTE1(_46E420_starting_cash_idx));
			v6->field_18 = 0;
			v6->num_lines = 0;
			render_string_443D80(v6, v11, 0);
			*(_DWORD *)a2 = SBYTE1(_46E420_starting_cash_idx);
		}
		script_443780(a1, 2112, 0, 2);
	}
}

//----- (00441940) --------------------------------------------------------
void script_441940_mobd45_evt17(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	int v3; // edx@2
	DataMapd *v4; // eax@4
	int v5; // eax@7
	int v6; // eax@12
	DataMapd *v9; // eax@21
	int v10; // ecx@21
	int v11; // ecx@22
	DataMapd *v14; // eax@26
	int v15; // [sp+0h] [bp-Ch]@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	if (netz_47C6C0_mapd_idx == 15)
	{
		netz_47C6BC_mapd_idx = 15;
		netz_47C6C0_mapd_idx = 0;
		script_408500_anim(a1);
		stru29_list_remove_all(a1);
		stru29_list_alloc();
		bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
		script_445370_yield_to_main_thread(a1, 0x80000000, 3);
		v4 = LVL_FindMapd();
		_40E400_set_palette(&v4->items->palette);
		_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, -10);
		cplc_select(0);
		cplc_406320();
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
		script_4084A0_animation(a1);
		script_yield(a1);
	}
	else
	{

		LOBYTE_HEXRAYS(v3) = 67;
		netz_42FA00(-1, v3, 0, 0, 1);
		netz_42F9C0(0, 0);
		netz_42F650((void *)j_netz_430690());
		netz_42F8E0(0);
	}
	if (netz_468B6C_providers_idx == 2 || netz_468B6C_providers_idx == 1)
	{
		v11 = netz_47C6C0_mapd_idx;
		netz_47C6C0_mapd_idx = 1;
		netz_47C6BC_mapd_idx = v11;
		script_408500_anim(a1);
        stru29_list_realloc(a1);
		bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
		script_445370_yield_to_main_thread(a1, 0x80000000, 3);
		v14 = LVL_FindMapd();
		_40E400_set_palette(&v14[1].items->palette);
		_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_FOG_OF_WAR, 0, -10);
		v10 = 1;
	}
	else
	{
		netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
		netz_47C6C0_mapd_idx = 4;
		script_408500_anim(a1);
        stru29_list_realloc(a1);
		bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
		script_445370_yield_to_main_thread(a1, 0x80000000, 3);
		v9 = LVL_FindMapd();
		_40E400_set_palette(&v9[4].items->palette);
		_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)4, 0, -10);
		v10 = 4;
	}
	cplc_select(v10);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (00441CE0) --------------------------------------------------------
void script_441CE0_mobd45_evt8(Script *a1)
{
	Script *v1; // esi@1
	Sprite *v2; // edi@1
	Sprite *v3; // eax@1
	void *v6; // eax@8
	Script *v7; // edx@8
	signed __int64 v8; // rtt@8
	int v9; // eax@11
	int v10; // eax@16
	int v11; // [sp+0h] [bp-Ch]@11

	v1 = a1;
	dword_47C6B8 = 0;
	v2 = a1->sprite;
	v3 = sprite_create(MOBD_45, 0, a1->sprite);
	v2->mobd_id = MOBD_45;
	v2->parent = v3;
	v3->parent = 0;
	v3->z_index = 0;
	v2->z_index = 1;
	v1->script_type = SCRIPT_TYPE_8;
	stru29_list_4439F0(v2, 0, 0, 1, 0);
	if (netz_47C6C0_mapd_idx == 15)
	{
		while (!script_443780(v1, 1872, 1, 0))
			;
	}
	else
	{
		if (!script_create_coroutine(SCRIPT_TYPE_8, script_43F7C0, 0))
			game_state = 3;
		do
		{
			while (!script_443780(v1, 1872, dword_47C6B8, 0))
				;
		} while (!netz_42E7B0());
	}

    srand(clock());
	v8 = rand();
	v6 = (void *)(v8 / 0xFFFF);
	v7 = (Script *)(v8 % 0xFFFF);
	kknd_srand_debug((int)v7);
	if (netz_47C6C0_mapd_idx == 15)
	{
		_47C6D8_use__466098_cost_multipliers = 1;
		_47C6DC_dont_execute_unit_handlers = 1;
		single_player_game = 1;
		netz_42E7F0();
		v10 = kknd_rand();
		player_side = (PLAYER_SIDE)(2 * (v10 % 3) + 2);
		if (!_47C658_faction_index)
			player_side = (PLAYER_SIDE)(2 * (v10 % 3) + 1);
		current_level_idx = (LEVEL_ID)(SBYTE3(_46E420_starting_cash_idx) + 30);
		game_state = 1;
		if (_47C6E0_task)
			script_deinit(_47C6E0_task);
	}
	else
	{
		a1 = v7;
		j_netz_430610();
		netz_44A2A0(71, (int)&a1, 4);
		_47C6D8_use__466098_cost_multipliers = 0;
		single_player_game = 0;
		_47C6DC_dont_execute_unit_handlers = 1;
		netz_42E7F0();
		current_level_idx = (LEVEL_ID)(SBYTE3(_46E420_starting_cash_idx) + 30);
		game_state = 1;
		if (_47C6E0_task)
		{
			script_deinit(_47C6E0_task);
			_47C6E0_task = 0;
			return;
		}
	}
	_47C6E0_task = 0;
}

//----- (00441EF0) --------------------------------------------------------
void netz_441EF0(int a1)
{
	_46E420_starting_cash_idx = *(_DWORD *)a1;
	byte_47C600 = *(_BYTE *)(a1 + 4);
}

//----- (00441F10) --------------------------------------------------------
void script_441F10(Script *a1)
{
	int v1; // esi@1
	ScriptEvent *i; // esi@6

	while (1)
	{
		v1 = script_445370_yield_to_main_thread(a1, 0xC0000000, 1);
		if (netz_47A828)
		{
			netz_47A828 = 0;
			_47C6D8_use__466098_cost_multipliers = 0;
			single_player_game = 0;
			_47C6DC_dont_execute_unit_handlers = 1;
			netz_42E7F0();
			current_level_idx = (LEVEL_ID)(SBYTE3(_46E420_starting_cash_idx) + 30);
			game_state = 1;
			if (_47C6E0_task)
				script_deinit(_47C6E0_task);
			_47C6E0_task = 0;
		}
		if (v1 & 0x40000000)
		{
			for (i = script_get_next_event(a1); i; i = script_get_next_event(a1))
			{
				if (i->event == EVT_MSG_MISSION_FAILED)
					script_yield(a1);
				script_discard_event(i);
			}
		}
	}
}
// 468B5C: using guessed type int single_player_game;
// 47A2C4: using guessed type int game_state;
// 47A828: using guessed type int netz_47A828;
// 47C5FC: using guessed type int _46E420_starting_cash_idx;
// 47C6DC: using guessed type int _47C6DC_dont_execute_unit_handlers;

//----- (00441FC0) --------------------------------------------------------
void script_441FC0_mobd45_evt8(Script *a1)
{
	RenderString *v1; // ebx@2
	Sprite *v2; // edi@2
	Sprite *v3; // eax@2
	int i; // eax@2
	Sprite *v5; // esi@8
	Sprite *v6; // edx@8
	Sprite *v7; // eax@8
	Script *v8; // eax@9
	Sprite *v9; // eax@12
	Script *v10; // eax@13
	Sprite *v11; // eax@15
	Script *v12; // eax@16
	Sprite *v13; // eax@18
	Sprite *v14; // eax@20
	Sprite *v15; // eax@22
	Sprite *v16; // eax@24
	char a2[8]; // [sp+10h] [bp-8h]@5

	if (netz_47C6C0_mapd_idx == LEVEL_MUTE_01)
	{
		v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 150, 252, 10, 3, 9, 14, 16);
		v2 = a1->sprite;
		v3 = sprite_create(MOBD_45, 0, a1->sprite);
		v2->mobd_id = MOBD_45;
		v2->parent = v3;
		v3->parent = 0;
		v3->z_index = 0;
		v2->z_index = 1;
		a1->script_type = SCRIPT_TYPE_8;
		stru29_list_4439F0(v2, v1, 0, 1, 0);
		for (i = dword_46E3F8; ; i = dword_46E3F8++ + 1)
		{
			if (i > 2)
			{
				i = 0;
				dword_46E3F8 = 0;
			}
			sprintf(a2, aD_2, i);
			v1->field_18 = 0;
			v1->num_lines = 0;
			render_string_443D80(v1, a2, 0);
			while (!script_443780(a1, 1668, 1, 2))
				;
		}
	}
	v5 = a1->sprite;
	v6 = a1->sprite;
	a1->script_type = SCRIPT_TYPE_9;
	v7 = sprite_create_scripted(MOBD_45, v6, (void(*)(Script *))script_440810_mobd45, SCRIPT_COROUTINE, 0);
	if (v7)
	{
		v8 = v7->script;
		if (v8)
			v8->script_type = a1->script_type;
	}
	else
	{
		stru29_list_remove_all(a1);
		game_state = 3;
	}
	v9 = sprite_create_scripted(MOBD_45, v5, (void(*)(Script *))script_440CA0_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v9)
	{
		v9->x = 14080;
		v9->y = 27904;
		v10 = v9->script;
		if (v10)
			v10->script_type = a1->script_type;
	}
	v11 = sprite_create_scripted(MOBD_45, v5, (void(*)(Script *))script_440ED0_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v11)
	{
		v11->x = 0x2000;
		v11->y = 38400;
		v12 = v11->script;
		if (v12)
			v12->script_type = a1->script_type;
	}
	v13 = sprite_create_scripted(MOBD_45, v5, (void(*)(Script *))script_441550_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v13)
	{
		v13->x = 75264;
		v13->y = 17152;
	}
	v14 = sprite_create_scripted(MOBD_45, v5, (void(*)(Script *))script_441340_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v14)
	{
		v14->x = 58368;
		v14->y = 38400;
	}
	v15 = sprite_create_scripted(MOBD_45, v5, (void(*)(Script *))script_441150_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v15)
	{
		v15->x = 70656;
		v15->y = 27904;
	}
	v16 = sprite_create_scripted(MOBD_45, v5, (void(*)(Script *))script_441780_mobd45_evt8, SCRIPT_COROUTINE, 0);
	if (v16)
	{
		v16->x = 97280;
		v16->y = 38400;
	}
	sprite_list_remove(v5);
	script_yield(a1);
}

//----- (004421F0) --------------------------------------------------------
void script_4421F0_mobd45_evt8(Script *a1)
{
	RenderString *v1; // esi@2
	Sprite *v2; // edi@2
	Sprite *v3; // eax@2
	int i; // eax@2
	Sprite *v5; // edi@6
	Sprite *v6; // eax@6
	int v7; // eax@13
	Sprite *v8; // eax@17
	int v9; // edx@17
	int v10; // ecx@17
	int v11; // ecx@20
	DataMapd *v12; // eax@20
	int v13; // ecx@20
	DataMapd *v16; // eax@25
	int v17; // [sp+0h] [bp-18h]@13
	char a2[12]; // [sp+Ch] [bp-Ch]@5

	if (netz_47C6C0_mapd_idx == 15)
	{
		v1 = render_string_create(0, currently_running_lvl_mobd[MOBD_FONT_ITALIC].items, 456, 252, 10, 3, 9, 14, 16);
		v2 = a1->sprite;
		v3 = sprite_create(MOBD_45, 0, a1->sprite);
		v2->mobd_id = MOBD_45;
		v2->parent = v3;
		v3->parent = 0;
		v3->z_index = 0;
		v2->z_index = 1;
		a1->script_type = SCRIPT_TYPE_8;
		stru29_list_4439F0(v2, v1, 0, 1, 0);
		for (i = _466098_cost_multiplier_idx; ; i = _466098_cost_multiplier_idx++ + 1)
		{
			if (i >= 3)
			{
				i = 0;
				_466098_cost_multiplier_idx = 0;
			}
			sprintf(a2, aS_0, difficulties[i]);
			v1->field_18 = 0;
			v1->num_lines = 0;
			render_string_443D80(v1, a2, 0);
			script_43BA40(a1, 1680, nullsub_3, 0);
		}
	}
	v5 = a1->sprite;
	v6 = sprite_create(MOBD_45, 0, a1->sprite);
	v5->mobd_id = MOBD_45;
	v5->parent = v6;
	v6->parent = 0;
	v6->z_index = 0;
	v5->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v5, 0, 1, 1, 0);
	if (!script_create_coroutine(SCRIPT_TYPE_9, script_43F7C0, 0))
		game_state = 3;
	if (!script_create_coroutine(SCRIPT_TYPE_9, script_441F10, 0))
		game_state = 3;
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_44A220(68, 0, 0);
	netz_42F9C0(0, 0);
	netz_42F650((void *)j_netz_430690());
	if (dword_47C6C4)
	{
		v8 = _47C6E0_task->sprite;
		v9 = v8->y >> 8;
		v10 = v8->x >> 8;
		v8->field_88_unused = 1;
		input_4283A0_set_cursor_pos(v10, v9);
		dword_47C6C4 = 0;
		sprite_release_mobd_item(_47C664_ingame_menu_sprite);
	}
	if (netz_468B6C_providers_idx == 2 || netz_468B6C_providers_idx == 1)
	{
		netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
		netz_47C6C0_mapd_idx = 1;
		script_408500_anim(a1);
        stru29_list_realloc(a1);
		bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
		script_445370_yield_to_main_thread(a1, 0x80000000, 3);
		v16 = LVL_FindMapd();
		_40E400_set_palette(&v16[1].items->palette);
		_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_FOG_OF_WAR, 0, -10);
		v13 = 1;
	}
	else
	{
		v11 = netz_47C6C0_mapd_idx;
		netz_47C6C0_mapd_idx = 4;
		netz_47C6BC_mapd_idx = v11;
		script_408500_anim(a1);
		stru29_list_remove_all(a1);
		stru29_list_alloc();
		bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
		script_445370_yield_to_main_thread(a1, 0x80000000, 3);
		v12 = LVL_FindMapd();
		_40E400_set_palette(&v12[4].items->palette);
		_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)4, 0, -10);
		v13 = 4;
	}
	cplc_select(v13);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (00442580) --------------------------------------------------------
void script_442580_mobd45_evt17(Script *task)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = task->sprite;
	v2 = sprite_create(MOBD_45, 0, task->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	task->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (!script_443780(task, 2044, 1, 0))
		;
	netz_free_provider_async();
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 0;
	script_408500_anim(task);
    stru29_list_realloc(task);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(task, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5->items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, -10);
	cplc_select(0);
	cplc_406320();
	script_445370_yield_to_main_thread(task, 0x80000000, 1);
	script_4084A0_animation(task);
	script_yield(task);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (004426D0) --------------------------------------------------------
void script_4426D0_mobd45_evt6(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	void *v3; // eax@2
	int v4; // eax@5
	int v5; // edi@6
	void *v6; // eax@6
	int v7; // edi@9
	int v8; // ecx@10
	DataMapd *v11; // eax@14
	int v12; // [sp+0h] [bp-Ch]@5
__debugbreak();
	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_6;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (1)
	{
		do
			v3 = (void *)script_443780(a1, 1840, dword_47C6EC, 0);
		while (!v3);
		_40E560_flip_gdi_update_syscolors();
		ShowCursor(1);
		v5 = netz_42F8E0(1);
		ShowCursor(0);
		_40E6B0_set_sys_colors();
		if (!v5)
			break;
		v7 = netz_468B6C_providers_idx;
		netz_free_provider_async();
		netz_42E170(v7, netz_default_player_name);
	}
	v8 = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 7;
	netz_47C6BC_mapd_idx = v8;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v11 = LVL_FindMapd();
	_40E400_set_palette(&v11[7].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)7, 0, -10);
	cplc_select(7);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (004428C0) --------------------------------------------------------
void script_4428C0_mobd45_evt6(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	void *v3; // eax@2
	int v4; // eax@5
	void *v5; // eax@6
	int v6; // eax@10
	int v7; // esi@11
	int v9; // eax@14
	int v10; // eax@20
	int v11; // esi@25
	DataMapd *v14; // eax@30
	int v15; // [sp+0h] [bp-Ch]@5

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_6;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (1)
	{
		do
			v3 = (void *)script_443780(a1, 2080, 1, 0);
		while (!v3);

		v5 = (void *)netz_42F8E0(0);
		netz_47A934 = 1;

		_40E560_flip_gdi_update_syscolors();
		ShowCursor(1);
		netz_42F9C0(0, 0);
		v7 = netz_42F9E0(0);
		ShowCursor(0);
		_40E6B0_set_sys_colors();

		if (!v7)
		{
			v9 = -1;
			dword_46E3F0 = -1;
			while ((dword_468B54 == -1 || v9 == -1) && v7 < 1800)
			{
				script_445370_yield_to_main_thread(a1, 0x80000000, 1);
				netz_42F9C0(0, 0);
				v9 = dword_46E3F0;
				++v7;
			}
			if (!v9)
				break;
		}
		v11 = netz_468B6C_providers_idx;
		netz_free_provider_async();
		netz_42E170(v11, netz_default_player_name);
	}
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 8;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v14 = LVL_FindMapd();
	_40E400_set_palette(&v14[8].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw((enum MAPD_ID)8, 0, -10);
	cplc_select(8);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (00442BB0) --------------------------------------------------------
void script_442BB0_mobd46(Script *a1)
{
	Script *v1; // ebp@1
	Sprite *v2; // eax@1
	Script *v3; // ecx@1
	Sprite *v4; // esi@1
	Sprite *v5; // esi@2
	int v6; // edx@4
	unsigned __int8 v7; // al@10
	bool v8; // cf@10
	bool v9; // zf@10
	int v11; // ecx@17
	int v12; // ebx@18
	int v13; // edi@18
	ScriptEvent *v14; // eax@19
	enum SCRIPT_EVENT v15; // edx@20
	ScriptEvent *i; // eax@40
	int v18; // ecx@43
	Sprite *v19; // esi@43
	__int16 v20; // ax@46
	int v21; // edx@46
	unsigned __int16 v22; // bx@57
	int v24; // ecx@64
	int v25; // ebx@65
	int v26; // edi@65
	ScriptEvent *v27; // eax@66
	enum SCRIPT_EVENT v28; // edx@67
	ScriptEvent *v30; // eax@87
	Sprite *pstru6; // [sp+10h] [bp-4h]@1
	Script *a1a; // [sp+18h] [bp+4h]@1

	v1 = a1;
	v2 = a1->sprite;
	v3 = (Script *)v2->cplc_ptr1_pstru20;
	dword_47C6E8 = -1;
	v2->z_index = 1;
	v4 = a1->sprite;
	a1a = v3;
	v4->parent = 0;
	pstru6 = v2;
	v1->script_type = SCRIPT_TYPE_14;
	stru29_list_4439F0(v4, 0, 0, 1, 0);
	sprite_load_mobd(v4, 180);
	script_445370_yield_to_main_thread(v1, 0x80000000, 1);
	if (netz_47C6C0_mapd_idx == SCRIPT_TYPE_14)
	{
		v5 = pstru6;
		while (1)
		{
			while (1)
			{
				v6 = dword_47C6E4 ? _46E4C0_mobd_offsets[BYTE2(a1a->field_14)] : _46E4F0_mobd_offsets[BYTE2(a1a->field_14)];
				if (dword_47C6E8 >= 0)
				{
					if (dword_47C6E8 > 9)
						dword_47C6E8 = 9;
				}
				else
				{
					dword_47C6E8 = 0;
				}
				v7 = BYTE2(a1a->field_14);
				v8 = v7 < 9u;
				v9 = v7 == 9;
				if (!v8 && !v9)
					break;
                stru29_list_clear_bit_by_sprite(v5, 1);
				if (BYTE2(a1a->field_14) == dword_47C6E8)
				{
					_47C664_ingame_menu_sprite->field_88_unused = 1;
					v11 = v5->x;
					v5->field_88_unused = 1;
					_47C664_ingame_menu_sprite->x = v11;
					_47C664_ingame_menu_sprite->field_88_unused = 1;
					_47C664_ingame_menu_sprite->y = v5->y;
				}
				sprite_load_mobd(v5, v6);
				v12 = 1;
				v13 = 0;
				do
				{
					script_445370_yield_to_main_thread(v1, 0x40000000, 0);
					v14 = script_get_next_event(v1);
					if (v14)
					{
						do
						{
							v15 = v14->event;
							switch (v15)
							{
							case EVT_MOUSE_HOVER:
                                stru29_list_443AE0_find_by_sprite(a1->sprite);
                                break;
							case EVT_MSG_1511_sidebar_click_category:
								v13 = 1;
								break;
							case EVT_MSG_1528:
								v13 = 1;
								v12 = 0;
								break;
							}

							script_discard_event(v14);
							v14 = script_get_next_event(v1);
						} while (v14);
						v5 = pstru6;
					}
				} while (!v13);
				if (v12)
					dword_47C6E8 = BYTE2(a1a->field_14);
			}
            stru29_list_set_bit_by_sprite(v5, 1);
			sprite_release_mobd_item(v5);
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			for (i = script_get_next_event(v1); i; i = script_get_next_event(v1))
				script_discard_event(i);
		}
	}
	v18 = dword_47C6E8;
	v19 = pstru6;
	while (1)
	{
		while (1)
		{
			if (dword_47C6E4)
			{
				v20 = current_mute_level;
				v21 = _46E440_mobd_offsets[BYTE2(a1a->field_14)];
			}
			else
			{
				v21 = _46E480_mobd_offsets[BYTE2(a1a->field_14)];
				v20 = current_surv_level;
			}
			if (v18 == -1)
			{
				if ((unsigned __int16)v20 <= 0xEu)
					v18 = (unsigned __int16)v20;
				else
					v18 = 14;
				dword_47C6E8 = v18;
			}
			if (v18 < 0)
			{
				v18 = 0;
				dword_47C6E8 = 0;
			}
			if (v18 > 14)
			{
				v18 = 14;
				dword_47C6E8 = 14;
			}
			v22 = BYTE2(a1a->field_14);
			v8 = v22 < (unsigned __int16)v20;
			v9 = v22 == v20;
			if (v8 || v9)
				break;
            stru29_list_set_bit_by_sprite(v19, 1);
			sprite_release_mobd_item(v19);
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			v30 = script_get_next_event(v1);
			if (v30)
			{
				do
				{
					script_discard_event(v30);
					v30 = script_get_next_event(v1);
				} while (v30);
				v18 = dword_47C6E8;
			}
			else
			{
			LABEL_44:
				v18 = dword_47C6E8;
			}
		}
        stru29_list_clear_bit_by_sprite(v19, 1);
		if (BYTE2(a1a->field_14) == v18)
		{
			_47C664_ingame_menu_sprite->field_88_unused = 1;
			v24 = v19->x;
			v19->field_88_unused = 1;
			_47C664_ingame_menu_sprite->x = v24;
			_47C664_ingame_menu_sprite->field_88_unused = 1;
			_47C664_ingame_menu_sprite->y = v19->y;
		}
		sprite_load_mobd(v19, v21);
		v25 = 1;
		v26 = 0;
		do
		{
			script_445370_yield_to_main_thread(v1, 0x40000000, 0);
			v27 = script_get_next_event(v1);
			if (v27)
			{
				do
				{
					v28 = v27->event;
					switch (v28)
					{
					case EVT_MOUSE_HOVER:
                        stru29_list_443AE0_find_by_sprite(v1->sprite);
						break;
					case EVT_MSG_1511_sidebar_click_category:
						v26 = 1;
						break;
					case EVT_MSG_1528:
						v26 = 1;
						v25 = 0;
						break;
					}

					script_discard_event(v27);
					v27 = script_get_next_event(v1);
				} while (v27);
				v19 = pstru6;
			}
		} while (!v26);
		if (!v25)
			goto LABEL_44;
		v18 = BYTE2(a1a->field_14);
		dword_47C6E8 = BYTE2(a1a->field_14);
	}
}

//----- (00443000) --------------------------------------------------------
void script_443000_mobd45(Script *a1)
{
	Sprite *v1; // edi@1
	Sprite *v2; // eax@1
	DataMapd *v5; // eax@7

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_17;
	stru29_list_4439F0(v1, 0, 0, 1, 0);
	while (!script_443780(a1, 2044, 1, 0))
		;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = 0;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(a1, 0x80000000, 3);
	v5 = LVL_FindMapd();
	_40E400_set_palette(&v5->items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(MAPD_MAP, 0, -10);
	cplc_select(0);
	cplc_406320();
	script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	script_4084A0_animation(a1);
	script_yield(a1);
}

//----- (00443140) --------------------------------------------------------
void script_443140_mobd45(Script *a1)
{
	Sprite *v1; // ebx@1
	Sprite *v2; // eax@1
	Sprite *v3; // esi@4
	Sprite *v4; // eax@4
	enum LEVEL_ID v5; // eax@6

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_FONT_ITALIC, 0, a1->sprite);
	_47C664_ingame_menu_sprite = v2;
	if (v2)
		sprite_load_mobd(v2, 1048);
	else
		game_state = 3;
	v3 = a1->sprite;
	v4 = sprite_create(MOBD_45, 0, a1->sprite);
	v3->mobd_id = MOBD_45;
	v3->parent = v4;
	v4->parent = 0;
	v4->z_index = 0;
	v3->z_index = 1;
	a1->script_type = SCRIPT_TYPE_13;
	stru29_list_4439F0(v3, 0, 0, 1, 0);
	v1->parent->parent = _47C664_ingame_menu_sprite;
	while (!script_443780(a1, 1968, 1, 0))
		;
	v5 = (LEVEL_ID)dword_47C6E8;
	if (netz_47C6C0_mapd_idx == 14)
	{
		if (dword_47C6E8 < -1 || dword_47C6E8 > 9)
			v5 = (LEVEL_ID)0;
		if (dword_47C6E4)
		{
			player_side = EVOLVED;
			v5 = (LEVEL_ID)((int)v5 + 58);
		}
		else
		{
			player_side = SURVIVORS;
			v5 = (LEVEL_ID)((int)v5 + 48);
		}
	}
	else
	{
		if (dword_47C6E8 < -1 || dword_47C6E8 > 14)
			v5 = (LEVEL_ID)0;
		if (dword_47C6E4)
		{
			player_side = EVOLVED;
			v5 = (LEVEL_ID)((int)v5 + 15);
		}
		else
		{
			player_side = SURVIVORS;
		}
	}
	current_level_idx = v5;
	dword_47C6E8 = -1;
	_47C6D8_use__466098_cost_multipliers = 0;
	single_player_game = 1;
	script_deinit(_47C6E0_task);
	_47C6E0_task = 0;
	stru29_list_remove_all(a1);
	script_408500_anim(a1);
	game_state = 1;
}

//----- (00443290) --------------------------------------------------------
void script_443290_mobd45(Script *a1)
{
	Sprite *v1; // esi@1
	Sprite *v2; // eax@1
	int v3; // esi@2
	int v4; // eax@4

	v1 = a1->sprite;
	v2 = sprite_create(MOBD_45, 0, a1->sprite);
	v1->mobd_id = MOBD_45;
	v1->parent = v2;
	v2->parent = 0;
	v2->z_index = 0;
	v1->z_index = 1;
	a1->script_type = SCRIPT_TYPE_13;
	stru29_list_4439F0(v1, 0, 1, 1, 0);
	while (1)
	{
		v3 = dword_47C6E4 != 0 ? 2020 : 2128;
		while (!script_443780(a1, v3, 1, 0))
			;
		v4 = 1 - dword_47C6E4;
		dword_47C6E4 = 1 - dword_47C6E4;
		if (netz_47C6C0_mapd_idx == 14)
		{
			dword_47C6E8 = 0;
			script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_14);
		}
		else if (v4)
		{
			dword_47C6E8 = (unsigned __int16)current_mute_level;
			script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_14);
		}
		else
		{
			dword_47C6E8 = (unsigned __int16)current_surv_level;
			script_trigger_event_group(a1, EVT_MSG_1528, 0, SCRIPT_TYPE_14);
		}
	}
}

//----- (00443380) --------------------------------------------------------
int script_443380(Script *a1, int lookup_table_offset, bool a3)
{
	Script *v3; // edi@1
	int v4; // ebx@1
	Sprite *v5; // esi@1
	Sprite *v6; // ebp@1
	int v7; // eax@2
	ScriptEvent *i; // eax@12
	int v10; // edx@13
	int v12; // edx@24
	int v13; // edx@25

	v3 = a1;
	v4 = 0;
	v5 = a1->sprite;
	v6 = v5->parent;
	do
	{
		while (1)
		{
			v7 = script_445370_yield_to_main_thread(v3, 0xC0000000, 1);
			stru29 *v8 = (stru29 *)v3->sprite->_80_entity__stru29__sprite__initial_hitpoints; // stru29 for main menu sprites
			if (v8 && v8->field_C & 2)
			{
				if (!dword_47C6EC || units_stats_parsed_from_argv)
					v4 |= 0x20;
				else
					v4 &= ~0x20;
			}
			if (v7 != 0x80000000)
				break;
			if (v4 & 0x20)
			{
				sprite_load_mobd(v6, 0);
				sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 3);
			}
			else
			{
				sprite_load_mobd(v6, 12);
				sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 0);
			}
		}
		for (i = script_get_next_event(v3); i; i = script_get_next_event(v3))
		{
			v10 = i->event;
			if (v10 > (int)EVT_MSG_1511_sidebar_click_category)
			{
				v12 = v10 - EVT_SHOW_UI_CONTROL;
				if (v12)
				{
					v13 = v12 - 14;
					if (v13)
					{
						if (v13 == 20)
							v4 |= 0x10u;
					}
					else
					{
						v4 |= 1u;
					}
				}
				else
				{
					v4 |= 4u;
				}
			}
			else if (v10 == EVT_MSG_1511_sidebar_click_category)
			{
				if (!a3)
					v4 |= 2u;
			}
			else if (v10 == EVT_MOUSE_HOVER)
			{
                stru29_list_443AE0_find_by_sprite(v5);
				v4 |= 8u;
			}

			script_discard_event(i);
		}
		if (v4 & 0x10)
			return 0;
		if (v4 & 1)
			return 2;
		if (v4 & 8 && !(v4 & 0x20))
		{
			if (v6->_inside_mobd_item == &currently_running_lvl_mobd[v6->mobd_id].items->_[2])
				sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 1);
			else
				sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 2);
		}
	} while (!(v4 & 2) || v4 & 0x20);
	v6->pstru7 = &_479D48_stru7;
	sprite_load_mobd(v6, 24);
	sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 1);
	script_445370_yield_to_main_thread(v3, 0x10000000, 0);
	sprite_load_mobd(v6, 12);
	sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 2);
	script_445370_yield_to_main_thread(v3, 0x10000000, 0);
	v6->pstru7 = _4640E0_stru7_array;
	return 1;
}
// 47A2F0: using guessed type int units_stats_parsed_from_argv;

//----- (00443570) --------------------------------------------------------
int script_443570(Script *a1, int a2, int a3, int a4)
{
	Script *v4; // ebp@1
	Sprite *v5; // edi@1
	int v6; // ebx@1
	Sprite *v7; // esi@1
	int result; // eax@3
	int v9; // ebx@5
	ScriptEvent *i; // eax@5
	enum SCRIPT_EVENT v11; // edx@6
	unsigned __int32 v13; // edx@16
	int v14; // edx@17
	int lookup_table_offset; // [sp+10h] [bp-8h]@1
	Sprite *a1a; // [sp+14h] [bp-4h]@1

	v4 = a1;
	v5 = a1->sprite;
	v6 = a2;
	v7 = v5->parent;
	lookup_table_offset = a2;
	a1a = v5->parent;
	if (script_445370_yield_to_main_thread(a1, 0xC0000000, 1) == 0x80000000)
	{
		if (a3)
		{
			sprite_4272E0_load_mobd_item(v7, 1716, a4);
			sprite_4272E0_load_mobd_item(v5, v6, 0);
			result = 0;
		}
		else
		{
			sprite_4272E0_load_mobd_item(v7, 1692, a4);
			sprite_4272E0_load_mobd_item(v5, v6, 3);
			result = 0;
		}
	}
	else
	{
		v9 = 0;
		for (i = script_get_next_event(v4); i; i = script_get_next_event(v4))
		{
			v11 = i->event;
			if ((int)v11 > (int)EVT_MSG_1511_sidebar_click_category)
			{
				v13 = v11 - EVT_SHOW_UI_CONTROL;
				if (v13)
				{
					v14 = v13 - 14;
					if (v14)
					{
						if (v14 == 23)
							return 300;
					}
					else
					{
						v9 |= 1u;
					}
				}
				else
				{
					v9 |= 4u;
				}
			}
			else if (v11 == EVT_MSG_1511_sidebar_click_category)
			{
				v9 |= 2u;
			}
			else if (v11 == EVT_MOUSE_HOVER)
			{
                stru29_list_443AE0_find_by_sprite(v5);
				v9 |= 8u;
			}
			script_discard_event(i);
		}
		if (a3)
		{
			if (v9 & 1)
				return 2;
			if (v9 & 8)
			{
				if (v7->_inside_mobd_item == &currently_running_lvl_mobd[v7->mobd_id].items->_[142])
					sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 1);
				else
					sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 2);
			}
			if (v9 & 2)
			{
				v7->pstru7 = &_479D48_stru7;
				sprite_4272E0_load_mobd_item(a1a, 1704, a4);
				sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 1);
				script_445370_yield_to_main_thread(v4, 0x10000000, 0);
				sprite_4272E0_load_mobd_item(a1a, 1716, a4);
				sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 2);
				script_445370_yield_to_main_thread(v4, 0x10000000, 0);
				a1a->pstru7 = _4640E0_stru7_array;
				return 2;
			}
		}
		else
		{
			sprite_load_mobd(v7, 96);
			sprite_4272E0_load_mobd_item(v5, lookup_table_offset, 3);
		}
		result = 0;
	}
	return result;
}

//----- (00443780) --------------------------------------------------------
int script_443780(Script *a1, int a2, int a3, int a4)
{
	Script *v4; // ebp@1
	Sprite *v5; // edi@1
	int v6; // ebx@1
	Sprite *v7; // esi@1
	int result; // eax@3
	int v9; // ebx@5
	ScriptEvent *i; // eax@5
	int v11; // edx@6
	int v13; // edx@16
	int v14; // [sp+10h] [bp-8h]@1
	Sprite *v15; // [sp+14h] [bp-4h]@1

	v4 = a1;
	v5 = a1->sprite;
	v6 = a2;
	v7 = v5->parent;
	v14 = a2;
	v15 = v5->parent;
	if (script_445370_yield_to_main_thread(a1, 0xC0000000, 1) == 0x80000000)
	{
		if (a3)
		{
			sprite_4272E0_load_mobd_item(v7, 1716, a4);
			sprite_4272E0_load_mobd_item(v5, v6, 0);
			result = 0;
		}
		else
		{
			sprite_4272E0_load_mobd_item(v7, 1692, a4);
			sprite_4272E0_load_mobd_item(v5, v6, 3);
			result = 0;
		}
	}
	else
	{
		v9 = 0;
		for (i = script_get_next_event(v4); i; i = script_get_next_event(v4))
		{
			v11 = i->event;
			if (v11 > (int)EVT_MSG_1511_sidebar_click_category)
			{
				v13 = v11 - EVT_SHOW_UI_CONTROL;
				if (v13)
				{
					if (v13 == 14)
						v9 |= 1u;
				}
				else
				{
					v9 |= 4u;
				}
			}
			else if (v11 == EVT_MSG_1511_sidebar_click_category)
			{
				v9 |= 2u;
			}
			else if (v11 == EVT_MOUSE_HOVER)
			{
                stru29_list_443AE0_find_by_sprite(v5);
				v9 |= 8u;
			}
			script_discard_event(i);
		}
		if (a3)
		{
			if (v9 & 1)
				return 2;
			if (v9 & 8)
			{
				if (v7->_inside_mobd_item == &currently_running_lvl_mobd[v7->mobd_id].items->_[142])
					sprite_4272E0_load_mobd_item(v5, v14, 1);
				else
					sprite_4272E0_load_mobd_item(v5, v14, 2);
			}
			if (v9 & 2)
			{
				v7->pstru7 = &_479D48_stru7;
				sprite_4272E0_load_mobd_item(v15, 1704, a4);
				sprite_4272E0_load_mobd_item(v5, v14, 1);
				script_445370_yield_to_main_thread(v4, 0x10000000, 0);
				sprite_4272E0_load_mobd_item(v15, 1716, a4);
				sprite_4272E0_load_mobd_item(v5, v14, 2);
				script_445370_yield_to_main_thread(v4, 0x10000000, 0);
				v15->pstru7 = _4640E0_stru7_array;
				return 2;
			}
		}
		else
		{
			sprite_load_mobd(v7, 96);
			sprite_4272E0_load_mobd_item(v5, v14, 3);
		}
		result = 0;
	}
	return result;
}

//----- (00443C40) --------------------------------------------------------
void script_443C40(Script *a1, int cplc_item)
{
	enum MAPD_ID v2; // edi@1
	Script *v3; // esi@1
	DataMapd *v6; // eax@5

	v2 = (MAPD_ID)cplc_item;
	v3 = a1;
	netz_47C6BC_mapd_idx = netz_47C6C0_mapd_idx;
	netz_47C6C0_mapd_idx = cplc_item;
	script_408500_anim(a1);
    stru29_list_realloc(a1);
	bitmap_list_remove(_47A010_mapd_item_being_drawn[0]);
	script_445370_yield_to_main_thread(v3, 0x80000000, 3);
	v6 = LVL_FindMapd();
	_40E400_set_palette(&v6[v2].items->palette);
	_47A010_mapd_item_being_drawn[0] = MAPD_Draw(v2, 0, -10);
	cplc_select(v2);
	cplc_406320();
	script_445370_yield_to_main_thread(v3, 0x80000000, 1);
	script_4084A0_animation(v3);
	if (netz_47C6BC_mapd_idx || v2 != 12)
		script_yield(v3);
}
// 47C6C8: using guessed type int stru29_list_initialized;

//----- (00443D40) --------------------------------------------------------
void script_443D40_mobd20(Script *a1)
{
	sprite_list_remove(a1->sprite);
	script_yield(a1);
}

//----- (00443D60) --------------------------------------------------------
int _443D60_strlen_before_newline(const char *str)
{
	char v1; // dl@1
	int result; // eax@1

	v1 = *str;
	for (result = 0; v1; v1 = str[result++ + 1])
	{
		if (v1 == '\n')
			break;
	}
	return result;
}

//----- (00443D80) --------------------------------------------------------
stru8 *render_string_443D80(RenderString *a1, const char *a2, DataMobdItem *a3)
{
	stru8 *result; // eax@1
	const char *v4; // edi@1
	char v5; // dl@1
	int v6; // ebp@1
	int v7; // esi@1
	char v8; // bl@5
	int v9; // edx@11
	int v10; // edx@12
	int v11; // ebp@12
	int v12; // ebx@12
	int v13; // edi@12
    DataMobdItem_stru0 *v14; // edi@19
    DataMobdItem_stru1 *v15; // edi@21
	bool v16; // zf@24
	const char *v17; // [sp+Ch] [bp-Ch]@1
	stru8 *v18; // [sp+10h] [bp-8h]@8
	int v19; // [sp+14h] [bp-4h]@1

	result = a1->pstru8;
	v4 = a2;
	v17 = a2;
	v5 = *a2;
	v6 = result->drawjob->job_details.x + 14;
	v19 = result->drawjob->job_details.x + 14;
	v7 = result->drawjob->job_details.x + 14;
	if (*v17)
	{
		while (1)
		{
			result = 0;
			if (v5)
			{
				v8 = v5;
				do
				{
					if (v8 == 10)
						break;
					v8 = v4[(_DWORD)result + 1];
					result = (stru8 *)((char *)result + 1);
				} while (v8);
			}
			v18 = result;
			if (!result)
				v18 = (stru8 *)1;
			if (v5 == 10)
			{
				v7 = v6;
				v9 = a1->num_lines + 1;
				++v4;
				a1->field_18 = 0;
				a1->num_lines = v9;
				v17 = v4;
			}
			else
			{
				result = a1->pstru8;
				v10 = (a1->num_lines + 1) * a1->field_C;
				v11 = 16 * (a1->num_lines + 1) + result->drawjob->job_details.y;
				v12 = a1->field_18;
				v13 = v10 + v12 + 1;
				if (v10 + v12 != -1)
				{
					do
					{
						result = result->next;
						--v13;
					} while (v13);
				}
				if (v12 > 1)
					v7 = result->drawjob->job_details.x;
				if (v18)
				{
					v4 = v17;
					do
					{
						if (a3)
							v14 = a3->_[*v4 + 1];
						else
							v14 = a1->mobd_font__see_sub405A60->_[1 + *v4];
						result->drawjob->job_details.image = v14->sprt;
						result->drawjob->job_details.y = v11 - v14->y_offset;
						result->drawjob->job_details.x = v7 - v14->x_offset;
						v15 = v14->field_18;
						if (v15)
							v7 = result->drawjob->job_details.x + (v15->x_offset >> 8);
						else
							v7 = result->drawjob->job_details.x + 14;
						result = result->next;
						v4 = v17++ + 1;
						result->drawjob->job_details.x = v7;
						v16 = v18 == (stru8 *)1;
						++a1->field_18;
						v18 = (stru8 *)((char *)v18 - 1);
					} while (!v16);
				}
				else
				{
					v4 = v17;
				}
			}
			v5 = *v4;
			if (!*v4)
				break;
			v6 = v19;
		}
	}
	return result;
}

//----- (00443EE0) --------------------------------------------------------
int render_string_443EE0(RenderString *a1, int a2, int a3)
{
	stru8 *v3; // eax@1
	int v4; // esi@1
	int v5; // ecx@1

	v3 = a1->pstru8;
	v4 = a1->field_C * (a3 + 1);
	v5 = v4 + a2 + 1;
	if (v4 + a2 != -1)
	{
		do
		{
			v3 = v3->next;
			--v5;
		} while (v5);
	}
	return v3->drawjob->job_details.x;
}

//----- (00443F10) --------------------------------------------------------
void netz_443F10()
{
	netz_44A160(64, (char *)&_46E420_starting_cash_idx, 5);
}
// 47C5FC: using guessed type int _46E420_starting_cash_idx;

//----- (00443F20) --------------------------------------------------------
int sub_443F20()
{
	int result; // eax@1
	char v1[20]; // [sp+10h] [bp-34h]@1
	char v2[28]; // [sp+24h] [bp-20h]@1
	__int16 v3; // [sp+40h] [bp-4h]@1

	memcpy(v1, aCLevelsMute1_wav, sizeof(v1));
	memset(v2, 0, sizeof(v2));
	v3 = 0;
	result = dword_47C6EC;
	if (dword_47C6EC)
	{
		result = _47A2E4_mess_with_game_dir;
		dword_47C6EC = 1;
	}
	return result;
}

//----- (00444080) --------------------------------------------------------
void sub_444080(int mapd_idx)
{
	int v1; // eax@2
	Sprite *v4; // eax@10

	switch (mapd_idx)
	{
	case 7:
	case 8:
		v1 = -(netz_468B6C_providers_idx != 0);
		LOBYTE_HEXRAYS(v1) = v1 & 0xFD;
		netz_47C6BC_mapd_idx = v1 + 4;
		break;
	case 4:
		netz_47C6BC_mapd_idx = 1;
		break;
	case 1:
		netz_47C6BC_mapd_idx = 0;
		break;
	default:
		break;
	}
	netz_47C6C0_mapd_idx = mapd_idx;
	if (!_47C6E0_task)
	{
        stru29_list_alloc();
		v4 = sprite_create_scripted(MOBD_79, 0, (void(*)(Script *))script_mobd79__main_menu_mouse_handler, SCRIPT_COROUTINE, 0);
		((Coroutine *)v4->script->handler)->resume();
	}
}

//----- (00444180) --------------------------------------------------------
void UNIT_Handler_OilTanker(Script *a1)
{
	Entity *v1; // esi@2
	int v2; // eax@4
	int v3; // eax@6

	if (!_47C6DC_dont_execute_unit_handlers)
	{
		v1 = (Entity *)a1->param;
		if (!v1)
		{
			v1 = entity_list_create(a1);
			entity_oil_tanker_initialize(v1);
			entity_oil_tanker_initialize_state(v1);
		}
		(v1->mode)(v1);
		v1->script->script_type = SCRIPT_TANKER_CONVOY_HANDLER;
		v2 = v1->_12C_prison_bunker_spawn_type;
		if (v2)
			v1->_12C_prison_bunker_spawn_type = v2 - 1;
		v3 = v1->_134_param__unitstats_after_mobile_outpost_plant;
		if (v3)
			v1->_134_param__unitstats_after_mobile_outpost_plant = v3 - 1;
	}
}

//----- (004441E0) --------------------------------------------------------
void entity_oil_tanker_initialize(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // eax@1
	UnitStat *v3; // eax@2
	int v4; // edi@3
	UnitStat *v5; // eax@5
	int v6; // eax@6
	int v7; // edi@8
	UnitStat *v8; // eax@9
	int v9; // eax@10
	unsigned int v10; // edx@12
	UnitStat *v11; // eax@12
	int v12; // eax@13
	Sprite *v13; // ecx@15
	int v14; // edx@15
	unsigned int v15; // edx@15
	int v16; // eax@15
	Script *v17; // edx@15
	Sprite *v18; // edx@18
	UnitStat *v19; // eax@19
	int v20; // eax@20
	int v21; // ecx@22
	UnitStat *v22; // eax@22
	int v23; // eax@23
	int v24; // ecx@25
	int v25; // eax@25
	Script *v26; // edx@25

	v1 = a1;
	a1->script->script_type = SCRIPT_TANKER_CONVOY_HANDLER;
	v2 = (EntityOilTankerState *)script_create_local_object(a1->script, 116);
	v1->state = v2;
	v2->_0_oil_loaded = 0;
	v2->_4_entity = 0;
	v2->drillrig = 0;
	v2->powerstation = 0;
	v2->drillrig_entity_id = 0;
	v2->powerstation_entity_id = 0;
	v2->_18_entity_id = 0;
	memset(v2->array_20, 0, sizeof(v2->array_20));
	if (v1->sprite->cplc_ptr1)
	{
		v3 = v1->stats;
		v1->field_A4 = 0;
		if (v3->is_infantry)
			v4 = entity_40F100_get_dy(v1, 0);
		else
			v4 = v3->field_4C != 128 ? 7424 : 4096;
		v5 = v1->stats;
		if (v5->is_infantry)
			v6 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v6 = v5->field_4C != 128 ? 7424 : 4096;
		v7 = entity_40DE80_boxd(v1, v6 + (v1->sprite->x & 0xFFFFE000), v4 + (v1->sprite->y & 0xFFFFE000), 0);
		if (v7 == 5)
		{
			entity_mode_419760_infantry_destroyed(v1);
		}
		else
		{
			v8 = v1->stats;
			if (v8->is_infantry)
				v9 = entity_40F0A0_get_dx(v1, v1->field_A4);
			else
				v9 = v8->field_4C != 128 ? 7424 : 4096;
			v10 = v9 + (v1->sprite->x & 0xFFFFE000);
			v11 = v1->stats;
			v1->sprite_x = v10;
			if (v11->is_infantry)
				v12 = entity_40F100_get_dy(v1, v1->field_A4);
			else
				v12 = v11->field_4C != 128 ? 7424 : 4096;
			v13 = v1->sprite;
			v14 = v13->y;
			v1->_DC_order = ENTITY_ORDER_MOVE;
			v1->field_A4 = v7;
			v15 = v12 + (v14 & 0xFFFFE000);
			v16 = v1->sprite_x;
			v1->sprite_y = v15;
			v1->sprite_x_2 = v16;
			v1->sprite_y_2 = v15;
			v17 = v1->script;
			v1->sprite_map_x = v13->x >> 13;
			v1->sprite_map_y = v13->y >> 13;
			v17->event_handler = EventHandler_OilTanker;
			v1->mode = entity_mode_4444D0_oiltanker;
		}
	}
	else if (entity_413860_boxd(v1))
	{
		v19 = v1->stats;
		if (v19->is_infantry)
			v20 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v20 = v19->field_4C != 128 ? 7424 : 4096;
		v21 = v20 + (v1->sprite_map_x << 13);
		v22 = v1->stats;
		v1->sprite_x = v21;
		if (v22->is_infantry)
			v23 = entity_40F100_get_dy(v1, v1->field_A4);
		else
			v23 = v22->field_4C != 128 ? 7424 : 4096;
		v24 = v1->sprite_x;
		v25 = (v1->sprite_map_y << 13) + v23;
		v26 = v1->script;
		v1->sprite_y = v25;
		v1->_DC_order = ENTITY_ORDER_MOVE;
		v1->sprite_x_2 = v24;
		v1->sprite_y_2 = v25;
		v1->_134_param__unitstats_after_mobile_outpost_plant = 0;
		v1->_98_465610_accuracy_dmg_bonus_idx = 0;
		v1->_12C_prison_bunker_spawn_type = 0;
		v26->event_handler = EventHandler_General_Scout;
		v1->mode_return = entity_mode_4448C0_oiltanker;
		entity_4172D0(v1);
	}
	else
	{
		script_trigger_event(v1->script, EVT_SHOW_UI_CONTROL, 0, task_mobd17_cursor);
		script_trigger_event_group(0, EVT_SHOW_UI_CONTROL, v1, SCRIPT_TYPE_39030);
		v1->script->script_type = SCRIPT_TYPE_INVALID;
		v18 = v1->sprite;
		v1->entity_id = 0;
		v18->x_speed = 0;
		v1->sprite->y_speed = 0;
		sprite_list_remove(v1->sprite);
		entity_list_remove(v1);
		script_yield(v1->script);
	}
}

//----- (004444D0) --------------------------------------------------------
void entity_mode_4444D0_oiltanker(Entity *a1)
{
	Script *v1; // ST00_4@1

	v1 = a1->script;
	a1->mode = entity_mode_4448C0_oiltanker;
	script_445370_yield_to_main_thread(v1, 0x80000000, 5);
}

//----- (004444F0) --------------------------------------------------------
void entity_mode_4444F0_oiltanker(Entity *a1)
{
	Entity *v1; // edi@1
	EntityOilTankerState *v2; // esi@1
	Entity *v3; // eax@2
	Entity *v4; // eax@5
	int v5; // ecx@5

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	if (!v2->drillrig)
	{
		v2->array_20_size = 0;
		v2->array_20[0] = 0;
		script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_DRILLRIG_HANDLER);
		v3 = entity_444BE0_oiltanker_get_state_entity(v1);
		v2->drillrig = v3;
		if (v3)
		{
			v2->drillrig_entity_id = v3->entity_id;
		}
		else
		{
			v1->sprite->x_speed = 0;
			v1->sprite->y_speed = 0;
		}
	}
	v4 = v2->drillrig;
	v5 = v2->drillrig_entity_id;
	v2->_4_entity = v4;
	v2->_18_entity_id = v5;
	if (v4)
	{
		entity_mode_4448C0_oiltanker(v1);
	}
	else
	{
        entity_load_idle_mobd(v1);
		script_445370_yield_to_main_thread(v1->script, 0x80000000, 20);
	}
}

//----- (00444590) --------------------------------------------------------
void entity_mode_444590_oiltanker(Entity *a1)
{
	Entity *v1; // edi@1
	EntityOilTankerState *v2; // esi@1
	Entity *v3; // eax@2
	Entity *v4; // eax@5
	int v5; // ecx@5

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	if (!v2->powerstation)
	{
		v2->array_20_size = 0;
		v2->array_20[0] = 0;
		script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_POWER_STATION_HANDLER);
		v3 = entity_444BE0_oiltanker_get_state_entity(v1);
		v2->powerstation = v3;
		if (v3)
		{
			v2->powerstation_entity_id = v3->entity_id;
		}
		else
		{
			v1->sprite->x_speed = 0;
			v1->sprite->y_speed = 0;
		}
	}
	v4 = v2->powerstation;
	v5 = v2->powerstation_entity_id;
	v2->_4_entity = v4;
	v2->_18_entity_id = v5;
	if (v4)
	{
		entity_mode_4447C0_oiltanker(v1);
	}
	else
	{
        entity_load_idle_mobd(v1);
		script_445370_yield_to_main_thread(v1->script, 0x80000000, 20);
	}
}

//----- (00444630) --------------------------------------------------------
void entity_mode_444630_oiltanker(Entity *a1)
{
	Entity *v1; // esi@1
	int *v2; // edi@1

	v1 = a1;
	v2 = &a1->current_mobd_lookup_idx;
	a1->sprite->x_speed = 0;
	a1->sprite->y_speed = 0;
    entity_load_idle_mobd(a1);
	if (!entity_advance_mobd_rotation(v2, 160, v1->stats->turning_speed))
		v1->mode = entity_mode_4446B0_oiltanker_load_oil;
	script_445370_yield_to_main_thread(v1->script, 0x80000000, 1);
}

//----- (004446A0) --------------------------------------------------------
void entity_mode_4446A0_oiltanker(Entity *a1)
{
	dword_477358 = 901223;
}
// 477358: using guessed type int dword_477358;

//----- (004446B0) --------------------------------------------------------
void entity_mode_4446B0_oiltanker_load_oil(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1
	EntityBuildingState *v3; // ebx@3
	OilDeposit *v4; // ebp@3
	Entity *v5; // eax@5
	int v6; // eax@11

	v1 = a1;
	entity_40DF50_boxd_update_map_tile(a1, 0);
	v2 = (EntityOilTankerState *)v1->state;
	if (v2->_0_oil_loaded < 500)
	{
		v3 = 0;
		v4 = 0;
		if (dword_470510[v1->player_side] == 1)
		{
			++v2->_0_oil_loaded;
		LABEL_22:
			entity_4107B0_oiltanker_oil_bar(v1);
			goto LABEL_23;
		}
		v5 = v2->drillrig;
		if (v5)
			v3 = (EntityBuildingState *)v5->state;
		if (v3)
			v4 = (OilDeposit *)v3->oilspot_for_drillrig__task_for_researchlab;
		if (v4)
		{
			if (oilspot_subtract_oil(v4, 1))
			{
				++v2->_0_oil_loaded;
				v6 = v4->oil_left;
				if ((v6 == 5000 || v6 <= 2500 && !(v6 % 500)) && v1->player_side == player_side)
				{
					if (!is_player_faction_evolved())
					{
						sound_play(SOUND_SURV_LOW_OIL_WARNING, 0, _4690A8_unit_sounds_volume, 16, 0);
						v1->mode = entity_mode_4446B0_oiltanker_load_oil;
						goto LABEL_22;
					}
					sound_play(SOUND_MUTE_LOW_OIL_WARNING, 0, _4690A8_unit_sounds_volume, 16, 0);
				}
				v1->mode = entity_mode_4446B0_oiltanker_load_oil;
				goto LABEL_22;
			}
			if (v3)
				v3->oilspot_for_drillrig__task_for_researchlab = 0;
		}
		v1->mode = entity_mode_4446A0_oiltanker;
		goto LABEL_22;
	}
	v1->mode = entity_mode_4447C0_oiltanker;
LABEL_23:
	script_445370_yield_to_main_thread(v1->script, 0x80000000, 1);
}
// 470510: using guessed type int dword_470510[];

//----- (004447C0) --------------------------------------------------------
void entity_mode_4447C0_oiltanker(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1
	Entity *v3; // eax@1
	int v4; // eax@3
	EntityOilTankerState *v5; // ebx@6
	Entity *v6; // eax@6
	Entity *v7; // eax@9
	int v8; // edx@9
	int v9; // edx@11
	int v10; // ecx@11
	int v11; // edx@11
	int v12; // ecx@14

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	v3 = v2->_4_entity;
	if (v3)
	{
		if (v3->entity_id == v2->_18_entity_id)
		{
			v4 = (int)v3->state;
			if (v4)
				*(_DWORD *)(v4 + 24) = 0;
		}
	}
	if (!v2->powerstation)
	{
		v5 = (EntityOilTankerState *)a1->state;
		v5->array_20_size = 0;
		v5->array_20[0] = 0;
		script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_POWER_STATION_HANDLER);
		v6 = entity_444BE0_oiltanker_get_state_entity(v1);
		v5->powerstation = v6;
		if (v6)
		{
			v5->powerstation_entity_id = v6->entity_id;
		}
		else
		{
			v1->sprite->x_speed = 0;
			v1->sprite->y_speed = 0;
		}
	}
	v7 = v2->powerstation;
	v8 = v2->powerstation_entity_id;
	v2->_4_entity = v7;
	v2->_18_entity_id = v8;
	if (v7)
	{
		v9 = v7->stru60.ptr_14;
		v10 = *(_DWORD *)(v9 + 4);
		v11 = *(_DWORD *)(v9 + 8);
		if (!v10 && !v11)
		{
			v10 = -8192;
			v11 = 0x2000;
		}
		v7->sprite->field_88_unused = 1;
		v1->sprite_x_2 = v10 + v2->_4_entity->sprite->x;
		v12 = v2->_4_entity->sprite->y;
		v1->_DC_order = ENTITY_ORDER_7;
		v1->mode_arrive = entity_mode_4449D0_oiltanker;
		v1->sprite_y_2 = v11 + v12;
		entity_mode_move_attack(v1);
	}
	else
	{
		v1->mode = entity_mode_444590_oiltanker;
	}
}

//----- (004448C0) --------------------------------------------------------
void entity_mode_4448C0_oiltanker(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1
	int v3; // ecx@1
	Entity *v4; // eax@1
	int *v5; // eax@2
	EntityOilTankerState *v6; // ebx@7
	Entity *v7; // eax@7
	Entity *v8; // eax@10
	int v9; // edx@10
	int v10; // edx@12
	int v11; // ecx@12
	int v12; // edx@12
	int v13; // ecx@15

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	v3 = 0;
	v4 = v2->drillrig;
	if (v4)
	{
		v5 = (int *)v4->state;
		if (v5)
			v3 = *v5;
		if (!v3)
			v2->drillrig = 0;
	}
	v1->sprite->x_speed = 0;
	v1->sprite->y_speed = 0;
	v1->sprite->x_speed = 0;
	v1->sprite->y_speed = 0;
	v1->script->event_handler = EventHandler_OilTanker;
	if (!v2->drillrig)
	{
		v6 = (EntityOilTankerState *)v1->state;
		v6->array_20_size = 0;
		v6->array_20[0] = 0;
		script_trigger_event_group(v1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_DRILLRIG_HANDLER);
		v7 = entity_444BE0_oiltanker_get_state_entity(v1);
		v6->drillrig = v7;
		if (v7)
		{
			v6->drillrig_entity_id = v7->entity_id;
		}
		else
		{
			v1->sprite->x_speed = 0;
			v1->sprite->y_speed = 0;
		}
	}
	v8 = v2->drillrig;
	v9 = v2->drillrig_entity_id;
	v2->_4_entity = v8;
	v2->_18_entity_id = v9;
	if (v8)
	{
		v10 = v8->stru60.ptr_14;
		v11 = *(_DWORD *)(v10 + 4);
		v12 = *(_DWORD *)(v10 + 8);
		if (!v11 && !v12)
		{
			v11 = -7168;
			v12 = 11520;
		}
		v1->sprite_x_2 = v11 + v8->sprite->x;
		v13 = v2->_4_entity->sprite->y;
		v1->_DC_order = ENTITY_ORDER_7;
		v1->mode_arrive = entity_mode_444630_oiltanker;
		v1->sprite_y_2 = v12 + v13;
		entity_mode_move_attack(v1);
	}
	else
	{
		v1->mode = entity_mode_4444F0_oiltanker;
	}
}

//----- (004449D0) --------------------------------------------------------
void entity_mode_4449D0_oiltanker(Entity *a1)
{
	a1->sprite->x_speed = 0;
	a1->sprite->y_speed = 0;
    entity_load_idle_mobd(a1);

	if (!entity_advance_mobd_rotation(&a1->current_mobd_lookup_idx, 160, a1->stats->turning_speed))
		a1->mode = entity_mode_444A40_oiltanker;
	script_445370_yield_to_main_thread(a1->script, 0x80000000, 1);
}

//----- (00444A40) --------------------------------------------------------
void entity_mode_444A40_oiltanker(Entity *a1)
{
	Script *v1; // ST00_4@1

	a1->sprite->x_speed = -(a1->stats->speed * _4731A8_speeds[__47CFC4_mobd_lookup_speeds[a1->current_mobd_lookup_idx + 1]] >> 6);
	a1->sprite->y_speed = -(-entity_get_mobd_speed_y(a1));
	v1 = a1->script;
	a1->mode = entity_mode_444B40_oiltanker_unload_oil;
	script_445370_yield_to_main_thread(v1, 0x80000000, 80);
}

//----- (00444AB0) --------------------------------------------------------
void entity_mode_444AB0_oiltanker(Entity *a1)
{
	EntityOilTankerState *v1; // edx@1
	Entity *v2; // eax@1
	int v3; // eax@3
	Script *v4; // ST00_4@5

	v1 = (EntityOilTankerState *)a1->state;
	v2 = v1->_4_entity;
	if (v2)
	{
		if (v2->entity_id == v1->_18_entity_id)
		{
			v3 = (int)v2->state;
			if (v3)
				*(_DWORD *)(v3 + 24) = 0;
		}
	}
	a1->sprite->x_speed = a1->stats->speed * _4731A8_speeds[__47CFC4_mobd_lookup_speeds[a1->current_mobd_lookup_idx + 1]] >> 6;
	a1->sprite->y_speed = -entity_get_mobd_speed_y(a1);
	v4 = a1->script;
	a1->mode = entity_mode_4448C0_oiltanker;
	script_445370_yield_to_main_thread(v4, 0x80000000, 80);
}

//----- (00444B40) --------------------------------------------------------
void entity_mode_444B40_oiltanker_unload_oil(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	a1->sprite->x_speed = 0;
	a1->sprite->y_speed = 0;
	entity_40DF50_boxd_update_map_tile(a1, 0);
	if (v2->_0_oil_loaded > 0)
	{
		v1->mode = entity_mode_444B40_oiltanker_unload_oil;
		v2->_0_oil_loaded -= 20;
		if (v1->player_side == player_side)
			sound_play(SOUND_TANKER_OIL_UNLOADING, 0, _4690A8_unit_sounds_volume, 16, 0);
		add_integer((int *)&game_globals_per_player + v1->player_side, 20);
		entity_4107B0_oiltanker_oil_bar(v1);
		script_445370_yield_to_main_thread(v1->script, 0x80000000, 20);
	}
	else
	{
		v1->mode = entity_mode_444AB0_oiltanker;
	}
}

//----- (00444BE0) --------------------------------------------------------
Entity *entity_444BE0_oiltanker_get_state_entity(Entity *a1)
{
	EntityOilTankerState *v1; // eax@1
	int v2; // ebp@1
	int v3; // edi@1
	Entity **v4; // eax@2
	Entity *v5; // eax@2
	Sprite *v6; // esi@3
	Sprite *v7; // edx@3
	int v8; // ebx@3
	int v9; // ecx@3
	int v10; // eax@3
	int v11; // ecx@5
	int v12; // edx@5
	int v13; // edx@6
	Entity **v14; // ebp@9
	Sprite *v15; // edx@10
	int v16; // eax@10
	int v17; // eax@11
	int v18; // edx@13
	int v19; // edx@14
	int v20; // eax@16
	Entity *result; // eax@19
	int v22; // [sp+10h] [bp-14h]@8
	Entity **v23; // [sp+14h] [bp-10h]@2
	int v24; // [sp+18h] [bp-Ch]@1
	int v25; // [sp+20h] [bp-4h]@1

	v1 = (EntityOilTankerState *)a1->state;
	v2 = v1->array_20_size;
	v3 = 0;
	v25 = v2;
	v24 = 0;
	if (v2 && (v4 = v1->array_20, v23 = v4, (v5 = *v4) != 0))
	{
		v6 = a1->sprite;
		v7 = v5->sprite;
		v8 = v6->x;
		v9 = v7->x;
		v10 = v6->x - v9;
		if (v10 <= 0)
			v10 = v9 - v8;
		v11 = v6->y;
		v12 = v7->y;
		if (v11 - v12 <= 0)
			v13 = v12 - v11;
		else
			v13 = v11 - v12;
		v22 = v10 + v13;
		if (v2 > 0)
		{
			v14 = v23;
			do
			{
				v15 = (*v14)->sprite;
				v16 = v15->x;
				if (v8 - v16 <= 0)
					v17 = v16 - v8;
				else
					v17 = v8 - v16;
				v18 = v15->y;
				if (v11 - v18 <= 0)
					v19 = v18 - v11;
				else
					v19 = v11 - v18;
				v20 = v19 + v17;
				if (v20 <= v22)
				{
					v22 = v20;
					v24 = v3;
				}
				++v3;
				++v14;
			} while (v3 < v25);
		}
		result = v23[v24];
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00444CC0) --------------------------------------------------------
void entity_mode_444CC0_oiltanker(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1
	Entity *v3; // eax@1

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	v2->array_20_size = 0;
	v2->array_20[0] = 0;
	script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_POWER_STATION_HANDLER);
	v3 = entity_444BE0_oiltanker_get_state_entity(v1);
	v2->powerstation = v3;
	if (v3)
	{
		v2->powerstation_entity_id = v3->entity_id;
	}
	else
	{
		v1->sprite->x_speed = 0;
		v1->sprite->y_speed = 0;
	}
}

//----- (00444D10) --------------------------------------------------------
void entity_mode_444D10_oiltanker(Entity *a1)
{
	Entity *v1; // esi@1
	EntityOilTankerState *v2; // edi@1
	Entity *v3; // eax@1

	v1 = a1;
	v2 = (EntityOilTankerState *)a1->state;
	v2->array_20_size = 0;
	v2->array_20[0] = 0;
	script_trigger_event_group(a1->script, EVT_MSG_BUILDING_COMPLETE, 0, SCRIPT_DRILLRIG_HANDLER);
	v3 = entity_444BE0_oiltanker_get_state_entity(v1);
	v2->drillrig = v3;
	if (v3)
	{
		v2->drillrig_entity_id = v3->entity_id;
	}
	else
	{
		v1->sprite->x_speed = 0;
		v1->sprite->y_speed = 0;
	}
}

//----- (00444D60) --------------------------------------------------------
void EventHandler_OilTanker(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // edi@1
	Entity *v5; // esi@3
	void *v6; // eax@3
	Entity *v7; // ecx@8
	int v8; // ecx@10
	int v9; // ecx@13
	int v10; // ecx@15
	int v11; // esi@28
	int v12; // ecx@29
	enum UNIT_ID v13; // eax@30
	_DWORD *v14; // eax@32
	Entity *v15; // ecx@35
	int v16; // ecx@37
	int v17; // eax@39
	Entity *v18; // ecx@45
	int v19; // ecx@47
	int v20; // eax@49
	Script *v21; // [sp-Ch] [bp-18h]@58

	v4 = 0;
	if (sender)
		v4 = (Entity *)sender->param;
	v5 = (Entity *)receiver->param;
	v6 = v5->state;
	if (!v5->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v5);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v5);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v5);
			break;
		case EVT_MSG_1528:
			v7 = (Entity *)*((_DWORD *)v6 + 1);
			if (v7 && v7->entity_id == *((_DWORD *)v6 + 6))
			{
				v8 = (int)v7->state;
				if (v8)
					*(_DWORD *)(v8 + 24) = 0;
			}
			entity_41A890_evt1528(v5);
			break;

		case EVT_ENTITY_MOVE:
			v9 = *((_DWORD *)v6 + 1);
			if (v9)
			{
				if (*(_DWORD *)(v9 + 304) == *((_DWORD *)v6 + 6))
				{
					v10 = *(_DWORD *)(v9 + 32);
					if (v10)
						*(_DWORD *)(v10 + 24) = 0;
				}
			}
			entity_move(v5, (_47CAF0_task_attachment1_move_task *)param);
			break;

		case EVT_MSG_1507_stru11:
			entity_41A850_evt1507_mess_with_stru11(v5, param);
			break;
		case EVT_MSG_1509_stru11:
			entity_41A980_evt1509_unset_stru11(v5, param);
			break;
		case EVT_MSG_DAMAGE:
			entity_41A610_evt1503(v5, param);
			entity_410640_tanker_status_bar(v5);
			break;
		case EVT_MSG_1497:
			if (player_side == v5->player_side && !v5->_12C_prison_bunker_spawn_type)
			{
				v5->_12C_prison_bunker_spawn_type = 1000;
				if (is_player_faction_evolved())
					sound_play(SOUND_132, 0, _4690A8_unit_sounds_volume, 16, 0);
				else
					sound_play(SOUND_60, 0, _4690A8_unit_sounds_volume, 16, 0);
			}
			break;
		case EVT_MSG_COUNT_BUILDINGS_OF_THE_SAME_TYPE:
			if (!v4->destroyed && !entity_402AC0_is_mode_402AB0(v4))
			{
				v11 = (int)v5->state;
				if (v4->entity_id)
				{
					v12 = *(_DWORD *)(v11 + 28);
					if (v12 != 20)
					{
						if ((v13 = v4->unit_id, v13 != 47) && v13 != 46 || (v14 = (int *)v4->state) != 0 && *v14)
						{
							*(_DWORD *)(v11 + 4 * v12 + 32) = (int)v4;
							++*(_DWORD *)(v11 + 28);
						}
					}
				}
			}
			break;
		case EVT_MSG_1542_tanker_set_drillrig:
			v15 = (Entity *)*((_DWORD *)v6 + 1);
			if (v15)
			{
				if (v15->entity_id == *((_DWORD *)v6 + 6))
				{
					v16 = (int)v15->state;
					if (v16)
						*(_DWORD *)(v16 + 24) = 0;
				}
			}
			v17 = (int)v5->state;
			if (*(_DWORD *)(v17 + 12) == *(_DWORD *)(v17 + 4))
				v5->mode = entity_mode_4448C0_oiltanker;
			*(_DWORD *)(v17 + 12) = (int)param;
			*(_DWORD *)(v17 + 16) = *((_DWORD *)param + 76);
			if (v5->player_side == player_side)
			{
				if (v5->unit_id == UNIT_STATS_MUTE_TANKER)
					sound_play(SOUND_131, 0, _4690A8_unit_sounds_volume, 16, 0);
				else
					sound_play(SOUND_49, 0, _4690A8_unit_sounds_volume, 16, 0);
			}
			break;
		case EVT_MSG_1541_tanker_set_base:
			v18 = (Entity *)*((_DWORD *)v6 + 1);
			if (v18)
			{
				if (v18->entity_id == *((_DWORD *)v6 + 6))
				{
					v19 = (int)v18->state;
					if (v19)
						*(_DWORD *)(v19 + 24) = 0;
				}
			}
			v20 = (int)v5->state;
			if (*(_DWORD *)(v20 + 8) == *(_DWORD *)(v20 + 4))
				v5->mode = entity_mode_4447C0_oiltanker;
			*(_DWORD *)(v20 + 8) = (int)param;
			*(_DWORD *)(v20 + 20) = *((_DWORD *)param + 76);
			if (v5->player_side == player_side)
			{
				if (v5->unit_id == UNIT_STATS_MUTE_TANKER)
					sound_play(SOUND_133, 0, _4690A8_unit_sounds_volume, 16, 0);
				else
					sound_play(SOUND_43, 0, _4690A8_unit_sounds_volume, 16, 0);
			}
			break;
		case EVT_MSG_1546_repair_at_station:
			entity_41A470(v5, (Entity *)param);
			break;
		case EVT_MSG_1540:
			if (*((Entity **)v6 + 1) == v4)
			{
				if (v5->mode == entity_mode_4446B0_oiltanker_load_oil)
				{
					v21 = v5->script;
					goto LABEL_65;
				}
				*((_DWORD *)v6 + 3) = 0;
				v5->mode = entity_mode_4448C0_oiltanker;
			}
			else if (*((Entity **)v6 + 3) == v4)
			{
				*((_DWORD *)v6 + 3) = 0;
			}
			break;
		case EVT_MSG_1539:
			if (*((Entity **)v6 + 1) == v4)
			{
				if (v5->mode == entity_mode_444B40_oiltanker_unload_oil)
				{
					v21 = v5->script;
				LABEL_65:
					script_445370_yield_to_main_thread(v21, 0x80000000, 1);
					v5->hitpoints = 0;
					v5->mode = entity_419560_on_death;
					v5->destroyed = 1;
				}
				else
				{
					*((_DWORD *)v6 + 2) = 0;
					v5->mode = entity_mode_4447C0_oiltanker;
				}
			}
			else if (*((Entity **)v6 + 2) == v4)
			{
				*((_DWORD *)v6 + 2) = 0;
			}
			break;
		default:
			return;
		}
	}
}

//----- (00445650) --------------------------------------------------------
void coroutine_main()
{
    void(*script_main)(Script *); // ST04_4@1

    Script *arg = task_creation_handler_arg;
    script_main = task_creation_handler;

    log("Coroutine #%u %s (%08X, %08X), created", coroutine_current->id, coroutine_current->debug_handler_name, script_main, arg);

    coroutine_current->yield_to->resume();

    log("Coroutine #%u %s (%08X, %08X), start", coroutine_current->id, coroutine_current->debug_handler_name, script_main, arg);
    script_main(arg);

    log("Coroutine #%u %s (%08X, %08X), exit", coroutine_current->id, coroutine_current->debug_handler_name, script_main, arg);
    script_yield(arg);
}

//----- (00445690) --------------------------------------------------------
bool render_string_list_alloc()
{
	BOOL result; // eax@2
	int v1; // eax@5
	int v2; // eax@7

	stru8_list = (stru8 *)malloc(0x1800u);
	if (stru8_list)
	{
		render_string_list = (RenderString *)malloc(0x200u);
		if (render_string_list)
		{
			stru8_list_allocated = 1;
			stru8_list_size = 768;
			v1 = 0;
			do
			{
				stru8_list[v1].next = &stru8_list[v1 + 1];
				++v1;
			} while (v1 < 767);
			stru8_list[767].next = 0;
			stru8_list_head = stru8_list;
			v2 = 0;
			do
			{
				render_string_list[v2].next = &render_string_list[v2 + 1];
				++v2;
			} while (v2 < 15);
			render_string_list[15].next = 0;
			render_string_list_47C784 = 0;
			render_string_list_free_pool = render_string_list;
			result = 1;
		}
		else
		{
			free(stru8_list);
			stru8_list_allocated = 0;
			result = 0;
		}
	}
	else
	{
		stru8_list_allocated = 0;
		result = 0;
	}
	return result;
}
// 47C76C: using guessed type int stru8_list_size;
// 47C770: using guessed type int stru8_list_allocated;

//----- (00445770) --------------------------------------------------------
void render_string_445770(RenderString *a1, const char *text, DataMobdItem *a3)
{
	const char *v3; // edi@1
	char i; // bl@1
	int v5; // edx@2
	int v6; // esi@2
	char v7; // al@3
	int v8; // ebp@7
	int v9; // eax@11
	int v10; // esi@13
	stru8 *v11; // esi@17
	int j; // eax@17
	int v13; // eax@20
    DataMobdItem_stru0 *v14; // edx@22

	v3 = text;
	for (i = *text; *v3; i = *v3)
	{
		v5 = 0;
		v6 = 0;
		if (i != ' ')
		{
			v7 = i;
			do
			{
				if (!v7)
					break;
				if (v7 == 10)
					break;
				v7 = v3[v6++ + 1];
			} while (v7 != ' ');
		}
		v8 = v6;
		if (!v6)
			v8 = 1;
		if (i == '\n' || v8 > a1->field_C - a1->field_18 - 2)
		{
			v9 = a1->field_10;
			if (v9 > 1 && a1->num_lines >= v9 - 2)
				return;
			v10 = a1->num_lines;
			a1->field_18 = 0;
			a1->num_lines = v10 + 1;
			i = *v3;
			if (*v3 == 32)
				v5 = 1;
		}
		if (i == '\n' || v5)
		{
			++v3;
		}
		else
		{
			v11 = a1->pstru8;
			for (j = a1->field_18 + (a1->field_10 > 1) + a1->field_C * ((a1->field_10 > 1) + a1->num_lines); j; --j)
				v11 = v11->next;
			if (v8)
			{
				v13 = v8;
				do
				{
					if (a3)
						v14 = a3->_[*v3 + 1];
					else
						v14 = a1->mobd_font__see_sub405A60->_[*v3 + 1];
					++v3;
					v11->drawjob->job_details.image = v14->sprt;
					v11 = v11->next;
					--v13;
					++a1->field_18;
				} while (v13);
			}
		}
	}
}

//----- (00445870) --------------------------------------------------------
RenderString *render_string_create(stru1_draw_params *a1, DataMobdItem *custom_font, int a3, int a4, int a5, int a6, int z_index, int a8, int a9)
{
	DataMobdItem *v9; // ebp@1
	RenderString *result; // eax@2
	int v11; // edx@3
	RenderString *v12; // ecx@5
	stru8 *v13; // esi@6
	int v14; // edi@6
	int v15; // ebx@6
	DrawJob *v16; // eax@7
	DataMobdItem_stru0 *v17; // ecx@11
	stru8 *v18; // eax@28
	int v19; // [sp+10h] [bp-14h]@6
	int v20; // [sp+14h] [bp-10h]@3
	stru1_draw_params *v21; // [sp+1Ch] [bp-8h]@1
	RenderString *v22; // [sp+20h] [bp-4h]@5

	v9 = custom_font;
	v21 = a1;
	if (!stru8_list_allocated)
		return 0;
	v11 = a5 * a6;
	v20 = a5 * a6;
	if (a5 * a6 > stru8_list_size)
		return 0;
	result = render_string_list_free_pool;
	v12 = render_string_list_free_pool;
	v22 = render_string_list_free_pool;
	if (render_string_list_free_pool)
	{
		render_string_list_free_pool = render_string_list_free_pool->next;
		v13 = stru8_list_head;
		stru8_list_size -= v11;
		v19 = a4;
		v14 = a3;
		v15 = a3 + a8 * (a5 - 1);
		if (v11)
		{
			while (1)
			{
				v16 = draw_list_add(0, 0);
				v13->drawjob = v16;
				if (!v16)
					return 0;
				if (a6 == 1)
					break;
				if (v19 == a4)
				{
					if (v14 == a3)
					{
						v17 = v9->_[1];
					}
					else if (v14 == v15)
					{
						v17 = v9->_[3];
					}
					else
					{
						v17 = v9->_[2];
					}
					goto LABEL_26;
				}
				if (v19 == a4 + a9 * (a6 - 1))
				{
					if (v14 == a3)
					{
						v17 = v9->_[6];
					}
					else if (v14 == v15)
					{
						v17 = v9->_[8];
					}
					else
					{
						v17 = v9->_[7];
					}
					goto LABEL_26;
				}
				if (v14 == a3)
				{
					v17 = v9->_[4];
				}
				else
				{
					if (v14 != v15)
						break;
					v17 = v9->_[5];
				}
			LABEL_26:
				v16->job_details.image = v17->sprt;
				v13->drawjob->job_details.x = v14 - v17->x_offset;
				v13->drawjob->job_details.y = v19 - v17->y_offset;
				v13->drawjob->job_details.z_index = z_index;
				v13->drawjob->job_details.params = v21;
				v14 += a8;
				if (v14 > v15)
				{
					v14 = a3;
					v19 += a9;
				}
				v18 = v13;
				v13 = v13->next;
				if (!--v20)
				{
					v12 = v22;
					goto LABEL_32;
				}
			}
			v17 = v9->_[33];
			goto LABEL_26;
		}
		v18 = (stru8 *)a3;
	LABEL_32:
		v12->pstru8 = stru8_list_head;
		stru8_list_head = v13;
		v18->next = 0;
		v12->mobd_font__see_sub405A60 = v9;
		v12->field_C = a5;
		v12->field_10 = a6;
		v12->field_18 = 0;
		v12->num_lines = 0;
		v12->next = render_string_list_47C784;
		if (render_string_list_47C784)
			render_string_list_47C784->prev = v12;
		v12->prev = 0;
		render_string_list_47C784 = v12;
		result = v12;
	}
	return result;
}

//----- (00445A60) --------------------------------------------------------
void render_string_list_remove(RenderString *a1)
{
	stru8 *v1; // eax@1
	stru8 *v2; // edx@2
	RenderString *v3; // eax@5

	v1 = a1->pstru8;
	if (v1)
	{
		do
		{
			v1->drawjob->flags |= 0x80000000;
			v2 = v1;
			v1 = v1->next;
		} while (v1);
	}
	else
	{
		v2 = nullptr;
	}
	v2->next = stru8_list_head;
	stru8_list_head = a1->pstru8;
	stru8_list_size += a1->field_C * a1->field_10;
	v3 = a1->prev;
	if (v3)
		v3->next = a1->next;
	else
		render_string_list_47C784 = a1->next;
	if (a1->next)
		a1->next->prev = a1->prev;
	a1->next = render_string_list_free_pool;
	render_string_list_free_pool = a1;
}
// 47C76C: using guessed type int stru8_list_size;

//----- (00445AE0) --------------------------------------------------------
int render_string_445AE0(RenderString *a1)
{
	stru8 *v1; // edx@1
	int v2; // esi@1
	int result; // eax@1

	v1 = a1->pstru8;
	v2 = 0;
	for (result = 0; v1; v1 = v1->next)
	{
		if (v2 > 0 && v2 < a1->field_10 - 1 && result > 0 && result < a1->field_C - 1)
			v1->drawjob->job_details.image = a1->mobd_font__see_sub405A60->_[33]->sprt;
		if (++result >= a1->field_C)
		{
			result = 0;
			++v2;
		}
	}
	return result;
}

//----- (00445B30) --------------------------------------------------------
void render_string_list_free()
{
	stru8 **v0 = 0; // ecx@0
	RenderString *i; // edx@2
	stru8 *j; // eax@3
	RenderString **v3; // eax@5

	if (stru8_list_allocated)
	{
		for (i = render_string_list_47C784; render_string_list_47C784; i = render_string_list_47C784)
		{
			for (j = i->pstru8; j; j = j->next)
			{
				j->drawjob->flags |= 0x80000000;
				v0 = (stru8 **)j;
			}
			*v0 = stru8_list_head;
			stru8_list_head = i->pstru8;
			stru8_list_size += i->field_C * i->field_10;
			v3 = &i->prev->next;
			if (v3)
				*v3 = i->next;
			else
				render_string_list_47C784 = i->next;
			if (i->next)
				i->next->prev = i->prev;
			i->next = render_string_list_free_pool;
			render_string_list_free_pool = i;
		}
		free(stru8_list);
		free(render_string_list);
		stru8_list_allocated = 0;
	}
}
// 47C76C: using guessed type int stru8_list_size;
// 47C770: using guessed type int stru8_list_allocated;

//----- (00445C00) --------------------------------------------------------
int _445C00_text(const char *str, int num_bytes)
{
	char v2; // al@2
	int v3; // edx@3
	int v4; // edi@3
	int v5; // ebp@4
	int v6; // esi@4
	char v7; // bl@5
	int result; // eax@20
	int v9; // [sp+10h] [bp-4h]@1

	v9 = num_bytes;
	if (str && (v2 = *str) != 0)
	{
		v3 = 1;
		v4 = 0;
		do
		{
			v5 = 0;
			v6 = 0;
			if (v2 != ' ')
			{
				v7 = v2;
				do
				{
					if (!v7)
						break;
					if (v7 == '\n')
						break;
					v7 = str[v6++ + 1];
				} while (v7 != ' ');
			}
			if (!v6)
				v6 = 1;
			if (v2 == '\n' || v6 > v9 - v4)
			{
				v4 = 0;
				++v3;
				if (v2 == ' ')
					v5 = 1;
			}
			if (v2 == '\n' || v5)
			{
				++str;
			}
			else
			{
				v4 += v6;
				str += v6;
			}
			v2 = *str;
		} while (*str);
		result = v3;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00445C80) --------------------------------------------------------
int _445C80_text(const char *a1, int a2)
{
	char v2; // al@2
	int v3; // edi@3
	int v4; // edx@3
	int v5; // ebp@4
	int v6; // esi@4
	char v7; // bl@5
	int result; // eax@30
	int v9; // [sp+10h] [bp-8h]@3
	int v10; // [sp+14h] [bp-4h]@1

	v10 = a2;
	if (a1 && (v2 = *a1) != 0)
	{
		v3 = 0;
		v9 = 0;
		v4 = 0;
		do
		{
			v5 = 0;
			v6 = 0;
			if (v2 != ' ')
			{
				v7 = v2;
				do
				{
					if (!v7)
						break;
					if (v7 == '\n')
						break;
					v7 = a1[v6++ + 1];
				} while (v7 != ' ');
			}
			if (!v6)
				v6 = 1;
			if (v2 == '\n' || v6 > v10 - v3)
			{
				if (v4)
					--v3;
				if (v3 > v9)
					v9 = v3;
				v3 = 0;
				if (v2 == ' ')
					v5 = 1;
			}
			v4 = 0;
			if (v2 == '\n' || v5)
			{
				++a1;
			}
			else
			{
				if (v2 == ' ')
					v4 = 1;
				v3 += v6;
				a1 += v6;
			}
			v2 = *a1;
		} while (*a1);
		if (v4)
			--v3;
		if (v3 > v9)
			v9 = v3;
		result = v9;
	}
	else
	{
		result = 0;
	}
	return result;
}

//----- (00445D40) --------------------------------------------------------
bool entity_check_type(Entity *a1, int a2)
{
	int v2; // eax@2

	if (!_47C6D8_use__466098_cost_multipliers)
	{
		if (single_player_game)
		{
			if (player_side == 2)
			{
				v2 = 1;
				return v2 && a2 == 1 && a1->unit_id == UNIT_STATS_MUTE_BLACKSMITH;
			}
		}
		else if (netz_47A740[player_side + 1].field_A)
		{
			v2 = 1;
			return v2 && a2 == 1 && a1->unit_id == UNIT_STATS_MUTE_BLACKSMITH;
		}
		v2 = 0;
		return v2 && a2 == 1 && a1->unit_id == UNIT_STATS_MUTE_BLACKSMITH;
	}
	v2 = _47C658_faction_index;
	return v2 && a2 == 1 && a1->unit_id == UNIT_STATS_MUTE_BLACKSMITH;
}
// 468B5C: using guessed type int single_player_game;
// 47C658: using guessed type char _47C658_faction_index;

//----- (00445DA0) --------------------------------------------------------
void sidebar_button_handler_infantry_open(SidebarButton *a1)
{
	ProductionGroup *v1; // edi@1
	int v2; // esi@1
	int v3; // ebp@6
	Sprite *v4; // eax@8
	int v5; // ecx@9
	ProductionOption *i; // esi@10

	v1 = _47C79C_infantry_production_group_last;
	v2 = 0;
	do
	{
		if (_47C990_production.sidebar_open_mask[v2])
		{
			script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, _47CA18_sidebar_production_buttons[v2]->task);
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA18_sidebar_production_buttons[v2]->task);
		}
		++v2;
	} while (v2 < 5);
	if ((ProductionGroup **)v1 != &_47C798_infantry_production_group_first)
	{
		v3 = 256;
		do
		{
			v1->sidebar = sidebar_list_create(0, 0, v3, 128, 0);
			if (!v1->sprite)
			{
				v4 = sprite_create(MOBD_SIDEBAR_BUTTONS, 0, v1->sidebar->sprite);
				if (v4)
				{
					v1->sprite = v4;
					v4->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
					v5 = v4->y;
					v4->field_88_unused = 1;
					v4->y = v5 - 1024;
					v4->z_index = 3;
					sprite_load_mobd(
						v4,
						_4701B8_mobd_lookups_per_ProductionGroup_field44[2 * v1->_44_mobd_lookup_idx + 1]);
				}
			}
			for (i = v1->prev_option; (ProductionOption **)i != &v1->next_option; i = i->prev)
				sidebar_add_button_4(
					v1->sidebar,
					i->mobd_lookup_table_offset,
					sidebar_button_handler_order_unit_click,
					(int)&i->_14_pcost,
					i->cost,
					i,
					i->unit_id);
			v1 = v1->prev;
			v3 -= 32;
		} while ((ProductionGroup **)v1 != &_47C798_infantry_production_group_first);
	}
	_47C990_production.sidebar_open_mask[0] = 1;
}

//----- (00445EC0) --------------------------------------------------------
void sidebar_button_handler_order_unit_click(SidebarButton *a1)
{
	ProductionOption *v1; // esi@1

	v1 = (ProductionOption *)a1->param;
	if (!_44CDC0_sidebar_is_units_limit())
		stru37_list_427E90_enqueue_infantry(
		(int *)&game_globals_per_player + player_side,
			&v1->_14_pcost,
			(v1->cost << 8) / v1->production_time_x60,
			task_mobd17_cursor,
			v1,
			v1->field_2C);
}

//----- (00445F00) --------------------------------------------------------
void sidebar_button_handler_infantry_close(SidebarButton *a1)
{
	ProductionGroup *i; // esi@1
	Sprite *v2; // ecx@3

	for (i = _47C798_infantry_production_group_first;
		(ProductionGroup **)i != &_47C798_infantry_production_group_first;
		i = i->next)
	{
		if (i->sidebar)
		{
			v2 = i->sprite;
			if (v2)
			{
				sprite_list_remove(v2);
				i->sprite = 0;
			}
			sidebar_list_remove(i->sidebar);
			i->sidebar = 0;
		}
	}
	_47C990_production.sidebar_open_mask[0] = 0;
}

//----- (00445F50) --------------------------------------------------------
void sidebar_button_handler_vehicles_open(SidebarButton *a1)
{
	ProductionGroup *v1; // edi@1
	int v2; // esi@1
	int v3; // ebp@6
	Sprite *v4; // eax@8
	int v5; // ecx@9
	ProductionOption *i; // esi@10

	v1 = _47C7E4_vehicles_production_group;
	v2 = 0;
	do
	{
		if (_47C990_production.sidebar_open_mask[v2])
		{
			script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, _47CA18_sidebar_production_buttons[v2]->task);
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA18_sidebar_production_buttons[v2]->task);
		}
		++v2;
	} while (v2 < 5);
	if ((ProductionGroup **)v1 != &_47C7E4_vehicles_production_group)
	{
		v3 = 256;
		do
		{
			v1->sidebar = sidebar_list_create(0, 0, v3, 160, 0);
			if (!v1->sprite)
			{
				v4 = sprite_create(MOBD_SIDEBAR_BUTTONS, 0, v1->sidebar->sprite);
				if (v4)
				{
					v1->sprite = v4;
					v4->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
					v5 = v4->y;
					v4->field_88_unused = 1;
					v4->y = v5 - 1024;
					v4->z_index = 3;
					sprite_load_mobd(
						v4,
						_4701B8_mobd_lookups_per_ProductionGroup_field44[2 * v1->_44_mobd_lookup_idx + 1]);
				}
			}
			for (i = v1->prev_option; (ProductionOption **)i != &v1->next_option; i = i->prev)
				sidebar_add_button_4(
					v1->sidebar,
					i->mobd_lookup_table_offset,
					sidebar_button_handler_order_unit_click,
					(int)&i->_14_pcost,
					i->cost,
					i,
					i->unit_id);
			v1 = v1->next;
			v3 -= 32;
		} while ((ProductionGroup **)v1 != &_47C7E4_vehicles_production_group);
	}
	_47C990_production.sidebar_open_mask[1] = 1;
}

//----- (00446070) --------------------------------------------------------
void sidebar_button_handler_vehicles_close(SidebarButton *a1)
{
	ProductionGroup *i; // esi@1
	Sprite *v2; // ecx@3

	for (i = _47C7E4_vehicles_production_group; (ProductionGroup **)i != &_47C7E4_vehicles_production_group; i = i->next)
	{
		if (i->sidebar)
		{
			v2 = i->sprite;
			if (v2)
			{
				sprite_list_remove(v2);
				i->sprite = 0;
			}
			sidebar_list_remove(i->sidebar);
			i->sidebar = 0;
		}
	}
	_47C990_production.sidebar_open_mask[1] = 0;
}

//----- (004460C0) --------------------------------------------------------
void sidebar_button_handler_airstrike_open(SidebarButton *a1)
{
	ProductionGroup *v1; // ebx@1
	int v2; // esi@1
	Sidebar *v3; // eax@6
	ProductionOption *v4; // esi@6

	v1 = _47C8CC_stru21prod_airstrike_last;
	v2 = 0;
	do
	{
		if (_47C990_production.sidebar_open_mask[v2])
		{
			script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, _47CA18_sidebar_production_buttons[v2]->task);
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA18_sidebar_production_buttons[v2]->task);
		}
		++v2;
	} while (v2 < 5);
	if ((ProductionGroup **)v1 != &_47C8C8_stru21prod_airstrike_first)
	{
		v3 = sidebar_list_create(0, 0, 256, 256, 0);
		v4 = v1->prev_option;
		for (v1->sidebar = v3; (ProductionOption **)v4 != &v1->next_option; v4 = v4->prev)
			sidebar_add_button_4(
				v1->sidebar,
				v4->mobd_lookup_table_offset,
				sidebar_button_handler_order_unit_click,
				(int)&v4->_14_pcost,
				v4->cost,
				v4,
				v4->unit_id);
	}
	_47C990_production.sidebar_open_mask[4] = 1;
}

//----- (00446170) --------------------------------------------------------
void sidebar_button_handler_airstrike_close(SidebarButton *a1)
{
	if ((ProductionGroup **)_47C8C8_stru21prod_airstrike_first != &_47C8C8_stru21prod_airstrike_first)
		sidebar_list_remove(_47C8C8_stru21prod_airstrike_first->sidebar);
	_47C990_production.sidebar_open_mask[4] = 0;
}

//----- (00446190) --------------------------------------------------------
void sidebar_button_handler_446190_open(SidebarButton *a1)
{
	SidebarButton **v1; // esi@1

	script_trigger_event(0, EVT_MSG_1519, 0, task_mobd17_cursor);
	v1 = _47CA08_sidebar_buttons;
	do
	{
		if (v1 != &_47CA08_sidebar_buttons[1])
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, (*v1)->task);
		++v1;
	} while ((int)v1 < (int) & _47CA10_sidebar_button_minimap);
}

//----- (004461E0) --------------------------------------------------------
void sidebar_button_handler_4461E0_close(SidebarButton *a1)
{
	script_trigger_event(0, EVT_MSG_1520, 0, task_mobd17_cursor);
}

//----- (00446200) --------------------------------------------------------
void sidebar_button_handler_buildings_open(SidebarButton *a1)
{
	ProductionGroup *v1; // ebx@1
	int v2; // esi@1
	Sidebar *v3; // eax@6
	ProductionOption *v4; // esi@6

	v1 = stru21prod_buildings_last;
	v2 = 0;
	do
	{
		if (_47C990_production.sidebar_open_mask[v2])
		{
			script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, _47CA18_sidebar_production_buttons[v2]->task);
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA18_sidebar_production_buttons[v2]->task);
		}
		++v2;
	} while (v2 < 5);
	if ((ProductionGroup **)v1 != &stru21prod_buildings_first)
	{
		v3 = sidebar_list_create(0, 0, 256, 192, 0);
		v4 = v1->prev_option;
		for (v1->sidebar = v3; (ProductionOption **)v4 != &v1->next_option; v4 = v4->prev)
			sidebar_add_button_1(
				v1->sidebar,
				v4->mobd_lookup_table_offset,
				sidebar_button_handler_order_building_click,
				(void *)v4->unit_id,
				(void *)v4->unit_id);
	}
	_47C990_production.sidebar_open_mask[2] = 1;
}

//----- (004462B0) --------------------------------------------------------
void sidebar_button_handler_order_building_click(SidebarButton *a1)
{
	enum UNIT_ID v1; // ecx@1
	enum UNIT_ID v2; // eax@1
	stru196 *v3; // esi@1
	int v4; // eax@6
	int v5; // ecx@6
	enum UNIT_ID v6; // esi@6

	v1 = (enum UNIT_ID)(int)a1->param;
	v2 = array_4701D8[0].unit_id;
	v3 = array_4701D8;
	_47C788_building_planner.unit_stats_idx = v1;
	if (array_4701D8[0].unit_id == v1)
	{
	LABEL_4:
		if (_44CDC0_sidebar_is_units_limit())
		{
			show_message_ex(0, aBuildingIsUnav);
		}
		else
		{
			v4 = v3->_4_x;
			v5 = v3->_8_y;
			v6 = v3->unit_id;
			_47C788_building_planner.field_4 = v4;
			_47C788_building_planner.field_8 = v5;
			_47C788_building_planner.cost = unit_stats[v6].cost;
			script_trigger_event(0, EVT_MSG_1522_plan_building_construction, &_47C788_building_planner, task_mobd17_cursor);
		}
	}
	else
	{
		while (v2 != -1)
		{
			v2 = v3[1].unit_id;
			++v3;
			if (v2 == v1)
				goto LABEL_4;
		}
	}
}
// 47C788: using guessed type BuildingPlanner _47C788_building_planner;

//----- (00446330) --------------------------------------------------------
void sidebar_button_handler_buildings_close(SidebarButton *a1)
{
	if ((ProductionGroup **)stru21prod_buildings_first != &stru21prod_buildings_first)
		sidebar_list_remove(stru21prod_buildings_first->sidebar);
	_47C990_production.sidebar_open_mask[2] = 0;
}

//----- (00446350) --------------------------------------------------------
void sidebar_button_handler_towers_open(SidebarButton *a1)
{
	ProductionGroup *v1; // ebx@1
	int v2; // esi@1
	Sidebar *v3; // eax@6
	ProductionOption *v4; // esi@6

	v1 = _47C880_stru21prod_towers_last;
	v2 = 0;
	do
	{
		if (_47C990_production.sidebar_open_mask[v2])
		{
			script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, _47CA18_sidebar_production_buttons[v2]->task);
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA18_sidebar_production_buttons[v2]->task);
		}
		++v2;
	} while (v2 < 5);
	if ((ProductionGroup **)v1 != &_47C87C_stru21prod_towers_first)
	{
		v3 = sidebar_list_create(0, 0, 256, 224, 0);
		v4 = v1->prev_option;
		for (v1->sidebar = v3; (ProductionOption **)v4 != &v1->next_option; v4 = v4->prev)
			sidebar_add_button_1(
				v1->sidebar,
				v4->mobd_lookup_table_offset,
				sidebar_button_handler_order_building_click,
				(void *)v4->unit_id,
				(void *)v4->unit_id);
	}
	_47C990_production.sidebar_open_mask[3] = 1;
}

//----- (00446400) --------------------------------------------------------
void sidebar_button_handler_towers_close(SidebarButton *a1)
{
	if ((ProductionGroup **)_47C87C_stru21prod_towers_first != &_47C87C_stru21prod_towers_first)
		sidebar_list_remove(_47C87C_stru21prod_towers_first->sidebar);
	_47C990_production.sidebar_open_mask[3] = 0;
}

//----- (00446420) --------------------------------------------------------
ProductionGroup *entity_building_create_production_group(Entity *a1, enum PRODUCTION_GROUP_ID production_group)
{
	enum PRODUCTION_GROUP_ID v2; // ebx@1
	ProductionGroup *v3; // esi@3
	PRODUCTION_GROUP_ID v5; // edi@8
	int v6; // ecx@8
	int v7; // eax@9
	int v8; // edx@20
	int v9; // eax@20
	int v10; // eax@26
	ProductionGroup *v11; // eax@36
	ProductionGroup *v12; // ecx@37
	ProductionGroup *v13; // ecx@41
	ProductionGroup *v14; // edx@44
	int v15; // eax@46
	Entity *a1a; // [sp+10h] [bp-8h]@1
	int sidebar_open_handler_called; // [sp+14h] [bp-4h]@1

	v2 = production_group;
	a1a = a1;
	sidebar_open_handler_called = 0;
	if (_47C990_production.sidebar_open_mask[production_group])
	{
		_470478_sidebar_button_open_handlers[production_group](0);
		sidebar_open_handler_called = 1;
	}
	v3 = production_group_free_pool;
	if (production_group_free_pool)
		production_group_free_pool = production_group_free_pool->next;
	else
		v3 = 0;
	if (!v3)
		return 0;
	v5 = v2;
	v6 = 1;
	if (_47C6D8_use__466098_cost_multipliers)
	{
		v7 = _47C658_faction_index;
		goto LABEL_16;
	}
	if (single_player_game)
	{
		if (player_side == 2)
		{
			v7 = 1;
			goto LABEL_16;
		}
	}
	else if (netz_47A740[player_side + 1].field_A)
	{
		v7 = 1;
		goto LABEL_16;
	}
	v7 = 0;
LABEL_16:
	if (v7 && v2 == 1 && a1a->unit_id == UNIT_STATS_MUTE_BLACKSMITH)
		v5 = PRODUCTION_GROUP_BLACKSMITH;
	v8 = _47C978_production.sidebar_open_mask[v5];
	v9 = 0;
	while (v8 & v6)
	{
		++v9;
		v6 *= 2;
		if (v9 >= 3)
			goto LABEL_25;
	}
	_47C978_production.sidebar_open_mask[v5] = v8 | v6;
LABEL_25:
	v3->_44_mobd_lookup_idx = v9;
	v3->_C_entity = a1a;
	v3->group_id = v2;
	v3->field_20 = -1;
	v3->field_40 = v9 + 16 * v2;
	v3->prev_option = (ProductionOption *)&v3->next_option;
	v3->next_option = (ProductionOption *)&v3->next_option;
	if (!_47C6D8_use__466098_cost_multipliers)
	{
		if (single_player_game)
		{
			if (player_side == 2)
			{
				v10 = 1;
				goto LABEL_33;
			}
		}
		else if (netz_47A740[player_side + 1].field_A)
		{
			v10 = 1;
			goto LABEL_33;
		}
		v10 = 0;
		goto LABEL_33;
	}
	v10 = _47C658_faction_index;
LABEL_33:
	if (v10
		&& v2 == 1
		&& a1a->unit_id == UNIT_STATS_MUTE_BLACKSMITH
		&& (v11 = _47C7E4_vehicles_production_group,
		(ProductionGroup **)_47C7E4_vehicles_production_group != &_47C7E4_vehicles_production_group))
	{
		v12 = _47C7E4_vehicles_production_group;
		if ((ProductionGroup **)_47C7E4_vehicles_production_group != &_47C7E4_vehicles_production_group)
		{
			do
			{
				if (v11->_C_entity->unit_id == UNIT_STATS_MUTE_BLACKSMITH)
					break;
				v12 = v11;
				v11 = v11->next;
			} while ((ProductionGroup **)v11 != &_47C7E4_vehicles_production_group);
		}
		if (v11 != v12)
		{
			v12->next = v3;
			v3->prev = v12;
			v3->next = v11;
			v11->prev = v3;
			goto LABEL_46;
		}
		v13 = v11->next;
		v3->prev = v11;
		v3->next = v13;
		if (v11->next)
			v11->next->prev = v3;
	}
	else
	{
		v11 = (ProductionGroup *)&(&_47C798_infantry_production_group_first)[v2];
		v14 = (&_47C798_infantry_production_group_first)[v2];
		v3->next = v14;
		v3->prev = v11;
		v14->prev = v3;
	}
	v11->next = v3;
LABEL_46:
	v15 = a1a->unit_id;
	if (v15 >= (int)UNIT_STATS_SURV_OUTPOST && v15 <= (int)UNIT_STATS_MUTE_BEAST_ENCLOSURE)
		entity_410950(a1a, LOBYTE_HEXRAYS(_4701B8_mobd_lookups_per_ProductionGroup_field44[2 * v3->_44_mobd_lookup_idx]));
	v3->sprite = 0;
	if (sidebar_open_handler_called)
		_470490_sidebar_button_close_handlers[v2](0);
	return v3;
}
// 468B5C: using guessed type int single_player_game;
// 47C658: using guessed type char _47C658_faction_index;

//----- (00446630) --------------------------------------------------------
void production_group_enable(ProductionGroup *a1, enum UNIT_ID unit_id, int mobd_lookup_table_offset)
{
	ProductionGroup *v3; // ebp@1
	enum UNIT_ID v4; // ebx@1
	ProductionOption *v5; // eax@1
	ProductionOption *end; // edi@1
	enum PRODUCTION_GROUP_ID v7; // eax@4
	ProductionOption *v8; // esi@6
	int v9; // edx@12
	int v10; // eax@12
	ProductionOption *v11; // eax@12
	int v12; // [sp+10h] [bp-4h]@1

	v3 = a1;
	v4 = unit_id;
	v5 = a1->next_option;
	end = (ProductionOption *)&a1->next_option;
	v12 = 0;
	if ((ProductionOption **)v5 == &a1->next_option)
	{
	LABEL_4:
		v7 = a1->group_id;
		if (_47C990_production.sidebar_open_mask[v7])
		{
			_470478_sidebar_button_open_handlers[v7](0);
			v12 = 1;
		}
		v8 = production_option_list_free_pool;
		if (production_option_list_free_pool)
			production_option_list_free_pool = production_option_list_free_pool->next;
		else
			v8 = 0;
		if (v8)
		{
			if (end->next == end)
				script_trigger_event(0, EVT_MSG_1514, 0, _47CA18_sidebar_production_buttons[v3->group_id]->task);
			v8->field_2C = v3->field_40;
			v9 = (int)v3->_C_entity;
			v8->mobd_lookup_table_offset = mobd_lookup_table_offset;
			v8->stru21prod_unit_id = (UNIT_ID)v9;
			v8->unit_id = v4;
			v8->_14_pcost = 0;
			v8->field_18 = 0;
			v8->field_1C = 0;
			v8->field_20 = 0;
			v8->cost = unit_stats[v4].cost;
			v10 = unit_stats[v4].production_time;
			v8->prev = end;
			v8->production_time_x60 = 60 * v10;
			v11 = end->next;
			v8->next = end->next;
			v11->prev = v8;
			end->next = v8;
			if (v12)
				_470490_sidebar_button_close_handlers[v3->group_id](0);
		}
	}
	else
	{
		while (v5->unit_id != unit_id)
		{
			v5 = v5->next;
			if (v5 == end)
				goto LABEL_4;
		}
	}
}

//----- (00446730) --------------------------------------------------------
void production_group_disable(ProductionGroup *a1, enum UNIT_ID unit_id)
{
	ProductionGroup *v2; // ebx@1
	int v3; // ecx@1
	ProductionOption *v4; // esi@1
	ProductionOption *v5; // edi@1
	int v6; // eax@1
	enum PRODUCTION_GROUP_ID v7; // eax@7

	v2 = a1;
	v3 = 0;
	v4 = v2->next_option;
	v5 = (ProductionOption *)&v2->next_option;
	v6 = 0;
	if ((ProductionOption **)v4 != &v2->next_option)
	{
		while (v4->unit_id != unit_id)
		{
			v4 = v4->next;
			if (v4 == v5)
				goto LABEL_6;
		}
		v6 = 1;
	}
LABEL_6:
	if (v6)
	{
		v7 = v2->group_id;
		if (_47C990_production.sidebar_open_mask[v7])
		{
			_470478_sidebar_button_open_handlers[v7](0);
			v3 = 1;
		}
		v4->next->prev = v4->prev;
		v4->prev->next = v4->next;
		v4->next = production_option_list_free_pool;
		production_option_list_free_pool = v4;
		if (v5->next == v5)
		{
			_47C990_production.sidebar_open_mask[v2->group_id] = 0;
			script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA18_sidebar_production_buttons[v2->group_id]->task);
		}
		else if (v3)
		{
			_470490_sidebar_button_close_handlers[v2->group_id](0);
		}
	}
}

//----- (004467E0) --------------------------------------------------------
void production_group_4467E0(ProductionGroup *a1, enum UNIT_ID unit_id)
{
	ProductionGroup *v2; // edi@1
	enum UNIT_ID v3; // esi@1
	enum PRODUCTION_GROUP_ID v4; // eax@1
	ProductionOption *i; // eax@3
	ProductionOption *v6; // ecx@5
	int v7; // [sp+10h] [bp-4h]@1

	v2 = a1;
	v3 = unit_id;
	v7 = 0;
	v4 = a1->group_id;
	if (_47C990_production.sidebar_open_mask[v4])
	{
		_470478_sidebar_button_open_handlers[v4](0);
		v7 = 1;
	}
	for (i = v2->next_option; (ProductionOption **)i != &v2->next_option; i = i->next)
	{
		if (i->unit_id != v3)
		{
			v6 = i->prev;
			i->next->prev = v6;
			i->prev->next = i->next;
			i->next = production_option_list_free_pool;
			production_option_list_free_pool = i;
			i = v6;
		}
	}
	if (v7)
		_470490_sidebar_button_close_handlers[v2->group_id](0);
}

//----- (00446860) --------------------------------------------------------
void production_group_446860(ProductionGroup *a1)
{
	ProductionGroup *v1; // edi@1
	enum PRODUCTION_GROUP_ID v2; // eax@1
	ProductionOption *v3; // esi@3
	ProductionOption **v4; // ebx@3
	int v5; // ecx@4
	int v6; // eax@5
	enum PRODUCTION_GROUP_ID v7; // eax@17
	int v8; // [sp+10h] [bp-4h]@1

	v1 = a1;
	v8 = 0;
	v2 = a1->group_id;
	if (_47C990_production.sidebar_open_mask[v2])
	{
		_470478_sidebar_button_open_handlers[v2](0);
		v8 = 1;
	}
	v3 = v1->next_option;
	v4 = &v1->next_option;
	if ((ProductionOption **)v3 != &v1->next_option)
	{
		do
		{
			v5 = v1->group_id;
			if (_47C6D8_use__466098_cost_multipliers)
			{
				v6 = _47C658_faction_index;
				goto LABEL_12;
			}
			if (single_player_game)
			{
				if (player_side == 2)
				{
					v6 = 1;
					goto LABEL_12;
				}
			}
			else if (netz_47A740[player_side + 1].field_A)
			{
				v6 = 1;
				goto LABEL_12;
			}
			v6 = 0;
		LABEL_12:
			if (v6 && v5 == 1 && v1->_C_entity->unit_id == UNIT_STATS_MUTE_BLACKSMITH)
				v5 = 5;
			_47C978_production.sidebar_open_mask[v5] &= ~_4701A8_sidebar_mask_per_44_mobd_lookup_idx[v1->_44_mobd_lookup_idx];
			stru38_list_427FD0(&v3->_14_pcost, 0);
			v3->next->prev = v3->prev;
			v3->prev->next = v3->next;
			v3->next = production_option_list_free_pool;
			production_option_list_free_pool = v3;
			v3 = *v4;
		} while ((ProductionOption **)*v4 != v4);
	}
	v1->next->prev = v1->prev;
	v1->prev->next = v1->next;
	v1->next = production_group_free_pool;
	production_group_free_pool = v1;
	v7 = v1->group_id;
	if ((ProductionGroup **)(&_47C798_infantry_production_group_first)[v7] == &(&_47C798_infantry_production_group_first)[v7])
	{
		_47C990_production.sidebar_open_mask[v7] = 0;
		script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA18_sidebar_production_buttons[v1->group_id]->task);
	}
	else if (v8)
	{
		_470490_sidebar_button_close_handlers[v7](0);
	}
}

//----- (004469D0) --------------------------------------------------------
void sidebar_button_handler_options_open(SidebarButton *a1)
{
	script_trigger_event(0, EVT_MSG_1530_OPEN_GAME_MENU, 0, task_47C028);
}

//----- (00446E70) --------------------------------------------------------
void sidebar_button_handler_minimap_open(SidebarButton *a1)
{
    show_minimap_sprite();
}

//----- (00446E80) --------------------------------------------------------
void sidebar_button_handler_minimap_close(SidebarButton *a1)
{
    hide_minimap_sprite();
}

//----- (004469F0) --------------------------------------------------------
bool sidebar_initialize()
{
	ProductionOption *v0; // eax@1
	int v1; // ecx@2
	ProductionGroup *v2; // eax@4
	int v3; // ecx@5
	ProductionGroup *v4; // eax@7
	ProductionOption *v5; // ecx@8
	Sidebar *v6; // eax@9
	int v7; // esi@9
	SidebarButton *v8; // eax@17
	int v9; // edx@17
	SidebarButton *v10; // eax@17
	int v11; // edx@17
	SidebarButton *v12; // eax@17
	int v13; // edx@17
	SidebarButton *v14; // eax@17
	int v15; // edx@17
	SidebarButton *v16; // eax@17
	int v17; // edx@17
	SidebarButton *v18; // eax@17
	int v19; // edx@17
	SidebarButton *v20; // eax@17
	int v21; // edx@17
	Sprite *v22; // eax@18
	Sprite *v23; // eax@21

	memset(&game_globals_per_player, 0, sizeof(game_globals_per_player));
	v0 = (ProductionOption *)malloc(0x3000u);
	production_option_list = v0;
	if (!v0)
		return 0;
	production_option_list_free_pool = v0;
	v1 = 0;
	do
	{
		v0[v1].next = &v0[v1 + 1];
		v0 = production_option_list;
		++v1;
	} while (v1 < 255);
	production_option_list[255].next = 0;
	production_option_list_47C9C8 = (ProductionOption *)&production_option_list_47C9C8;
	production_option_list_47C9CC = (ProductionOption *)&production_option_list_47C9C8;
	v2 = (ProductionGroup *)malloc(0x980u);
	production_group_list = v2;
	if (!v2)
		return 0;
	production_group_free_pool = v2;
	v3 = 0;
	do
	{
		v2[v3].next = &v2[v3 + 1];
		v2 = production_group_list;
		++v3;
	} while (v3 < 31);
	production_group_list[31].next = 0;
	_47C990_production.sidebar_open_mask[0] = 0;
	_47C978_production.sidebar_open_mask[0] = 0;
	_47C990_production.sidebar_open_mask[1] = 0;
	_47C978_production.sidebar_open_mask[1] = 0;
	_47C990_production.sidebar_open_mask[2] = 0;
	_47C978_production.sidebar_open_mask[2] = 0;
	_47C990_production.sidebar_open_mask[3] = 0;
	_47C978_production.sidebar_open_mask[3] = 0;
	production_group_list_47C918 = (ProductionGroup *)&production_group_list_47C918;
	production_group_list_47C91C = (ProductionGroup *)&production_group_list_47C918;
	v4 = (ProductionGroup *) & _47C798_infantry_production_group_first;
	_47C990_production.sidebar_open_mask[4] = 0;
	_47C978_production.sidebar_open_mask[4] = 0;
	do
	{
		v4->prev = v4;
		v5 = (ProductionOption *)&v4->next_option;
		v4->next = v4;
		v4->prev_option = (ProductionOption *)&v4->next_option;
		++v4;
		v5->next = v5;
	} while ((int)v4 < (int) & _47C914_sidebar);
	_47C978_production.sidebar_open_mask[5] = 0;
	v6 = sidebar_list_create(0, 0, 288, 0, 0);
	v7 = 0;
	_47C914_sidebar = v6;
	if (_47C6D8_use__466098_cost_multipliers)
	{
		if (_47C658_faction_index)
			goto LABEL_16;
	}
	else if (single_player_game)
	{
		if (player_side == 2)
			goto LABEL_16;
	}
	else if (netz_47A740[player_side + 1].field_A)
	{
	LABEL_16:
		v7 = 11;
		goto LABEL_17;
	}
LABEL_17:
	sidebar_add_button_2(
		v6,
		_4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][0],
		sidebar_button_handler_cash_open,
		sidebar_button_handler_cash_close,
		(void *)0xFFFFFFFF);
	v8 = sidebar_add_button_2(
		_47C914_sidebar,
		_4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][1],
		sidebar_button_handler_minimap_open,
		sidebar_button_handler_minimap_close,
		(void *)0xFFFFFFFE);
	v9 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][2];
	_47CA10_sidebar_button_minimap = v8;
	sidebar_add_button_1(_47C914_sidebar, v9, sidebar_button_handler_options_open, 0, (void *)0xFFFFFFFD);
	v10 = sidebar_add_button_3(
		_47C914_sidebar,
		_4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][3],
		sidebar_button_handler_help_open,
		sidebar_button_handler_help_close,
		(void *)0xFFFFFFFC);
	v11 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][4];
	_47CA08_sidebar_buttons[0] = v10;
	v12 = sidebar_add_button_2(
		_47C914_sidebar,
		v11,
		sidebar_button_handler_infantry_open,
		sidebar_button_handler_infantry_close,
		(void *)0xFFFFFFFB);
	v13 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][5];
	_47CA18_sidebar_production_buttons[0] = v12;
	v14 = sidebar_add_button_2(
		_47C914_sidebar,
		v13,
		sidebar_button_handler_vehicles_open,
		sidebar_button_handler_vehicles_close,
		(void *)0xFFFFFFFA);
	v15 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][6];
	_47CA18_sidebar_production_buttons[1] = v14;
	v16 = sidebar_add_button_2(
		_47C914_sidebar,
		v15,
		sidebar_button_handler_buildings_open,
		sidebar_button_handler_buildings_close,
		(void *)0xFFFFFFF9);
	v17 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][7];
	_47CA18_sidebar_production_buttons[2] = v16;
	v18 = sidebar_add_button_2(
		_47C914_sidebar,
		v17,
		sidebar_button_handler_towers_open,
		sidebar_button_handler_towers_close,
		(void *)0xFFFFFFF8);
	v19 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][8];
	_47CA18_sidebar_production_buttons[3] = v18;
	v20 = sidebar_add_button_2(
		_47C914_sidebar,
		v19,
		sidebar_button_handler_airstrike_open,
		sidebar_button_handler_airstrike_close,
		(void *)0xFFFFFFF7);
	v21 = _4704A8_per_sidebar_button_mobd_lookup_table_offsets[4 * v7 / 0x2Cu][9];
	_47CA18_sidebar_production_buttons[4] = v20;
	_47CA08_sidebar_buttons[1] = sidebar_add_button_3(
		0,
		v21,
		sidebar_button_handler_446190_open,
		sidebar_button_handler_4461E0_close,
		(void *)0xFFFFFFF6);
	_47CA2C_should_airstrike_mess_with_sidebar = 0;
	if (!is_game_loading())
	{
		v22 = sprite_create_scripted(MOBD_SIDEBAR_BUTTONS, 0, script_401C30_sidebar, SCRIPT_FUNCTION, 0);
		if (v22)
			_47C970_sidebar_task = v22->script;
		else
			_47C970_sidebar_task = 0;
	}
	v23 = sprite_create(MOBD_INGAME_MENU_CONTROLS, 0, 0);
	_47C96C_mobd_1F_sidebar_empty_blocks = v23;
	if (v23)
	{
		v23->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
		sprite_load_mobd(_47C96C_mobd_1F_sidebar_empty_blocks, 72);
		_47C96C_mobd_1F_sidebar_empty_blocks->field_88_unused = 1;
		_47C96C_mobd_1F_sidebar_empty_blocks->x = (render_width - 32) << 8;
		_47C96C_mobd_1F_sidebar_empty_blocks->field_88_unused = 1;
		_47C96C_mobd_1F_sidebar_empty_blocks->y = 0x10000;
		_47C96C_mobd_1F_sidebar_empty_blocks->z_index = 0;
	}
	return 1;
}
// 468B5C: using guessed type int single_player_game;
// 47C658: using guessed type char _47C658_faction_index;
// 47CA2C: using guessed type int _47CA2C_should_airstrike_mess_with_sidebar;

//----- (00446D60) --------------------------------------------------------
void sidebar_button_handler_cash_open(SidebarButton *a1)
{
	SidebarButton *v1; // esi@1
	int v2; // edi@1
	int v3; // eax@1

	v1 = a1;
	v2 = _445C00_text(asc_470198, 12);
	v3 = _445C80_text(asc_470198, 12);
	v1->sprite->field_88_unused = 1;
	_47CA00_render_string = render_string_create(
		0,
		currently_running_lvl_mobd[MOBD_FONT_27].items,
		(v1->sprite->x >> 8) - (8 * v3 + 24),
		v1->sprite->y >> 8,
		v3 + 2,
		v2 + 2,
		0x40000000,
		8,
		8);
	v1->param = _47CA00_render_string;
}

//----- (00446DE0) --------------------------------------------------------
void sidebar_button_handler_cash_close(SidebarButton *a1)
{
	render_string_list_remove((RenderString *)a1->param);
	_47CA00_render_string = 0;
}

//----- (00446E00) --------------------------------------------------------
void sidebar_button_handler_help_open(SidebarButton *a1)
{
	SidebarButton **v1; // esi@1

	v1 = _47CA08_sidebar_buttons;
	do
	{
		if (v1 != _47CA08_sidebar_buttons)
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, (*v1)->task);
		++v1;
	} while ((int)v1 < (int) & _47CA10_sidebar_button_minimap);
	script_trigger_event(0, EVT_MSG_SHOW_UNIT_HINT, 0, task_mobd17_cursor);
}

//----- (00446E50) --------------------------------------------------------
void sidebar_button_handler_help_close(SidebarButton *a1)
{
	script_trigger_event(0, EVT_MSG_1516, 0, task_mobd17_cursor);
}

//----- (00446E90) --------------------------------------------------------
void sidebar_deinit()
{
	sprite_list_remove(_47C96C_mobd_1F_sidebar_empty_blocks);
	free(production_group_list);
	free(production_option_list);
	_47CA00_render_string = 0;
}

//----- (00446ED0) --------------------------------------------------------
void script_446ED0_sidebar_buttons(Script *a1)
{
	SidebarButton **v1; // esi@1

	_44A6B0_minimap(render_width - 32, 32);
	script_445370_yield_to_main_thread(a1, 0x80000000, 2);
	v1 = _47CA18_sidebar_production_buttons;
	do
	{
		script_trigger_event(0, EVT_MSG_1548_sidebar, 0, (*v1)->task);
		++v1;
	} while ((int)v1 < (int) & _47CA2C_should_airstrike_mess_with_sidebar);
	script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA10_sidebar_button_minimap->task);
	script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA08_sidebar_buttons[1]->task);
	while (1)
	{
		if (_47CA00_render_string)
		{
			sprintf(asc_470198, a8d, game_globals_per_player.cash[player_side]);
			_47CA00_render_string->field_18 = 0;
			_47CA00_render_string->num_lines = 0;
			render_string_445770(_47CA00_render_string, asc_470198, 0);
		}
		script_445370_yield_to_main_thread(a1, 0x80000000, 1);
	}
}
// 47CA2C: using guessed type int _47CA2C_should_airstrike_mess_with_sidebar;

//----- (00446FB0) --------------------------------------------------------
bool is_player_faction_evolved()
{
	if (_47C6D8_use__466098_cost_multipliers)
		return _47C658_faction_index;
	if (single_player_game)
	{
		if (player_side == EVOLVED)
			return true;                                 // mute
	}
	else if (netz_47A740[player_side + 1].field_A)
	{
		return true;                                   // mute
	}
	return false;                                     // surv
}

//----- (00447000) --------------------------------------------------------
void sub_447000()
{
	if (is_game_loading() || !_447310_minimap())
	{
		script_trigger_event(0, EVT_MSG_1514, 0, _47CA10_sidebar_button_minimap->task);
	}
}

//----- (00447050) --------------------------------------------------------
void disable_minimap()
{
	hide_minimap_sprite();
	script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA10_sidebar_button_minimap->task);
}

//----- (00447070) --------------------------------------------------------
void attempt_unlock_aircraft()
{
	unsigned int v0; // ecx@2
	int v1; // eax@4
	enum UNIT_ID v2; // edx@11

	if (_47CA2C_should_airstrike_mess_with_sidebar)
		return;
	v0 = levels[current_level_idx].disabled_units_mask;
	if (BYTE1(v0) & 0x20)
		return;
	_47CA2C_should_airstrike_mess_with_sidebar = 1;
	if (!_47C6D8_use__466098_cost_multipliers)
	{
		if (single_player_game)
		{
			if (player_side == 2)
			{
				v1 = 1;
				goto LABEL_11;
			}
		}
		else if (netz_47A740[player_side + 1].field_A)
		{
			v1 = 1;
			goto LABEL_11;
		}
		v1 = 0;
		goto LABEL_11;
	}
	v1 = _47C658_faction_index;
LABEL_11:
	v2 = (UNIT_ID)43;
	if (!v1)
		v2 = (UNIT_ID)44;
	production_group_enable(_47B3D4_aircraft_production_group, v2, 2236);
	script_trigger_event(0, EVT_MSG_1514, 0, _47CA18_sidebar_production_buttons[4]->task);
}

//----- (00447120) --------------------------------------------------------
void on_airstrike_ready()
{
	int is_evolved; // eax@3
	enum SOUND_ID v1; // ecx@11
	int v2; // [sp-Ch] [bp-Ch]@11

	if (!_47CA2C_should_airstrike_mess_with_sidebar)
		return;
	if (!_47C6D8_use__466098_cost_multipliers)
	{
		if (single_player_game)
		{
			if (player_side == 2)
			{
				is_evolved = 1;
				goto LABEL_10;
			}
		}
		else if (netz_47A740[player_side + 1].field_A)
		{
			is_evolved = 1;
			goto LABEL_10;
		}
		is_evolved = 0;
		goto LABEL_10;
	}
	is_evolved = _47C658_faction_index;
LABEL_10:
	if (is_evolved)
	{
		v2 = _4690A8_unit_sounds_volume;
		v1 = SOUND_MUTE_AIRSTRIKE_READY;
	}
	else
	{
		v1 = SOUND_SURV_AIRSTRIKE_READY;
		v2 = _4690A8_unit_sounds_volume;
	}
	sound_play(v1, 0, v2, 16, 0);
	if (_47CA2C_should_airstrike_mess_with_sidebar)
	{
		script_trigger_event(0, EVT_MSG_1514, 0, _47CA08_sidebar_buttons[1]->task);
		script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, _47C970_sidebar_task);
	}
	++UNIT_num_player_units;
}
// 468B5C: using guessed type int single_player_game;
// 47C658: using guessed type char _47C658_faction_index;
// 47CA2C: using guessed type int _47CA2C_should_airstrike_mess_with_sidebar;
// 47DCC8: using guessed type int UNIT_num_player_units;

//----- (004471E0) --------------------------------------------------------
void _4471E0_send_sidebar_buttons_message()
{
	int v0; // esi@1

	v0 = 0;
	do
	{
		if (v0 != -1)
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA08_sidebar_buttons[v0]->task);
		++v0;
	} while (v0 < 2);
	script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47C970_sidebar_task);
	script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, _47CA08_sidebar_buttons[1]->task);
	if (UNIT_num_player_units > 0)
		--UNIT_num_player_units;
}
// 47DCC8: using guessed type int UNIT_num_player_units;

//----- (00447250) --------------------------------------------------------
void _447250_toggle_aircraft()
{
	int v0; // eax@3

	if (_47CA2C_should_airstrike_mess_with_sidebar)
	{
		if (_47C6D8_use__466098_cost_multipliers)
		{
			v0 = _47C658_faction_index;
		LABEL_10:
			_47CA2C_should_airstrike_mess_with_sidebar = 0;
			production_group_disable(_47B3D4_aircraft_production_group, (enum UNIT_ID)(UNIT_STATS_SURV_BOMBER - (v0 != 0)));
			script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA18_sidebar_production_buttons[4]->task);
			script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47CA08_sidebar_buttons[1]->task);
			script_trigger_event(0, EVT_MSG_1548_sidebar, 0, _47C970_sidebar_task);
			return;
		}
		if (single_player_game)
		{
			if (player_side == 2)
			{
				v0 = 1;
				goto LABEL_10;
			}
		}
		else if (netz_47A740[player_side + 1].field_A)
		{
			v0 = 1;
			goto LABEL_10;
		}
		v0 = 0;
		goto LABEL_10;
	}
}

//----- (00447310) --------------------------------------------------------
Sprite *_447310_minimap()
{
	return (_47CA10_sidebar_button_minimap->sprite->_inside_mobd_item != &currently_running_lvl_mobd[_47CA10_sidebar_button_minimap->sprite->mobd_id].items->_[165]) ? _47CA10_sidebar_button_minimap->sprite : 0;
}

//----- (00447340) --------------------------------------------------------
void _447340_send_sidebar_buttons_message(int exception_id)
{
	int v1; // ebx@1
	int v2; // edi@1
	SidebarButton **v3; // esi@1

	v1 = exception_id;
	v2 = 0;
	v3 = _47CA08_sidebar_buttons;
	do
	{
		if (v2 != v1)
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, (*v3)->task);
		++v3;
		++v2;
	} while ((int)v3 < (int) & _47CA10_sidebar_button_minimap);
}

//----- (00447380) --------------------------------------------------------
void UNIT_Handler_GuardTower(Script *a1)
{
	UNIT_Handler_Towers(a1);
}

//----- (00447390) --------------------------------------------------------
void UNIT_Handler_Towers(Script *a1)
{
	Entity *v1; // esi@2
	Entity *v2; // eax@3
	DataMobdItem_stru1 *v3; // eax@3
	int i; // ecx@4

	if (_47C6DC_dont_execute_unit_handlers)
		return;
	v1 = (Entity *)a1->param;
	if (v1)
	{
	LABEL_15:
		(v1->mode)(v1);
		return;
	}
	v2 = entity_list_create(a1);
	v1 = v2;
	v2->script->event_handler = EventHandler_Towers;
    entity_load_idle_mobd(v2);
	v3 = v1->sprite->_54_inside_mobd_ptr4->field_18;
	if (v3)
	{
		for (i = v3->field_0; i != -1; v3 = (DataMobdItem_stru1 *)((char *)v3 + 16))
		{
			if (i == 3)
				v1->stru60.ptr_C = v3;
			i = v3->field_10;
		}
	}
	entity_40DD00_boxd(v1);
	v1->sprite->x = ((v1->sprite->x + v1->stru60.ptr_C->x_offset) & 0xFFFFE000) - v1->stru60.ptr_C->x_offset + 4096;
	v1->sprite->y = ((v1->sprite->y + v1->stru60.ptr_C->y_offset) & 0xFFFFE000) - v1->stru60.ptr_C->y_offset + 4096;
	entity_44B100_buildings__mess_with_fog_of_war(v1);
	entity_set_draw_handlers(v1);
	if (v1->player_side == player_side)
		++num_players_towers;
	if (v1->sprite->cplc_ptr1_pstru20)
	{
		entity_mode_4478E0_towers(v1);
		v1->mode = entity_mode_4474D0_towers;
		goto LABEL_15;
	}
	if (v1->player_side == player_side)
		script_trigger_event(v1->script, EVT_MSG_1529_ai, v1, task_mobd17_cursor);
	sprite_4272E0_load_mobd_item(v1->sprite, v1->stats->mobd_lookup_offset_attack, 0);
	v1->mode = entity_mode_4474E0_towers;
	(v1->mode)(v1);
}

//----- (004474D0) --------------------------------------------------------
void entity_mode_4474D0_towers(Entity *a1)
{
	dword_477358 = 1123344;
}
// 477358: using guessed type int dword_477358;

//----- (004474E0) --------------------------------------------------------
void entity_mode_4474E0_towers(Entity *a1)
{
	dword_477358 = 908793;
}
// 477358: using guessed type int dword_477358;

//----- (004474F0) --------------------------------------------------------
void entity_mode_tower_on_death(Entity *a1)
{
	Entity *v1; // esi@1
	Sprite *v2; // eax@1
	EntityTurret *v3; // eax@3
	Script *v4; // ecx@5
	Script *v5; // ST00_4@5

	v1 = a1;
	v2 = entity_439120_add_explosion(a1);
	if (v2)
		v2->z_index = v1->sprite->z_index + 256;
	v3 = v1->turret;
	if (v3)
		v3->handler = (void(*)(EntityTurret *))nullsub_1;
	v4 = v1->script;
	v1->destroyed = 1;
	v1->entity_id = 0;
	script_trigger_event(v4, EVT_SHOW_UI_CONTROL, 0, task_mobd17_cursor);
	script_trigger_event_group(v1->script, EVT_SHOW_UI_CONTROL, v1, SCRIPT_TYPE_39030);
	v1->script->script_type = SCRIPT_TYPE_INVALID;
	v5 = v1->script;
	v1->mode = entity_mode_tower_dead;
	script_445370_yield_to_main_thread(v5, 0x80000000, 60);
}

//----- (00447580) --------------------------------------------------------
void entity_mode_tower_dead(Entity *a1)
{
	Entity *v1; // esi@1
	EntityTurret *v2; // eax@1
	Script *v3; // ecx@6

	v1 = a1;
	v2 = a1->turret;
	if (v2)
	{
		v2->turret_sprite->param = 0;
		sprite_list_remove(a1->turret->turret_sprite);
		script_yield(v1->turret->sprite_task);
		v1->turret = 0;
	}
	if (v1->player_side == player_side && num_players_towers > 0)
		--num_players_towers;
	entity_40DDD0_boxd(v1);
	sprite_list_remove(v1->sprite);
	v3 = v1->script;
	v1->sprite = 0;
	script_yield(v3);
	entity_list_remove(v1);
}
// 47DCD0: using guessed type int num_players_towers;

//----- (00447600) --------------------------------------------------------
void EventHandler_Towers(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	Entity *v4; // esi@1
	Entity *v5; // eax@11
	int v6; // eax@12
	Script **v7; // eax@14

	v4 = (Entity *)receiver->param;
	if (!v4->destroyed)
	{
		switch (event)
		{
		case EVT_MSG_1529_ai:
			if (v4->mode == entity_mode_4474E0_towers)
			{
				if (param == (void *)1)
				{
					sprite_4272E0_load_mobd_item(v4->sprite, v4->stats->mobd_lookup_offset_attack, 1);
				}
				else if (param == (void *)2)
				{
					sprite_4272E0_load_mobd_item(v4->sprite, v4->stats->mobd_lookup_offset_attack, 2);
				}
				else if (param == (void *)3)
				{
                    entity_load_idle_mobd(v4);
					entity_mode_4478E0_towers(v4);
					script_trigger_event_group(v4->script, EVT_MSG_1551, 0, SCRIPT_TYPE_CA000012);
					v4->mode = entity_mode_4474D0_towers;
				}
			}
			break;
		case EVT_ENTITY_ATTACK:
			entity_4477B0_towers(v4, (int)param);
			break;
		case EVT_MSG_1497:
			v5 = v4->_E0_current_attack_target;
			if (!v5 || (v6 = v5->entity_id) == 0 || v6 != v4->_E0_current_attack_target_entity_id)
			{
				v7 = &v4->turret->sprite_task;
				if (v7)
				{
					v4->_E0_current_attack_target = (Entity *)param;
					v4->_E0_current_attack_target_entity_id = *((_DWORD *)param + 76);
					script_trigger_event(v4->script, EVT_ENTITY_ATTACK, 0, *v7);
				}
			}
			break;
		case EVT_MSG_1511_sidebar_click_category:
			entity_410CB0_event1511(v4);
			break;
		case EVT_SHOW_UI_CONTROL:
			entity_410CD0_eventTextString(v4);
			break;
		case EVT_MSG_SHOW_UNIT_HINT:
			entity_show_hint(v4);
			break;
		case EVT_MSG_DESTROY:
			entity_402E40_destroy(v4, entity_mode_tower_on_death);
			break;
		case EVT_MSG_DAMAGE:
			entity_402E90_on_damage(v4, param, entity_mode_tower_on_death);
			entity_410710_status_bar(v4);
			break;
		default:
			return;
		}
	}
}

//----- (004477B0) --------------------------------------------------------
void entity_4477B0_towers(Entity *a1, int a2)
{
	Entity *v2; // esi@1
	int v3; // edi@1
	enum PLAYER_SIDE v4; // ecx@2
	Entity *v5; // eax@3
	int v6; // edx@4
	int v7; // eax@4
	int v8; // eax@8

	v2 = a1;
	v3 = a2;
	if (a1->turret)
	{
		v4 = a1->player_side;
		if (*(_DWORD *)a2 == v4)
		{
			v5 = *(Entity **)(a2 + 4);
			if (v5->entity_id != v2->_E0_current_attack_target_entity_id)
			{
				v2->_E0_current_attack_target = v5;
				v2->_E0_current_attack_target_entity_id = v5->entity_id;
				v6 = *(_DWORD *)(a2 + 4);
				v7 = *(_DWORD *)(v6 + 20);
				if (v7 && v7 != v4 && !is_enemy(v4, (Entity *)v6))
				{
					if (!single_player_game)
					{
						v8 = *(_DWORD *)(*(_DWORD *)(v3 + 4) + 20);
						if (player_side == v8 || player_side == v2->player_side)
						{
							sprintf(
								netz_47CA30,
								aAllegianceBroken,
								netz_47A740[v8 + 1].player_name,
								netz_47A740[v2->player_side + 1].player_name);
							show_message_ex(0, netz_47CA30);
						}
					}
					if (!_47C6D8_use__466098_cost_multipliers)
					{
						game_globals_cpu[0].cash[v2->player_side + 7 * *(_DWORD *)(*(_DWORD *)(v3 + 4) + 20)] = 0;
						game_globals_cpu[0].cash[7 * v2->player_side + *(_DWORD *)(*(_DWORD *)(v3 + 4) + 20)] = 0;
					}
				}
				script_trigger_event(v2->script, EVT_ENTITY_ATTACK, 0, v2->turret->sprite_task);
			}
		}
	}
}
// 468B5C: using guessed type int single_player_game;

//----- (004478E0) --------------------------------------------------------
void entity_mode_4478E0_towers(Entity *a1)
{
	Entity *v1; // ebx@1
	EntityTurret *v2; // esi@3
	Sprite *v3; // eax@4
	enum PLAYER_SIDE v4; // eax@4
	Script *v5; // eax@6
	UnitAttachmentPoint *v6; // eax@6
	Script *v7; // eax@6

	v1 = a1;
	if (a1->stats->attach)
	{
		if (!a1->turret)
		{
			v2 = (EntityTurret *)script_create_local_object(a1->script, 56);
			if (v2)
			{
				memset(v2, 0, sizeof(EntityTurret));
				v3 = sprite_create_scripted(
					v1->stats->attach->mobd_id,
					v1->sprite,
					UNIT_AttachHandler_Turret,
					SCRIPT_FUNCTION,
					v1->stru60.ptr_0);
				v2->turret_sprite = v3;
				v3->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_44BDC0_entity_turret;
				v4 = v1->player_side;
				if (v4)
				{
					v2->turret_sprite->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[v4]];
					v2->turret_sprite->drawjob->flags |= 0x10000000u;
				}
				v5 = v2->turret_sprite->script;
				v2->sprite_task = v5;
				v5->param = v2;
				v2->turret_sprite->param = v2;
				v2->entity = v1;
				v2->mobd_lookup_id = v1->current_mobd_lookup_idx;
				v6 = v1->stats->attach;
				v2->handler = EntityTowerAttachment_handler_447C40;
				v2->stats_attachment_point = v6;
				v2->field_18 = 0;
				v2->field_2C = 0;
				v2->field_1C = v6->volley_size;
				v2->field_20 = v6->reload2_time;
				v1->turret = v2;
				v7 = v2->sprite_task;
				v2->field_34 = 0;
				v7->event_handler = MessageHandler_TowersAttachment;
			}
		}
	}
}

//----- (004479D0) --------------------------------------------------------
void UNIT_AttachHandler_Turret(Script *a1)
{
	EntityTurret *v1; // esi@1
	int v2; // eax@1

	v1 = (EntityTurret *)a1->param;
	(v1->handler)(v1);
	v2 = v1->field_18;
	if (v2)
		v1->field_18 = v2 - 1;
}

//----- (004479F0) --------------------------------------------------------
int EntityTowerAttachment_4479F0(EntityTurret *a1)
{
	EntityTurret *v1; // ebx@1
	Entity *v2; // eax@1
	UnitStat *v3; // ecx@1
	Sprite *v4; // eax@1
	int v5; // ecx@1
	int v6; // esi@1
	int v7; // ebp@1
	int v8; // eax@1
	int v9; // edx@1
	int v10; // ecx@5
	DataBoxd_stru0_per_map_unit *v11; // edi@7
	int v12; // eax@7
	int v13; // ebp@9
	Entity **v14; // edi@9
	Entity *v15; // esi@12
	UnitStat *v16; // eax@12
	int v17; // eax@15
	Entity *v18; // ecx@15
	bool v19; // sf@19
	unsigned __int8 v20; // of@19
	int v21; // eax@20
	int result; // eax@22
	stru31 *v23; // edi@23
	Entity *v24; // edx@24
	Entity *v25; // esi@26
	int v26; // eax@27
	Entity *v27; // ecx@27
	int v28; // [sp+10h] [bp-20h]@1
	int v29; // [sp+14h] [bp-1Ch]@5
	DataBoxd_stru0_per_map_unit *v30; // [sp+18h] [bp-18h]@7
	int v31; // [sp+1Ch] [bp-14h]@7
	int v32; // [sp+20h] [bp-10h]@1
	Entity *v33; // [sp+24h] [bp-Ch]@1
	int v34; // [sp+28h] [bp-8h]@7
	int v35; // [sp+2Ch] [bp-4h]@5

	v1 = a1;
	v2 = a1->entity;
	v33 = v2;
	v3 = v2->stats;
	v4 = v2->sprite;
	v5 = v3->firing_range >> 5;
	v6 = (v4->x >> 13) - v5;
	v7 = 2 * v5 + 1;
	v8 = (v4->y >> 13) - v5;
	v32 = 2 * v5 + 1;
	v9 = 2 * v5 + 1;
	v28 = v6;
	if (v6 < 0)
	{
		v7 += v6;
		v28 = 0;
		v6 = 0;
		v32 = v7;
	}
	if (v8 < 0)
	{
		v9 += v8;
		v8 = 0;
	}
	v10 = v8;
	v29 = v8;
	v35 = v8 + v9;
	if (v8 < v8 + v9)
	{
		while (v10 < _478AAC_map_height)
		{
			v34 = v7 + v6;
			v11 = &_478AA8_boxd_stru0_array[v6 + _4793F8_map_width * v10];
			v12 = v6;
			v30 = &_478AA8_boxd_stru0_array[v6 + _4793F8_map_width * v10];
			v31 = v6;
			if (v6 < v7 + v6)
			{
				while (2)
				{
					if (v12 < _4793F8_map_width)
					{
						v13 = 0;
						v14 = v11->_4_entities;
						do
						{
							if (*v14 && is_enemy(v33->player_side, *v14))
							{
								v15 = *v14;
								v16 = (*v14)->stats;
								if ((v16->field_54 || v16->speed) && !v15->destroyed)
								{
									v17 = math_42D64D_prolly_vec_length(
										(v1->entity->sprite->x - v15->sprite->x) >> 8,
										(v1->entity->sprite->y - v15->sprite->y) >> 8);
									v18 = v1->entity;
									if (v17 < v18->stats->firing_range)
									{
										if (entity_41B510(v18, v15))
										{
											v1->_C_entity = v30->_4_entities[v13];
											v1->_C_entity_idx = v30->_4_entities[v13]->entity_id;
											return 1;
										}
									}
								}
								v6 = v28;
							}
							++v13;
							++v14;
						} while (v13 < 5);
						v12 = v31 + 1;
						v11 = v30 + 1;
						v20 = __OFSUB__(v31 + 1, v34);
						v19 = v31++ + 1 - v34 < 0;
						++v30;
						if (v19 ^ v20)
							continue;
					}
					break;
				}
			}
			v21 = v29++ + 1;
			if (v29 >= v35)
				break;
			v7 = v32;
			v10 = v21;
		}
	}
	v23 = stru31_list_477300;
	if ((stru31 **)stru31_list_477300 == &stru31_list_477300)
	{
	LABEL_32:
		result = 0;
	}
	else
	{
		while (1)
		{
			v24 = v23->param__entity__int;
			if (v24)
			{
				if (is_enemy(v33->player_side, v24))
				{
					v25 = v23->param__entity__int;
					if (!v25->destroyed)
					{
						v26 = math_42D64D_prolly_vec_length(
							(v1->entity->sprite->x - v25->sprite->x) >> 8,
							(v1->entity->sprite->y - v25->sprite->y) >> 8);
						v27 = v1->entity;
						if (v26 < v27->stats->firing_range)
						{
							if (entity_41B510(v27, v25))
								break;
						}
					}
				}
			}
			v23 = v23->next;
			if ((stru31 **)v23 == &stru31_list_477300)
				goto LABEL_32;
		}
		v1->_C_entity = v23->param__entity__int;
		result = 1;
		v1->_C_entity_idx = v23->param__entity__int->entity_id;
	}
	return result;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;

//----- (00447C40) --------------------------------------------------------
void EntityTowerAttachment_handler_447C40(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	int v2; // eax@1
	UnitAttachmentPoint *v3; // edx@1
	Script *v4; // ST00_4@2

	v1 = a1;
	v2 = a1->mobd_lookup_id;
	v3 = a1->stats_attachment_point;
	a1->_C_entity_idx = 0;
	sprite_4272E0_load_mobd_item(a1->turret_sprite, v3->mobd_lookup_table_offset, _47D3C4_entity_mobd_lookup_ids[v2 + 1]);
	if (EntityTowerAttachment_4479F0(v1))
	{
		v4 = v1->sprite_task;
		v1->handler = EntityTowerAttachment_handler_447CA0;
		script_445370_yield_to_main_thread(v4, 0x80000000, 1);
	}
	script_445370_yield_to_main_thread(v1->sprite_task, 0x80000000, 90);
}

//----- (00447CA0) --------------------------------------------------------
void EntityTowerAttachment_handler_447CA0(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Entity *v2; // eax@1
	int v3; // ecx@2
	Sprite *v4; // ecx@5
	int v5; // ebx@5
	Entity *v6; // ebx@6
	int v7; // eax@7
	Entity *v8; // ecx@7
	UnitAttachmentPoint *v9; // eax@9
	int v10; // [sp-4h] [bp-14h]@9

	v1 = a1;
	v2 = a1->_C_entity;
	if (v2)
		v3 = v2->entity_id == a1->_C_entity_idx;
	else
		v3 = 0;
	if (!v3)
		goto LABEL_15;
	v4 = v1->turret_sprite;
	v1->handler = EntityTowerAttachment_handler_447CA0;
	v5 = (signed __int16)_42D560_get_mobd_lookup_id_rotation(v2->sprite->x - v4->x, v2->sprite->y - v4->y);
	entity_advance_mobd_rotation(&v1->mobd_lookup_id, v5, v1->stats_attachment_point->mobd_frame_step);
	sprite_4272E0_load_mobd_item(
		v1->turret_sprite,
		v1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
	if (v1->mobd_lookup_id != v5)
		return;
	v6 = v1->_C_entity;
	if (!v6->destroyed
		&& (v7 = math_42D64D_prolly_vec_length(
		(v1->entity->sprite->x - v6->sprite->x) >> 8,
			(v1->entity->sprite->y - v6->sprite->y) >> 8),
			v8 = v1->entity,
			v7 < v8->stats->firing_range)
		&& entity_41B510(v8, v6))
	{
		v9 = v1->stats_attachment_point;
		v10 = _47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1];
		if (v1->entity->unit_id == 57)
		{
			sprite_4272E0_load_mobd_item(v1->turret_sprite, v9->_1C_mobd_lookup_table_offset_for_rotary_cannon, v10);
			v1->handler = EntityTowerAttachment_handler_447E20;
		}
		else
		{
			sprite_4272E0_load_mobd_item(v1->turret_sprite, v9->mobd_lookup_table_offset, v10);
			v1->handler = EntityTowerAttachment_handler_447E20;
		}
	}
	else
	{
	LABEL_15:
		v1->handler = EntityTowerAttachment_handler_447C40;
	}
}

//----- (00447DD0) --------------------------------------------------------
void EntityTowerAttachment_handler_447DD0(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	UnitAttachmentPoint *v2; // eax@1
	int v3; // [sp-4h] [bp-8h]@1

	v1 = a1;
	v2 = a1->stats_attachment_point;
	v3 = _47D3C4_entity_mobd_lookup_ids[a1->mobd_lookup_id + 1];
	if (a1->entity->unit_id == UNIT_STATS_MUTE_ROTARY_CANNON)
	{
		sprite_4272E0_load_mobd_item(a1->turret_sprite, v2->_1C_mobd_lookup_table_offset_for_rotary_cannon, v3);
		v1->handler = EntityTowerAttachment_handler_447E20;
	}
	else
	{
		sprite_4272E0_load_mobd_item(a1->turret_sprite, v2->mobd_lookup_table_offset, v3);
		v1->handler = EntityTowerAttachment_handler_447E20;
	}
}

//----- (00447E20) --------------------------------------------------------
void EntityTowerAttachment_handler_447E20(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Entity *v2; // edi@1
	int v3; // eax@2
	int v4; // eax@7
	Entity *v5; // ecx@7
	__int16 v6; // ax@10
	Entity *v7; // ecx@10
	enum UNIT_ID v8; // eax@14

	v1 = a1;
	v2 = a1->_C_entity;
	if (v2)
		v3 = v2->entity_id == a1->_C_entity_idx;
	else
		v3 = 0;
	if (v3)
	{
		if (!v2->destroyed
			&& (v4 = math_42D64D_prolly_vec_length(
			(a1->entity->sprite->x - v2->sprite->x) >> 8,
				(a1->entity->sprite->y - v2->sprite->y) >> 8),
				v5 = v1->entity,
				v4 < v5->stats->firing_range)
			&& entity_41B510(v5, v2))
		{
			v6 = _42D560_get_mobd_lookup_id_rotation(
				v1->_C_entity->sprite->x - v1->turret_sprite->x,
				v1->_C_entity->sprite->y - v1->turret_sprite->y);
			v7 = v1->entity;
			v1->mobd_lookup_id = v6;
			if (v7->unit_id == UNIT_STATS_MUTE_ROTARY_CANNON)
				sprite_4273B0_load_mobd_item_sound(
					v1->turret_sprite,
					v1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
					_47D3C4_entity_mobd_lookup_ids[v6 + 1]);
			else
				sprite_4273B0_load_mobd_item_sound(
					v1->turret_sprite,
					v1->stats_attachment_point->mobd_lookup_table_offset,
					_47D3C4_entity_mobd_lookup_ids[v6 + 1]);
			if (!v1->field_18)
			{
				v8 = v1->entity->unit_id;
				if (v8 != UNIT_STATS_SURV_MISSILE_BATTERY && v8 != UNIT_STATS_MUTE_ROTARY_CANNON)
					sprite_4272E0_load_mobd_item(
						v1->turret_sprite,
						v1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
						_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
				v1->handler = EntityTowerAttachment_handler_447FA0;
				v1->sprite_task->field_24 &= 0xEFFFFFFF;
			}
		}
		else
		{
			v1->handler = EntityTowerAttachment_handler_447C40;
		}
	}
	else
	{
		a1->handler = EntityTowerAttachment_handler_447C40;
	}
}

//----- (00447F50) --------------------------------------------------------
void EntityTowerAttachment_handler_447F50(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	enum UNIT_ID v2; // eax@1

	v1 = a1;
	v2 = a1->entity->unit_id;
	if (v2 != UNIT_STATS_SURV_MISSILE_BATTERY && v2 != UNIT_STATS_MUTE_ROTARY_CANNON)
		sprite_4272E0_load_mobd_item(
			a1->turret_sprite,
			a1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
			_47D3C4_entity_mobd_lookup_ids[a1->mobd_lookup_id + 1]);
	v1->handler = EntityTowerAttachment_handler_447FA0;
	v1->sprite_task->field_24 &= 0xEFFFFFFF;
}

//----- (00447FA0) --------------------------------------------------------
void EntityTowerAttachment_handler_447FA0(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	UnitDamageSource *v2; // edi@1
	Sprite *v3; // eax@3
	int v4; // edx@3
	Sprite *v5; // ebx@3
	Script *v6; // ecx@5
	int v7; // eax@5
	UnitAttachmentPoint *v8; // eax@6
	int v9; // ecx@6
	int v10; // edx@6
	int v11; // edx@7
	Entity *v12; // eax@7

	v1 = a1;
	v2 = a1->stats_attachment_point->dmg_source;
	if (v2 && _47C048_unit_bomberdmg < 200)
	{
		++_47C048_unit_bomberdmg;
		v3 = sprite_create_scripted(v2->mobd_id, a1->turret_sprite, v2->dmg_handler, SCRIPT_COROUTINE, a1->ptr_24);
		v4 = v2->mobd_offset;
		v5 = v3;
		if (v4 != -1)
			sprite_4272E0_load_mobd_item(v3, v4, _47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
		v6 = v5->script;
		v7 = v1->turret_sprite->z_index;
		v5->param = v2;
		v5->z_index = v7 + 768;
		v6->param = v1->_C_entity;
		v5->_80_entity__stru29__sprite__initial_hitpoints = v1->entity;
		v5->field_84 = v1->entity->entity_id;
		v5->field_8C_infantry_damage = LOWORD_HEXRAYS(v2->damage_infantry)
			+ (v2->damage_infantry
				* _465610_damage_multipliers[v1->entity->_98_465610_accuracy_dmg_bonus_idx] >> 8);
		v5->field_8E_vehicle_damage = LOWORD_HEXRAYS(v2->damage_vehicle)
			+ (v2->damage_vehicle
				* _465610_damage_multipliers[v1->entity->_98_465610_accuracy_dmg_bonus_idx] >> 8);
		v5->field_90_building_damage = LOWORD_HEXRAYS(v2->damage_building)
			+ (v2->damage_building
				* _465610_damage_multipliers[v1->entity->_98_465610_accuracy_dmg_bonus_idx] >> 8);
		v5->parent = v1->turret_sprite->parent;
		script_trigger_event(v1->entity->script, EVT_MSG_1497, v1->entity, v1->_C_entity->script);
	}
	v8 = v1->stats_attachment_point;
	v9 = v1->field_1C - 1;
	v10 = v8->reload_time;
	v1->field_1C = v9;
	v1->field_18 = v10;
	if (v9)
	{
		v1->handler = EntityTowerAttachment_handler_447E20;
		EntityTowerAttachment_handler_447E20(v1);
	}
	else
	{
		v1->field_18 = v8->reload2_time + v10;
		v11 = v8->volley_size;
		v12 = v1->entity;
		v1->field_1C = v11;
		if (v12->unit_id == UNIT_STATS_SURV_MISSILE_BATTERY)
			v1->handler = EntityTowerAttachment_handler_4482D0_missile_battery;
		else
			v1->handler = EntityTowerAttachment_handler_448160;
	}
}
// 47C048: using guessed type int _47C048_unit_bomberdmg;

//----- (00448110) --------------------------------------------------------
void EntityTowerAttachment_handler_448110(EntityTurret *a1)
{
	UnitAttachmentPoint *v1; // eax@1
	int v2; // edx@1
	Entity *v3; // edx@2

	v1 = a1->stats_attachment_point;
	a1->field_18 = v1->reload_time;
	v2 = a1->field_1C - 1;
	a1->field_1C = v2;
	if (v2)
	{
		a1->handler = EntityTowerAttachment_handler_447E20;
		EntityTowerAttachment_handler_447E20(a1);
	}
	else
	{
		v3 = a1->entity;
		a1->field_18 += v1->reload2_time;
		a1->field_1C = v1->volley_size;
		if (v3->unit_id == UNIT_STATS_SURV_MISSILE_BATTERY)
			a1->handler = EntityTowerAttachment_handler_4482D0_missile_battery;
		else
			a1->handler = EntityTowerAttachment_handler_448160;
	}
}

//----- (00448160) --------------------------------------------------------
void EntityTowerAttachment_handler_448160(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Entity *v2; // eax@1
	int v3; // ecx@2
	__int16 v4; // ax@6
	Entity *v5; // ecx@6
	UnitAttachmentPoint *v6; // ecx@9
	int v7; // [sp-4h] [bp-10h]@9

	v1 = a1;
	v2 = a1->_C_entity;
	if (v2)
		v3 = v2->entity_id == a1->_C_entity_idx;
	else
		v3 = 0;
	if (v3)
	{
		v4 = _42D560_get_mobd_lookup_id_rotation(v2->sprite->x - v1->turret_sprite->x, v2->sprite->y - v1->turret_sprite->y);
		v5 = v1->entity;
		v1->mobd_lookup_id = v4;
		if (v5->unit_id != UNIT_STATS_MUTE_ROTARY_CANNON)
			sprite_4272E0_load_mobd_item(
				v1->turret_sprite,
				v1->stats_attachment_point->mobd_lookup_table_offset,
				_47D3C4_entity_mobd_lookup_ids[v4 + 1]);
		if (!v1->field_18)
		{
			v6 = v1->stats_attachment_point;
			v7 = _47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1];
			if (v1->entity->unit_id == UNIT_STATS_MUTE_ROTARY_CANNON)
			{
				sprite_4272E0_load_mobd_item(v1->turret_sprite, v6->_1C_mobd_lookup_table_offset_for_rotary_cannon, v7);
				v1->handler = EntityTowerAttachment_handler_447E20;
			}
			else
			{
				sprite_4272E0_load_mobd_item(v1->turret_sprite, v6->mobd_lookup_table_offset, v7);
				v1->handler = EntityTowerAttachment_handler_447E20;
			}
		}
	}
	else
	{
		v1->handler = EntityTowerAttachment_handler_447C40;
	}
}

//----- (00448230) --------------------------------------------------------
void EntityTowerAttachment_handler_448230(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Entity *v2; // eax@1
	int v3; // eax@2

	v1 = a1;
	sprite_4272E0_load_mobd_item(
		a1->turret_sprite,
		a1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
		_47D3C4_entity_mobd_lookup_ids[129]);
	script_445370_yield_to_main_thread(v1->sprite_task, 0x10000000, 0);
	v2 = v1->_C_entity;
	if (v2)
		v3 = v2->entity_id == v1->_C_entity_idx;
	else
		v3 = 0;
	if (v3)
		v1->handler = EntityTowerAttachment_handler_447DD0;
	else
		v1->handler = EntityTowerAttachment_handler_447C40;
}

//----- (00448290) --------------------------------------------------------
void EntityTowerAttachment_handler_448290(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	char *v2; // edi@1

	v1 = a1;
	v2 = (char *)&a1->mobd_lookup_id;
	if (!entity_advance_mobd_rotation(&a1->mobd_lookup_id, 160, a1->stats_attachment_point->mobd_frame_step))
		v1->handler = EntityTowerAttachment_handler_448230;
	sprite_4272E0_load_mobd_item(
		v1->turret_sprite,
		v1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[*(_DWORD *)v2 + 1]);
}

//----- (004482D0) --------------------------------------------------------
void EntityTowerAttachment_handler_4482D0_missile_battery(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Script *v2; // eax@1

	v1 = a1;
	sprite_4272E0_load_mobd_item(
		a1->turret_sprite,
		a1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[a1->mobd_lookup_id + 1]);
	v2 = v1->sprite_task;
	v1->handler = EntityTowerAttachment_handler_448290;
	script_445370_yield_to_main_thread(v2, 0x80000000, 15);
}

//----- (00448320) --------------------------------------------------------
void MessageHandler_TowersAttachment(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	EntityTurret *v4; // eax@1
	Entity *v5; // ecx@1

	v4 = (EntityTurret *)receiver->param;
	v5 = v4->entity;
	if (!v5->destroyed && event == EVT_ENTITY_ATTACK)
	{
		v4->handler = EntityTowerAttachment_handler_447CA0;
		v4->_C_entity = v5->_E0_current_attack_target;
		v4->_C_entity_idx = v5->_E0_current_attack_target->entity_id;
	}
}

//----- (00448360) --------------------------------------------------------
void drawjob_update_handler_level_background(void *a1, DrawJob *a2)
{
	if (_47A010_mapd_item_being_drawn[0])
	{
		a2->job_details.x = _47A010_mapd_item_being_drawn[0]->draw_job->job_details.x;
		a2->job_details.y = _47A010_mapd_item_being_drawn[0]->draw_job->job_details.y;
	}
	a2->job_details.z_index = 0xFFFFF;
}

//----- (00448390) --------------------------------------------------------
void drawjob_update_handler_448390_fog_of_war(void *unused, DrawJob *a2)
{
	if (_47A010_mapd_item_being_drawn[0])
	{
		a2->job_details.x = _47A010_mapd_item_being_drawn[0]->draw_job->job_details.x - 2 * map_fog_of_war_scrl->tile_x_size;
		a2->job_details.y = _47A010_mapd_item_being_drawn[0]->draw_job->job_details.y - 2 * map_fog_of_war_scrl->tile_y_size;
	}
	a2->job_details.z_index = 0x10000000;
}

//----- (004483E0) --------------------------------------------------------
void drawjob_update_handler_4483E0_sidebar(Sprite *a1, DrawJob *a2)
{
	DataMobdItem_stru0 *v2; // eax@1

	v2 = a1->_54_inside_mobd_ptr4;
	if (v2)
	{
		a2->job_details.x = (a1->x >> 8) - v2->x_offset;
		a2->job_details.y = (a1->y >> 8) - a1->_54_inside_mobd_ptr4->y_offset;
		a2->job_details.image = a1->_54_inside_mobd_ptr4->sprt;
	}
	else
	{
		a2->job_details.image = 0;
	}
	a2->job_details.z_index = a1->z_index + 0x20000000;
	a2->job_details.params = render_default_stru1;
}

//----- (00448430) --------------------------------------------------------
void drawjob_update_handler_cursors(Sprite *a1, DrawJob *a2)
{
	DataMobdItem_stru0 *v2; // eax@1

	v2 = a1->_54_inside_mobd_ptr4;
	if (v2)
	{
		a2->job_details.x = (a1->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		a2->job_details.y = (a1->y >> 8) - (_47C380_mapd.mapd_cplc_render_y >> 8) - v2->y_offset;
		a2->job_details.image = v2->sprt;
	}
	else
	{
		a2->job_details.image = 0;
	}
	a2->job_details.z_index = a1->z_index + 0x40000000;
	a2->job_details.params = render_default_stru1;
}

//----- (004484A0) --------------------------------------------------------
void drawjob_update_handler_4484A0_explosions(Sprite *a1, DrawJob *a2)
{
	DataMobdItem_stru0 *v2; // eax@1

	v2 = a1->_54_inside_mobd_ptr4;
	if (v2)
	{
		a2->job_details.x = (a1->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		a2->job_details.y = (a1->y >> 8) - (_47C380_mapd.mapd_cplc_render_y >> 8) - a1->_54_inside_mobd_ptr4->y_offset;
		a2->job_details.image = a1->_54_inside_mobd_ptr4->sprt;
	}
	else
	{
		a2->job_details.image = 0;
	}
	a2->job_details.z_index = a1->z_index + 0x10000000;
	a2->job_details.params = render_default_stru1;
}

//----- (00448510) --------------------------------------------------------
void drawjob_update_handler_448510_aircraft(Sprite *sprite, DrawJob *job)
{
	DataMobdItem_stru0 *v2; // eax@1

	v2 = sprite->_54_inside_mobd_ptr4;
	if (v2)
	{
		job->job_details.x = (sprite->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		job->job_details.y = (sprite->y >> 8)
			- (sprite->z_index >> 9)
			- (_47C380_mapd.mapd_cplc_render_y >> 8)
			- sprite->_54_inside_mobd_ptr4->y_offset;
		job->job_details.image = sprite->_54_inside_mobd_ptr4->sprt;
	}
	else
	{
		job->job_details.image = 0;
	}
	job->job_details.z_index = sprite->z_index + 0x200000;
	job->job_details.params = render_default_stru1;
}

//----- (00448580) --------------------------------------------------------
void drawjob_update_handler_448580_entity_aircraft_turret(Sprite *sprite, DrawJob *job)
{
	DataMobdItem_stru0 *v2; // eax@1
	int v3; // eax@2
	int v4; // edi@2

	v2 = sprite->_54_inside_mobd_ptr4;
	if (v2)
	{
		job->job_details.x = (sprite->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		v3 = (sprite->y >> 8) - (sprite->z_index >> 9) - (_47C380_mapd.mapd_cplc_render_y >> 8);
		v4 = sprite->_54_inside_mobd_ptr4->y_offset;
		job->job_details.z_index = 0x200001;
		job->job_details.y = v3 - v4;
		job->job_details.image = sprite->_54_inside_mobd_ptr4->sprt;
		job->job_details.params = render_default_stru1;
	}
	else
	{
		job->job_details.image = 0;
		job->job_details.params = render_default_stru1;
	}
}

//----- (00448600) --------------------------------------------------------
void drawjob_update_handler_448600_oilspot(Sprite *a1, DrawJob *a2)
{
	DataMobdItem_stru0 *v2; // eax@1
	MobdSprtImage *v3; // eax@2

	v2 = a1->_54_inside_mobd_ptr4;
	if (v2)
	{
		a2->job_details.x = (a1->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		a2->job_details.y = (a1->y >> 8)
			- (a1->z_index >> 9)
			- (_47C380_mapd.mapd_cplc_render_y >> 8)
			- a1->_54_inside_mobd_ptr4->y_offset;
		v3 = a1->_54_inside_mobd_ptr4->sprt;
		a2->job_details.z_index = 1;
		a2->job_details.image = v3;
		a2->job_details.params = render_default_stru1;
	}
	else
	{
		a2->job_details.image = 0;
		a2->job_details.z_index = 1;
		a2->job_details.params = render_default_stru1;
	}
}

//----- (00448680) --------------------------------------------------------
void drawjob_update_handler_448680(Sprite *param, DrawJob *job)
{
	if (param->_54_inside_mobd_ptr4)
	{
		job->job_details.x = (param->x - _47C380_mapd.mapd_cplc_render_x) >> 8;
		job->job_details.y = (param->y - _47C380_mapd.mapd_cplc_render_y) >> 8;
		job->job_details.image = param->_54_inside_mobd_ptr4->sprt;
	}
	else
	{
		job->job_details.image = 0;
	}
	job->job_details.z_index = param->z_index + 0x20000000;
	job->job_details.params = render_default_stru1;
}

//----- (004486D0) --------------------------------------------------------
void drawjob_update_handler_4486D0_building(Entity *param, DrawJob *job)
{
	int v2; // eax@1
	int v3; // eax@2

	job->job_details.x = (*(_DWORD *)(param->stru60.ptr_8 + 4) + param->sprite->x - _47C380_mapd.mapd_cplc_render_x - 8448) >> 8;
	v2 = *(_DWORD *)(param->stru60.ptr_8 + 8) + param->sprite->y;
	if (v2 - 3840 >= 0)
		v3 = v2 - _47C380_mapd.mapd_cplc_render_y - 3840;
	else
		v3 = 1024 - _47C380_mapd.mapd_cplc_render_y;
	job->job_details.y = v3 >> 8;
	job->job_details.z_index = 0x200000;
	job->job_details.image = &param->pfn_render_DrawUnitsAndUi;
	job->job_details.params = render_default_stru1;
}

//----- (00448750) --------------------------------------------------------
void drawjob_update_handler_448750_infantry(Entity *a1, DrawJob *job)
{
	Sprite *v2; // eax@1
	char *v3; // ecx@1
	int v4; // esi@1
	int v5; // eax@1

	v2 = a1->sprite;
	v3 = (char *)&a1->pfn_render_DrawUnitsAndUi;
	job->job_details.x = (v2->x - _47C380_mapd.mapd_cplc_render_x - 2048) >> 8;
	v4 = _47C380_mapd.mapd_cplc_render_y;
	v5 = *(_DWORD *)(*((_DWORD *)v3 - 138) + 20);
	job->job_details.z_index = 0x200000;
	job->job_details.image = v3;
	job->job_details.y = (v5 - v4 - 6400) >> 8;
	job->job_details.params = render_default_stru1;
}

//----- (004487B0) --------------------------------------------------------
void drawjob_update_handler_4487B0_vehicles_buildings(Entity *a1, DrawJob *job)
{
	int v2; // esi@1
	int v3; // eax@1
	char *v4; // ecx@1
	int v5; // esi@1
	int v6; // eax@1

	v2 = a1->stru60.ptr_8;
	v3 = a1->sprite->x;
	v4 = (char *)&a1->pfn_render_DrawUnitsAndUi;
	job->job_details.x = (*(_DWORD *)(v2 + 4) + v3 - _47C380_mapd.mapd_cplc_render_x - 4096) >> 8;
	v5 = _47C380_mapd.mapd_cplc_render_y;
	v6 = *(_DWORD *)(*((_DWORD *)v4 - 135) + 8) + *(_DWORD *)(*((_DWORD *)v4 - 138) + 20);
	job->job_details.z_index = 0x200000;
	job->job_details.image = v4;
	job->job_details.y = (v6 - v5 - 1024) >> 8;
	job->job_details.params = render_default_stru1;
}

//----- (00448820) --------------------------------------------------------
void drawjob_update_handler_oiltanker(Entity *param, DrawJob *job)
{
	Sprite *v2; // eax@1
	char *v3; // ecx@1
	int v4; // esi@1
	int v5; // eax@1

	v2 = param->sprite;
	v3 = (char *)&param->pfn_render_DrawUnitsAndUi;
	job->job_details.x = (v2->x - _47C380_mapd.mapd_cplc_render_x - 4096) >> 8;
	v4 = _47C380_mapd.mapd_cplc_render_y;
	v5 = *(_DWORD *)(*((_DWORD *)v3 - 138) + 20);
	job->job_details.z_index = 0x200000;
	job->job_details.image = v3;
	job->job_details.y = (v5 - v4 - 6400) >> 8;
	job->job_details.params = render_default_stru1;
}

//----- (00448880) --------------------------------------------------------
void drawjob_update_draw_handler_aircraft(Entity *param, DrawJob *job)
{
	Sprite *v2; // esi@1
	int v3; // eax@1
	char *v4; // ecx@1
	int v5; // eax@1

	v2 = param->sprite;
	v3 = *(_DWORD *)(param->stru60.ptr_8 + 4);
	v4 = (char *)&param->pfn_render_DrawUnitsAndUi;
	job->job_details.x = (v2->x + v3 - _47C380_mapd.mapd_cplc_render_x - 4096) >> 8;
	v5 = *(_DWORD *)(*((_DWORD *)v4 - 138) + 20)
		- (*(_DWORD *)(*((_DWORD *)v4 - 138) + 24) >> 1)
		- _47C380_mapd.mapd_cplc_render_y;
	job->job_details.z_index = 0x400000;
	job->job_details.image = v4;
	job->job_details.y = (v5 - 1024) >> 8;
	job->job_details.params = render_default_stru1;
}

//----- (004488F0) --------------------------------------------------------
int entity_4488F0_is_in_firing_range(Entity *a1, Entity *a2, int entity_id)
{
	Entity *v3; // ebx@1
	Entity *v4; // ebp@1
	Sprite *v5; // edi@4
	Sprite *v6; // eax@4
	int v7; // esi@4
	int v8; // ecx@4
	int v9; // eax@4
	int v10; // edi@6
	int v11; // esi@7
	int result; // eax@11

	v3 = a2;
	v4 = a1;
	if (!a2 || a2->entity_id != entity_id || a2->destroyed)
		goto LABEL_15;
	v5 = a1->sprite;
	v6 = a2->sprite;
	v7 = v6->x;
	v8 = v6->y;
	v9 = v5->y - v8;
	if (v9 <= 0)
		v9 = v8 - v5->y;
	v10 = v5->x;
	v11 = v10 - v7 <= 0 ? v7 - v10 : v10 - v7;
	if ((int)math_42D64D_prolly_vec_length(v11 >> 8, v9 >> 8) <= v4->stats->firing_range && entity_41B510(v4, v3))
		result = 1;
	else
		LABEL_15:
	result = 0;
	return result;
}

//----- (00448980) --------------------------------------------------------
void tower_attachment_handler_448980(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1

	v1 = a1;
	sprite_4272E0_load_mobd_item(
		a1->turret_sprite,
		a1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[a1->mobd_lookup_id + 1]);
	v1->handler = tower_attachment_handler_4489B0;
}

//----- (004489B0) --------------------------------------------------------
void tower_attachment_handler_4489B0(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Entity *v2; // ecx@1
	Entity *v4; // eax@5
	int v5; // edx@5
	Entity *v6; // eax@8
	Entity *v7; // ecx@9
	Sprite *v8; // eax@9
	int v9; // ebx@9
	UnitAttachmentPoint *v10; // eax@11
	int v11; // eax@11
	UnitAttachmentPoint *v12; // ecx@12
	int src; // [sp+Ch] [bp-4h]@11

	v1 = a1;
	v2 = a1->entity;
	if ((v2->_DC_order == 2 || v2->_DC_order == 8)
		&& entity_4488F0_is_in_firing_range(v2, v2->_E0_current_attack_target, v2->_E0_current_attack_target_entity_id)
		&& sub_44CE40(v1->entity->player_side, v1->entity->_E0_current_attack_target))
	{
		v4 = v1->entity;
		v1->_C_entity = v4->_E0_current_attack_target;
		v5 = v4->_E0_current_attack_target_entity_id;
		goto LABEL_9;
	}
	if (entity_4488F0_is_in_firing_range(v1->entity, v1->entity->_E4_prev_attack_target, v1->entity->_E4_prev_attack_target_entity_id)
		&& is_enemy(v1->entity->player_side, v1->entity->_E4_prev_attack_target))
	{
		v6 = v1->entity;
		v1->_C_entity = v6->_E4_prev_attack_target;
		v5 = v6->_E4_prev_attack_target_entity_id;
	LABEL_9:
		v7 = v1->_C_entity;
		v8 = v1->turret_sprite;
		v1->_C_entity_idx = v5;
		v1->handler = tower_attachment_handler_448B40;
		v9 = (signed __int16)_42D560_get_mobd_lookup_id_rotation(v7->sprite->x - v8->x, v7->sprite->y - v8->y);
		entity_advance_mobd_rotation(&v1->mobd_lookup_id, v9, v1->stats_attachment_point->mobd_frame_step);
		sprite_4272E0_load_mobd_item(
			v1->turret_sprite,
			v1->stats_attachment_point->mobd_lookup_table_offset,
			_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
		if (v1->mobd_lookup_id == v9)
		{
			_42D560_get_mobd_lookup_id_rotation(
				v1->_C_entity->sprite->x - v1->turret_sprite->x,
				v1->_C_entity->sprite->y - v1->turret_sprite->y);
			sprite_4272E0_load_mobd_item(
				v1->turret_sprite,
				v1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
				_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
			v1->handler = tower_attachment_handler_448C40;
		}
		return;
	}
	v10 = v1->stats_attachment_point;
	src = v1->mobd_lookup_id;
	entity_advance_mobd_rotation(&src, v1->entity->current_mobd_lookup_idx, v10->mobd_frame_step);
	v11 = src;
	if (src != v1->mobd_lookup_id)
	{
		v12 = v1->stats_attachment_point;
		v1->mobd_lookup_id = src;
		sprite_4273B0_load_mobd_item_sound(
			v1->turret_sprite,
			v12->mobd_lookup_table_offset,
			_47D3C4_entity_mobd_lookup_ids[v11 + 1]);
	}
}

//----- (00448B40) --------------------------------------------------------
void tower_attachment_handler_448B40(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	Entity *v2; // ecx@1
	Sprite *v3; // eax@1
	int v4; // ebx@1

	v1 = a1;
	v2 = a1->_C_entity;
	v3 = v1->turret_sprite;
	v1->handler = tower_attachment_handler_448B40;
	v4 = (signed __int16)_42D560_get_mobd_lookup_id_rotation(v2->sprite->x - v3->x, v2->sprite->y - v3->y);
	entity_advance_mobd_rotation(&v1->mobd_lookup_id, v4, v1->stats_attachment_point->mobd_frame_step);
	sprite_4272E0_load_mobd_item(
		v1->turret_sprite,
		v1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
	if (v1->mobd_lookup_id == v4)
	{
		_42D560_get_mobd_lookup_id_rotation(
			v1->_C_entity->sprite->x - v1->turret_sprite->x,
			v1->_C_entity->sprite->y - v1->turret_sprite->y);
		sprite_4272E0_load_mobd_item(
			v1->turret_sprite,
			v1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
			_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
		v1->handler = tower_attachment_handler_448C40;
	}
}

//----- (00448BF0) --------------------------------------------------------
void tower_attachment_handler_448BF0(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1

	v1 = a1;
	_42D560_get_mobd_lookup_id_rotation(
		a1->_C_entity->sprite->x - a1->turret_sprite->x,
		a1->_C_entity->sprite->y - a1->turret_sprite->y);
	sprite_4272E0_load_mobd_item(
		v1->turret_sprite,
		v1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
		_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
	v1->handler = tower_attachment_handler_448C40;
}

//----- (00448C40) --------------------------------------------------------
void tower_attachment_handler_448C40(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	__int16 v2; // ax@5
	Sprite *v3; // ecx@5
	UnitDamageSource *v4; // edi@5
	Sprite *v5; // eax@8
	int v6; // edx@8
	Sprite *v7; // ebx@8
	Script *v8; // eax@10
	int v9; // edx@10
	UnitAttachmentPoint *v10; // eax@10
	int v11; // ecx@10
	Entity *v12; // ecx@12
	int v13; // eax@12
	Entity *v14; // edx@14
	Entity *v15; // eax@16

	v1 = a1;
	if (entity_4488F0_is_in_firing_range(a1->entity, a1->_C_entity, a1->_C_entity_idx))
	{
		if (sub_44CE40(v1->entity->player_side, v1->_C_entity))
		{
			v2 = _42D560_get_mobd_lookup_id_rotation(
				v1->_C_entity->sprite->x - v1->turret_sprite->x,
				v1->_C_entity->sprite->y - v1->turret_sprite->y);
			v3 = v1->turret_sprite;
			v1->mobd_lookup_id = v2;
			sprite_4273B0_load_mobd_item_sound(
				v3,
				v1->stats_attachment_point->_1C_mobd_lookup_table_offset_for_rotary_cannon,
				_47D3C4_entity_mobd_lookup_ids[v2 + 1]);
			v4 = v1->stats_attachment_point->dmg_source;
			if (v4 && _47C048_unit_bomberdmg < 200 && !v1->field_18)
			{
				++_47C048_unit_bomberdmg;
				v5 = sprite_create_scripted(v4->mobd_id, v1->turret_sprite, v4->dmg_handler, SCRIPT_COROUTINE, v1->ptr_24);
				v6 = v4->mobd_offset;
				v7 = v5;
				if (v6 != -1)
					sprite_4272E0_load_mobd_item(v5, v6, _47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
				v8 = v7->script;
				v9 = v1->turret_sprite->z_index;
				v7->param = v4;
				v7->z_index = v9 + 768;
				v8->param = v1->_C_entity;
				v7->_80_entity__stru29__sprite__initial_hitpoints = v1->entity;
				v7->field_84 = v1->entity->entity_id;
				v7->field_8C_infantry_damage = LOWORD_HEXRAYS(v4->damage_infantry)
					+ (v4->damage_infantry
						* _465610_damage_multipliers[v1->entity->_98_465610_accuracy_dmg_bonus_idx] >> 8);
				v7->field_8E_vehicle_damage = LOWORD_HEXRAYS(v4->damage_vehicle)
					+ (v4->damage_vehicle
						* _465610_damage_multipliers[v1->entity->_98_465610_accuracy_dmg_bonus_idx] >> 8);
				v7->field_90_building_damage = LOWORD_HEXRAYS(v4->damage_building)
					+ (v4->damage_building
						* _465610_damage_multipliers[v1->entity->_98_465610_accuracy_dmg_bonus_idx] >> 8);
				v7->parent = v1->turret_sprite->parent;
				script_trigger_event(v1->entity->script, EVT_MSG_1497, v1->entity, v1->_C_entity->script);
				v10 = v1->stats_attachment_point;
				v1->field_18 = v10->reload_time;
				v11 = v1->field_1C - 1;
				v1->field_1C = v11;
				if (!v11)
				{
					v1->field_18 += v10->reload2_time;
					v1->field_1C = v10->volley_size;
				}
			}
			v12 = v1->entity;
			v13 = v12->_DC_order;
			if (v13 == 2 || v13 == 8)
			{
				v14 = v12->_E0_current_attack_target;
				if (v1->_C_entity != v14)
				{
					if (entity_4488F0_is_in_firing_range(v12, v14, v12->_E0_current_attack_target_entity_id))
					{
						v15 = v1->entity;
						v1->_C_entity = v15->_E0_current_attack_target;
						v1->_C_entity_idx = v15->_E0_current_attack_target_entity_id;
						v1->handler = tower_attachment_handler_448B40;
					}
				}
			}
		}
		else
		{
			sprite_4272E0_load_mobd_item(
				v1->turret_sprite,
				v1->stats_attachment_point->mobd_lookup_table_offset,
				_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
			v1->handler = tower_attachment_handler_4489B0;
		}
	}
	else
	{
		sprite_4272E0_load_mobd_item(
			v1->turret_sprite,
			v1->stats_attachment_point->mobd_lookup_table_offset,
			_47D3C4_entity_mobd_lookup_ids[v1->mobd_lookup_id + 1]);
		v1->handler = tower_attachment_handler_4489B0;
	}
}
// 47C048: using guessed type int _47C048_unit_bomberdmg;

//----- (00448E90) --------------------------------------------------------
void tower_attachment_handler_448E90(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1

	v1 = a1;
	sprite_list_remove(a1->turret_sprite);
	script_yield(v1->sprite_task);
	script_free_local_object(v1->entity->script, v1);
}

//----- (00448EC0) --------------------------------------------------------
void MessageHandler_448EC0(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	int v4; // esi@1

	v4 = (int)receiver->param;
	if (event == EVT_MSG_MISSION_FAILED)
	{
		sprite_list_remove(*(Sprite **)(v4 + 4));
		script_yield(*(Script **)v4);
		script_free_local_object(*(Script **)(*(_DWORD *)(v4 + 8) + 12), (void *)v4);
	}
}

//----- (00448EF0) --------------------------------------------------------
void MessageHandler_task4_evt39030(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	_47CAF0_task_attachment1 *v4; // ecx@1
	_47CAF0_task_attachment1 *v5; // eax@2

	v4 = (_47CAF0_task_attachment1 *)receiver->param;
	if (event == EVT_SHOW_UI_CONTROL)
	{
		v5 = v4->next;
		if (v4->next != v4)
		{
			while (v5->_8_script != sender)
			{
				v5 = v5->next;
				if (v5 == v4)
					return;
			}
			v5->next->prev = v5->prev;
			v5->prev->next = v5->next;
			v5->next = (_47CAF0_task_attachment1 *)v4->attach2_list_free_pool;
			v4->attach2_list_free_pool = (_47CAF0_task_attachment2 *)v5;
		}
	}
}

//----- (00448F30) --------------------------------------------------------
void script_evt39030_handler(Script *a1)
{
	_47CAF0_task_attachment1 *v1; // esi@1
	stru209 *v2; // ebp@2
	Script *v3; // eax@5
	_47CAF0_task_attachment2 *v4; // ecx@6
	_47CAF0_task_attachment2 *v5; // edi@16
	Entity *v6; // eax@20
	Entity *v8; // eax@22
	char i; // dl@22
	int v10; // ecx@23
	char v11; // bl@23
	char *v12; // ecx@23
	_47CAF0_task_attachment1 *v13; // eax@26
	int v14; // edi@29
	Entity *v15; // ecx@31
	int v16; // edx@32
	_47CAF0_task_attachment2 *v17; // eax@34
	_47CAF0_task_attachment1 *v18; // edi@45
	Entity *v19; // eax@50
	_47CAF0_task_attachment1 *v20; // edi@51
	Entity *v21; // eax@56
	Entity *v22; // eax@58
	Entity *v23; // eax@62
	Entity *v24; // eax@64
	Entity *v25; // eax@66
	int v26; // edi@67
	UnitStat *v27; // ecx@67
	int v28; // ecx@67
	EntityTurret *v29; // eax@70
	EntityTurret *v30; // eax@72
	int v31; // ecx@80
	enum PLAYER_SIDE v32; // eax@81
	int v33; // esi@81
	Entity *v34; // esi@84
	Entity *v35; // eax@84
	Entity *v36; // esi@85
	Entity *v37; // eax@85
	Entity *v38; // esi@86
	Entity *v39; // eax@86
	Entity *v40; // esi@87
	Entity *v41; // eax@87
	Entity *v42; // esi@88
	Entity *v43; // eax@88
	int v44; // eax@89
	Entity *v45; // eax@92
	char text; // [sp+10h] [bp-78h]@83

	v1 = (_47CAF0_task_attachment1 *)a1->param;
	if (single_player_game)
		v2 = &stru_47CAE0;
	else
		v2 = (stru209 *)&netz_47CA30[13 * v1->selected_unit_player_side + 67];
	switch (v2->type)
	{
	    case stru209_TYPE_SELECT_UNIT_GROUP:
		    entity_drag_selection_init(
                HIWORD(v2->param) << 8,
                LOWORD(v2->param) << 8,
                LOWORD(v2->param2) << 8,
                HIWORD(v2->param2) << 8
            );
		v1->_1C_does_selected_unit_belong_to_player = false;
		v3 = entity_drag_selection_get_next_entity();
        if (!v3)
        {
            v2->type = stru209_TYPE_0;
            break;
        }
		do
		{
			v4 = v1->attach2_list_free_pool;
			if (v4)
				v1->attach2_list_free_pool = v4->next;
			else
				v4 = 0;
			if (v4)
			{
				v4->_8_selected_unit_script = v3;
				v4->next = (_47CAF0_task_attachment2 *)v1->next;
				v4->_4_unit_task = v1;
				v1->next->prev = (_47CAF0_task_attachment1 *)v4;
				v1->next = (_47CAF0_task_attachment1 *)v4;
                v1->_1C_does_selected_unit_belong_to_player = ((Entity *)v3->param)->player_side == v1->selected_unit_player_side;
			}
			v3 = entity_drag_selection_get_next_entity();
		} while (v3);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_SELECT_UNIT:
		if (v1->next != v1)
		{
			v1->prev->next = (_47CAF0_task_attachment1 *)v1->attach2_list_free_pool;
			v1->attach2_list_free_pool = (_47CAF0_task_attachment2 *)v1->next;
			v1->next = v1;
			v1->prev = v1;
		}
		v5 = v1->attach2_list_free_pool;
		if (v5)
			v1->attach2_list_free_pool = v5->next;
		else
			v5 = 0;
        if (v5)
        {

            v6 = entity_find_by_id(v2->param);
            if (v6)
            {
                v5->_8_selected_unit_script = v6->script;
                v5->next = (_47CAF0_task_attachment2 *)v1->next;
                v5->_4_unit_task = v1;
                v1->next->prev = (_47CAF0_task_attachment1 *)v5;
                v1->next = (_47CAF0_task_attachment1 *)v5;
                v1->_1C_does_selected_unit_belong_to_player = v6->player_side == v1->selected_unit_player_side;
            }
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_4:
		v8 = entity_list_head;
		for (i = *((_BYTE *)v2 + 1); (Entity **)v8 != &entity_list_head; v8 = v8->next)
		{
			v10 = v1->selected_unit_player_side;
			v11 = v8->array_294[v10];
			v12 = &v8->array_294[v10];
			if (v11 == i)
				*v12 = 0;
		}
		v13 = v1->next;
        if (v1->next != v1)
        {
            do
            {
                *((_BYTE *)v13->_8_script->param + v1->selected_unit_player_side + 660) = i;
                v13 = v13->next;
            } while (v13 != v1);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_5:
		v14 = *(int *)((char *)v2 + 1);
		if (v1->next != v1)
		{
			v1->prev->next = (_47CAF0_task_attachment1 *)v1->attach2_list_free_pool;
			v1->attach2_list_free_pool = (_47CAF0_task_attachment2 *)v1->next;
			v1->next = v1;
			v1->prev = v1;
		}
		v1->_1C_does_selected_unit_belong_to_player = false;
		v15 = entity_list_head;
        if ((Entity **)entity_list_head != &entity_list_head)
        {
            v16 = v1->selected_unit_player_side;
            do
            {
                if (v15->array_294[v16] == v14)
                {
                    v17 = v1->attach2_list_free_pool;
                    if (v17)
                        v1->attach2_list_free_pool = v17->next;
                    else
                        v17 = 0;
                    if (v17)
                    {
                        v17->_8_selected_unit_script = v15->script;
                        v17->next = (_47CAF0_task_attachment2 *)v1->next;
                        v17->_4_unit_task = v1;
                        v1->next->prev = (_47CAF0_task_attachment1 *)v17;
                        v16 = v1->selected_unit_player_side;
                        v1->next = (_47CAF0_task_attachment1 *)v17;
                        v1->_1C_does_selected_unit_belong_to_player = v15->player_side == v16;
                    }
                }
                v15 = v15->next;
            } while ((Entity **)v15 != &entity_list_head);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_DESELECT:
		if (v1->next != v1)
		{
			v1->prev->next = (_47CAF0_task_attachment1 *)v1->attach2_list_free_pool;
			v1->attach2_list_free_pool = (_47CAF0_task_attachment2 *)v1->next;
			v1->next = v1;
			v1->prev = v1;
		}
		v1->_1C_does_selected_unit_belong_to_player = false;
		v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_MOVE:
		v18 = v1->next;
		v1->move_task.dst_x = v2->param;
		v1->move_task.dst_y = v2->param2;
        if (v18 != v1)
        {
            do
            {
                if (v18->_8_script->event_handler)
                    script_trigger_event(v1->owning_task, EVT_ENTITY_MOVE, &v1->move_task, v18->_8_script);
                v18 = v18->next;
            } while (v18 != v1);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_ATTACK:
		v19 = entity_find_by_id(v2->param);
		v1->attack_task.target = v19;
        if (v19)
        {
            v20 = v1->next;
            if (v1->next != v1)
            {
                do
                {
                    if (v20->_8_script->event_handler)
                        script_trigger_event(v1->owning_task, EVT_ENTITY_ATTACK, &v1->attack_task, v20->_8_script);
                    v20 = v20->next;
                } while (v20 != v1);
            }
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_8_production_ready:
		v21 = entity_find_by_id(*(int *)((char *)v2 + 1));
        if (v21)
        {
            script_trigger_event(a1, EVT_MSG_PRODUCTION_READY, *(void **)((char *)v2 + 5), v21->script);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_DEPLOY_MOBILE_OUTPOST:
		v22 = entity_find_by_id(*(int *)((char *)v2 + 5));
		script_trigger_event(a1, EVT_MSG_1522_plan_building_construction, 0, v22->script);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_9_spawn_unit:
		if (spawn_unit(
			(enum UNIT_ID)*(_WORD *)((char *)v2 + 1),
			*(int *)((char *)v2 + 3),
			*(int *)((char *)v2 + 7),
			v1->selected_unit_player_side)
			|| v1->selected_unit_player_side != player_side)
        {
            ;
		}
        else
        {
            show_message_ex(0, aCouldnTCreat_0);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_11:
		v23 = entity_find_by_id(*(int *)((char *)v2 + 1));
        if (v23)
        {
            script_trigger_event(a1, EVT_MSG_1529_ai, *(void **)((char *)v2 + 5), v23->script);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_12_upgrade_complete:
		v24 = entity_find_by_id(*(int *)((char *)v2 + 1));
        if (v24)
        {
            script_trigger_event(a1, EVT_MSG_UPGRADE_COMPLETE, 0, v24->script);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_13:
		v25 = entity_find_by_id(*(int *)((char *)v2 + 1));
        if (v25)
        {
            v26 = *(_WORD *)((char *)v2 + 5) + v25->hitpoints;
            v27 = v25->stats;
            v25->hitpoints = v26;
            v28 = v27->hitpoints;
            if (v26 >= v28)
                v25->hitpoints = v28;
            if (*(_WORD *)((char *)v2 + 5))
            {
                v29 = v25->_E0_current_attack_target->turret;
                if (v29)
                {
                    v29->turret_sprite->_60_mobd_anim_speed = 0x8000000;
                }
            }
            else
            {
                v30 = v25->_E0_current_attack_target->turret;
                if (v30)
                {
                    v30->turret_sprite->_60_mobd_anim_speed = 0;
                }
            }
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_15_multiplayer:
        if (!single_player_game)
        {
            dword_47050C = 1;
            dword_47A738 = 1;
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_17_multiplayer:
        if (!single_player_game)
        {
            dword_47050C = -1;
            dword_47A738 = 1;
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_16_multiplayer:
        if (!single_player_game)
        {
            dword_47A738 = 0;
            dword_47050C = -1;
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_18:
		v31 = *(int *)((char *)v2 + 1);
		nullsub_1();
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_SWEAR_ALLEGIANCE:
		v32 = player_side;
		game_globals_cpu[0].cash[*(int *)((char *)v2 + 1) + 7 * v1->selected_unit_player_side] = 1;
		v33 = v1->selected_unit_player_side;
		if (v32 != v33 && v32 != *(int *)((char *)v2 + 1))
        {
            ;
        }
        else
        {
            sprintf(
                &text,
                aSSwearingAlleg,
                netz_47A740[v33 + 1].player_name,
                netz_47A740[*(int *)((char *)v2 + 1) + 1].player_name);
            show_message_ex(0, &text);
        }
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_TANKER_SET_DRILLRIG:
		v34 = entity_find_by_id(*(int *)((char *)v2 + 5));
		v35 = entity_find_by_id(*(int *)((char *)v2 + 1));
		script_trigger_event(a1, EVT_MSG_1542_tanker_set_drillrig, v34, v35->script);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_TANKER_SET_BASE:
		v36 = entity_find_by_id(*(int *)((char *)v2 + 5));
		v37 = entity_find_by_id(*(int *)((char *)v2 + 1));
		script_trigger_event(a1, EVT_MSG_1541_tanker_set_base, v36, v37->script);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_INFILTRATE:
		v38 = entity_find_by_id(*(int *)((char *)v2 + 5));
		v39 = entity_find_by_id(*(int *)((char *)v2 + 1));
		script_trigger_event(a1, EVT_MSG_1526_infiltrate, v38, v39->script);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_TECHNICIAN_REPAIR:
		v40 = entity_find_by_id(*(int *)((char *)v2 + 5));
		v41 = entity_find_by_id(*(int *)((char *)v2 + 1));
		script_trigger_event(a1, EVT_MSG_1547_technician_repair, v40, v41->script);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_REPAIR_AT_STATION:
		v42 = entity_find_by_id(*(int *)((char *)v2 + 5));
		v43 = entity_find_by_id(*(int *)((char *)v2 + 1));
		script_trigger_event(a1, EVT_MSG_1546_repair_at_station, v42, v43->script);
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_25_spawn_unit:
		v44 = *(int *)((char *)v2 + 1);
		if (single_player_game)
		{
			spawn_unit(
				(enum UNIT_ID)((v44 != 2) + 43),
				*(int *)((char *)v2 + 5),
				*(int *)((char *)v2 + 9),
				*(enum PLAYER_SIDE *)((char *)v2 + 1));
		}
		else
		{
			spawn_unit(
				(enum UNIT_ID)(44 - (netz_47A740[v44 + 1].field_A != 0)),
				*(int *)((char *)v2 + 5),
				*(int *)((char *)v2 + 9),
				*(enum PLAYER_SIDE *)((char *)v2 + 1));
		}
        v2->type = stru209_TYPE_0;
		break;

	case stru209_TYPE_26_destroy:
		v45 = entity_find_by_id(v2->param);
		if (v45)
			script_trigger_event(a1, EVT_MSG_DESTROY, 0, v45->script);
        v2->type = stru209_TYPE_0;

	default:
        v2->type = stru209_TYPE_0;
		break;
	}
}

//----- (00449670) --------------------------------------------------------
bool UNIT_InitTasks()
{
	char *v0; // edi@1
	int v1; // eax@1
	int v2; // edi@1
	char *v3; // ebp@1
	Script *v4; // eax@6
	_47CAF0_task_attachment1 *v5; // esi@6
	_47CAF0_task_attachment2 *v6; // eax@7
	int v7; // eax@9
	BOOL result; // eax@14
	int *v9; // [sp+10h] [bp-8h]@1
	int v10; // [sp+14h] [bp-4h]@1

	memset(_47CA80_array, 0, 0x58u);
	v0 = (char *) & _47CA80_array[6].field_8 + 2;
	*(_WORD *)v0 = 0;
	v0[2] = 0;
	v10 = get_current_level_starting_cash();
	v1 = single_player_game;
	v2 = 0;
	v9 = dword_470510;
	v3 = &netz_47A740[2].field_8;
	do
	{
		if (v1 == 0 && *(v3 - 28) != 0 || v1 && v2 == player_side)
		{
			v4 = script_create_function(SCRIPT_TYPE_39030, script_evt39030_handler);
			_47CAF0_tasks_evt39030[v2] = v4;
			v4->field_1C = 1;
			_47CAF0_tasks_evt39030[v2]->event_handler = MessageHandler_task4_evt39030;
			v5 = (_47CAF0_task_attachment1 *)script_create_local_object(_47CAF0_tasks_evt39030[v2], 52);
			if (!v5)
				return 0;
			v6 = (_47CAF0_task_attachment2 *)script_create_local_object(_47CAF0_tasks_evt39030[v2], 1200);
			v5->attach2_list = v6;
			if (!v6)
				script_yield(_47CAF0_tasks_evt39030[v2]);
			v7 = 0;
			v5->attach2_list_free_pool = v5->attach2_list;
			do
			{
				v5->attach2_list[v7].next = &v5->attach2_list[v7 + 1];
				++v7;
			} while (v7 < 99);
			v5->attach2_list[99].next = 0;
			v5->next = v5;
			v5->prev = v5;
			v5->selected_unit_player_side = (PLAYER_SIDE)v2;
			v5->attack_task.player_side = v2;
			v5->move_task.player_side = v2;
			v5->_1C_does_selected_unit_belong_to_player = false;
			v5->owning_task = _47CAF0_tasks_evt39030[v2];
			_47CAF0_tasks_evt39030[v2]->param = v5;
			game_globals_per_player.cash[v2] = v10;
			v1 = single_player_game;
			*v9 = 0;
		}
		else
		{
			_47CAF0_tasks_evt39030[v2] = 0;
		}
		v3 += 28;
		++v2;
		++v9;
	} while ((int)v3 < (int)&netz_47A844);
	if (v1)
	{
		dword_47A830 = 1;
		result = 1;
	}
	else
	{
        auto cr = script_create_coroutine(SCRIPT_TYPE_INVALID, script_449820_netz, 0);
		cr->field_1C = 1;
		result = 1;
	}
	return result;
}
// 468B5C: using guessed type int single_player_game;
// 470510: using guessed type int dword_470510[];
// 47A830: using guessed type int dword_47A830;
// 47A844: using guessed type int netz_47A844;

//----- (00449800) --------------------------------------------------------
void __47CAF0_tasks_evt39030_array_free()
{
	Script **v0; // esi@1

	v0 = _47CAF0_tasks_evt39030;
	do
	{
		if (*v0)
			script_deinit(*v0);
		++v0;
	} while ((int)v0 < (int)&dword_47CB0C);
}
// 47CB0C: using guessed type int dword_47CB0C;

//----- (0044A500) --------------------------------------------------------
void script_44A500_fog_of_war(Script *a1)
{
	Script *v1; // esi@1
	ScriptEvent *i; // ebp@1
	DrawJobDetails *v3; // ebx@3
	int v4; // esi@3
	int v5; // edi@3
	MouseInput v6; // [sp+10h] [bp-20h]@3

	while (1)
	{
		v1 = a1;
		script_445370_yield_to_main_thread(a1, 0xC0000000, 1);
		for (i = script_get_next_event(a1); i; i = script_get_next_event(v1))
		{
			if (i->event == 1511)
			{
				v3 = &_47A010_mapd_item_being_drawn[0]->draw_job->job_details;
				input_get_mouse_state(&v6);
				_47CB58_minimap_sprite->field_88_unused = 1;
				v4 = 16 * (v6.cursor_x_x256 - _47CB58_minimap_sprite->x) - (render_width << 7);
				v5 = 16 * (v6.cursor_y_x256 - _47CB58_minimap_sprite->y) - (render_height << 7);
				if (v4 >= 0)
				{
					if (v4 > (32 - render_width + render_call_draw_handler_mode1(v3)) << 8)
						v4 = (32 - render_width + render_call_draw_handler_mode1(v3)) << 8;
				}
				else
				{
					v4 = 0;
				}
				if (v5 >= 0)
				{
					if (v5 > (render_call_draw_handler_mode2(v3) - render_height) << 8)
						v5 = (render_call_draw_handler_mode2(v3) - render_height) << 8;
				}
				else
				{
					v5 = 0;
				}
				_47C380_mapd.mapd_cplc_render_x = v4;
				v1 = a1;
				_47C380_mapd.mapd_cplc_render_y = v5;
			}
			script_discard_event(i);
		}
		dword_47CB68 = _47C380_mapd.mapd_cplc_render_x >> 12;
		dword_47CB6C = _47C380_mapd.mapd_cplc_render_y >> 12;
	}
}

//----- (0044A650) --------------------------------------------------------
void show_minimap_sprite()
{
	_47CB58_minimap_sprite->drawjob->flags &= 0xBFFFFFFF;
	_4705B0_minimap.ptr_10 = (Sprite_stru58 *)&_4705A8_minimap_smthn;
	_47CB58_minimap_sprite->pstru58 = (Sprite_stru58 *) & _4705A8_minimap_smthn;
}

//----- (0044A680) --------------------------------------------------------
void hide_minimap_sprite()
{
	_47CB58_minimap_sprite->drawjob->flags |= 0x40000000u;
	_4705B0_minimap.ptr_10 = 0;
	_47CB58_minimap_sprite->pstru58 = 0;
}
// 4705B0: using guessed type DataMobdItem_stru0 _4705B0_minimap;

//----- (0044A6B0) --------------------------------------------------------
void _44A6B0_minimap(int x, int y)
{
	_47CB58_minimap_sprite->field_88_unused = 1;
	_47CB58_minimap_sprite->x = (x - __4793F8_map_width_x2 - 4) << 8;
	_47CB58_minimap_sprite->field_88_unused = 1;
	_47CB58_minimap_sprite->y = y << 8;
}
// 47CB7C: using guessed type int __4793F8_map_width_x2;

//----- (0044A700) --------------------------------------------------------
void script_44A700_minimap(Script *a1)
{
	Script *v1; // edi@1
	Sprite *v2; // esi@1

	v1 = a1;
	v2 = _447310_minimap();
	if (v2)
	{
		if (_47CB58_minimap_sprite)
		{
			script_trigger_event(0, EVT_MSG_1511_sidebar_click_category, 0, v2->script);
			script_trigger_event(0, EVT_MOUSE_HOVER, 0, v2->script);
			script_445370_yield_to_main_thread(v1, 0x80000000, 1);
			script_trigger_event(0, EVT_SHOW_UI_CONTROL, 0, v2->script);
			script_trigger_event(0, EVT_MOUSE_HOVER, 0, v2->script);
		}
	}
}

//----- (0044A780) --------------------------------------------------------
_BYTE *_44A780_gof_of_war()
{
	int v0; // edx@1
	_BYTE *result; // eax@1
	_BYTE *v2; // ecx@1
	int v3; // ebx@1
	MapdScrlImageTile **v4; // ebp@1
	int v5; // esi@2
	int v6; // edi@3
	char v7; // dl@5
	_BYTE *v8; // eax@5

	v0 = _4793F8_map_width;
	result = (char *)_47CB88_fow_map_x2;
	v2 = (char *)_47CB74_fow_map_x2;
	v3 = 0;
	v4 = &map_fog_of_war_scrl_tiles[2 * _4793F8_map_width + 10];
	if (_478AAC_map_height > 0)
	{
		v5 = __4793F8_map_width_x2;
		do
		{
			v6 = 0;
			if (v0 > 0)
			{
				do
				{
					if (*v4 == (MapdScrlImageTile *)dword_47CFC0)
					{
						result[v5] = v2[v5];
						v8 = result + 1;
						v8[__4793F8_map_width_x2] = v2[__4793F8_map_width_x2 + 1];
						*(v8 - 1) = *v2;
						v7 = *v2;
					}
					else
					{
						result[v5] = dword_47CB4C;
						result[__4793F8_map_width_x2 + 1] = dword_47CB4C;
						*result = dword_47CB4C;
						v7 = dword_47CB4C;
						v8 = result + 1;
					}
					*v8 = v7;
					v0 = _4793F8_map_width;
					v5 = __4793F8_map_width_x2;
					result = v8 + 1;
					++v6;
					++v4;
					v2 += 2;
				} while (v6 < _4793F8_map_width);
			}
			++v3;
			v4 += 4;
			v2 += v5;
			result += v5;
		} while (v3 < _478AAC_map_height);
	}
	return result;
}

//----- (0044A840) --------------------------------------------------------
bool mapd_init_fog_of_war()
{
	int v2; // eax@4
	unsigned int v3; // ebp@6
    MapdScrlImageTile **v4; // ebx@6
	int v5; // esi@6
	char *v7; // edi@9
	int v10; // ecx@10
	int v11; // ebx@11
	int v12; // esi@12
	unsigned char *v13; // edx@12
	int v16; // eax@15
	char v17; // dl@17
	char v18; // cl@17
	int v22; // edx@31
	int v23; // esi@31
	char *v24; // ebp@32
	char *v25; // eax@34
	int v26; // ecx@35
	char *v27; // ebp@37
	char *v28; // eax@39
	int v29; // ecx@40
	int v30; // eax@42
	char *v31; // ebx@42
	char *v32; // eax@44
	int v33; // ecx@45
	int v34; // ebp@47
	char *v35; // eax@49
	int v36; // ecx@50
	int v37; // ecx@52
	int *v38; // eax@52
	char v39; // dl@53
	Sprite *v40; // eax@54
	char *v41; // [sp+10h] [bp-24h]@9
    MapdScrlImageTile **v42; // [sp+14h] [bp-20h]@10
	char v44; // [sp+1Ch] [bp-18h]@17
	int v49; // [sp+30h] [bp-4h]@6
	int v50; // [sp+30h] [bp-4h]@42

    DataMapd *v1 = LVL_FindMapd();
    if (v1)
    {
        fog_of_war_bitmap = MAPD_Draw(MAPD_FOG_OF_WAR, 0, 0x10000000);
        if (fog_of_war_bitmap)
        {
            fog_of_war_bitmap->draw_job->on_update_handler = drawjob_update_handler_448390_fog_of_war;
            fog_of_war_scrl_source = (MapdScrlImage *)fog_of_war_bitmap->draw_job->job_details.image;
            __4793F8_map_width_plus4 = _4793F8_map_width + 4;
            __478AAC_map_height_plus4 = _478AAC_map_height + 4;
            map_fog_of_war_scrl = (MapdScrlImage *)malloc(4 * (_4793F8_map_width + 4) * (_478AAC_map_height + 4) + 20);
            if (map_fog_of_war_scrl)
            {
                map_fog_of_war_scrl->on_draw_handler = fog_of_war_scrl_source->on_draw_handler;
                map_fog_of_war_scrl->tile_x_size = fog_of_war_scrl_source->tile_x_size;
                map_fog_of_war_scrl->tile_y_size = fog_of_war_scrl_source->tile_y_size;
                map_fog_of_war_scrl->num_x_tiles = __4793F8_map_width_plus4;
                map_fog_of_war_scrl->num_y_tiles = __478AAC_map_height_plus4;
                map_fog_of_war_scrl_tiles = map_fog_of_war_scrl->tiles;
                dword_47CFC0 = 0;
                fog_of_war_tile_1 = fog_of_war_scrl_source->tiles[1];
                fog_of_war_tile_2 = fog_of_war_scrl_source->tiles[2];
                fog_of_war_tile_3 = fog_of_war_scrl_source->tiles[3];
                fog_of_war_tile_4 = fog_of_war_scrl_source->tiles[4];
                fog_of_war_tile_5 = fog_of_war_scrl_source->tiles[5];
                fog_of_war_tile_6 = fog_of_war_scrl_source->tiles[6];
                fog_of_war_tile_7 = fog_of_war_scrl_source->tiles[7];
                fog_of_war_tile_8 = fog_of_war_scrl_source->tiles[8];
                fog_of_war_tile_9 = fog_of_war_scrl_source->tiles[9];
                fog_of_war_tile_10 = fog_of_war_scrl_source->tiles[10];
                fog_of_war_tile_11 = fog_of_war_scrl_source->tiles[11];
                fog_of_war_tile_12 = fog_of_war_scrl_source->tiles[12];
                fog_of_war_tile_13 = fog_of_war_scrl_source->tiles[13];
                fog_of_war_tile_14 = fog_of_war_scrl_source->tiles[14];
                v2 = 0;
                for (fog_of_war_tile_15 = fog_of_war_scrl_source->tiles[15];
                    v2 < __4793F8_map_width_plus4 * __478AAC_map_height_plus4;
                    ++v2)
                {
                    map_fog_of_war_scrl_tiles[v2] = fog_of_war_tile_1;
                }

                fog_of_war_bitmap->draw_job->job_details.image = map_fog_of_war_scrl;
                LOBYTE_HEXRAYS(dword_47CB4C) = fog_of_war_tile_1->pixels[0];
                __4793F8_map_width_x2 = 2 * _4793F8_map_width;
                v3 = 2 * _4793F8_map_width * 2 * _478AAC_map_height;
                __478AAC_map_height_x2 = 2 * _478AAC_map_height;
                v49 = 2 * _4793F8_map_width * 2 * _478AAC_map_height;
                v4 = v1->items[0].images[0]->tiles;
                v5 = 4 * (2 * _4793F8_map_width + 2 * _478AAC_map_height) + 16;
                _47CB74_fow_map_x2 = malloc(v3);
                if (_47CB74_fow_map_x2)
                {
                    _47CB88_fow_map_x2 = malloc(v3);
                    if (_47CB88_fow_map_x2)
                    {
                        _47CB8C_fow = (DrawHandlerData_Units *)malloc(v5 + v3 + 12);
                        if (_47CB8C_fow)
                        {
                            _47CB8C_fow->type = 0;
                            v7 = (char *)_47CB74_fow_map_x2;
                            v41 = (char *)_47CB8C_fow->sprite_data;
                            dword_47CBAC = (int)(&_47CB8C_fow[1].type + 2 * __4793F8_map_width_x2);

                            for (int v8 = 0; v8 < __478AAC_map_height_x2; ++v8)
                            {
                                v42 = v4;
                                v10 = 16 * (v8 & 1);
                                v11 = (v8 & 1) << 9;
                                for (int v9 = 0; v9 < __4793F8_map_width_x2; ++v9)
                                {
                                    v12 = 16 * (v9 & 1);
                                    v13 = &(*v42)->pixels[v11 + v12];
                                    if (*v42)
                                    {
                                        memset(_47CBC0_fow, 0, sizeof(_47CBC0_fow));
                                        for (int v14 = 16; v14 > 0; --v14)
                                        {
                                            for (int v15 = 16; v15 > 0; --v15)
                                            {
                                                v16 = *v13++;
                                                ++_47CBC0_fow[v16];
                                            }
                                            v13 += 16;
                                        }
                                        v17 = 0;
                                        v18 = 1;
                                        v44 = 0;
                                        for (int v19 = 1; v19 < sizeof(_47CBC0_fow); ++v19)
                                        {
                                            if (_47CBC0_fow[v19] > _47CBC0_fow[(unsigned __int8)v44])
                                            {
                                                v17 = v18;
                                                v44 = v18;
                                            }
                                            ++v19;
                                            ++v18;
                                        }
                                        *v7 = v17;
                                    }
                                    else
                                    {
                                        *v7 = 1;
                                    }
                                    if (v12 == 16)
                                        ++v42;
                                    ++v7;
                                }

                                if (v10 == 16)
                                {
                                    v4 += _4793F8_map_width;
                                }
                            }
                            v3 = v49;

                            memset(_47CB88_fow_map_x2, dword_47CB4C, v3);
                            //memset32(_47CB88_fow_map_x2, v21, v3 >> 2);
                            //memset(&v20[4 * (v3 >> 2)], v4, v3 & 3);
                            v22 = __4793F8_map_width_x2 + 4;
                            v23 = __478AAC_map_height_x2 + 4;
                            if (__4793F8_map_width_x2 + 4 <= 2)
                            {
                                v24 = v41;
                            }
                            else
                            {
                                v24 = v41;
                                memset(v41, 0xA6u, __4793F8_map_width_x2 + 2);
                            }
                            v25 = v24;
                            if (v23 > 2)
                            {
                                v26 = v23 - 2;
                                do
                                {
                                    *v25 = -90;
                                    v25 += v22;
                                    --v26;
                                } while (v26);
                            }
                            v27 = &v24[v22 + 1];
                            if (v22 > 3)
                                memset(v27, 0xA0u, v22 - 3);
                            v28 = v27;
                            if (v23 > 3)
                            {
                                v29 = v23 - 3;
                                do
                                {
                                    *v28 = -96;
                                    v28 += v22;
                                    --v29;
                                } while (v29);
                            }
                            v30 = v22 * (v23 - 1);
                            v31 = &v41[v30];
                            v50 = (int)&v41[v30];
                            if (v22 > 2)
                                memset(&v41[v30 + 1], 0xA0u, v22 - 2);
                            v32 = &v41[2 * v22 - 1];
                            if (v23 > 2)
                            {
                                v33 = v23 - 2;
                                do
                                {
                                    *v32 = -96;
                                    v32 += v22;
                                    --v33;
                                } while (v33);
                            }
                            v34 = (int)&v41[v22 * (v23 - 2)];
                            if (v22 > 3)
                            {
                                memset((void *)(v34 + 2), 0xA6u, v22 - 3);
                                v31 = (char *)v50;
                            }
                            v35 = &v41[2 * v22 - 2] + v22;
                            if (v23 > 3)
                            {
                                v36 = v23 - 3;
                                do
                                {
                                    *v35 = -90;
                                    v35 += v22;
                                    --v36;
                                } while (v36);
                            }
                            v37 = 1;
                            v41[v22 - 1] = -93;
                            v41[2 * v22 - 2] = -93;
                            *(_BYTE *)(v34 + 1) = -93;
                            *v31 = -93;
                            v38 = &player_sprite_color_by_player_side[1];
                            do
                            {
                                v39 = *(_BYTE *)v38;
                                ++v38;
                                byte_47CB50[v37++] = 16 * v39 + 12;
                            } while ((int)v38 < (int)&UNIT_num_player_units);
                            _47CB8C_fow->width = __4793F8_map_width_x2 + 4;
                            _47CB8C_fow->height = __478AAC_map_height_x2 + 4;
                            _47CBA0_MobdSprtImage_fog_of_war.data = _47CB8C_fow;
                            dword_470598 = (__4793F8_map_width_x2 + 4) << 8;
                            _47CBA0_MobdSprtImage_fog_of_war.flags = 0;
                            _47CBA0_MobdSprtImage_fog_of_war.handler = render_sprt_draw_handler;
                            dword_47059C = (__478AAC_map_height_x2 + 4) << 8;
                            v40 = sprite_create_scripted(MOBD_MUTE_ALCHEMY_HALL, 0, (void(*)(Script *))script_44A500_fog_of_war, SCRIPT_COROUTINE, 0);
                            _47CB58_minimap_sprite = v40;
                            v40->_54_inside_mobd_ptr4 = &_4705B0_minimap;
                            _47CB58_minimap_sprite->drawjob->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4483E0_sidebar;
                            _47CB58_minimap_sprite->script->script_type = SCRIPT_TYPE_47802_fog_of_war;
                            _47CB58_minimap_sprite->drawjob->flags |= 0x40000000u;
                            _47CB98_fow_map_x2 = _47CB88_fow_map_x2;
                            return true;
                        }
                    }
                }
            }
        }
    }
    return false;
}

//----- (0044AE30) --------------------------------------------------------
void mapd_44AE30_fog_of_war()
{
	int v0; // edx@2
	_BYTE *v1; // esi@2
	int v2; // edi@2
	_BYTE *v3; // eax@2
	int i; // ebp@2
	int v5; // ecx@3
	int v6; // eax@7
	Entity *j; // esi@10
	Sprite *v8; // eax@12
	int v9; // ecx@12
	int v10; // eax@12
	int v11; // eax@16
	int v12; // edi@18
	int v13; // ecx@19
	Entity *k; // edx@24
	Sprite *v15; // eax@26
	int v16; // ecx@26
	int v17; // eax@26
	int v18; // eax@30
	int v19; // edi@32
	int v20; // esi@33
	int v21; // esi@39
	int v22; // edi@40
	_BYTE *v23; // edx@41
	unsigned int v24; // ecx@42
	_BYTE *v25; // edi@42
	int v26; // eax@44
	int v27; // eax@47
	int v28; // eax@50
	int v29; // [sp+10h] [bp-8h]@2
	unsigned int v30; // [sp+14h] [bp-4h]@2

	if (_47CB58_minimap_sprite->pstru58)
	{
		v0 = __4793F8_map_width_x2;
		v1 = (char *)_47CB98_fow_map_x2;
		v2 = 0;
		v29 = (unsigned int)(render_width - 32) >> 4;
		v30 = (unsigned int)render_height >> 4;
		v3 = (_BYTE *)dword_47CBAC;
		for (i = __4793F8_map_width_x2 + 4; v2 < __478AAC_map_height_x2; v3 += 4)
		{
			v5 = 0;
			if (v0 > 0)
			{
				do
				{
					*v3 = *v1;
					v0 = __4793F8_map_width_x2;
					++v3;
					++v1;
					++v5;
				} while (v5 < __4793F8_map_width_x2);
			}
			++v2;
		}
		if (is_player_faction_evolved())
			v6 = get_max_clanhall_level();
		else
			v6 = get_max_outpost_level();
		switch (v6)
		{
		case 1:
		case 2:
			for (j = entity_list_head; (Entity **)j != &entity_list_head; j = j->next)
			{
				if (j->player_side == player_side)
				{
					j->sprite->field_88_unused = 1;
					v8 = j->sprite;
					v9 = 2 * (v8->x >> 13);
					v10 = 2 * (v8->y >> 13);
					if (v9 >= 0 && v9 < __4793F8_map_width_x2 && v10 >= 0 && v10 < __478AAC_map_height_x2)
					{
						v11 = dword_47CBAC + v9 + i * v10;
						if (*(_BYTE *)v11 != (_BYTE)dword_47CB4C || *(_BYTE *)(v11 + 1) != (_BYTE)dword_47CB4C)
						{
							v12 = 2;
							do
							{
								v13 = 2;
								do
								{
									++v11;
									--v13;
									*(_BYTE *)(v11 - 1) = byte_47CB50[j->player_side];
								} while (v13);
								--v12;
								v11 = v11 + i - 2;
							} while (v12);
						}
					}
				}
			}
			break;
		case 3:
		case 4:
		case 5:
			for (k = entity_list_head; (Entity **)k != &entity_list_head; k = k->next)
			{
				if (k->player_side)
				{
					k->sprite->field_88_unused = 1;
					v15 = k->sprite;
					v16 = 2 * (v15->x >> 13);
					v17 = 2 * (v15->y >> 13);
					if (v16 >= 0 && v16 < __4793F8_map_width_x2 && v17 >= 0 && v17 < __478AAC_map_height_x2)
					{
						v18 = dword_47CBAC + v16 + i * v17;
						if (*(_BYTE *)v18 != (_BYTE)dword_47CB4C || *(_BYTE *)(v18 + 1) != (_BYTE)dword_47CB4C)
						{
							v19 = 2;
							do
							{
								v20 = 2;
								do
								{
									++v18;
									--v20;
									*(_BYTE *)(v18 - 1) = byte_47CB50[k->player_side];
								} while (v20);
								--v19;
								v18 = v18 + i - 2;
							} while (v19);
						}
					}
				}
			}
			break;
		default:
			break;
		}
		if (dword_47CB68 >= 0 && dword_47CB6C >= 0)
		{
			v21 = v29;
			if (dword_47CB68 <= __4793F8_map_width_x2 - v29)
			{
				v22 = v30;
				if (dword_47CB6C <= (int)(__478AAC_map_height_x2 - v30))
				{
					v23 = (_BYTE *)(dword_47CBAC + dword_47CB68 + dword_47CB6C * i);
					if (v29 > 1)
					{
						v24 = (unsigned int)(v29 - 1) >> 2;
						memset(v23, 0xA6u, 4 * v24);
						v25 = &v23[4 * v24];
						v23 += v29 - 1;
						v21 = v29;
						memset(v25, -90, ((_BYTE)v29 - 1) & 3);
						v22 = v30;
					}
					if (v22 > 1)
					{
						v26 = v22 - 1;
						do
						{
							*v23 = -90;
							v23 += i;
							--v26;
						} while (v26);
					}
					if (v21 > 1)
					{
						v27 = v21 - 1;
						do
						{
							*v23-- = -90;
							--v27;
						} while (v27);
					}
					if (v22 > 1)
					{
						v28 = v22 - 1;
						do
						{
							*v23 = -90;
							v23 -= i;
							--v28;
						} while (v28);
					}
				}
			}
		}
	}
}

//----- (0044B0D0) --------------------------------------------------------
bool is_map_revealed_at(int x, int y)
{
	return *(&map_fog_of_war_scrl_tiles[(x >> 13) + 2] + __4793F8_map_width_plus4 * ((y >> 13) + 2)) != fog_of_war_tile_1;
}

//----- (0044B100) --------------------------------------------------------
void entity_44B100_buildings__mess_with_fog_of_war(Entity *a1)
{
	Sprite *v1; // edx@2
	int v2; // ecx@2
	int v3; // eax@2
	int v4; // edi@2
	int v5; // ecx@3
	int v6; // ecx@5
	int v7; // ebp@6
	int v8; // esi@9
	int v9; // eax@11
	int v10; // ebx@13
	int v11; // ecx@13
	int v12; // edi@15
	int v13; // ecx@15
	char *v14; // edx@15
	char *v15; // ecx@15
	int v16; // esi@18
	int v17; // eax@21
	int v18; // esi@21
	int v19; // edx@21
	int v20; // ebx@21
	int v21; // ecx@27
	bool v22; // zf@27
	bool v23; // sf@27
	unsigned __int8 v24; // of@27
	int v25; // ecx@27
	MapdScrlImageTile **v26; // esi@32
	MapdScrlImageTile *v27; // eax@32
	MapdScrlImageTile *v28; // eax@44
	MapdScrlImageTile *v29; // eax@48
	MapdScrlImageTile *v30; // eax@50
	MapdScrlImageTile *v31; // eax@56
	MapdScrlImageTile *v32; // eax@67
	int v33; // esi@79
	int v34; // ecx@79
	int v35; // edx@80
	MapdScrlImageTile *v36; // eax@81
	MapdScrlImageTile *v37; // eax@93
	MapdScrlImageTile *v38; // eax@98
	MapdScrlImageTile *v39; // edi@110
	int v40; // eax@110
	MapdScrlImageTile *v41; // edi@116
	MapdScrlImageTile *v42; // edi@122
	MapdScrlImageTile *v43; // edi@133
	MapdScrlImageTile *v44; // edi@137
	MapdScrlImageTile *v45; // edx@141
	MapdScrlImageTile **v46; // eax@145
	int v47; // edi@146
	MapdScrlImageTile *v48; // esi@147
	MapdScrlImageTile *v49; // esi@159
	int v50; // eax@163
	int v51; // esi@164
	MapdScrlImageTile *v52; // esi@166
	MapdScrlImageTile *v53; // esi@178
	MapdScrlImageTile *v54; // esi@183
	MapdScrlImageTile *v55; // esi@195
	MapdScrlImageTile *v56; // ecx@200
	MapdScrlImageTile *v57; // esi@201
	MapdScrlImageTile *v58; // esi@207
	MapdScrlImageTile *v59; // esi@218
	int v60; // eax@230
	int v61; // ecx@231
	MapdScrlImageTile *v62; // esi@232
	MapdScrlImageTile *v63; // edx@244
	MapdScrlImageTile *v64; // esi@249
	MapdScrlImageTile *v65; // ecx@253
	MapdScrlImageTile *v66; // esi@261
	MapdScrlImageTile *v67; // edx@265
	MapdScrlImageTile *v68; // esi@267
	MapdScrlImageTile *v69; // esi@273
	MapdScrlImageTile *v70; // esi@283
	int v71; // [sp+0h] [bp-18h]@5
	int v72; // [sp+0h] [bp-18h]@79
	int v73; // [sp+4h] [bp-14h]@29
	int v74; // [sp+8h] [bp-10h]@2
	int v75; // [sp+8h] [bp-10h]@25
	int v76; // [sp+Ch] [bp-Ch]@2
	int v77; // [sp+Ch] [bp-Ch]@22
	int v78; // [sp+10h] [bp-8h]@16
	int v79; // [sp+10h] [bp-8h]@30
	int v80; // [sp+14h] [bp-4h]@32

	if (a1->player_side == player_side)
	{
		a1->sprite->field_88_unused = 1;
		v1 = a1->sprite;
		v2 = a1->stats->field_20;
		v3 = 2 * (v1->x >> 13);
		v4 = 2 * (v1->y >> 13);
		v76 = 2 * (v1->x >> 13);
		v74 = 2 * (v1->y >> 13);
		if (v2 <= 128)
			v5 = 4;
		else
			v5 = v2 >> 5;
		v6 = 2 * v5;
		v71 = v6;
		if (v3 >= v6)
			v7 = v3 - v6;
		else
			v7 = 0;
		if (v4 >= v6)
			v8 = v4 - v6;
		else
			v8 = 0;
		v9 = v6 + v3;
		if (v9 > __4793F8_map_width_x2)
			v9 = __4793F8_map_width_x2;
		v10 = __478AAC_map_height_x2;
		v11 = v4 + v6;
		if (v11 <= __478AAC_map_height_x2)
			v10 = v11;
		v12 = __4793F8_map_width_x2 + v7 - v9;
		v13 = v7 + __4793F8_map_width_x2 * v8;
		v14 = (char *)_47CB88_fow_map_x2 + v13;
		v15 = (char *)_47CB74_fow_map_x2 + v13;
		if (v8 < v10)
		{
			v78 = v10 - v8;
			do
			{
				if (v7 < v9)
				{
					v16 = v9 - v7;
					do
					{
						*v14++ = *v15++;
						--v16;
					} while (v16);
				}
				v14 += v12;
				v15 += v12;
				--v78;
			} while (v78);
		}
		v17 = v71 / 2;
		v18 = v76 / 2;
		v19 = v71 / 2 - 1;
		v20 = v74 / 2;
		if (v76 / 2 >= v19)
			v77 = v18 - v17 + 2;
		else
			v77 = 1;
		if (v20 >= v19)
			v75 = v20 - v17 + 2;
		else
			v75 = 1;
		v21 = v17 + v18 + 4;
		v24 = __OFSUB__(v21, __4793F8_map_width_plus4);
		v22 = v21 == __4793F8_map_width_plus4;
		v23 = v21 - __4793F8_map_width_plus4 < 0;
		v25 = __4793F8_map_width_plus4 - 2;
		if ((unsigned __int8)(v23 ^ v24) | v22)
			v25 = v17 + v18 + 2;
		v73 = v25;
		if (v17 + v20 + 4 <= __478AAC_map_height_plus4)
			v79 = v17 + v20 + 2;
		else
			v79 = __478AAC_map_height_plus4 - 2;
		v26 = &map_fog_of_war_scrl_tiles[v77 + __4793F8_map_width_plus4 * v75];
		v80 = v77 - v25 + __4793F8_map_width_plus4 - 1;
		v27 = *(&map_fog_of_war_scrl_tiles[v77] + __4793F8_map_width_plus4 * v75 - __4793F8_map_width_plus4);
		if (v27 == fog_of_war_tile_1 || v27 == fog_of_war_tile_4 || v27 == fog_of_war_tile_9 || v27 == fog_of_war_tile_8)
		{
			v32 = *(v26 - 1);
			if (v32 == fog_of_war_tile_1 || v32 == fog_of_war_tile_3 || v32 == fog_of_war_tile_8 || v32 == fog_of_war_tile_7)
			{
				v29 = fog_of_war_tile_6;
			LABEL_78:
				*v26 = v29;
				goto LABEL_79;
			}
			if (v32 == fog_of_war_tile_6
				|| v32 == fog_of_war_tile_2
				|| v32 == fog_of_war_tile_11
				|| v32 == fog_of_war_tile_14)
			{
				*v26 = fog_of_war_tile_2;
			}
			else
			{
				*v26 = (MapdScrlImageTile *)dword_47CFC0;
			}
		}
		else
		{
			if (v27 == fog_of_war_tile_6
				|| v27 == fog_of_war_tile_5
				|| v27 == fog_of_war_tile_13
				|| v27 == fog_of_war_tile_14)
			{
				v31 = *(v26 - 1);
				if (v31 == fog_of_war_tile_1
					|| v31 == fog_of_war_tile_3
					|| v31 == fog_of_war_tile_8
					|| v31 == fog_of_war_tile_7)
				{
					*v26 = fog_of_war_tile_5;
					goto LABEL_79;
				}
				if (v31 == fog_of_war_tile_6
					|| v31 == fog_of_war_tile_2
					|| v31 == fog_of_war_tile_11
					|| v31 == fog_of_war_tile_14)
				{
					*v26 = fog_of_war_tile_10;
					goto LABEL_79;
				}
				v29 = (MapdScrlImageTile *)dword_47CFC0;
				goto LABEL_78;
			}
			if (v27 != fog_of_war_tile_7
				&& v27 != fog_of_war_tile_3
				&& v27 != fog_of_war_tile_12
				&& v27 != fog_of_war_tile_15)
			{
				v28 = *(v26 - 1);
				if (v28 == fog_of_war_tile_9
					|| v28 == fog_of_war_tile_4
					|| v28 == fog_of_war_tile_12
					|| v28 == fog_of_war_tile_15)
				{
					*v26 = fog_of_war_tile_13;
					goto LABEL_79;
				}
				v29 = (MapdScrlImageTile *)dword_47CFC0;
				goto LABEL_78;
			}
			v30 = *(v26 - 1);
			if (v30 == fog_of_war_tile_9
				|| v30 == fog_of_war_tile_4
				|| v30 == fog_of_war_tile_12
				|| v30 == fog_of_war_tile_15)
			{
				*v26 = fog_of_war_tile_14;
			}
			else
			{
				*v26 = fog_of_war_tile_11;
			}
		}
	LABEL_79:
		v33 = (int)(v26 + 1);
		v34 = v77 + 1;
		v72 = v77 + 1;
		if (v77 + 1 < v73)
		{
			v35 = v73 - v34;
			do
			{
				v36 = *(MapdScrlImageTile **)(v33 - 4 * __4793F8_map_width_plus4);
				if (v36 == fog_of_war_tile_1
					|| v36 == fog_of_war_tile_4
					|| v36 == fog_of_war_tile_9
					|| v36 == fog_of_war_tile_8)
				{
					v37 = fog_of_war_tile_2;
				}
				else if (v36 == fog_of_war_tile_6
					|| v36 == fog_of_war_tile_5
					|| v36 == fog_of_war_tile_13
					|| v36 == fog_of_war_tile_14)
				{
					v37 = fog_of_war_tile_10;
				}
				else if (v36 == fog_of_war_tile_7
					|| v36 == fog_of_war_tile_3
					|| v36 == fog_of_war_tile_12
					|| v36 == fog_of_war_tile_15)
				{
					v37 = fog_of_war_tile_11;
				}
				else
				{
					v37 = (MapdScrlImageTile *)dword_47CFC0;
				}
				*(_DWORD *)v33 = (int)v37;
				v33 += 4;
				--v35;
			} while (v35);
		}
		v38 = *(MapdScrlImageTile **)(v33 - 4 * __4793F8_map_width_plus4);
		if (v38 == fog_of_war_tile_1 || v38 == fog_of_war_tile_4 || v38 == fog_of_war_tile_9 || v38 == fog_of_war_tile_8)
		{
			v43 = *(MapdScrlImageTile **)(v33 + 4);
			v40 = v33 + 4;
			if (v43 == fog_of_war_tile_1 || v43 == fog_of_war_tile_5 || v43 == fog_of_war_tile_9 || v43 == fog_of_war_tile_6)
			{
				v45 = fog_of_war_tile_7;
			}
			else
			{
				v44 = *(MapdScrlImageTile **)(v33 - 4);
				if (v44 == fog_of_war_tile_6
					|| v44 == fog_of_war_tile_2
					|| v44 == fog_of_war_tile_11
					|| v44 == fog_of_war_tile_14)
				{
					*(_DWORD *)v33 = (int)fog_of_war_tile_2;
					goto LABEL_145;
				}
				v45 = (MapdScrlImageTile *)dword_47CFC0;
			}
			*(_DWORD *)v33 = (int)v45;
		}
		else if (v38 == fog_of_war_tile_7
			|| v38 == fog_of_war_tile_3
			|| v38 == fog_of_war_tile_12
			|| v38 == fog_of_war_tile_15)
		{
			v42 = *(MapdScrlImageTile **)(v33 + 4);
			v40 = v33 + 4;
			if (v42 == fog_of_war_tile_1 || v42 == fog_of_war_tile_5 || v42 == fog_of_war_tile_9 || v42 == fog_of_war_tile_6)
			{
				v34 = v77 + 1;
				*(_DWORD *)v33 = (int)fog_of_war_tile_3;
			}
			else if (v42 == fog_of_war_tile_7
				|| v42 == fog_of_war_tile_2
				|| v42 == fog_of_war_tile_10
				|| v42 == fog_of_war_tile_15)
			{
				v34 = v77 + 1;
				*(_DWORD *)v33 = (int)fog_of_war_tile_11;
			}
			else
			{
				*(_DWORD *)v33 = dword_47CFC0;
				v34 = v77 + 1;
			}
		}
		else if (v38 == fog_of_war_tile_6
			|| v38 == fog_of_war_tile_5
			|| v38 == fog_of_war_tile_13
			|| v38 == fog_of_war_tile_14)
		{
			v41 = *(MapdScrlImageTile **)(v33 + 4);
			v40 = v33 + 4;
			if (v41 == fog_of_war_tile_8
				|| v41 == fog_of_war_tile_4
				|| v41 == fog_of_war_tile_13
				|| v41 == fog_of_war_tile_14)
			{
				v34 = v77 + 1;
				*(_DWORD *)v33 = (int)fog_of_war_tile_15;
			}
			else
			{
				*(_DWORD *)v33 = (int)fog_of_war_tile_10;
				v34 = v77 + 1;
			}
		}
		else
		{
			v39 = *(MapdScrlImageTile **)(v33 + 4);
			v40 = v33 + 4;
			if (v39 == fog_of_war_tile_8
				|| v39 == fog_of_war_tile_4
				|| v39 == fog_of_war_tile_13
				|| v39 == fog_of_war_tile_14)
			{
				v34 = v77 + 1;
				*(_DWORD *)v33 = (int)fog_of_war_tile_12;
			}
			else
			{
				*(_DWORD *)v33 = dword_47CFC0;
				v34 = v77 + 1;
			}
		}
	LABEL_145:
		v46 = (MapdScrlImageTile **)(4 * v80 + v40);
		if (v75 + 1 < v79)
		{
			v47 = v79 - (v75 + 1);
			do
			{
				v48 = *(v46 - 1);
				if (v48 == fog_of_war_tile_1
					|| v48 == fog_of_war_tile_3
					|| v48 == fog_of_war_tile_8
					|| v48 == fog_of_war_tile_7)
				{
					v49 = fog_of_war_tile_5;
				}
				else if (v48 == fog_of_war_tile_6
					|| v48 == fog_of_war_tile_2
					|| v48 == fog_of_war_tile_11
					|| v48 == fog_of_war_tile_14)
				{
					v49 = fog_of_war_tile_10;
				}
				else if (v48 == fog_of_war_tile_9
					|| v48 == fog_of_war_tile_4
					|| v48 == fog_of_war_tile_12
					|| v48 == fog_of_war_tile_15)
				{
					v49 = fog_of_war_tile_13;
				}
				else
				{
					v49 = (MapdScrlImageTile *)dword_47CFC0;
				}
				*v46 = v49;
				v50 = (int)(v46 + 1);
				if (v34 < v73)
				{
					v51 = v73 - v34;
					do
					{
						*(_DWORD *)v50 = dword_47CFC0;
						v50 += 4;
						--v51;
					} while (v51);
				}
				v52 = *(MapdScrlImageTile **)(v50 + 4);
				if (v52 == fog_of_war_tile_1
					|| v52 == fog_of_war_tile_5
					|| v52 == fog_of_war_tile_9
					|| v52 == fog_of_war_tile_6)
				{
					v53 = fog_of_war_tile_3;
				}
				else if (v52 == fog_of_war_tile_7
					|| v52 == fog_of_war_tile_2
					|| v52 == fog_of_war_tile_10
					|| v52 == fog_of_war_tile_15)
				{
					v53 = fog_of_war_tile_11;
				}
				else if (v52 == fog_of_war_tile_8
					|| v52 == fog_of_war_tile_4
					|| v52 == fog_of_war_tile_13
					|| v52 == fog_of_war_tile_14)
				{
					v53 = fog_of_war_tile_12;
				}
				else
				{
					v53 = (MapdScrlImageTile *)dword_47CFC0;
				}
				*(_DWORD *)v50 = (int)v53;
				v46 = (MapdScrlImageTile **)(4 * v80 + v50 + 4);
				--v47;
			} while (v47);
		}
		v54 = v46[__4793F8_map_width_plus4];
		if (v54 == fog_of_war_tile_1 || v54 == fog_of_war_tile_2 || v54 == fog_of_war_tile_6 || v54 == fog_of_war_tile_7)
		{
			v59 = *(v46 - 1);
			if (v59 != fog_of_war_tile_1 && v59 != fog_of_war_tile_3 && v59 != fog_of_war_tile_8 && v59 != fog_of_war_tile_7)
			{
				if (v59 == fog_of_war_tile_9
					|| v59 == fog_of_war_tile_4
					|| v59 == fog_of_war_tile_12
					|| v59 == fog_of_war_tile_15)
				{
					*v46 = fog_of_war_tile_4;
				}
				else
				{
					*v46 = (MapdScrlImageTile *)dword_47CFC0;
				}
			LABEL_230:
				v60 = (int)(v46 + 1);
				if (v72 < v73)
				{
					v61 = v73 - v72;
					do
					{
						v62 = *(MapdScrlImageTile **)(v60 + 4 * __4793F8_map_width_plus4);
						if (v62 == fog_of_war_tile_1
							|| v62 == fog_of_war_tile_2
							|| v62 == fog_of_war_tile_6
							|| v62 == fog_of_war_tile_7)
						{
							v63 = fog_of_war_tile_4;
						}
						else if (v62 == fog_of_war_tile_9
							|| v62 == fog_of_war_tile_5
							|| v62 == fog_of_war_tile_10
							|| v62 == fog_of_war_tile_15)
						{
							v63 = fog_of_war_tile_13;
						}
						else if (v62 == fog_of_war_tile_8
							|| v62 == fog_of_war_tile_3
							|| v62 == fog_of_war_tile_11
							|| v62 == fog_of_war_tile_14)
						{
							v63 = fog_of_war_tile_12;
						}
						else
						{
							v63 = (MapdScrlImageTile *)dword_47CFC0;
						}
						*(_DWORD *)v60 = (int)v63;
						v60 += 4;
						--v61;
					} while (v61);
				}
				v64 = *(MapdScrlImageTile **)(v60 + 4 * __4793F8_map_width_plus4);
				if (v64 == fog_of_war_tile_1
					|| v64 == fog_of_war_tile_2
					|| v64 == fog_of_war_tile_6
					|| v64 == fog_of_war_tile_7)
				{
					v70 = *(MapdScrlImageTile **)(v60 + 4);
					if (v70 == fog_of_war_tile_1
						|| v70 == fog_of_war_tile_5
						|| v70 == fog_of_war_tile_9
						|| v70 == fog_of_war_tile_6)
					{
						v67 = fog_of_war_tile_8;
						goto LABEL_295;
					}
					if (v70 == fog_of_war_tile_8
						|| v70 == fog_of_war_tile_4
						|| v70 == fog_of_war_tile_13
						|| v70 == fog_of_war_tile_14)
					{
						*(_DWORD *)v60 = (int)fog_of_war_tile_4;
						goto LABEL_296;
					}
					v65 = (MapdScrlImageTile *)dword_47CFC0;
				}
				else
				{
					v65 = fog_of_war_tile_3;
					if (v64 != fog_of_war_tile_8
						&& v64 != fog_of_war_tile_3
						&& v64 != fog_of_war_tile_11
						&& v64 != fog_of_war_tile_14)
					{
						if (v64 == fog_of_war_tile_9
							|| v64 == fog_of_war_tile_5
							|| v64 == fog_of_war_tile_10
							|| v64 == fog_of_war_tile_15)
						{
							v68 = *(MapdScrlImageTile **)(v60 + 4);
							if (v68 != fog_of_war_tile_7
								&& v68 != fog_of_war_tile_2
								&& v68 != fog_of_war_tile_10
								&& v68 != fog_of_war_tile_15)
							{
								v67 = fog_of_war_tile_13;
								goto LABEL_295;
							}
							*(_DWORD *)v60 = (int)fog_of_war_tile_14;
						}
						else
						{
							v66 = *(MapdScrlImageTile **)(v60 + 4);
							if (v66 != fog_of_war_tile_7
								&& v66 != fog_of_war_tile_2
								&& v66 != fog_of_war_tile_10
								&& v66 != fog_of_war_tile_15)
							{
								v67 = (MapdScrlImageTile *)dword_47CFC0;
							LABEL_295:
								*(_DWORD *)v60 = (int)v67;
								goto LABEL_296;
							}
							*(_DWORD *)v60 = (int)fog_of_war_tile_11;
						}
					LABEL_296:
						sub_44BC80(v77, v73, v75, v79);
						return;
					}
					v69 = *(MapdScrlImageTile **)(v60 + 4);
					if (v69 != fog_of_war_tile_1
						&& v69 != fog_of_war_tile_5
						&& v69 != fog_of_war_tile_9
						&& v69 != fog_of_war_tile_6)
					{
						if (v69 == fog_of_war_tile_8
							|| v69 == fog_of_war_tile_4
							|| v69 == fog_of_war_tile_13
							|| v69 == fog_of_war_tile_14)
						{
							v67 = fog_of_war_tile_12;
							goto LABEL_295;
						}
						*(_DWORD *)v60 = dword_47CFC0;
						goto LABEL_296;
					}
				}
				*(_DWORD *)v60 = (int)v65;
				goto LABEL_296;
			}
			v56 = fog_of_war_tile_9;
		}
		else if (v54 == fog_of_war_tile_9
			|| v54 == fog_of_war_tile_5
			|| v54 == fog_of_war_tile_10
			|| v54 == fog_of_war_tile_15)
		{
			v58 = *(v46 - 1);
			if (v58 == fog_of_war_tile_1 || v58 == fog_of_war_tile_3 || v58 == fog_of_war_tile_8 || v58 == fog_of_war_tile_7)
			{
				*v46 = fog_of_war_tile_5;
				goto LABEL_230;
			}
			if (v58 != fog_of_war_tile_9
				&& v58 != fog_of_war_tile_4
				&& v58 != fog_of_war_tile_12
				&& v58 != fog_of_war_tile_15)
			{
				*v46 = (MapdScrlImageTile *)dword_47CFC0;
				goto LABEL_230;
			}
			v56 = fog_of_war_tile_13;
		}
		else if (v54 == fog_of_war_tile_8
			|| v54 == fog_of_war_tile_3
			|| v54 == fog_of_war_tile_11
			|| v54 == fog_of_war_tile_14)
		{
			v57 = *(v46 - 1);
			if (v57 != fog_of_war_tile_6
				&& v57 != fog_of_war_tile_2
				&& v57 != fog_of_war_tile_11
				&& v57 != fog_of_war_tile_14)
			{
				*v46 = fog_of_war_tile_12;
				goto LABEL_230;
			}
			v56 = fog_of_war_tile_15;
		}
		else
		{
			v55 = *(v46 - 1);
			if (v55 != fog_of_war_tile_6
				&& v55 != fog_of_war_tile_2
				&& v55 != fog_of_war_tile_11
				&& v55 != fog_of_war_tile_14)
			{
				*v46 = (MapdScrlImageTile *)dword_47CFC0;
				goto LABEL_230;
			}
			v56 = fog_of_war_tile_10;
		}
		*v46 = v56;
		goto LABEL_230;
	}
}
// 47CB2C: using guessed type int __478AAC_map_height_plus4;
// 47CB34: using guessed type int __478AAC_map_height_x2;
// 47CB7C: using guessed type int __4793F8_map_width_x2;
// 47CB80: using guessed type int __4793F8_map_width_plus4;
// 47CFC0: using guessed type int dword_47CFC0;

//----- (0044BC00) --------------------------------------------------------
void minimap_free()
{
	fog_of_war_bitmap->draw_job->job_details.image = 0;
	bitmap_list_remove(fog_of_war_bitmap);
	_47CB58_minimap_sprite->drawjob->job_details.image = 0;
	sprite_list_remove(_47CB58_minimap_sprite);
	free(_47CB8C_fow);
	free(_47CB88_fow_map_x2);
	free(_47CB74_fow_map_x2);
	free(map_fog_of_war_scrl);
}

//----- (0044BC80) --------------------------------------------------------
int sub_44BC80(int a1, int a2, int a3, int a4)
{
	int v4; // edi@1
	int v5; // ecx@1
	MapdScrlImage *v6; // edx@1
	int v7; // edi@1
	MapdScrlImage *v8; // ebx@1
	int result; // eax@1
	bool v10; // sf@1
	int i; // ebp@9
	MapdScrlImageTile **v12; // esi@10
	MapdScrlImageTile **v13; // edi@10
	int v14; // ebx@11
	MapdScrlImage *v15; // [sp+10h] [bp-4h]@1
	int v16; // [sp+18h] [bp+4h]@1
	int v17; // [sp+1Ch] [bp+8h]@1

	v4 = a2;
	v5 = a1 - 2;
	v6 = (MapdScrlImage *)_47A010_mapd_item_being_drawn[0]->draw_job->job_details.image;
	v7 = v4 + 2;
	v8 = (MapdScrlImage *)_47A010_mapd_item_being_drawn[1]->draw_job->job_details.image;
	result = a3 - 2;
	v15 = (MapdScrlImage *)_47A010_mapd_item_being_drawn[1]->draw_job->job_details.image;
	v10 = a3 - 2 < 0;
	v17 = a4 + 2;
	v16 = v7;
	if (v10)
		result = 0;
	if (v5 < 0)
		v5 = 0;
	if (v7 >= v6->num_x_tiles)
		v16 = v6->num_x_tiles;
	if (v17 >= v6->num_y_tiles)
		v17 = v6->num_y_tiles;
	for (i = result; i < v17; ++i)
	{
		v12 = &v6->tiles[v5 + v6->num_x_tiles * i];
		v13 = &v8->tiles[v5 + v8->num_x_tiles * i];
		if (v5 < v16)
		{
			v14 = v16 - v5;
			do
			{
				if (*v12)
					(*v12)->flags &= 0xFFFFFFFD;
				if (*v13)
					(*v13)->flags &= 0xFFFFFFFD;
				++v12;
				++v13;
				--v14;
			} while (v14);
			v8 = v15;
		}
		result = v17;
	}
	return result;
}

//----- (0044BD50) --------------------------------------------------------
int MAPD_44BD50_alter_tile_flags()
{
	int v0; // ebx@1
	MapdScrlImage *v1; // ecx@1
	MapdScrlImage *v2; // ebp@1
	int result; // eax@1
	int v4; // eax@2
	MapdScrlImageTile **v5; // esi@2
	MapdScrlImageTile **v6; // edi@2
	int v7; // edx@2

	v0 = 0;
	v1 = (MapdScrlImage *)_47A010_mapd_item_being_drawn[0]->draw_job->job_details.image;
	v2 = (MapdScrlImage *)_47A010_mapd_item_being_drawn[1]->draw_job->job_details.image;
	result = v1->num_y_tiles;
	if (result > 0)
	{
		do
		{
			v4 = v1->num_x_tiles;
			v5 = &v1->tiles[v4 * v0];
			v6 = &v2->tiles[v2->num_x_tiles * v0];
			v7 = 0;
			if (v4 > 0)
			{
				do
				{
					if (*v5)
						(*v5)->flags |= 2u;
					if (*v6)
						(*v6)->flags |= 2u;
					++v5;
					++v6;
					++v7;
				} while (v7 < v1->num_x_tiles);
			}
			result = v1->num_y_tiles;
			++v0;
		} while (v0 < result);
	}
	return result;
}

//----- (0044BDC0) --------------------------------------------------------
void drawjob_update_handler_44BDC0_entity_turret(Sprite *a1, DrawJob *a2)
{
	_DWORD *v2; // eax@1
	int v3; // eax@2
	DataMobdItem_stru0 *v4; // esi@2

	v2 = (int *)a1->param;
	if (v2)
	{
		v3 = v2[2];
		v4 = a1->_54_inside_mobd_ptr4;
		if (v4)
		{
			a2->job_details.x = ((*(_DWORD *)(*(_DWORD *)(v3 + 96) + 4)
				+ *(_DWORD *)(*(_DWORD *)(v3 + 92) + 16)
				- _47C380_mapd.mapd_cplc_render_x) >> 8)
				- v4->x_offset;
			a2->job_details.y = ((*(_DWORD *)(*(_DWORD *)(v3 + 96) + 8)
				+ *(_DWORD *)(*(_DWORD *)(v3 + 92) + 20)
				- _47C380_mapd.mapd_cplc_render_y) >> 8)
				- a1->_54_inside_mobd_ptr4->y_offset;
			a2->job_details.z_index = ((*(_DWORD *)(*(_DWORD *)(v3 + 92) + 24) + *(_DWORD *)(*(_DWORD *)(v3 + 92) + 20)) >> 8)
				+ 1;
			a2->job_details.image = a1->_54_inside_mobd_ptr4->sprt;
			a2->job_details.params = render_default_stru1;
		}
		else
		{
			a2->job_details.image = 0;
			a2->job_details.params = render_default_stru1;
		}
	}
}

//----- (0044BE60) --------------------------------------------------------
void script_44BE60_explosions(Script *a1)
{
	Sprite *v1; // esi@1
	DrawJob *v2; // edx@3
	int v3; // [sp+Ch] [bp-24h]@1
	int v4; // [sp+10h] [bp-20h]@1
	int v5; // [sp+14h] [bp-1Ch]@1
	int v6; // [sp+18h] [bp-18h]@1
	int v7; // [sp+1Ch] [bp-14h]@1
	int v8; // [sp+20h] [bp-10h]@1
	int v9; // [sp+24h] [bp-Ch]@1
	int v10; // [sp+28h] [bp-8h]@1
	int v11; // [sp+2Ch] [bp-4h]@1

	v1 = a1->sprite;
	v3 = 0;
	v4 = 0;
	v5 = 0;
	v6 = 0;
	v7 = 0;
	v8 = 0;
	v9 = 0;
	v10 = 0;
	v11 = 0;
	if (!v1->param)
		v1->param = &v3;
	sprite_408800_play_sound(v1, SOUND_3, _4690A8_unit_sounds_volume, 0);
	v2 = v1->drawjob;
	v1->z_index = 0;
	v2->on_update_handler = (void(*)(void *, DrawJob *))drawjob_update_handler_4484A0_explosions;
	sprite_load_mobd(v1, 144);
	script_445370_yield_to_main_thread(a1, 0x10000000, 0);
	decrease_num_explosions();
	sprite_list_remove(a1->sprite);
	script_yield(a1);
}

//----- (0044BF00) --------------------------------------------------------
void EntityTurret_44BF00_handler(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	int *v2; // edi@1
	UnitAttachmentPoint *v3; // eax@1
	Entity *v4; // edx@1

	v1 = a1;
	v2 = &a1->mobd_lookup_id;
	sprite_4272E0_load_mobd_item(
		a1->turret_sprite,
		a1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[a1->mobd_lookup_id + 1]);
	v3 = v1->stats_attachment_point;
	v4 = v1->entity;
	v1->handler = EntityTurret_44BF70;
	entity_advance_mobd_rotation(v2, v4->current_mobd_lookup_idx, v3->mobd_frame_step);
	sprite_4273B0_load_mobd_item_sound(
		v1->turret_sprite,
		v1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[*v2 + 1]);
	script_445370_yield_to_main_thread(v1->sprite_task, 0xC0000000, 2);
}

//----- (0044BF70) --------------------------------------------------------
void EntityTurret_44BF70(EntityTurret *a1)
{
	EntityTurret *v1; // esi@1
	char *v2; // edi@1

	v1 = a1;
	v2 = (char *)&a1->mobd_lookup_id;
	entity_advance_mobd_rotation(
		&a1->mobd_lookup_id,
		a1->entity->current_mobd_lookup_idx,
		a1->stats_attachment_point->mobd_frame_step);
	sprite_4273B0_load_mobd_item_sound(
		v1->turret_sprite,
		v1->stats_attachment_point->mobd_lookup_table_offset,
		_47D3C4_entity_mobd_lookup_ids[*(_DWORD *)v2 + 1]);
	script_445370_yield_to_main_thread(v1->sprite_task, 0xC0000000, 2);
}

//----- (0044BFC0) --------------------------------------------------------
void sub_44BFC0(int a1)
{
	int v1; // esi@1

	v1 = a1;
	*(_DWORD *)(*(_DWORD *)(a1 + 4) + 124) = 0;
	sprite_list_remove(*(Sprite **)(a1 + 4));
	script_yield(*(Script **)v1);
	script_free_local_object(*(Script **)(*(_DWORD *)(v1 + 8) + 12), (void *)v1);
}

//----- (0044BFF0) --------------------------------------------------------
void MessageHandler_EntityScript(Script *receiver, Script *sender, enum SCRIPT_EVENT event, void *param)
{
	int v4; // ecx@1

	v4 = (int)receiver->param;
	if (event == EVT_MSG_1500)
		*(_DWORD *)(v4 + 16) = (int)sub_44BFC0;
}

//----- (0044C010) --------------------------------------------------------
bool _44C010_init_mission_globals()
{
	int v0; // eax@1
	int v1; // ecx@1
	int player_idx; // ebx@3
	stru12_game_globals *v4; // eax@3
	int v5; // ebp@3
	int v6; // ecx@5
	int v7; // eax@8
	int v8; // esi@12
	char *v9; // ecx@13
	char *v10; // edx@13
	unsigned int v11; // eax@13
	unsigned __int8 *v12; // edi@17
	int v13; // ecx@18
	unsigned __int8 *v14; // esi@18
	int v15; // ecx@23
	int *v16; // eax@23
	int v17; // edx@24
	char *v18; // ecx@26
	int *v19; // eax@26
	stru12_game_globals *i; // [sp+10h] [bp-4h]@3

	v0 = 4;
	v1 = 0;
	do
	{
		++v1;
		_47D3C4_entity_mobd_lookup_ids[v1] = ((v0 + 4) / 16) & 0xF;
		__47CFC4_mobd_lookup_speeds[v1] = (v0 / 8) & 0x1F;
        v0++;
	} while (v0 - 4 < 256);
	player_idx = 0;
	memset(game_globals_cpu, 0, sizeof(game_globals_cpu));
	v4 = game_globals_cpu;
	v5 = 0;
	for (i = game_globals_cpu; ; v4 = i)
	{
		v6 = single_player_game;
		v4->cash[0] = 1;
		if (v6)
		{
			v7 = v4 != game_globals_cpu && player_idx != player_side;
			dword_470510[player_idx] = v7;
			if ((int)current_level_idx >= 48 && (int)current_level_idx <= 67)
			{
				v8 = player_idx + 2;
				if (player_idx + 2 < 7)
				{
					v9 = (char *)game_globals_cpu + 4 * (v5 + v8);
					v10 = (char *)&game_globals_cpu[2] + 4 * (player_idx + v5);
					v11 = (unsigned int)(8 - v8) >> 1;
					do
					{
						*(_DWORD *)v9 = 1;
						*(_DWORD *)v10 = 1;
						v9 += 8;
						v10 += 56;
						--v11;
					} while (v11);
				}
			}
		}
		else
		{
			dword_470510[player_idx] = 0;
		}
		v12 = (unsigned __int8 *)malloc(0x200u);
		per_player_sprite_palettes[player_idx] = v12;
		if (!v12)
			return 0;
		v13 = 0;
		v14 = player_sprite_palette_tmp;
		do
			*v14++ = 16 * player_idx + v13++;
		while (v13 < 16);
		for (; v13 < 256; ++v13)
			*v14++ = v13;
		copy_player_sprite_palette_aligned(player_sprite_palette_tmp, v12);
		++player_idx;
		v5 += 7;
		i = (stru12_game_globals *)((char *)i + 32);
		if ((int)i >= (int)&entity_list_head)
			break;
	}
	v15 = 1;
	v16 = &player_sprite_color_by_player_side[1];
	do
	{
		v17 = v15++ - 1;
		*v16 = v17;
		++v16;
	} while ((int)v16 < (int) & _47DCC4_entity_id_counter);
	player_sprite_color_by_player_side[0] = 3;
	if (!single_player_game)
	{
		v18 = &netz_47A740[2].field_9;
		v19 = &player_sprite_color_by_player_side[1];
		do
		{
			if (*(v18 - 1))
				*v19 = *v18;
			++v19;
			v18 += 28;
		} while ((int)v19 < (int) & _47DCC4_entity_id_counter);
	}
	_408550_multi_pal();
	return 1;
}
// 468B5C: using guessed type int single_player_game;
// 470510: using guessed type int dword_470510[];
// 47DCC4: using guessed type int _47DCC4_entity_id_counter;

//----- (0044C1D0) --------------------------------------------------------
void per_player_sprite_palettes_47DC88_free()
{
	void **v0; // esi@1

	v0 = (void **)per_player_sprite_palettes;
	do
	{
		free(*v0);
		++v0;
	} while ((int)v0 < (int) & entity_drag_selection_list);
}

//----- (0044C1F0) --------------------------------------------------------
int UNIT_Init()
{
	Entity *v0; // eax@1
	int v1; // ecx@2
	stru11unit *v2; // eax@4
	int v3; // ecx@5
	UnitAttachmentPoint *v4; // ecx@7
	void (*v5)(Script *); // eax@8
	int v6; // edx@9
	int v7; // esi@9
	enum MOBD_ID v8; // eax@10
	int v9; // esi@11
	int v10; // eax@14
	int result; // eax@20

	_47DCC4_entity_id_counter = 0;
	_47C048_unit_bomberdmg = 0;
	_4269B0_task_attachment__4_some_task_flags = 0;
	UNIT_num_player_units = 0;
	UNIT_num_nonplayer_units = 0;
	num_players_towers = 0;
	_47C04C_num_explosions_max20 = 0;
	_47A3D4_tanker_convoy_units_left = 0;
	_47A3D8_num_convoy_tankers_still_to_arrive = 0;
	_4269B0_task_attachment__num_units_spawned = 0;
	_4269B0_task_attachment__num_units_created_manually = 0;
	_430F10_unit_inits();
	v0 = (Entity *)malloc(0x65C88u);
	entity_list = v0;
	if (!v0)
		return 0;
	entity_list_free_pool = v0;
	v1 = 0;
	do
	{
		v0[v1].next = &v0[v1 + 1];
		v0 = entity_list;
		++v1;
	} while (v1 < 598);
	entity_list[598].next = 0;
	entity_list_head = (Entity *)&entity_list_head;
	entity_list_47D9AC = (Entity *)&entity_list_head;
	v2 = (stru11unit *)malloc(0x1770u);
	stru11unit_list = v2;
	if (!v2)
		return 0;
	stru11unit_list_head = v2;
	v3 = 0;
	do
	{
		v2[v3].next = &v2[v3 + 1];
		v2 = stru11unit_list;
		++v3;
	} while (v3 < 499);
	stru11unit_list[499].next = 0;
	stru11unit_list_47DC70 = (stru11unit *)&stru11unit_list_47DC70;
	stru11unit_list_47DC74 = (stru11unit *)&stru11unit_list_47DC70;
	dword_47DCE8 = 1;
	pscript_show_message_ex = script_create_coroutine(SCRIPT_TYPE_INVALID, script_show_message_ex, 0);
	pscript_show_message = script_create_coroutine(SCRIPT_TYPE_INVALID, script_show_message, 0);
	j_drawjob_update_handler_426C40_default_sprite_handler = drawjob_update_handler_44C430_default_sprite;
	v4 = (UnitAttachmentPoint *)&unit_stats[0].attach;
	do
	{
		v5 = v4->mode_attach;
		if (v5)
		{
			v6 = *((_DWORD *)v5 + 7) + *((_DWORD *)v5 + 5);
			v7 = v4[-2].field_24;                     // v7 = unit_stats[i].reload_time
		}
		else
		{
			v8 = v4->mobd_id;
			if (v4->mobd_id == MOBD_MUTE_ALCHEMY_HALL)
				goto LABEL_18;
			v9 = *(_DWORD *)(v8 + 32);
			if (!v9)
				goto LABEL_18;
			v6 = *(_DWORD *)(v9 + 20) + *(_DWORD *)(v9 + 28);
			v7 = (*(_DWORD *)(v8 + 16) + *(_DWORD *)(v8 + 12)) >> 1;
		}
		if (!v7)
			goto LABEL_18;
		v10 = v6 * (v4[-1].reload_time - 40) * v4[-2]._1C_mobd_lookup_table_offset_for_rotary_cannon / v7 >> 8;
		v4->reload2_time = v10;
		if (v10 < 1)
			v4->reload2_time = 1;
		if ((int)v4 >= (int)&unit_stats[74].attach && v4->reload2_time > 0)
			LABEL_18:
		v4->reload2_time = 0;
		v4 = (UnitAttachmentPoint *)((char *)v4 + 100);
	} while ((int)v4 <= (int)&unit_stats[78].attach);
	task_mobd17_cursor = 0;
	_438B40_reset_explosions();
	entity_scout = 0;
	dword_47A3DC = 0;
	result = UNIT_InitTasks();
	if (result)
	{
		result = UNIT_InitAiPlayers();
		if (result)
		{
			result = building_limits_list_alloc();
			if (result)
			{
				result = oilspot_list_alloc();
				if (result)
				{
					result = stru26_array_initialize();
					if (result)
					{
						result = stru27_array_initialize();
						if (result)
						{
							result = stru28_list_alloc();
							if (result)
							{
								if (!stru13construct_list_alloc())
									return 0;
								result = mapd_init_fog_of_war() != 0;
							}
						}
					}
				}
			}
		}
	}
	return result;
}
// 47A2F8: using guessed type int _4269B0_task_attachment__num_units_created_manually;
// 47A370: using guessed type int _4269B0_task_attachment__num_units_spawned;
// 47A3D4: using guessed type int _47A3D4_tanker_convoy_units_left;
// 47A3D8: using guessed type int _47A3D8_num_convoy_tankers_still_to_arrive;
// 47A3DC: using guessed type int dword_47A3DC;
// 47C048: using guessed type int _47C048_unit_bomberdmg;
// 47C04C: using guessed type int _47C04C_num_explosions_max20;
// 47DC68: using guessed type int _4269B0_task_attachment__4_some_task_flags;
// 47DCC4: using guessed type int _47DCC4_entity_id_counter;
// 47DCC8: using guessed type int UNIT_num_player_units;
// 47DCCC: using guessed type int UNIT_num_nonplayer_units;
// 47DCD0: using guessed type int num_players_towers;
// 47DCE8: using guessed type int dword_47DCE8;

//----- (0044C430) --------------------------------------------------------
void drawjob_update_handler_44C430_default_sprite(Sprite *a1, DrawJob *a2)
{
	DataMobdItem_stru0 *v2; // eax@1

	v2 = a1->_54_inside_mobd_ptr4;
	if (v2)
	{
		a2->job_details.x = (a1->x >> 8) - (_47C380_mapd.mapd_cplc_render_x >> 8) - v2->x_offset;
		a2->job_details.y = (a1->y >> 8)
			- (_47C380_mapd.mapd_cplc_render_y >> 8)
			- (a1->z_index >> 9)
			- a1->_54_inside_mobd_ptr4->y_offset;
		a2->job_details.z_index = (a1->z_index + a1->y) >> 8;
		a2->job_details.image = a1->_54_inside_mobd_ptr4->sprt;
		a2->job_details.params = render_default_stru1;
	}
	else
	{
		a2->job_details.image = 0;
		a2->job_details.params = render_default_stru1;
	}
}

//----- (0044C4B0) --------------------------------------------------------
void _44C4B0_mess_with_turrets()
{
	Entity *i; // edx@4
	Entity_stru60 *v1; // ebx@5
	DataMobdItem_stru0 *v2; // ecx@5
	DataMobdItem_stru1 *v3; // esi@6
	int j; // ecx@7
	EntityTurret *v5; // ecx@12
	DataMobdItem_stru0 *v6; // esi@13
	Entity_stru_dmg_related *v7; // esi@14

	if (dword_47DCE8)
	{
		if (!is_coroutine_list_initialization_failed)
			++_4269B0_task_attachment__4_some_task_flags;
		for (i = entity_list_head; (Entity **)i != &entity_list_head; i = i->next)
		{
			v1 = &i->stru60;
			memset32(&i->stru60, (int)&entity_default_stru60_ptr, 6u);
			v2 = i->sprite->_54_inside_mobd_ptr4;
			if (v2)
			{
				v3 = v2->field_18;
				if (v3)
				{
					for (j = v3->field_0; j != -1; v3 = (DataMobdItem_stru1 *)((char *)v3 + 16))
					{
						if (j < 6)
							*((_DWORD *)&i->stru60.ptr_0 + j) = (int)v3;
						j = v3->field_10;
					}
				}
			}
			if (!i->destroyed)
			{
				v5 = i->turret;
				if (v5)
				{
					v6 = v5->turret_sprite->_54_inside_mobd_ptr4;
					if (v6 && (v7 = (Entity_stru_dmg_related *)v6->field_18) != 0)
						v5->ptr_24 = v7;
					else
						v5->ptr_24 = (Entity_stru_dmg_related *)&entity_default_stru60_ptr;
					i->turret->turret_sprite->field_88_unused = 1;
					i->sprite->field_88_unused = 1;
					i->turret->turret_sprite->x = i->sprite->x + v1->ptr_0->x_offset;
					i->turret->turret_sprite->field_88_unused = 1;
					i->turret->turret_sprite->y = i->sprite->y + v1->ptr_0->y_offset;
				}
			}
		}
		mapd_44AE30_fog_of_war();
	}
}

//----- (0044C5C0) --------------------------------------------------------
void _44C5C0_level_cleanup()
{
	Entity *i; // eax@1
	enum PLAYER_SIDE v1; // ecx@2
	DrawJob *v2; // ecx@8

	stru13_list_free();
	minimap_free();
	stru28_list_free();
	stru26_stru27_free();
	oilspot_list_free();
	building_limits_list_free();
	UNIT_FreeAiPlayers();
	__47CAF0_tasks_evt39030_array_free();
	free(stru11unit_list);
	for (i = entity_list_head; (Entity **)entity_list_head != &entity_list_head; i = entity_list_head)
	{
		v1 = i->player_side;
		if (v1 == player_side)
		{
			if (UNIT_num_player_units > 0)
				--UNIT_num_player_units;
		}
		else if (v1 && UNIT_num_nonplayer_units > 0)
		{
			--UNIT_num_nonplayer_units;
		}
		v2 = i->drawjob;
		i->entity_id = 0;
		v2->job_details.image = 0;
		i->drawjob->flags |= 0x80000000;
		i->next->prev = i->prev;
		i->prev->next = i->next;
		i->next = entity_list_free_pool;
		entity_list_free_pool = i;
	}
	free(entity_list);
	dword_47DCE8 = 0;
}

//----- (00438990) --------------------------------------------------------
void stru28_list_free()
{
    free(stru28_list);
}

//----- (0044C6B0) --------------------------------------------------------
Entity *entity_list_create(Script *a1)
{
	Entity *v1; // esi@1
	Sprite *v2; // edx@1
    DataCplcItem_ptr1 *v4; // eax@6
	int v5; // eax@7
	unsigned __int16 v6; // ax@11
	enum PLAYER_SIDE v7; // eax@13
	void *v8; // eax@14
	int v9; // eax@15
	enum PLAYER_SIDE v10; // eax@18
	Entity *v13; // ecx@22

    v1 = entity_list_get();
    v2 = a1->sprite;
	if (!v1)
		return 0;

	memset(v1, 0, sizeof(Entity));
	v4 = v2->cplc_ptr1;
	if (v4)
	{
		v5 = v4->script_handler_id;
		if (v5 != 4 && v5 != 5 && v5 != 2 && v5 != 3)// Prison, Prison, Outpost, Clannhall
		{
			v1->unit_id = scripts[v5]->stats_idx;
			v1->player_side = (PLAYER_SIDE)v2->cplc_ptr1_pstru20->field_18;
			v6 = v2->cplc_ptr1_pstru20->_1C_oilspot_oil_units__or__param;
			v1->_12C_prison_bunker_spawn_type = v6;
			if (v6)
				v1->field_124 |= 0x80u;
		}
        else
        {
            v1->unit_id = (UNIT_ID)scripts[v5][1].script_type;
            v7 = (PLAYER_SIDE)v2->cplc_ptr1_pstru20->field_24;
            v1->player_side = v7;
        }
	}
	else
	{
		v8 = v2->param;
		if (BYTE1(v8) & 0x80)
		{
			v9 = v1->field_124;
			v1->_12C_prison_bunker_spawn_type = 2;
			v1->field_124 = v9 | 0x80;
		}
		v1->unit_id = (UNIT_ID)((unsigned int)v2->param & 0x7FFF);
		v7 = (PLAYER_SIDE)((int)v2->param >> 16);
        v1->player_side = v7;
	}

	v10 = v1->player_side;
	if (v10 == player_side)
	{
		++UNIT_num_player_units;
	}
	else if (v10)
	{
		++UNIT_num_nonplayer_units;
	}
	v1->field_110 = 0;
	v1->stru11_list_108 = (stru11unit *)&v1->stru11_list_104;
	v1->field_94 = 0;
	v1->stru11_list_104 = (stru11unit *)&v1->stru11_list_104;
	v1->_98_465610_accuracy_dmg_bonus_idx = 0;
	v1->entity_id = ++_47DCC4_entity_id_counter;
	v1->mode = 0;
	v1->mode_idle = 0;
	v1->mode_arrive = 0;
	v1->mode_attacked = 0;
	v1->sprite = v2;
	v1->script = a1;
	a1->script_type = SCRIPT_TYPE_60138_ENTITY_SCRIPTS;
	a1->param = v1;
	a1->event_handler = MessageHandler_EntityScript;
	v2->param = v1;
	v1->stats = &unit_stats[v1->unit_id];
	v1->current_mobd_lookup_idx = 128;
	v1->hitpoints = v1->stats->hitpoints;
	v1->field_78 = 0;

	memset32(&v1->stru60, (int)&entity_default_stru60_ptr, 6u);

	v2->drawjob->job_details.palette = per_player_sprite_palettes[player_sprite_color_by_player_side[v1->player_side]];
	v2->drawjob->flags |= 0x10000000u;

	script_trigger_event_group(a1, EVT_MSG_1521_entity_created, v1, SCRIPT_TYPE_39030);

	v13 = entity_list_head;
	v1->prev = (Entity *)&entity_list_head;
	v1->next = v13;
	entity_list_head->prev = v1;
	entity_list_head = v1;
	return v1;
}

//----- (0044C890) --------------------------------------------------------
void entity_list_remove(Entity *a1)
{
	enum PLAYER_SIDE v1; // eax@1
	DrawJob *v2; // eax@7

	v1 = a1->player_side;
	if (v1 == player_side)
	{
		if (UNIT_num_player_units > 0)
			--UNIT_num_player_units;
	}
	else if (v1 && UNIT_num_nonplayer_units > 0)
	{
		--UNIT_num_nonplayer_units;
	}
	v2 = a1->drawjob;
	a1->entity_id = 0;
	v2->job_details.image = 0;
	a1->drawjob->flags |= 0x80000000;
	a1->next->prev = a1->prev;
	a1->prev->next = a1->next;
	a1->next = entity_list_free_pool;
	entity_list_free_pool = a1;
}
// 47DCC8: using guessed type int UNIT_num_player_units;
// 47DCCC: using guessed type int UNIT_num_nonplayer_units;

//----- (0044C910) --------------------------------------------------------
Sprite *spawn_unit(enum UNIT_ID unit_id, int x, int y, enum PLAYER_SIDE player_side)
{
	enum UNIT_ID v4; // esi@1
	int v5; // edi@1
	Sprite *result; // eax@1

	v4 = unit_id;
	v5 = x;
	result = sprite_create_scripted(
		unit_stats[unit_id].mobd_idx,
		0,
		unit_stats[unit_id].script_handler,
		SCRIPT_FUNCTION,
		0);
	if (result)
	{
		result->x = v5;
		result->field_88_unused = 1;
		result->y = y;
		result->cplc_ptr1 = 0;
		result->param = (void *)(v4 | (player_side << 16));
	}
	return result;
}

//----- (0044C970) --------------------------------------------------------
void entity_drag_selection_init(int y, int x, int z, int w)
{
	entity_drag_selection_y = y;
	entity_drag_selection_x = x;
	entity_drag_selection_list = entity_list_head;
	entity_drag_selection_z = z;
	entity_drag_selection_w = w;
}

//----- (0044C9A0) --------------------------------------------------------
Script *entity_drag_selection_get_next_entity()
{
	Entity *v0; // ecx@1
	Sprite *v1; // eax@2
	Script *result; // eax@10

    for (Entity *v0 = entity_drag_selection_list; v0 != entity_list_end(); v0 = v0->next)
    {
        entity_drag_selection_list = v0;

        v1 = v0->sprite;
        if (!v0->destroyed)
        {
            if (v0->mode != entity_mode_418D20
                && v0->mode != entity_mode_418B30
                && v1->x > entity_drag_selection_x
                && v1->x <= entity_drag_selection_z
                && v1->y > entity_drag_selection_y
                && v1->y <= entity_drag_selection_w)
            {
                entity_drag_selection_list = v0->next;
                return v0->script;
            }
        }
    }
	return nullptr;
}

//----- (0044CA30) --------------------------------------------------------
Entity *entity_find_by_id(int entity_id)
{
	Entity *result; // eax@1

	result = entity_list_head;
	if ((Entity **)entity_list_head == &entity_list_head)
	{
	LABEL_4:
		result = 0;
	}
	else
	{
		while (result->entity_id != entity_id)
		{
			result = result->next;
			if ((Entity **)result == &entity_list_head)
				goto LABEL_4;
		}
	}
	return result;
}

//----- (0044CA50) --------------------------------------------------------
bool sub_44CA50(enum UNIT_ID id)
{
	return unit_stats[id].player_side == 1;
}

//----- (0044CA70) --------------------------------------------------------
Entity *entity_44CA70_find(Entity *a1, enum UNIT_ID a2, int player_side)
{
	Entity *v3; // ecx@1
	int v4; // edx@1
	Sprite *v5; // eax@4
	Sprite *v6; // ebx@5
	int v7; // esi@5
	int v8; // esi@6
	int v9; // eax@8
	int v10; // ebx@8
	int v11; // ebx@9
	Entity *i; // [sp+0h] [bp-Ch]@1
	enum UNIT_ID v14; // [sp+4h] [bp-8h]@1
	Entity *v15; // [sp+8h] [bp-4h]@1

	v15 = a1;
	v14 = a2;
	v3 = entity_list_head;
	v4 = 0x7FFFFFFF;
	for (i = 0; (Entity **)v3 != &entity_list_head; v3 = v3->next)
	{
		if (v3->unit_id == v14 && v3->player_side == player_side)
		{
			v5 = v3->sprite;
			if (v5)
			{
				v6 = v15->sprite;
				v7 = v6->x;
				if (v5->x - v7 <= 0)
					v8 = v7 - v5->x;
				else
					v8 = v5->x - v7;
				v9 = v5->y;
				v10 = v6->y;
				if (v9 - v10 <= 0)
					v11 = v10 - v9;
				else
					v11 = v9 - v10;
				if (v11 + v8 < v4)
				{
					i = v3;
					v4 = v11 + v8;
				}
			}
		}
	}
	return i;
}

//----- (0044CB10) --------------------------------------------------------
bool show_message_ex(Entity *a1, const char *text)
{
    return script_trigger_event(
        a1 ? a1->script : nullptr,
        EVT_SHOW_UI_CONTROL,
        (void *)text,
        pscript_show_message_ex
    );
}

//----- (0044CB40) --------------------------------------------------------
bool show_message(const char *text)
{
	return script_trigger_event(0, EVT_SHOW_UI_CONTROL, (void *)text, pscript_show_message);
}

//----- (0044CB60) --------------------------------------------------------
int entity_advance_mobd_rotation(int *src_lookup_id, int dst, int step)
{
	int v3; // esi@1
	int result; // eax@2

	v3 = *src_lookup_id;
	if (dst == *src_lookup_id)
	{
		result = 0;
	}
	else if (v3 <= dst)
	{
		result = dst - v3;
		if (dst - v3 >= 128)
		{
			if (result <= 256 - step)
			{
				*src_lookup_id = (unsigned __int8)(v3 - step);
				result = 256 - result;
			}
			else
			{
				*src_lookup_id = dst;
				result = 256 - result;
			}
		}
		else if (result >= step)
		{
			*src_lookup_id = (unsigned __int8)(v3 + step);
		}
		else
		{
			*src_lookup_id = dst;
		}
	}
	else
	{
		result = v3 - dst;
		if (v3 - dst >= 128)
		{
			if (result <= 256 - step)
			{
				*src_lookup_id = (unsigned __int8)(v3 + step);
				result = 256 - result;
			}
			else
			{
				*src_lookup_id = dst;
				result = 256 - result;
			}
		}
		else if (result >= step)
		{
			*src_lookup_id = (unsigned __int8)(v3 - step);
		}
		else
		{
			*src_lookup_id = dst;
		}
	}
	return result;
}

//----- (0044CC40) --------------------------------------------------------
void script_show_message_ex(Script *a1)
{
	int v1; // ebx@1
	const char *text; // edi@2
	Script *v3; // esi@3
	ScriptEvent *i; // eax@5
	enum SCRIPT_EVENT v5; // ecx@6
	Script *sender; // ecx@8
	int v7; // esi@14
	int v8; // ebx@14
	unsigned int v9; // esi@14
	unsigned int v10; // ebx@14
	int v11; // ebp@23
	int v12; // eax@23
	RenderString *v13; // esi@23
	Sprite *sender_sprite = 0; // [sp+10h] [bp-4h]@0

	v1 = 0;
	while (1)
	{
		text = 0;
		if (v1)
		{
			v3 = a1;
		}
		else
		{
			v3 = a1;
			script_445370_yield_to_main_thread(a1, 0x40000000, 0);
		}
		v1 = 0;
		for (i = script_get_next_event(v3); i; i = script_get_next_event(v3))
		{
			v5 = i->event;
			if (v5 != EVT_MSG_1511_sidebar_click_category && v5 == EVT_SHOW_UI_CONTROL)
			{
				sender = i->sender;
				text = (const char *)i->param;
				if (sender)
					sender_sprite = sender->sprite;
				else
					sender_sprite = 0;
			}
			script_discard_event(i);
		}
		if (text)
		{
			if (sender_sprite)
			{
				v7 = sender_sprite->x;
				v8 = sender_sprite->y;
				sender_sprite->field_88_unused = 1;
				v9 = (v7 - _47C380_mapd.mapd_cplc_render_x) >> 8;
				v10 = (v8 - _47C380_mapd.mapd_cplc_render_y) >> 8;
				if (v9 < 0x80)
					v9 = 128;
				if (v9 > render_width - 128)
					v9 = render_width - 128;
				if (v10 < 0x20)
					v10 = 32;
				if (v10 > render_height - 32)
					v10 = render_height - 32;
			}
			else
			{
				v9 = (unsigned int)render_width >> 1;
				v10 = (unsigned int)render_height >> 1;
			}
			v11 = _445C00_text(text, 128);
			v12 = _445C80_text(text, 128);
			v13 = render_string_create(
				0,
				currently_running_lvl_mobd[MOBD_FONT_27].items,
				v9 - (8 * (v12 + 2) >> 1),
				v10 - 32,
				v12 + 2,
				v11 + 2,
				0x20000005,
				8,
				8);
			render_string_445770(v13, text, 0);
			v1 = script_445370_yield_to_main_thread(a1, 0xC0000000, 4 * strlen(text)) & 0x40000000;
			render_string_list_remove(v13);
		}
	}
}

//----- (0044CDC0) --------------------------------------------------------
bool _44CDC0_sidebar_is_units_limit()
{
	int v0; // eax@2

	if (single_player_game)
		v0 = 549 / (_4778C8_singleplayer_available_units_denom + 1);
	else
		v0 = 549 / netz_468B50_available_units_denom;
	return UNIT_num_player_units > v0;
}

//----- (0044CE00) --------------------------------------------------------
bool is_enemy(PLAYER_SIDE player_side, Entity *entity)
{
    switch (entity->unit_id)
    {
        case UNIT_STATS_TECH_BUNKER:
            return false;

        case UNIT_STATS_HUT:
            return true;

        default:
            if (entity->player_side == PLAYER_SIDE_UNSPECIFIED)
                return false;

            return !game_globals_cpu[player_side].cash[entity->player_side];
    }
}

//----- (0044CE40) --------------------------------------------------------
bool sub_44CE40(enum PLAYER_SIDE player_side, Entity *a2)
{
	enum UNIT_ID v2; // eax@1
	BOOL result; // eax@3
	enum PLAYER_SIDE v4; // eax@4

	v2 = a2->unit_id;
	if (v2 == 67)
		goto LABEL_12;
	if (v2 == 68)
		return 1;
	v4 = a2->player_side;
	if (v4 == player_side)
		return 1;
	if (v4 == 0 || game_globals_cpu[0].cash[v4 + 7 * player_side])
		LABEL_12:
	result = 0;
	else
		result = 1;
	return result;
}

//----- (0044CE90) --------------------------------------------------------
void script_show_message(Script *a1)
{
	int v1; // edi@1
	const char *v2; // ebx@2
	Script *v3; // esi@3
	ScriptEvent *i; // eax@5
	Script *v5; // ecx@7
	int v6; // esi@13
	int v7; // edi@13
	int v8; // esi@13
	int v9; // edi@13
	int v10; // ebp@22
	int v11; // eax@22
	RenderString *v12; // esi@22
	Sprite *v13 = 0; // [sp+10h] [bp-4h]@0

	v1 = 0;
	while (1)
	{
		v2 = 0;
		if (v1)
		{
			v3 = a1;
		}
		else
		{
			v3 = a1;
			script_445370_yield_to_main_thread(a1, 0x40000000, 0);
		}
		v1 = 0;
		for (i = script_get_next_event(v3); i; i = script_get_next_event(v3))
		{
			if (i->event == EVT_SHOW_UI_CONTROL)
			{
				v5 = i->sender;
				v2 = (const char *)i->param;
				if (v5)
					v13 = v5->sprite;
				else
					v13 = 0;
			}
			script_discard_event(i);
		}
		if (v2)
		{
			if (v13)
			{
				v6 = v13->x;
				v7 = v13->y;
				v13->field_88_unused = 1;
				v8 = (v6 - _47C380_mapd.mapd_cplc_render_x) >> 8;
				v9 = (v7 - _47C380_mapd.mapd_cplc_render_y) >> 8;
				if (v8 < 128)
					v8 = 128;
				if (v8 > render_width - 128)
					v8 = render_width - 128;
				if (v9 < 50)
					v9 = 50;
				if (v9 > render_height - 50)
					v9 = render_height - 50;
			}
			else
			{
				v8 = (unsigned int)render_width >> 1;
				v9 = (unsigned int)render_height >> 1;
			}
			v10 = _445C00_text(v2, 128);
			v11 = _445C80_text(v2, 128);
			v12 = render_string_create(
				0,
				currently_running_lvl_mobd[MOBD_FONT_27].items,
				v8 - (8 * (v11 + 2) >> 1),
				v9 - 32,
				v11 + 2,
				v10 + 2,
				536870917,
				8,
				8);
			render_string_445770(v12, v2, 0);
			v1 = script_445370_yield_to_main_thread(a1, 0xC0000000, 200) & 0x40000000;
			render_string_list_remove(v12);
		}
	}
}

//----- (0044D000) --------------------------------------------------------
int entity_44D000_boxd(Entity *a1)
{
	Entity *v1; // edi@1
	Sprite *v2; // eax@1
	int v3; // ebp@1
	int v4; // ecx@1
	int v5; // esi@1
	DataBoxd_stru0_per_map_unit *v6; // ebx@1
	int v7; // edx@3
	int v8; // eax@3
	int v9; // eax@7
	int v10; // ebx@11
	int result; // eax@12
	int v12; // esi@13
	int v13; // eax@13
	int v14; // ecx@14
	int v15; // edx@14
	Sprite *v16; // eax@31
	int v17; // ebp@32
	int v18; // eax@32
	UnitStat *v19; // eax@32
	int v20; // eax@33
	int v21; // ecx@35
	UnitStat *v22; // eax@35
	int v23; // eax@36
	int v24; // edx@38
	int v25; // [sp+10h] [bp-2Ch]@1
	int v26; // [sp+10h] [bp-2Ch]@13
	int v27; // [sp+14h] [bp-28h]@1
	int v28; // [sp+18h] [bp-24h]@13
	int v29[8]; // [sp+1Ch] [bp-20h]@7

	v1 = a1;
	v2 = a1->sprite;
	v3 = v2->y >> 13;
	v4 = v2->x >> 13;
	v5 = 0;
	v27 = v4;
	v25 = 0;
	v6 = &_478AA8_boxd_stru0_array[v4 + _4793F8_map_width * v3];
	while (1)
	{
		v7 = v4 + _465708_x_offsets[v5];
		v8 = v3 + _465728_y_offsets[v5];
		if (v7 < 0 || v7 >= _4793F8_map_width || v8 < 0 || v8 >= _478AAC_map_height)
		{
			v29[v5] = 0;
		}
		else
		{
			v9 = boxd_40EA50(v1, v7, v8, &v6[_478BE8_map_info__see40E6E0[v5]]) == 2;
			v29[v5] = v9;
			if (!v9)
				v25 = 1;
		}
		++v5;
		if (v5 >= 8)
			break;
		v4 = v27;
	}
	v10 = 0;
	if (!v25)
		return 2;
	v26 = 0;
	v28 = 1;
	v12 = v1->field_D4 != 1 ? -1 : 1;
	v13 = ((unsigned __int8)(v1->field_D8 >> 5) - 2 * (_BYTE)v12) & 7;
	while (1)
	{
		v14 = v27 + _465708_x_offsets[v13];
		v15 = v3 + _465728_y_offsets[v13];
		if (v14 < 0 || v14 >= _4793F8_map_width || v15 < 0 || v15 >= _478AAC_map_height)
			goto LABEL_27;
		if (!v29[v13])
		{
			if (!(v13 & 1) && v28)
				v28 = 0;
			goto LABEL_27;
		}
		if (!(v13 & 1))
			goto LABEL_29;
		if (v29[((_BYTE)v12 + (_BYTE)v13) & 7])
			break;
		LOBYTE_HEXRAYS(v13) = (v12 + v13) & 7;
	LABEL_27:
		v13 = ((_BYTE)v12 + (_BYTE)v13) & 7;
		if (++v10 >= 8)
			goto LABEL_30;
	}
	if (!v29[((_BYTE)v13 - (_BYTE)v12) & 7])
		goto LABEL_27;
LABEL_29:
	v26 = 1;
LABEL_30:
	if (v26)
	{
		v17 = _465728_y_offsets[v13] + v3;
		v18 = v27 + _465708_x_offsets[v13];
		v1->field_C8 = v17;
		v1->field_C4 = v18;
		v19 = v1->stats;
		if (v19->is_infantry)
			v20 = entity_40F0A0_get_dx(v1, v1->field_A4);
		else
			v20 = v19->field_4C != 128 ? 7424 : 4096;
		v21 = v20 + (v1->field_C4 << 13);
		v22 = v1->stats;
		v1->sprite_x = v21;
		if (v22->is_infantry)
			v23 = entity_40F100_get_dy(v1, v1->field_A4);
		else
			v23 = v22->field_4C != 128 ? 7424 : 4096;
		v24 = v23 + (v1->field_C8 << 13);
		result = 1;
		v1->sprite_y = v24;
	}
	else
	{
		v16 = v1->sprite;
		v1->field_C4 = v16->x >> 13;
		v1->field_C8 = v16->y >> 13;
		result = 0;
	}
	return result;
}
// 478AAC: using guessed type int _478AAC_map_height;
// 4793F8: using guessed type int _4793F8_map_width;
// 44D000: using guessed type int var_20[8];

//----- (0044D250) --------------------------------------------------------
_DWORD *boxd_44D250(_DWORD *a1, _DWORD *a2, int a3, Entity *a4, int *a5)
{
	_DWORD *v5; // edi@1
	int v6; // esi@1
	int v7; // ebx@1
	DataBoxd_stru0_per_map_unit *v8; // ebp@1
	int v9; // edx@3
	int v10; // eax@3
	bool v11; // sf@9
	unsigned __int8 v12; // of@9
	_DWORD *result; // eax@10
	_DWORD *v14; // [sp+10h] [bp-8h]@1
	int v15; // [sp+1Ch] [bp+4h]@1

	v5 = a2;
	v6 = a3 != 1 ? -1 : 1;
	v14 = a1;
	v7 = ((unsigned __int8)*a5 - 2 * (_BYTE)v6) & 7;
	v8 = &_478AA8_boxd_stru0_array[*a1 + _4793F8_map_width * *a2];
	v15 = 0;
	while (1)
	{
		v9 = *a1 + _465708_x_offsets[v7];
		v10 = *v5 + _465728_y_offsets[v7];
		if (v9 >= 0
			&& v9 < _4793F8_map_width
			&& v10 >= 0
			&& v10 < _478AAC_map_height
			&& !(v7 & 1)
			&& boxd_40EA50(a4, v9, v10, &v8[_478BE8_map_info__see40E6E0[v7]]) == 2)
		{
			break;
		}
		v7 = ((_BYTE)v6 + (_BYTE)v7) & 7;
		v12 = __OFSUB__(v15 + 1, 8);
		v11 = v15++ - 7 < 0;
		if (!(v11 ^ v12))
		{
			result = 0;
			goto LABEL_12;
		}
		a1 = v14;
	}
	result = (_DWORD *)1;
LABEL_12:
	if (result)
	{
		result = v14;
		*a5 = v7;
		*result += _465708_x_offsets[v7];
		*v5 += _465728_y_offsets[v7];
	}
	return result;
}

//----- (0044D340) --------------------------------------------------------
bool boxd_44D340(int *out_x, int *out_y, int a3, Entity *a1, int *out_idx)
{
	Entity *v5; // esi@2
	int v6; // eax@2
	int v7; // ebx@4
	int v8; // edi@4
	DataBoxd_stru0_per_map_unit *v9; // ebp@4
	int v10; // edx@6
	int v11; // ecx@6
	int v12; // eax@11
	int v13; // eax@12
	bool v14; // sf@23
	unsigned __int8 v15; // of@23
	int v16; // eax@25
	int v17; // ecx@26
	int v19; // eax@37
	char v20; // [sp+10h] [bp-10h]@2
	int v21; // [sp+14h] [bp-Ch]@4
	int *v22; // [sp+18h] [bp-8h]@1
	int *v23; // [sp+1Ch] [bp-4h]@1
	Entity *a1a; // [sp+28h] [bp+8h]@4

	v23 = out_y;
	v22 = out_x;
	if (a3 == 1)
	{
		v5 = a1;
		v20 = 1;
		v6 = a1->field_124 & 2;
	}
	else
	{
		v5 = a1;
		v20 = -1;
		v6 = a1->field_124 & 4;
	}
	a1a = (Entity *)v6;
	v7 = ((unsigned __int8)*out_idx - 2 * v20) & 7;
	v8 = 0;
	v21 = 0;
	v9 = &_478AA8_boxd_stru0_array[*out_x + _4793F8_map_width * *out_y];
	while (1)
	{
		v10 = *out_x + _465708_x_offsets[v7];
		v11 = *v23 + _465728_y_offsets[v7];
		if (v10 < 0 || v10 >= _4793F8_map_width || v11 < 0 || v11 >= _478AAC_map_height || v7 & 1)
			goto LABEL_23;
		v12 = boxd_40EA50(v5, v10, v11, &v9[_478BE8_map_info__see40E6E0[v7]]) - 1;
		if (v12)
		{
			v13 = v12 - 1;
			if (!v13)
			{
				if (a1a)
					v5->field_124 &= ~(unsigned int)a1a;
			LABEL_21:
				v8 = 1;
				goto LABEL_22;
			}
			if (v13 == 1 && (!v5->stru224.field_50 || a1a))
				goto LABEL_21;
		}
		else if (v5->stru224.field_54 || a1a)
		{
			goto LABEL_21;
		}
	LABEL_22:
		if (v8)
			goto LABEL_25;
	LABEL_23:
		v7 = (v20 + (_BYTE)v7) & 7;
		v15 = __OFSUB__(v21 + 1, 8);
		v14 = v21++ - 7 < 0;
		if (!(v14 ^ v15))
			break;
		out_x = v22;
	}
	if (!v8)
		return 0;
LABEL_25:
	v16 = *v22 + _465708_x_offsets[v7];
	if (v16 == _4793F8_map_width - 1)
	{
		v17 = a3;
		if (v7 || a3)
		{
			if (v7 == 4 && a3 == 1)
				return 0;
			goto LABEL_32;
		}
	}
	else
	{
		v17 = a3;
	LABEL_32:
		if (v16 || (v7 || v17 != 1) && (v7 != 4 || v17))
		{
			v19 = _465728_y_offsets[v7] + *v23;
			if ((v19 != _478AAC_map_height - 1 || (v7 != 2 || v17) && (v7 != 6 || v17 != 1))
				&& (v19 || (v7 != 2 || v17 != 1) && (v7 != 6 || v17)))
			{
				*out_idx = v7;
				*v22 += _465708_x_offsets[v7];
				*v23 += _465728_y_offsets[v7];
				return 1;
			}
		}
	}
	return 0;
}

//----- (0044D560) --------------------------------------------------------
void message_pump()
{
	MSG msg;

	while (PeekMessageA(&msg, 0, 0, 0, PM_REMOVE))
	{
		if (msg.message == WM_QUIT)
			_47DCF4_wm_quit_received = true;
		TranslateMessage(&msg);
		DispatchMessageA(&msg);
	}
}

void log_init()
{
    AllocConsole();
    freopen("CONOUT$", "w", stdout);
}

void log(const char *fmt, ...)
{
    va_list args;

    va_start(args, fmt);
    vprintf(fmt, args);
    va_end(args);

    printf("\n");
}


//----- (0044D5D0) --------------------------------------------------------
int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
{
    static_assert(sizeof(BuildingLimits) == 0x10);

    log_init();

	global_win32_nCmdShow = nShowCmd;
	global_hinstance = hInstance;
	return GAME_Main();
}

//----- (00456560) --------------------------------------------------------
int nullsub_4()
{
	return 0;
}

//----- (00459E80) --------------------------------------------------------
VideoFile *VIDEO_ReadFile(const char *video_name)
{
	VideoFile *result; // eax@1
	VideoFile *v2; // ebx@1
	VideoFile *v3; // esi@2
	__int32 v4; // eax@4
	char v5; // dl@4
	SIZE_T v6; // edi@4
	HLOCAL v7; // eax@4
	void *v8; // ecx@4
	__int16 v9; // bp@6
	int v10; // edi@8
	int v11; // eax@9
	int v12; // ebx@10
	int v13; // edx@10

	result = (VideoFile *)j_fopen_weirdmode_3(video_name);
	v2 = result;
	if (result)
	{
		v3 = (VideoFile *)LocalAlloc(0, 0x20748u);
		if (v3)
		{
			memset(v3, 0, 0x748u);
			video_47F434_frame = &v3->_744_frame;
			fread(&v3->_744_frame, 0x3Cu, 1u, (FILE *)v2);
			v3->header._0__first_4_bits_eq_bpp = video_47F434_frame->_14__first_4_bits_eq_bpp;
			v3->header.width = video_47F434_frame->width;
			v3->header.height = video_47F434_frame->height;
			v3->header.num_frames = video_47F434_frame->num_frames;
			v3->header.field_6 = video_47F434_frame->field_1A;
			v3->header.field_8 = video_47F434_frame->field_1C;
			v3->header._14_looks_like_fps = video_47F434_frame->_22_looks_like_fps;
			v3->header.field_18 = video_47F434_frame->field_20;
			v3->header.num_sound_bytes = 0;
			v3->header.current_frame = -1;
			v3->file = (FILE *)v2;
			v4 = ftell((FILE *)v2);
			v5 = v3->header._0__first_4_bits_eq_bpp;
			v3->data_offset = v4;
			v6 = v3->header.height * v3->header.width * (v5 & 0xF);
			v3->field_332 = 1;
			v3->frame_front_buffer = LocalAlloc(0, v6);
			v7 = LocalAlloc(0, v6);
			v8 = v3->frame_front_buffer;
			v3->frame_back_buffer = v7;
			v9 = !v8 || !v7;
			v10 = -8;
			do
			{
				v11 = -8;
				do
				{
					v12 = (v3->header._0__first_4_bits_eq_bpp & 0xF) * (v11 + v3->header.width * v10);
					v13 = 16 * (v10 & 0xF) | v11++ & 0xF;
					v3->_344_prolly_palette[v13] = v12;
				} while (v11 < 8);
				++v10;
			} while (v10 < 8);
			if (v9)
			{
				VIDEO_Clean(v3);
				result = 0;
			}
			else
			{
				result = v3;
			}
		}
		else
		{
			LocalFree(0);
			fclose((FILE *)v2);
			result = 0;
		}
	}
	return result;
}

//----- (0045A030) --------------------------------------------------------
void VIDEO_Clean(VideoFile *video)
{
	FILE *v1; // eax@2

	if (video)
	{
		v1 = video->file;
		if (v1)
			fclose(v1);
		LocalFree(video->frame_back_buffer);
		LocalFree(video->frame_front_buffer);
		LocalFree(video);
	}
}

//----- (0045A070) --------------------------------------------------------
int VIDEO_ReadNextFrame(VideoFile *a1)
{
	VideoFileFrame *v1; // edi@3
	int v2; // edx@6
	int result; // eax@8

	if (++a1->header.current_frame == a1->header.num_frames)
	{
		fseek(a1->file, a1->data_offset, 0);
		a1->header.current_frame = 0;
	}
	v1 = &a1->_744_frame;
	if (a1->header.current_frame)
		v1->frame_size = *(int *)((char *)&a1->_744_frame.frame_size + v1->frame_size);
	else
		fread(&a1->_744_frame, 4u, 1u, a1->file);
	v2 = v1->frame_size;
	if (a1->header.current_frame == a1->header.num_frames - 1)
		v2 -= 4;
	fread(&a1->_744_frame.field_4, v2, 1u, a1->file);
	video_45A110(a1, &a1->_744_frame);
	LOWORD_HEXRAYS(result) = 0;
	return result;
}

//----- (0045A110) --------------------------------------------------------
__int16 video_45A110(VideoFile *a1, VideoFileFrame *frame)
{
	VideoFileFrame *v2; // edi@1
	int v3; // edx@1
	int v4; // eax@1
	char *v5; // ebx@1
	__int16 v6; // cx@5
	char v7; // al@7
	int v8; // ecx@8
	__int16 *v9; // eax@9
	__int16 v10; // si@10
	__int16 v11; // ax@16
	int v12; // edx@16
	__int16 v13; // ax@19
	__int16 v14; // cx@24

	v2 = frame;
	v3 = 0;
	LOWORD_HEXRAYS(v4) = frame->field_4;
	a1->header.num_sound_bytes = 0;
	a1->field_330 = v4;
	a1->header.field_24 = 0;
	LOWORD_HEXRAYS(v4) = frame->field_4;
	v5 = (char *)&frame->field_6;
	if (v4 & 1)
	{
		v3 = *(_WORD *)v5 + frame->field_8 * a1->header.width;
		v5 = (char *)&frame->field_A;
	}
	if (v4 & 4)
	{
		a1->header.ptr_20 = (__int16 *)(v5 + 4);
		a1->header.num_sound_bytes = *(_DWORD *)v5 - 4;
		v4 = *(_DWORD *)v5;
		v5 += *(_DWORD *)v5;
	}
	v6 = frame->field_4;
	if (v6 & 8)
	{
		if ((a1->header._0__first_4_bits_eq_bpp & 0xF) == 2)
		{
			v7 = 0;
			if (v6 & 0x10)
			{
				memcpy(word_476DE0, &v5[*(_DWORD *)v5 + 4], 0x200u);
				v8 = dword_476FE0;
				if (dword_476FE0)
				{
					v9 = word_476DE0;
					do
					{
						v10 = *v9;
						++v9;
						*(v9 - 1) = *(_WORD *)(v8 + 2 * (v10 & 0x7FFF));
					} while ((int)v9 < (int)&dword_476FE0);
				}
				v2 = frame;
				v7 = 1;
			}
			else if (dword_476FE0)
			{
				v7 = 2;
			}
            __debugbreak(); // video codec
			/*sub_45D3B8(
				a1->header.width / 4,
				a1->header.height / 4,
				v5 + 4,
				*((_DWORD *)&a1->frame_front_buffer + a1->field_332),
				*((_DWORD *)&a1->frame_front_buffer + (a1->field_332 ^ 1)),
				v3,
				a1->header.width,
				(int)a1->_344_prolly_palette,
				v7);*/
		}
		else
		{
            __debugbreak(); // video codec
			/*sub_45A48E(
				a1->header.width / 4,
				a1->header.height / 4,
				v5 + 4,
				*((_DWORD *)&a1->frame_front_buffer + a1->field_332),
				*((_DWORD *)&a1->frame_front_buffer + (a1->field_332 ^ 1)),
				v3,
				a1->header.width,
				(int)a1->_344_prolly_palette);*/
		}
		v11 = a1->field_332;
		v12 = *((_DWORD *)&a1->frame_front_buffer + v11);
		a1->field_332 = v11 ^ 1;
		a1->header.field_10 = v12;
		v4 = *(_DWORD *)v5;
		v5 += *(_DWORD *)v5;
	}
	if (v2->field_4 & 0x10)
	{
		if (a1->header._0__first_4_bits_eq_bpp == 1)
		{
			*(_WORD *)&a1->gap2C[2] = (unsigned __int8)v5[4];
			v13 = (unsigned __int8)v5[5];
			*(_WORD *)&a1->gap2C[0] = v13;
			if (!v13)
				*(_WORD *)&a1->gap2C[0] = 256;
			v4 = 3 * *(_WORD *)&a1->gap2C[0];
			memcpy((char *)&a1->header.field_10 + 2 * (*(_WORD *)&a1->gap2C[2] + 16) + *(_WORD *)&a1->gap2C[2], v5 + 6, v4);
			v2 = frame;
		}
		v5 += *(_DWORD *)v5;
	}
	if (v2->field_4 & 0x20)
	{
		v14 = *(_WORD *)v5;
		v5 += 2;
		a1->header.field_E = v14;
	}
	if (v2->field_4 & 0x40)
	{
		a1->header.field_24 = *(_DWORD *)v5 - 4;
		a1->header.field_28 = (int)(v5 + 4);
	}
	return v4;
}

//----- (0045A320) --------------------------------------------------------
FILE *j_fopen_weirdmode_3(const char *a1)
{
	return fopen(a1, aRbwbrBwB);
}
/*
//----- (0045A3C4) --------------------------------------------------------
int sub_45A3C4(int a1, char *a2)
{
	int v2; // edi@1
	char *v3; // esi@1
	char *v4; // esi@1
	char *v5; // esi@1
	int result; // eax@1

	v2 = dword_476AC0;
	*(_DWORD *)a2 = *(_DWORD *)&a2[dword_476AC0];
	v3 = &a2[a1];
	*(_DWORD *)v3 = *(_DWORD *)&v3[v2];
	v4 = &v3[a1];
	*(_DWORD *)v4 = *(_DWORD *)&v4[v2];
	v5 = &v4[a1];
	result = *(_DWORD *)&v5[v2];
	*(_DWORD *)v5 = result;
	return result;
}
// 476AC0: using guessed type int dword_476AC0;

//----- (0045A3E7) --------------------------------------------------------
int sub_45A3E7(int a1, char *a2, char *a3)
{
	char v3; // al@1
	char *v4; // ebx@1
	int v5; // edi@2
	char *v6; // esi@2
	char *v7; // esi@2
	char *v8; // esi@2
	int result; // eax@2

	v3 = *a2;
	v4 = a2 + 1;
	if (v3)
	{
		v5 = dword_476AC0 + *(_DWORD *)(dword_476AC4 + 4 * (unsigned __int8)v3);
		*(_DWORD *)a3 = *(_DWORD *)&a3[v5];
		v6 = &a3[a1];
		*(_DWORD *)v6 = *(_DWORD *)&v6[v5];
		v7 = &v6[a1];
		*(_DWORD *)v7 = *(_DWORD *)&v7[v5];
		v8 = &v7[a1];
		result = *(_DWORD *)&v8[v5];
		*(_DWORD *)v8 = result;
	}
	else
	{
		*(_DWORD *)a3 = *(_DWORD *)v4;
		*(_DWORD *)&a3[a1] = *((_DWORD *)v4 + 1);
		*(_DWORD *)&a3[2 * a1] = *((_DWORD *)v4 + 2);
		result = *((_DWORD *)v4 + 3);
		*(_DWORD *)&a3[3 * a1] = result;
	}
	return result;
}

//----- (0045A43F) --------------------------------------------------------
__int16 sub_45A43F(int a1, int a2, _BYTE *a3, char *a4)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = *a3;
	BYTE1(a1) = *a3;
	v4 = __ROR4__(a1, 8);
	BYTE1(v4) = v4;
	v5 = __ROR4__(v4, 8);
	BYTE1(v5) = v5;
	*(_DWORD *)a4 = v5;
	*(_DWORD *)&a4[a2] = v5;
	*(_DWORD *)&a4[2 * a2] = v5;
	*(_DWORD *)&a4[3 * a2] = v5;
	return v5;
}

//----- (0045A460) --------------------------------------------------------
int sub_45A460(__int16 a1, int a2, int a3)
{
	int v3; // eax@1
	int result; // eax@2

	v3 = *(_BYTE *)a3;
	if (v3 & 0xC0)
	{
		LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a3 + 1);
		result = ((int(*)(int, __int16))off_476AC8[v3])(a2, a1);
	}
	else
	{
		result = ((int(*)(int, _WORD))off_476AC8[v3])(a2, *(_WORD *)(a3 + 1));
	}
	return result;
}

//----- (0045A48E) --------------------------------------------------------
_BYTE *sub_45A48E(unsigned __int16 a1, __int16 a2, _BYTE *a3, int a4, int a5, int a6, int a7, int a8)
{
	int v8; // esi@1
	_BYTE *v9; // ebx@1
	int v10; // eax@1
	int v11; // ecx@1
	int v12; // eax@3
	int v13; // eax@3
	int v14; // esi@3
	int v15; // eax@5
	char *v16; // esi@5
	int v17; // eax@5
	int v18; // ecx@5
	int v20; // [sp+Ch] [bp-Ch]@3
	int v21; // [sp+10h] [bp-8h]@1
	__int16 v22; // [sp+16h] [bp-2h]@2
	__int16 v23; // [sp+16h] [bp-2h]@3

	dword_476AC4 = a8;
	dword_476AC0 = a6 + a5 - a4;
	v8 = a4;
	v9 = a3;
	v10 = a1;
	LOWORD_HEXRAYS(v10) = 12 * a1;
	v21 = v10;
	v11 = a7;
LABEL_2:
	v22 = a1 >> 1;
	while (1)
	{
		v12 = *v9;
		v20 = v12;
		++v9;
		LOBYTE_HEXRAYS(v12) = (unsigned __int8)(v12 & 0xC0) >> 4;
		(*(void(__thiscall **)(int))((char *)off_476DC8 + v12))(v11);
		v13 = v20;
		LOBYTE_HEXRAYS(v13) = (unsigned __int8)(v20 & 0x30) >> 2;
		(*(int(**)())((char *)off_476DC8 + v13))();
		v14 = v8 + 8;
		v23 = v22 - 1;
		if (!v23)
		{
			v23 = a1 >> 1;
			v14 += v21;
			if (!--a2)
				return v9;
		}
		v15 = v20;
		LOBYTE_HEXRAYS(v15) = v20 & 0xC;
		(*(int(**)())((char *)off_476DC8 + v15))();
		v16 = (char *)(v14 + 4);
		v17 = v20;
		LOBYTE_HEXRAYS(v17) = v20 & 3;
		((void (__usercall *)(int@<ecx>, char *@<esi>))off_476DC8[v17])(v18, v16);
		v8 = (int)(v16 + 4);
		v22 = v23 - 1;
		if (!v22)
		{
			v8 += v21;
			if (--a2)
				goto LABEL_2;
			return v9;
		}
	}
}

//----- (0045A556) --------------------------------------------------------
__int16 sub_45A556(int a1, __int16 a2, int a3, char *a4)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A594) --------------------------------------------------------
char sub_45A594(int a1, __int16 a2, int a3, char *a4)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A5D2) --------------------------------------------------------
char sub_45A5D2(int a1, __int16 a2, int a3, char *a4)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A610) --------------------------------------------------------
char __usercall sub_45A610@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A64E) --------------------------------------------------------
char __usercall sub_45A64E@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A68C) --------------------------------------------------------
__int16 __usercall sub_45A68C@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A6CA) --------------------------------------------------------
char __usercall sub_45A6CA@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A708) --------------------------------------------------------
char __usercall sub_45A708@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A746) --------------------------------------------------------
char __usercall sub_45A746@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A784) --------------------------------------------------------
char __usercall sub_45A784@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A7C2) --------------------------------------------------------
char __usercall sub_45A7C2@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A800) --------------------------------------------------------
char __usercall sub_45A800@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A83E) --------------------------------------------------------
__int16 __usercall sub_45A83E@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A87C) --------------------------------------------------------
__int16 __usercall sub_45A87C@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A8BA) --------------------------------------------------------
char __usercall sub_45A8BA@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A8F8) --------------------------------------------------------
char __usercall sub_45A8F8@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A936) --------------------------------------------------------
__int16 __usercall sub_45A936@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A974) --------------------------------------------------------
__int16 __usercall sub_45A974@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A9B2) --------------------------------------------------------
char __usercall sub_45A9B2@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045A9F0) --------------------------------------------------------
__int16 __usercall sub_45A9F0@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AA2E) --------------------------------------------------------
char __usercall sub_45AA2E@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AA6C) --------------------------------------------------------
__int16 __usercall sub_45AA6C@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AAAA) --------------------------------------------------------
__int16 __usercall sub_45AAAA@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AAE8) --------------------------------------------------------
char __usercall sub_45AAE8@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AB26) --------------------------------------------------------
char __usercall sub_45AB26@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AB64) --------------------------------------------------------
char __usercall sub_45AB64@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045ABA2) --------------------------------------------------------
char __usercall sub_45ABA2@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045ABE0) --------------------------------------------------------
__int16 __usercall sub_45ABE0@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AC1E) --------------------------------------------------------
char __usercall sub_45AC1E@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AC5C) --------------------------------------------------------
char __usercall sub_45AC5C@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AC9A) --------------------------------------------------------
char __usercall sub_45AC9A@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045ACD8) --------------------------------------------------------
char __usercall sub_45ACD8@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AD16) --------------------------------------------------------
char __usercall sub_45AD16@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AD54) --------------------------------------------------------
__int16 __usercall sub_45AD54@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AD92) --------------------------------------------------------
__int16 __usercall sub_45AD92@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045ADD0) --------------------------------------------------------
__int16 __usercall sub_45ADD0@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AE0E) --------------------------------------------------------
char __usercall sub_45AE0E@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AE4C) --------------------------------------------------------
char __usercall sub_45AE4C@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AE8A) --------------------------------------------------------
__int16 __usercall sub_45AE8A@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AEC8) --------------------------------------------------------
char __usercall sub_45AEC8@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AF06) --------------------------------------------------------
char __usercall sub_45AF06@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AF44) --------------------------------------------------------
__int16 __usercall sub_45AF44@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AF82) --------------------------------------------------------
__int16 __usercall sub_45AF82@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AFC0) --------------------------------------------------------
__int16 __usercall sub_45AFC0@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045AFFE) --------------------------------------------------------
char __usercall sub_45AFFE@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B03C) --------------------------------------------------------
char __usercall sub_45B03C@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B07A) --------------------------------------------------------
__int16 __usercall sub_45B07A@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B0B8) --------------------------------------------------------
char __usercall sub_45B0B8@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B0F6) --------------------------------------------------------
__int16 __usercall sub_45B0F6@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B134) --------------------------------------------------------
char __usercall sub_45B134@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B172) --------------------------------------------------------
char __usercall sub_45B172@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B1B0) --------------------------------------------------------
char __usercall sub_45B1B0@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B1EE) --------------------------------------------------------
char __usercall sub_45B1EE@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B22C) --------------------------------------------------------
__int16 __usercall sub_45B22C@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B26A) --------------------------------------------------------
__int16 __usercall sub_45B26A@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B2A8) --------------------------------------------------------
char __usercall sub_45B2A8@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B2E6) --------------------------------------------------------
char __usercall sub_45B2E6@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B324) --------------------------------------------------------
char __usercall sub_45B324@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B362) --------------------------------------------------------
char __usercall sub_45B362@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B3A0) --------------------------------------------------------
__int16 __usercall sub_45B3A0@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B3DE) --------------------------------------------------------
char __usercall sub_45B3DE@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	BYTE1(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B41C) --------------------------------------------------------
char __usercall sub_45B41C@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B45A) --------------------------------------------------------
char __usercall sub_45B45A@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v4) = a2;
	BYTE1(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B498) --------------------------------------------------------
char __usercall sub_45B498@<al>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	BYTE1(a1) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(a1) = HIBYTE_HEXRAYS(a2);
	v4 = __ROR4__(a1, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	LOBYTE_HEXRAYS(v4) = HIBYTE_HEXRAYS(a2);
	BYTE1(v4) = a2;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)&a4[2 * a3] = v4;
	BYTE1(v4) = a2;
	LOBYTE_HEXRAYS(v4) = a2;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a2);
	LOBYTE_HEXRAYS(v5) = HIBYTE_HEXRAYS(a2);
	*(_DWORD *)(&a4[2 * a3] + a3) = v5;
	return v5;
}

//----- (0045B4D6) --------------------------------------------------------
__int16 __usercall sub_45B4D6@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B51C) --------------------------------------------------------
int __usercall sub_45B51C@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045B54A) --------------------------------------------------------
char __usercall sub_45B54A@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B58B) --------------------------------------------------------
int __usercall sub_45B58B@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045B5C1) --------------------------------------------------------
char __usercall sub_45B5C1@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B606) --------------------------------------------------------
__int16 __usercall sub_45B606@<ax>(char a1@<dl>, int a2@<ecx>, int *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *a3;
	*(_DWORD *)a4 = *a3;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045B63B) --------------------------------------------------------
char __usercall sub_45B63B@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _BYTE *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[2 * a3];
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = *(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B67C) --------------------------------------------------------
int __usercall sub_45B67C@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)&a5[2 * a3] = v6;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045B6AE) --------------------------------------------------------
char __usercall sub_45B6AE@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	BYTE1(v4) = *(&a3[2 * a2 + 3] + a2);
	LOBYTE_HEXRAYS(v4) = a1;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045B6E0) --------------------------------------------------------
char __usercall sub_45B6E0@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = __ROR4__(*(_DWORD *)&a3[a2], 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = *(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045B716) --------------------------------------------------------
int __usercall sub_45B716@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _BYTE *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	v6 = __ROR4__(*(_DWORD *)&a4[2 * a3], 16);
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[2 * a3] = v6;
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045B74C) --------------------------------------------------------
char __usercall sub_45B74C@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B78D) --------------------------------------------------------
__int16 __usercall sub_45B78D@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B7CD) --------------------------------------------------------
__int16 __usercall sub_45B7CD@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _WORD *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *((_BYTE *)a4 + a3);
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B80B) --------------------------------------------------------
__int16 __usercall sub_45B80B@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B84A) --------------------------------------------------------
char __usercall sub_45B84A@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B88A) --------------------------------------------------------
__int16 __usercall sub_45B88A@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B8C9) --------------------------------------------------------
__int16 __usercall sub_45B8C9@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B906) --------------------------------------------------------
__int16 __usercall sub_45B906@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045B944) --------------------------------------------------------
__int16 __usercall sub_45B944@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)&a5[a3] = *(_DWORD *)(a3 + a4);
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v6;
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	v7 = __ROR4__(v6, 16);
	LOBYTE_HEXRAYS(v7) = a2;
	BYTE1(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045B972) --------------------------------------------------------
char __usercall sub_45B972@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(v6 + 2 * a3 + 2);
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = *(_BYTE *)(v6 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045B9BE) --------------------------------------------------------
__int16 __usercall sub_45B9BE@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v6;
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)&a5[2 * a3] = v6;
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	v7 = __ROR4__(v6, 16);
	LOBYTE_HEXRAYS(v7) = a2;
	BYTE1(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045B9F4) --------------------------------------------------------
__int16 __usercall sub_45B9F4@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v6;
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	v7 = __ROR4__(v6, 16);
	LOBYTE_HEXRAYS(v7) = a2;
	BYTE1(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045BA2A) --------------------------------------------------------
char __usercall sub_45BA2A@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = *(_BYTE *)(a3 + a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BA6F) --------------------------------------------------------
char __usercall sub_45BA6F@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BAB4) --------------------------------------------------------
int __usercall sub_45BAB4@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045BAEE) --------------------------------------------------------
char __usercall sub_45BAEE@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BB31) --------------------------------------------------------
__int16 __usercall sub_45BB31@<ax>(char a1@<dl>, int a2@<ecx>, _DWORD *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *a3;
	*(_DWORD *)a4 = *a3;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = *((_BYTE *)a3 + a2 + 2);
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = *((_BYTE *)a3 + a2 + 1);
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045BB6A) --------------------------------------------------------
char __usercall sub_45BB6A@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _BYTE *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[2 * a3];
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = *(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BBA9) --------------------------------------------------------
__int16 __usercall sub_45BBA9@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BBEA) --------------------------------------------------------
char __usercall sub_45BBEA@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _WORD *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *((_BYTE *)a4 + a3);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = HIBYTE_HEXRAYS(a4[a3 + 1]);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)((char *)&a4[a3 + 1] + a3);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BC2B) --------------------------------------------------------
__int16 __usercall sub_45BC2B@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BC6A) --------------------------------------------------------
char __usercall sub_45BC6A@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(v6 + 2 * a3 + 2);
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = *(_BYTE *)(v6 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045BCB0) --------------------------------------------------------
__int16 __usercall sub_45BCB0@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BCF0) --------------------------------------------------------
__int16 __usercall sub_45BCF0@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BD34) --------------------------------------------------------
__int16 __usercall sub_45BD34@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BD72) --------------------------------------------------------
int __usercall sub_45BD72@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045BDAB) --------------------------------------------------------
char __usercall sub_45BDAB@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BDEE) --------------------------------------------------------
__int16 __usercall sub_45BDEE@<ax>(char a1@<dl>, int a2@<ecx>, _DWORD *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *a3;
	*(_DWORD *)a4 = *a3;
	BYTE1(v4) = *((_BYTE *)a3 + a2 + 3);
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = *((_BYTE *)a3 + a2);
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045BE26) --------------------------------------------------------
__int16 __usercall sub_45BE26@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _WORD *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *((_BYTE *)a4 + a3);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[a3];
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)((char *)&a4[a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BE65) --------------------------------------------------------
char __usercall sub_45BE65@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(v6 + 2 * a3 + 2);
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = *(_BYTE *)(v6 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045BEA7) --------------------------------------------------------
__int16 __usercall sub_45BEA7@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BEE9) --------------------------------------------------------
__int16 __usercall sub_45BEE9@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BF29) --------------------------------------------------------
__int16 __usercall sub_45BF29@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BF69) --------------------------------------------------------
char __usercall sub_45BF69@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045BFAC) --------------------------------------------------------
int __usercall sub_45BFAC@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045BFE3) --------------------------------------------------------
__int16 __usercall sub_45BFE3@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C019) --------------------------------------------------------
char __usercall sub_45C019@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C05C) --------------------------------------------------------
__int16 __usercall sub_45C05C@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C091) --------------------------------------------------------
char __usercall sub_45C091@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[2 * a3];
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = *(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C0D0) --------------------------------------------------------
__int16 __usercall sub_45C0D0@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _BYTE *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[2 * a3];
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C10F) --------------------------------------------------------
int __usercall sub_45C10F@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C145) --------------------------------------------------------
char __usercall sub_45C145@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // edi@1
	int v8; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)&a5[a3] = *(_DWORD *)(a3 + a4);
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v6;
	v7 = a3 + a4;
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = *(_BYTE *)(v7 + 2 * a3 + 2);
	v8 = __ROR4__(v6, 16);
	BYTE1(v8) = *(_BYTE *)(v7 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v8) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v8;
	return v8;
}

//----- (0045C179) --------------------------------------------------------
__int16 __usercall sub_45C179@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _WORD *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[a3 + 1];
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = HIBYTE_HEXRAYS(a4[a3]);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C1BA) --------------------------------------------------------
__int16 __usercall sub_45C1BA@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C1FD) --------------------------------------------------------
char __usercall sub_45C1FD@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _WORD *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *((_BYTE *)a4 + a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *((_BYTE *)a4 + a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = a4[a3 + 1];
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = *((_BYTE *)&a4[a3 + 1] + a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C241) --------------------------------------------------------
char __usercall sub_45C241@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _BYTE *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a4[2 * a3 + 2];
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a4[2 * a3 + 1];
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(&a4[2 * a3 + 2] + a3);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C284) --------------------------------------------------------
char __usercall sub_45C284@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(v6 + 2 * a3 + 2);
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = *(_BYTE *)(v6 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045C2C7) --------------------------------------------------------
char __usercall sub_45C2C7@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C30A) --------------------------------------------------------
__int16 __usercall sub_45C30A@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = *(_BYTE *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v6) = a2;
	BYTE1(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C34B) --------------------------------------------------------
char __usercall sub_45C34B@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = *(_BYTE *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C38E) --------------------------------------------------------
__int16 __usercall sub_45C38E@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C3D2) --------------------------------------------------------
char __usercall sub_45C3D2@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(v6 + 2 * a3 + 2);
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = *(_BYTE *)(v6 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045C417) --------------------------------------------------------
__int16 __usercall sub_45C417@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C459) --------------------------------------------------------
int __usercall sub_45C459@<eax>(char a1@<dl>, int a2@<ecx>, _DWORD *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int result; // eax@1

	v4 = *a3;
	*(_DWORD *)a4 = *a3;
	BYTE1(v4) = *((_BYTE *)a3 + a2 + 3);
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = *((_BYTE *)a3 + a2);
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = *((_BYTE *)a3 + 2 * a2 + 3);
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = *((_BYTE *)a3 + 2 * a2);
	*(_DWORD *)&a4[2 * a2] = v4;
	result = *(_DWORD *)((char *)a3 + 2 * a2 + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C48C) --------------------------------------------------------
__int16 __usercall sub_45C48C@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C4B9) --------------------------------------------------------
__int16 __usercall sub_45C4B9@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[2 * a3];
	*(_DWORD *)&a5[2 * a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C4F6) --------------------------------------------------------
__int16 __usercall sub_45C4F6@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)&a4[a2] = *(_DWORD *)&a3[a2];
	v4 = *(_DWORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C51B) --------------------------------------------------------
int __usercall sub_45C51B@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int result; // eax@1

	v4 = __ROR4__(*(_DWORD *)a3, 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)a4 = v4;
	v5 = __ROR4__(*(_DWORD *)&a3[a2], 16);
	BYTE1(v5) = a1;
	v5 = __ROR4__(v5, 16);
	*(_DWORD *)&a4[a2] = v5;
	v6 = __ROR4__(*(_DWORD *)&a3[2 * a2], 16);
	BYTE1(v6) = a1;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a4[2 * a2] = v6;
	v7 = __ROR4__(*(_DWORD *)(&a3[2 * a2] + a2), 16);
	BYTE1(v7) = a1;
	result = __ROR4__(v7, 16);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C558) --------------------------------------------------------
int __usercall sub_45C558@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)&a5[a3] = *(_DWORD *)(a3 + a4);
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C57E) --------------------------------------------------------
char __usercall sub_45C57E@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1

	v4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)&a3[a2];
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)&a4[a2] = v5;
	v6 = *(_DWORD *)&a3[2 * a2];
	LOBYTE_HEXRAYS(v6) = a1;
	*(_DWORD *)&a4[2 * a2] = v6;
	v7 = *(_DWORD *)(&a3[2 * a2] + a2);
	LOBYTE_HEXRAYS(v7) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v7;
	return v7;
}

//----- (0045C5A3) --------------------------------------------------------
__int16 __usercall sub_45C5A3@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = __ROR4__(*(_DWORD *)a3, 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C5E1) --------------------------------------------------------
int __usercall sub_45C5E1@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = __ROR4__(*(_DWORD *)(a3 + a4 + 2 * a3), 16);
	BYTE1(v6) = a2;
	result = __ROR4__(v6, 16);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C620) --------------------------------------------------------
char __usercall sub_45C620@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = *(_DWORD *)(a3 + a4 + 2 * a3);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045C65B) --------------------------------------------------------
__int16 __usercall sub_45C65B@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a3[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C695) --------------------------------------------------------
__int16 __usercall sub_45C695@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)&a4[a2] = *(_DWORD *)&a3[a2];
	v4 = __ROR4__(*(_DWORD *)&a3[2 * a2], 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)&a4[2 * a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C6C2) --------------------------------------------------------
int __usercall sub_45C6C2@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	v6 = __ROR4__(*(_DWORD *)&a4[a3], 16);
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[a3] = v6;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)&a4[2 * a3];
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C6EF) --------------------------------------------------------
int __usercall sub_45C6EF@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)&a5[a3] = v6;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C717) --------------------------------------------------------
char __usercall sub_45C717@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)&a4[a2] = *(_DWORD *)&a3[a2];
	v4 = *(_DWORD *)&a3[2 * a2];
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(&a3[2 * a2 + 2] + a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C73F) --------------------------------------------------------
__int16 __usercall sub_45C73F@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C76C) --------------------------------------------------------
int __usercall sub_45C76C@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)&a4[2 * a3];
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C799) --------------------------------------------------------
int __usercall sub_45C799@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C7C8) --------------------------------------------------------
char __usercall sub_45C7C8@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(&a3[2 * a2 + 2] + a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C7F7) --------------------------------------------------------
int __usercall sub_45C7F7@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int result; // eax@1

	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C824) --------------------------------------------------------
char __usercall sub_45C824@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = *(_BYTE *)(v6 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = a2;
	LOBYTE_HEXRAYS(v7) = *(_BYTE *)(v6 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045C86C) --------------------------------------------------------
int __usercall sub_45C86C@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int result; // eax@1

	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	*(_DWORD *)&a4[2 * a2] = *(_DWORD *)&a3[2 * a2];
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C891) --------------------------------------------------------
int __usercall sub_45C891@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int result; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C8B6) --------------------------------------------------------
__int16 __usercall sub_45C8B6@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1

	v4 = *(_DWORD *)a3;
	BYTE1(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)&a3[a2];
	BYTE1(v5) = a1;
	*(_DWORD *)&a4[a2] = v5;
	v6 = *(_DWORD *)&a3[2 * a2];
	BYTE1(v6) = a1;
	*(_DWORD *)&a4[2 * a2] = v6;
	v7 = *(_DWORD *)(&a3[2 * a2] + a2);
	BYTE1(v7) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v7;
	return v7;
}

//----- (0045C8DB) --------------------------------------------------------
int __usercall sub_45C8DB@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int result; // eax@1

	v4 = __ROR4__(*(_DWORD *)a3, 16);
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)a4 = v4;
	v5 = __ROR4__(*(_DWORD *)&a3[a2], 16);
	LOBYTE_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	*(_DWORD *)&a4[a2] = v5;
	v6 = __ROR4__(*(_DWORD *)&a3[2 * a2], 16);
	LOBYTE_HEXRAYS(v6) = a1;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a4[2 * a2] = v6;
	v7 = __ROR4__(*(_DWORD *)(&a3[2 * a2] + a2), 16);
	LOBYTE_HEXRAYS(v7) = a1;
	result = __ROR4__(v7, 16);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C918) --------------------------------------------------------
__int16 __usercall sub_45C918@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a3[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C948) --------------------------------------------------------
int __usercall sub_45C948@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int result; // eax@1

	v4 = __ROR4__(*(_DWORD *)a3, 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	v5 = __ROR4__(*(_DWORD *)(&a3[2 * a2] + a2), 16);
	BYTE1(v5) = a1;
	result = __ROR4__(v5, 16);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045C985) --------------------------------------------------------
int __usercall sub_45C985@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045C9B6) --------------------------------------------------------
char __usercall sub_45C9B6@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	v5 = *(_DWORD *)(&a3[2 * a2] + a2);
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045C9E9) --------------------------------------------------------
char __usercall sub_45C9E9@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	v6 = __ROR4__(*(_DWORD *)&a4[a3], 16);
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[a3] = v6;
	v7 = *(_DWORD *)&a4[2 * a3];
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)&a5[2 * a3] = v7;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(&a4[2 * a3 + 2] + a3);
	v8 = __ROR4__(v7, 16);
	BYTE1(v8) = a2;
	LOBYTE_HEXRAYS(v8) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v8;
	return v8;
}

//----- (0045CA21) --------------------------------------------------------
__int16 __usercall sub_45CA21@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)&a5[a3] = v6;
	v7 = __ROR4__(*(_DWORD *)(a4 + 2 * a3), 16);
	BYTE1(v7) = a2;
	v7 = __ROR4__(v7, 16);
	*(_DWORD *)&a5[2 * a3] = v7;
	BYTE1(v7) = a2;
	LOBYTE_HEXRAYS(v7) = a2;
	v8 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v8;
	return v8;
}

//----- (0045CA59) --------------------------------------------------------
char __usercall sub_45CA59@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[2 * a3 + 2];
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(&a4[2 * a3 + 2] + a3);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045CA98) --------------------------------------------------------
char __usercall sub_45CA98@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	char *v5; // edi@1
	int v6; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a3[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	v5 = &a3[a2];
	BYTE1(v4) = v5[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	BYTE1(v6) = a1;
	LOBYTE_HEXRAYS(v6) = v5[2 * a2];
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045CACB) --------------------------------------------------------
int __usercall sub_45CACB@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int result; // eax@1

	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045CAF8) --------------------------------------------------------
int __usercall sub_45CAF8@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CB2A) --------------------------------------------------------
int __usercall sub_45CB2A@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int result; // eax@1

	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045CB59) --------------------------------------------------------
__int16 __usercall sub_45CB59@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a3[2 * a2 + 1];
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045CB8A) --------------------------------------------------------
__int16 __usercall sub_45CB8A@<ax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	v6 = __ROR4__(*(_DWORD *)&a4[a3], 16);
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[a3] = v6;
	v7 = __ROR4__(*(_DWORD *)&a4[2 * a3], 16);
	BYTE1(v7) = a2;
	v7 = __ROR4__(v7, 16);
	*(_DWORD *)&a5[2 * a3] = v7;
	BYTE1(v7) = a2;
	LOBYTE_HEXRAYS(v7) = a2;
	v8 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v8;
	return v8;
}

//----- (0045CBC7) --------------------------------------------------------
int __usercall sub_45CBC7@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 1);
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CBF9) --------------------------------------------------------
char __usercall sub_45CBF9@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)&a5[a3] = v6;
	v7 = *(_DWORD *)(a4 + 2 * a3);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)&a5[2 * a3] = v7;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v8 = __ROR4__(v7, 16);
	BYTE1(v8) = a2;
	LOBYTE_HEXRAYS(v8) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v8;
	return v8;
}

//----- (0045CC2C) --------------------------------------------------------
char __usercall sub_45CC2C@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	char *v5; // edi@1
	int v6; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)&a4[a2] = *(_DWORD *)&a3[a2];
	v4 = *(_DWORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	v5 = &a3[a2];
	BYTE1(v4) = v5[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	BYTE1(v6) = a1;
	LOBYTE_HEXRAYS(v6) = v5[2 * a2];
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045CC54) --------------------------------------------------------
int __usercall sub_45CC54@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int result; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = __ROR4__(*(_DWORD *)&a3[a2], 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)&a4[a2] = v4;
	v5 = __ROR4__(*(_DWORD *)&a3[2 * a2], 16);
	BYTE1(v5) = a1;
	v5 = __ROR4__(v5, 16);
	*(_DWORD *)&a4[2 * a2] = v5;
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045CC81) --------------------------------------------------------
int __usercall sub_45CC81@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)a4;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)&a5[a3] = *(_DWORD *)(a3 + a4);
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CCA8) --------------------------------------------------------
int __usercall sub_45CCA8@<eax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int result; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	v5 = *(_DWORD *)&a3[2 * a2];
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)&a4[2 * a2] = v5;
	result = *(_DWORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = result;
	return result;
}

//----- (0045CCC9) --------------------------------------------------------
__int16 __usercall sub_45CCC9@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1

	v4 = __ROR4__(*(_DWORD *)a3, 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)a4 = v4;
	v5 = __ROR4__(*(_DWORD *)&a3[a2], 16);
	BYTE1(v5) = a1;
	v5 = __ROR4__(v5, 16);
	*(_DWORD *)&a4[a2] = v5;
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v5;
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045CD06) --------------------------------------------------------
__int16 __usercall sub_45CD06@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045CD33) --------------------------------------------------------
int __usercall sub_45CD33@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CD61) --------------------------------------------------------
int __usercall sub_45CD61@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int result; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)&a5[a3] = v5;
	v6 = __ROR4__(*(_DWORD *)&a4[2 * a3], 16);
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[2 * a3] = v6;
	v7 = __ROR4__(*(_DWORD *)(&a4[2 * a3] + a3), 16);
	BYTE1(v7) = a2;
	result = __ROR4__(v7, 16);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CD9E) --------------------------------------------------------
int __usercall sub_45CD9E@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int result; // eax@1

	LOBYTE_HEXRAYS(a1) = a2;
	BYTE1(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	*(_DWORD *)&a5[2 * a3] = *(_DWORD *)(a4 + 2 * a3);
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CDCD) --------------------------------------------------------
char __usercall sub_45CDCD@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)&a5[2 * a3] = v6;
	v7 = *(_DWORD *)(a3 + a4 + 2 * a3);
	LOBYTE_HEXRAYS(v7) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045CE00) --------------------------------------------------------
char __usercall sub_45CE00@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1

	v4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)&a3[a2];
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)&a4[a2] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a3[2 * a2 + 2];
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)&a4[2 * a2] = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(&a3[2 * a2 + 2] + a2);
	v6 = __ROR4__(v5, 16);
	BYTE1(v6) = a1;
	LOBYTE_HEXRAYS(v6) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045CE33) --------------------------------------------------------
__int16 __usercall sub_45CE33@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	LOBYTE_HEXRAYS(v4) = a1;
	BYTE1(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOBYTE_HEXRAYS(v5) = a1;
	BYTE1(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045CE61) --------------------------------------------------------
char __usercall sub_45CE61@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // edi@1
	int v7; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)a4;
	*(_DWORD *)a5 = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOBYTE_HEXRAYS(v5) = a2;
	BYTE1(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = a3 + a4;
	BYTE1(v5) = *(_BYTE *)(v6 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	BYTE1(v7) = a2;
	LOBYTE_HEXRAYS(v7) = *(_BYTE *)(v6 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = v7;
	return v7;
}

//----- (0045CEA3) --------------------------------------------------------
int __usercall sub_45CEA3@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v6;
	BYTE1(v6) = *(_BYTE *)(a4 + 2 * a3 + 3);
	LOBYTE_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	BYTE1(v6) = a2;
	LOBYTE_HEXRAYS(v6) = *(_BYTE *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v6;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CED4) --------------------------------------------------------
int __usercall sub_45CED4@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	v6 = __ROR4__(*(_DWORD *)(a4 + 2 * a3), 16);
	BYTE1(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[2 * a3] = v6;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CF0B) --------------------------------------------------------
int __usercall sub_45CF0B@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 2);
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *(_BYTE *)(a3 + a4 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)(a3 + a4);
	*(_DWORD *)&a5[a3] = v5;
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = __ROR4__(*(_DWORD *)(a3 + a4 + 2 * a3), 16);
	BYTE1(v6) = a2;
	result = __ROR4__(v6, 16);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045CF4C) --------------------------------------------------------
__int16 __usercall sub_45CF4C@<ax>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = *(_DWORD *)a3;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a3[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v5 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(&a3[2 * a2] + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045CF87) --------------------------------------------------------
char __usercall sub_45CF87@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	char *v5; // edi@1
	int v6; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)&a3[a2];
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2 + 2];
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	*(_DWORD *)&a4[2 * a2] = v4;
	v5 = &a3[a2];
	BYTE1(v4) = v5[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	BYTE1(v6) = a1;
	LOBYTE_HEXRAYS(v6) = v5[2 * a2];
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045CFBA) --------------------------------------------------------
__int16 __usercall sub_45CFBA@<ax>(char a1@<dl>, int a2@<ecx>, _DWORD *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1

	v4 = *a3;
	*(_DWORD *)a4 = *a3;
	BYTE1(v4) = *((_BYTE *)a3 + a2 + 3);
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = *((_BYTE *)a3 + a2);
	*(_DWORD *)&a4[a2] = v4;
	v5 = *(_DWORD *)((char *)a3 + 2 * a2);
	*(_DWORD *)&a4[2 * a2] = v5;
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	v6 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)((char *)a3 + 2 * a2 + a2);
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045CFEA) --------------------------------------------------------
int __usercall sub_45CFEA@<eax>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, int a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int result; // eax@1

	BYTE1(a1) = *(_BYTE *)(a4 + 3);
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *(_BYTE *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[a3] = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)&a5[2 * a3] = v6;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(&a5[2 * a3] + a3) = result;
	return result;
}

//----- (0045D01C) --------------------------------------------------------
char __usercall sub_45D01C@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, _WORD *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *a4;
	*(_DWORD *)a5 = v5;
	BYTE1(v5) = *((_BYTE *)a4 + a3 + 3);
	LOBYTE_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = *((_BYTE *)a4 + a3);
	*(_DWORD *)&a5[a3] = v5;
	LOWORD_HEXRAYS(v5) = a4[a3 + 1];
	v5 = __ROR4__(v5, 16);
	BYTE1(v5) = a2;
	LOBYTE_HEXRAYS(v5) = a2;
	*(_DWORD *)&a5[2 * a3] = v5;
	v6 = *(_DWORD *)((char *)&a4[a3] + a3);
	LOBYTE_HEXRAYS(v6) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v6;
	return v6;
}

//----- (0045D057) --------------------------------------------------------
char __usercall sub_45D057@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1

	v4 = __ROR4__(*(_DWORD *)a3, 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)a4 = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[a2];
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a3[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(&a3[2 * a2 + 2] + a2);
	v5 = __ROR4__(v4, 16);
	BYTE1(v5) = a1;
	LOBYTE_HEXRAYS(v5) = a1;
	*(_DWORD *)(&a4[2 * a2] + a2) = v5;
	return v5;
}

//----- (0045D098) --------------------------------------------------------
char __usercall sub_45D098@<al>(char a1@<dl>, int a2@<ecx>, char *a3@<edi>, char *a4@<esi>)
{
	int v4; // eax@1
	char *v5; // edi@1
	int v6; // eax@1

	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = __ROR4__(*(_DWORD *)&a3[a2], 16);
	BYTE1(v4) = a1;
	v4 = __ROR4__(v4, 16);
	*(_DWORD *)&a4[a2] = v4;
	BYTE1(v4) = a1;
	LOBYTE_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)&a3[2 * a2];
	*(_DWORD *)&a4[2 * a2] = v4;
	v5 = &a3[a2];
	BYTE1(v4) = v5[2 * a2 + 3];
	LOBYTE_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	BYTE1(v6) = a1;
	LOBYTE_HEXRAYS(v6) = v5[2 * a2];
	*(_DWORD *)(&a4[2 * a2] + a2) = v6;
	return v6;
}

//----- (0045D0D0) --------------------------------------------------------
char __usercall sub_45D0D0@<al>(int a1@<eax>, char a2@<dl>, int a3@<ecx>, char *a4@<edi>, char *a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1

	BYTE1(a1) = a2;
	LOBYTE_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	v6 = __ROR4__(*(_DWORD *)&a4[a3], 16);
	LOBYTE_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	*(_DWORD *)&a5[a3] = v6;
	v7 = *(_DWORD *)&a4[2 * a3];
	BYTE1(v7) = a2;
	*(_DWORD *)&a5[2 * a3] = v7;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(&a4[2 * a3 + 2] + a3);
	v8 = __ROR4__(v7, 16);
	BYTE1(v8) = a2;
	LOBYTE_HEXRAYS(v8) = a2;
	*(_DWORD *)(&a5[2 * a3] + a3) = v8;
	return v8;
}

//----- (0045D108) --------------------------------------------------------
int __usercall sub_45D108@<eax>(int a1@<ecx>, int a2@<esi>)
{
	int v2; // edi@1
	int v3; // esi@1
	int v4; // esi@1
	int v5; // esi@1
	int result; // eax@1

	v2 = dword_476DD8;
	*(_DWORD *)a2 = *(_DWORD *)(dword_476DD8 + a2);
	*(_DWORD *)(a2 + 4) = *(_DWORD *)(v2 + a2 + 4);
	v3 = a1 + a2;
	*(_DWORD *)v3 = *(_DWORD *)(v2 + v3);
	*(_DWORD *)(v3 + 4) = *(_DWORD *)(v2 + v3 + 4);
	v4 = a1 + v3;
	*(_DWORD *)v4 = *(_DWORD *)(v2 + v4);
	*(_DWORD *)(v4 + 4) = *(_DWORD *)(v2 + v4 + 4);
	v5 = a1 + v4;
	*(_DWORD *)v5 = *(_DWORD *)(v2 + v5);
	result = *(_DWORD *)(v2 + v5 + 4);
	*(_DWORD *)(v5 + 4) = result;
	return result;
}
// 476DD8: using guessed type int dword_476DD8;

//----- (0045D147) --------------------------------------------------------
int __usercall sub_45D147@<eax>(int a1@<ecx>, char *a2@<ebx>, int a3@<esi>)
{
	char v3; // al@1
	char *v4; // ebx@1
	int v5; // edi@2
	int v6; // esi@2
	int v7; // esi@2
	int v8; // esi@2
	int result; // eax@2
	int v10; // edi@3

	v3 = *a2;
	v4 = a2 + 1;
	if (v3)
	{
		v5 = dword_476DD8 + *(_DWORD *)(dword_476DDC + 4 * (unsigned __int8)v3);
		*(_DWORD *)a3 = *(_DWORD *)(v5 + a3);
		*(_DWORD *)(a3 + 4) = *(_DWORD *)(v5 + a3 + 4);
		v6 = a1 + a3;
		*(_DWORD *)v6 = *(_DWORD *)(v5 + v6);
		*(_DWORD *)(v6 + 4) = *(_DWORD *)(v5 + v6 + 4);
		v7 = a1 + v6;
		*(_DWORD *)v7 = *(_DWORD *)(v5 + v7);
		*(_DWORD *)(v7 + 4) = *(_DWORD *)(v5 + v7 + 4);
		v8 = a1 + v7;
		*(_DWORD *)v8 = *(_DWORD *)(v5 + v8);
		result = *(_DWORD *)(v5 + v8 + 4);
		*(_DWORD *)(v8 + 4) = result;
	}
	else
	{
		v10 = 4;
		do
		{
			*(_DWORD *)a3 = *(_DWORD *)v4;
			result = *((_DWORD *)v4 + 1);
			*(_DWORD *)(a3 + 4) = result;
			a3 += a1;
			v4 += 8;
			--v10;
		} while (v10);
	}
	return result;
}
// 476DD8: using guessed type int dword_476DD8;
// 476DDC: using guessed type int dword_476DDC;

//----- (0045D25B) --------------------------------------------------------
void __usercall sub_45D25B(__int16 *a1@<ebx>)
{
	__int16 v1; // ax@1
	__int16 v2; // ax@1

	v1 = *a1;
	v2 = *a1;
	JUMPOUT(loc_45D267);
}

//----- (0045D288) --------------------------------------------------------
__int16 __usercall sub_45D288@<ax>(int a1@<eax>, int a2@<ecx>, _WORD *a3@<ebx>, int a4@<esi>)
{
	int v4; // edi@1
	int v5; // edi@1
	int v6; // ebx@1
	_WORD *v7; // ebx@1
	int v8; // eax@1

	v6 = *a3;
	LOWORD_HEXRAYS(v6) = 2 * v6;
	v7 = (_WORD *)(dword_476FE0 + v6);
	LOWORD_HEXRAYS(a1) = *v7;
	v8 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v8) = *v7;
	*(_DWORD *)a4 = v8;
	*(_DWORD *)(a4 + 4) = v8;
	*(_DWORD *)(a2 + a4) = v8;
	*(_DWORD *)(a2 + a4 + 4) = v8;
	v4 = 2 * a2;
	*(_DWORD *)(v4 + a4) = v8;
	*(_DWORD *)(v4 + a4 + 4) = v8;
	v5 = 3 * a2;
	*(_DWORD *)(v5 + a4) = v8;
	*(_DWORD *)(v5 + a4 + 4) = v8;
	return v8;
}
// 476FE0: using guessed type int dword_476FE0;

//----- (0045D2A4) --------------------------------------------------------
void __usercall sub_45D2A4(_BYTE *a1@<ebx>)
{
	int v1; // ebx@1
	__int16 v2; // ax@1
	__int16 v3; // ax@1

	v1 = *a1;
	v2 = word_476DE0[v1];
	v3 = word_476DE0[v1];
	JUMPOUT(&loc_45D267);
}
// 476DE0: using guessed type __int16 word_476DE0[];

//----- (0045D2C1) --------------------------------------------------------
int __usercall sub_45D2C1@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<ebx>)
{
	int v3; // eax@1
	int v4; // edx@2
	int result; // eax@2
	int v6; // edx@3

	v3 = *(_BYTE *)a3;
	if (v3 & 0xC0)
	{
		LOWORD_HEXRAYS(a1) = *(_WORD *)(a3 + 1);
		v6 = __ROL4__(a1, 16);
		LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + 1);
		result = ((int(*)(int, int))off_476FE4[v3])(a2, v6);
	}
	else
	{
		LOWORD_HEXRAYS(a1) = *(_WORD *)(a3 + 3);
		v4 = __ROL4__(a1, 16);
		LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 1);
		result = ((int(*)(int, int))off_476FE4[v3])(a2, v4);
	}
	return result;
}
// 476DD8: using guessed type int dword_476DD8;
// 476FE4: using guessed type int (*off_476FE4[196])();

//----- (0045D2FE) --------------------------------------------------------
int __usercall sub_45D2FE@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<ebx>)
{
	int v3; // eax@1
	int v4; // edx@2
	int result; // eax@2
	int v6; // eax@3
	int v7; // edx@3

	v3 = *(_BYTE *)a3;
	if (v3 & 0xC0)
	{
		v6 = *(_WORD *)(a3 + 1);
		LOWORD_HEXRAYS(a1) = *(_WORD *)(dword_476FE0 + 2 * v6);
		v7 = __ROL4__(a1, 16);
		LOWORD_HEXRAYS(v7) = *(_WORD *)(dword_476FE0 + 2 * v6);
		result = ((int(*)(int, int))off_476FE4[*(_BYTE *)a3])(a2, v7);
	}
	else
	{
		LOWORD_HEXRAYS(a1) = *(_WORD *)(dword_476FE0 + 2 * *(_WORD *)(a3 + 3));
		v4 = __ROL4__(a1, 16);
		LOWORD_HEXRAYS(v4) = *(_WORD *)(dword_476FE0 + 2 * *(_WORD *)(a3 + 1));
		result = ((int(*)(int, int))off_476FE4[v3])(a2, v4);
	}
	return result;
}
// 476DD8: using guessed type int dword_476DD8;
// 476FE0: using guessed type int dword_476FE0;
// 476FE4: using guessed type int (*off_476FE4[196])();

//----- (0045D35B) --------------------------------------------------------
int __usercall sub_45D35B@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<ebx>)
{
	int v3; // eax@1
	int v4; // edx@2
	int result; // eax@2
	int v6; // eax@3
	int v7; // edx@3

	v3 = *(_BYTE *)a3;
	if (v3 & 0xC0)
	{
		v6 = *(_BYTE *)(a3 + 1);
		LOWORD_HEXRAYS(a1) = word_476DE0[v6];
		v7 = __ROL4__(a1, 16);
		LOWORD_HEXRAYS(v7) = word_476DE0[v6];
		result = ((int(*)(int, int))off_476FE4[*(_BYTE *)a3])(a2, v7);
	}
	else
	{
		LOWORD_HEXRAYS(a1) = word_476DE0[*(_BYTE *)(a3 + 2)];
		v4 = __ROL4__(a1, 16);
		LOWORD_HEXRAYS(v4) = word_476DE0[*(_BYTE *)(a3 + 1)];
		result = ((int(*)(int, int))off_476FE4[v3])(a2, v4);
	}
	return result;
}
// 476DD8: using guessed type int dword_476DD8;
// 476DE0: using guessed type __int16 word_476DE0[];
// 476FE4: using guessed type int (*off_476FE4[196])();

//----- (0045D3B8) --------------------------------------------------------
_BYTE *sub_45D3B8(unsigned __int16 a1, __int16 a2, _BYTE *a3, int a4, int a5, int a6, int a7, int a8, int a9)
{
	int v9; // esi@6
	_BYTE *v10; // ebx@6
	int v11; // eax@6
	int v12; // ecx@6
	int v13; // eax@8
	int v14; // ST0C_4@8
	int v15; // eax@8
	int v16; // eax@8
	int v17; // esi@8
	int v18; // eax@8
	int v19; // ecx@8
	int v21; // [sp+10h] [bp-8h]@6
	__int16 v22; // [sp+16h] [bp-2h]@7

	if (a9 == 1)
	{
		off_4772E8[0] = (int(*)())&loc_45D1A4;
		off_4772EC[0] = (int(*)())sub_45D2A4;
		off_4772F0 = (int(*)())sub_45D35B;
	}
	else if (a9 == 2)
	{
		off_4772E8[0] = (int(*)())&loc_45D19B;
		off_4772EC[0] = (int(*)())sub_45D288;
		off_4772F0 = (int(*)())sub_45D2FE;
	}
	else
	{
		off_4772E8[0] = (int(*)())sub_45D147;
		off_4772EC[0] = (int(*)())sub_45D25B;
		off_4772F0 = (int(*)())sub_45D2C1;
	}
	dword_476DDC = a8;
	dword_476DD8 = 2 * a6 + a5 - a4;
	v9 = a4;
	v10 = a3;
	v11 = a1;
	LOWORD_HEXRAYS(v11) = 24 * a1;
	v21 = v11;
	v12 = 2 * a7;
	do
	{
		v22 = a1 >> 2;
		do
		{
			v13 = *v10;
			v14 = v13;
			++v10;
			LOBYTE_HEXRAYS(v13) = (unsigned __int8)(v13 & 0xC0) >> 4;
			(*(void(__thiscall **)(int))((char *)off_4772E4 + v13))(v12);
			v15 = v14;
			LOBYTE_HEXRAYS(v15) = (unsigned __int8)(v14 & 0x30) >> 2;
			(*(int(**)())((char *)off_4772E4 + v15))();
			v16 = v14;
			LOBYTE_HEXRAYS(v16) = v14 & 0xC;
			(*(int(**)())((char *)off_4772E4 + v16))();
			v17 = v9 + 24;
			v18 = v14;
			LOBYTE_HEXRAYS(v18) = v14 & 3;
			((void (__usercall *)(int@<ecx>, int@<esi>))off_4772E4[v18])(v19, v17);
			v9 = v17 + 8;
			--v22;
		} while (v22);
		v9 += v21;
		--a2;
	} while (a2);
	return v10;
}
// 476DD8: using guessed type int dword_476DD8;
// 476DDC: using guessed type int dword_476DDC;
// 4772E4: using guessed type int (*off_4772E4[4])();
// 4772E8: using guessed type int (*off_4772E8[3])();
// 4772EC: using guessed type int (*off_4772EC[2])();
// 4772F0: using guessed type int (*off_4772F0)();

//----- (0045D4D0) --------------------------------------------------------
__int16 __usercall sub_45D4D0@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a3 + a4 + 4) = v5;
	*(_DWORD *)(a3 + a4) = a2;
	v6 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	*(_DWORD *)(a4 + 2 * a3) = a2;
	v7 = a3 + a4;
	v8 = __ROR4__(a2, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045D511) --------------------------------------------------------
int __usercall sub_45D511@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(result) = v5;
	*(_DWORD *)(v6 + 2 * a3 + 4) = result;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045D55A) --------------------------------------------------------
__int16 __usercall sub_45D55A@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	v5 = a2 + a3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(v5 + 2 * a2 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v6 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	return v6;
}

//----- (0045D5CB) --------------------------------------------------------
int __usercall sub_45D5CB@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edx@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	v5 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(a2);
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(result) = v6;
	*(_DWORD *)(v5 + 2 * a3 + 4) = result;
	*(_DWORD *)(v5 + 2 * a3) = result;
	return result;
}

//----- (0045D612) --------------------------------------------------------
__int16 __usercall sub_45D612@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	*(_DWORD *)(a3 + 4) = a1;
	v3 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = a1;
	*(_DWORD *)a3 = v3;
	*(_DWORD *)(a2 + a3 + 4) = a1;
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a3) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = a1;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	v6 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = a1;
	v7 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	return v7;
}

//----- (0045D65F) --------------------------------------------------------
__int16 __usercall sub_45D65F@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	v5 = a2 + a3;
	LOWORD_HEXRAYS(v3) = v4;
	v6 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045D6A6) --------------------------------------------------------
int __usercall sub_45D6A6@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)a4 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v5;
	v6 = __ROL4__(a2, 16);
	*(_DWORD *)(a3 + a4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	v7 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3) = v7;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	result = __ROL4__(a2, 16);
	*(_DWORD *)(v8 + 2 * a3) = result;
	return result;
}

//----- (0045D6FF) --------------------------------------------------------
int __usercall sub_45D6FF@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int result; // eax@1

	*(_DWORD *)(a3 + 4) = a1;
	v3 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = a1;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	*(_DWORD *)(a3 + 2 * a2) = v4;
	v5 = a2 + a3;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(result) = v4;
	*(_DWORD *)(v5 + 2 * a2 + 4) = result;
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (0045D757) --------------------------------------------------------
__int16 __usercall sub_45D757@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	*(_DWORD *)(a2 + a3) = v4;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	v5 = a2 + a3;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v4;
	v6 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	return v6;
}

//----- (0045D7AF) --------------------------------------------------------
int __usercall sub_45D7AF@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int result; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	v5 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3) = v5;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2) = v5;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v5;
	result = __ROL4__(v4, 16);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (0045D80D) --------------------------------------------------------
int __usercall sub_45D80D@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // edx@1
	int v7; // eax@1
	int v8; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)a4 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(a2);
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a3 + a4) = v5;
	v7 = __ROL4__(v6, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v7;
	HIWORD_HEXRAYS(v7) = HIWORD_HEXRAYS(v6);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v7) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a4 + 2 * a3) = v7;
	v8 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v6);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(result) = v6;
	*(_DWORD *)(v8 + 2 * a3 + 4) = result;
	*(_DWORD *)(v8 + 2 * a3) = result;
	return result;
}

//----- (0045D86B) --------------------------------------------------------
__int16 __usercall sub_45D86B@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edx@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	*(_DWORD *)(a4 + 2 * a3 + 4) = a2;
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(a2);
	v7 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = v7;
	v7 = __ROL4__(v7, 16);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = v7;
	v8 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v8) = v7;
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}

//----- (0045D8BD) --------------------------------------------------------
__int16 __usercall sub_45D8BD@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	*(_DWORD *)(a2 + a3 + 4) = v4;
	v5 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a2 + a3) = v5;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v5) = v4;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = v4;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (0045D90F) --------------------------------------------------------
__int16 __usercall sub_45D90F@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4) = v6;
	LOWORD_HEXRAYS(v6) = v5;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v6;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v6) = v5;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = v5;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045D964) --------------------------------------------------------
int __usercall sub_45D964@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edx@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(a2);
	v7 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(result) = v7;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045D9B9) --------------------------------------------------------
__int16 __usercall sub_45D9B9@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	return v7;
}

//----- (0045DA14) --------------------------------------------------------
__int16 __usercall sub_45DA14@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	v5 = a2 + a3;
	LOWORD_HEXRAYS(v3) = v4;
	v6 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045DA6F) --------------------------------------------------------
__int16 __usercall sub_45DA6F@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045DACA) --------------------------------------------------------
int __usercall sub_45DACA@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(result) = v5;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045DB25) --------------------------------------------------------
__int16 __usercall sub_45DB25@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4 + 4) = v4;
	*(_DWORD *)(a3 + a4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045DB6E) --------------------------------------------------------
int __usercall sub_45DB6E@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int result; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = a1;
	v4 = __ROL4__(a1, 16);
	*(_DWORD *)(a2 + a3 + 4) = v4;
	*(_DWORD *)(a2 + a3) = a1;
	v5 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	*(_DWORD *)(a3 + 2 * a2) = a1;
	v6 = a2 + a3;
	v7 = __ROL4__(a1, 16);
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	result = a1;
	*(_DWORD *)(v6 + 2 * a2) = a1;
	return result;
}

//----- (0045DBAB) --------------------------------------------------------
__int16 __usercall sub_45DBAB@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4 + 4) = v4;
	*(_DWORD *)(a3 + a4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045DBF2) --------------------------------------------------------
__int16 __usercall sub_45DBF2@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045DC39) --------------------------------------------------------
int __usercall sub_45DC39@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	*(_DWORD *)a4 = a2;
	v5 = __ROR4__(a2, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v5;
	*(_DWORD *)(a3 + a4) = a2;
	v6 = __ROR4__(a2, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	*(_DWORD *)(a4 + 2 * a3) = a2;
	v7 = a3 + a4;
	v8 = __ROR4__(a2, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	result = a2;
	*(_DWORD *)(v7 + 2 * a3) = a2;
	return result;
}

//----- (0045DC86) --------------------------------------------------------
__int16 __usercall sub_45DC86@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int v8; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = a1;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = a1;
	*(_DWORD *)a3 = v3;
	v4 = __ROL4__(a1, 16);
	*(_DWORD *)(a2 + a3 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a3) = v4;
	v5 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	v6 = a2 + a3;
	v7 = __ROL4__(a1, 16);
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a1;
	v8 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v8) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v8;
	return v8;
}

//----- (0045DCDF) --------------------------------------------------------
int __usercall sub_45DCDF@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edx@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = a2;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(a2);
	v7 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(result) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = result;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045DD24) --------------------------------------------------------
__int16 __usercall sub_45DD24@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a3 + 4) = a1;
	v3 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = a1;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	v5 = a2 + a3;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v4;
	v6 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	return v6;
}

//----- (0045DD83) --------------------------------------------------------
__int16 __usercall sub_45DD83@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	v5 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v5;
	*(_DWORD *)(a2 + a3) = v4;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v6;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v6;
	v7 = a2 + a3;
	LOWORD_HEXRAYS(v6) = v4;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = v4;
	*(_DWORD *)(v7 + 2 * a2) = v8;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v8;
	return v8;
}

//----- (0045DDC8) --------------------------------------------------------
int __usercall sub_45DDC8@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // edx@1
	int v7; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)a4 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(a2);
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a3 + a4) = v5;
	LOWORD_HEXRAYS(v5) = v6;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v6;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(v6);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v5) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v5) = v6;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v6;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v5;
	result = __ROL4__(v6, 16);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045DE2D) --------------------------------------------------------
int __usercall sub_45DE2D@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	*(_DWORD *)(a2 + a3 + 4) = v4;
	v5 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a2 + a3) = v5;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	v6 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2) = v6;
	v7 = a2 + a3;
	LOWORD_HEXRAYS(v6) = v4;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v6;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(result) = v4;
	*(_DWORD *)(v7 + 2 * a2) = result;
	return result;
}

//----- (0045DE8F) --------------------------------------------------------
__int16 __usercall sub_45DE8F@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4) = v6;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v7;
	v8 = a3 + a4;
	HIWORD_HEXRAYS(v7) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = v5;
	v9 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v9) = v5;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	return v9;
}

//----- (0045DEF1) --------------------------------------------------------
int __usercall sub_45DEF1@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int result; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2) = v3;
	v5 = a2 + a3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v3;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(result) = v4;
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (0045DF62) --------------------------------------------------------
int __usercall sub_45DF62@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = a2;
	v6 = a3 + a4;
	v7 = __ROL4__(a2, 16);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	result = a2;
	*(_DWORD *)(v6 + 2 * a3) = a2;
	return result;
}

//----- (0045DFA3) --------------------------------------------------------
__int16 __usercall sub_45DFA3@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045DFFE) --------------------------------------------------------
__int16 __usercall sub_45DFFE@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = a1;
	v4 = __ROL4__(a1, 16);
	*(_DWORD *)(a2 + a3 + 4) = v4;
	*(_DWORD *)(a2 + a3) = a1;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (0045E03F) --------------------------------------------------------
__int16 __usercall sub_45E03F@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045E09A) --------------------------------------------------------
int __usercall sub_45E09A@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edx@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	*(_DWORD *)(a4 + 2 * a3 + 4) = a2;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(a2);
	v7 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(result) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = result;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045E0DF) --------------------------------------------------------
__int16 __usercall sub_45E0DF@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	*(_DWORD *)(a2 + a3 + 4) = v4;
	v5 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a2 + a3) = v5;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v4;
	v6 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v6;
	v7 = a2 + a3;
	HIWORD_HEXRAYS(v6) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = v4;
	v8 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v8) = v4;
	*(_DWORD *)(v7 + 2 * a2) = v8;
	return v8;
}

//----- (0045E13E) --------------------------------------------------------
__int16 __usercall sub_45E13E@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	*(_DWORD *)(a2 + a3 + 4) = v4;
	v5 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3) = v5;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v5) = v4;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = v4;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (0045E183) --------------------------------------------------------
int __usercall sub_45E183@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4) = v6;
	LOWORD_HEXRAYS(v6) = v5;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v5;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	v7 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3) = v7;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v7) = v5;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(result) = v5;
	*(_DWORD *)(v8 + 2 * a3) = result;
	return result;
}

//----- (0045E1E8) --------------------------------------------------------
int __usercall sub_45E1E8@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	v5 = a3 + a4;
	v6 = __ROL4__(a2, 16);
	*(_DWORD *)(v5 + 2 * a3 + 4) = v6;
	result = a2;
	*(_DWORD *)(v5 + 2 * a3) = a2;
	return result;
}

//----- (0045E22B) --------------------------------------------------------
__int16 __usercall sub_45E22B@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = a2;
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4) = v5;
	*(_DWORD *)(a4 + 2 * a3 + 4) = a2;
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a4 + 2 * a3) = v6;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045E274) --------------------------------------------------------
__int16 __usercall sub_45E274@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = a1;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a3) = v4;
	*(_DWORD *)(a2 + a3 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a3 + 2 * a2) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v4;
	v5 = a2 + a3;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045E2B7) --------------------------------------------------------
__int16 __usercall sub_45E2B7@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a3 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	v6 = __ROL4__(a2, 16);
	*(_DWORD *)(a4 + 2 * a3) = v6;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045E306) --------------------------------------------------------
__int16 __usercall sub_45E306@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int v7; // eax@1

	*(_DWORD *)(a3 + 4) = a1;
	v3 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = a1;
	*(_DWORD *)a3 = v3;
	*(_DWORD *)(a2 + a3 + 4) = a1;
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a3) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a1);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + 2 * a2) = v4;
	v6 = a2 + a3;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(v6 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v7 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v5;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	return v7;
}

//----- (0045E365) --------------------------------------------------------
int __usercall sub_45E365@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(result) = v5;
	*(_DWORD *)(v6 + 2 * a3 + 4) = result;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045E3B7) --------------------------------------------------------
__int16 __usercall sub_45E3B7@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	v5 = a2 + a3;
	LOWORD_HEXRAYS(v3) = v4;
	v6 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045E409) --------------------------------------------------------
__int16 __usercall sub_45E409@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v4;
	v5 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	v6 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v4;
	v7 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v4;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	return v7;
}

//----- (0045E468) --------------------------------------------------------
__int16 __usercall sub_45E468@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3 + 4) = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	v5 = a2 + a3;
	LOWORD_HEXRAYS(v3) = v4;
	v6 = __ROR4__(v3, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045E4BA) --------------------------------------------------------
int __usercall sub_45E4BA@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3) = v6;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v6) = v5;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v5;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	result = __ROL4__(v5, 16);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045E51F) --------------------------------------------------------
int __usercall sub_45E51F@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // edx@1
	int v8; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)a4 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v5;
	v6 = __ROL4__(a2, 16);
	*(_DWORD *)(a3 + a4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	HIWORD_HEXRAYS(v6) = HIWORD_HEXRAYS(a2);
	v7 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v6) = v7;
	v7 = __ROL4__(v7, 16);
	*(_DWORD *)(a4 + 2 * a3) = v6;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v6) = v7;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v7;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v6;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v7);
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(result) = v7;
	*(_DWORD *)(v8 + 2 * a3) = result;
	return result;
}

//----- (0045E584) --------------------------------------------------------
int __usercall sub_45E584@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3) = v4;
	v6 = a3 + a4;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(result) = v5;
	*(_DWORD *)(v6 + 2 * a3 + 4) = result;
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045E5D6) --------------------------------------------------------
int __usercall sub_45E5D6@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // esi@1
	int v6; // eax@1
	int result; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = a1;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	*(_DWORD *)(a2 + a3) = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v3;
	*(_DWORD *)(a3 + 2 * a2) = v3;
	v5 = a2 + a3;
	v6 = __ROL4__(v4, 16);
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	result = v4;
	*(_DWORD *)(v5 + 2 * a2) = v4;
	return result;
}

//----- (0045E61B) --------------------------------------------------------
__int16 __usercall sub_45E61B@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + a4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v7 = a3 + a4;
	v8 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v8) = v5;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045E669) --------------------------------------------------------
__int16 __usercall sub_45E669@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = a1;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v4;
	v5 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2) = v5;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v5) = v4;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = v4;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (0045E6B9) --------------------------------------------------------
__int16 __usercall sub_45E6B9@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a2);
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)a4 = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + a4 + 4) = v6;
	*(_DWORD *)(a3 + a4) = v5;
	HIWORD_HEXRAYS(v6) = HIWORD_HEXRAYS(v5);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v6) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = v5;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v5;
	*(_DWORD *)(a4 + 2 * a3) = v6;
	v7 = a3 + a4;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v5;
	v8 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v8) = v5;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	return v8;
}

//----- (0045E714) --------------------------------------------------------
__int16 __usercall sub_45E714@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // edx@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)a4 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(a2);
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a3 + a4) = v5;
	v7 = __ROL4__(v6, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v7;
	*(_DWORD *)(a4 + 2 * a3) = v6;
	v8 = a3 + a4;
	HIWORD_HEXRAYS(v7) = HIWORD_HEXRAYS(v6);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v7) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = v6;
	v9 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v9) = v6;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	return v9;
}

//----- (0045E772) --------------------------------------------------------
int __usercall sub_45E772@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // edx@1
	int v7; // esi@1
	int v8; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a2;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)(a3 + a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a3 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(a2);
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v7 = a3 + a4;
	v8 = __ROL4__(v6, 16);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	result = v6;
	*(_DWORD *)(v7 + 2 * a3) = v6;
	return result;
}

//----- (0045E7C5) --------------------------------------------------------
__int16 __usercall sub_45E7C5@<ax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edx@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	v5 = __ROL4__(a2, 16);
	*(_DWORD *)(a3 + a4 + 4) = v5;
	*(_DWORD *)(a3 + a4) = a2;
	v6 = __ROR4__(a2, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a4 + 2 * a3) = v6;
	*(_DWORD *)(a4 + 2 * a3 + 4) = v6;
	v7 = a3 + a4;
	HIWORD_HEXRAYS(v6) = HIWORD_HEXRAYS(a2);
	v8 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v6) = v8;
	v8 = __ROL4__(v8, 16);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = v8;
	v9 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v9) = v8;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045E813) --------------------------------------------------------
__int16 __usercall sub_45E813@<ax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // eax@1
	int v5; // edx@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	v3 = __ROL4__(a1, 16);
	*(_DWORD *)(a3 + 4) = v3;
	*(_DWORD *)a3 = a1;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a3 + 4) = v4;
	HIWORD_HEXRAYS(v4) = HIWORD_HEXRAYS(a1);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v4) = v5;
	v5 = __ROL4__(v5, 16);
	*(_DWORD *)(a2 + a3) = v4;
	LOWORD_HEXRAYS(v4) = v5;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = v5;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v4;
	v6 = __ROL4__(v5, 16);
	*(_DWORD *)(a3 + 2 * a2) = v6;
	v7 = a2 + a3;
	LOWORD_HEXRAYS(v6) = v5;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = v5;
	*(_DWORD *)(v7 + 2 * a2) = v8;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v8;
	return v8;
}

//----- (0045E866) --------------------------------------------------------
int __usercall sub_45E866@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	v5 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v5;
	*(_DWORD *)(a2 + a3) = v4;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v6;
	HIWORD_HEXRAYS(v6) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v6) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2) = v6;
	v7 = a2 + a3;
	LOWORD_HEXRAYS(v6) = v4;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = v4;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v6;
	result = __ROL4__(v4, 16);
	*(_DWORD *)(v7 + 2 * a2) = result;
	return result;
}

//----- (0045E8C4) --------------------------------------------------------
int __usercall sub_45E8C4@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int result; // eax@1

	*(_DWORD *)(a3 + 4) = a1;
	v3 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = a1;
	*(_DWORD *)a3 = v3;
	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)(a2 + a3) = v3;
	v5 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	*(_DWORD *)(a3 + 2 * a2) = v4;
	v6 = a2 + a3;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v4;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(result) = v4;
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (0045E91F) --------------------------------------------------------
int __usercall sub_45E91F@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // edx@1
	int v7; // esi@1
	int v8; // eax@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v4 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v4) = a2;
	*(_DWORD *)a4 = v4;
	*(_DWORD *)(a4 + 4) = v4;
	*(_DWORD *)(a3 + a4 + 4) = a2;
	v5 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a4) = v5;
	HIWORD_HEXRAYS(v5) = HIWORD_HEXRAYS(a2);
	v6 = __ROL4__(a2, 16);
	LOWORD_HEXRAYS(v5) = v6;
	v6 = __ROL4__(v6, 16);
	*(_DWORD *)(a4 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = v6;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v6;
	*(_DWORD *)(a4 + 2 * a3) = v5;
	v7 = a3 + a4;
	v8 = __ROL4__(v6, 16);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	result = v6;
	*(_DWORD *)(v7 + 2 * a3) = v6;
	return result;
}

//----- (0045E96F) --------------------------------------------------------
int __usercall sub_45E96F@<eax>(int a1@<edx>, int a2@<ecx>, int a3@<esi>)
{
	int v3; // eax@1
	int v4; // edx@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int result; // eax@1

	HIWORD_HEXRAYS(v3) = HIWORD_HEXRAYS(a1);
	v4 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v3) = v4;
	v4 = __ROL4__(v4, 16);
	*(_DWORD *)(a3 + 4) = v3;
	LOWORD_HEXRAYS(v3) = v4;
	v3 = __ROL4__(v3, 16);
	LOWORD_HEXRAYS(v3) = v4;
	*(_DWORD *)a3 = v3;
	v5 = __ROL4__(v4, 16);
	*(_DWORD *)(a2 + a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a2 + a3) = v5;
	LOWORD_HEXRAYS(v5) = v4;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = v4;
	*(_DWORD *)(a3 + 2 * a2 + 4) = v5;
	*(_DWORD *)(a3 + 2 * a2) = v4;
	v6 = a2 + a3;
	v7 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v7) = v4;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	HIWORD_HEXRAYS(result) = HIWORD_HEXRAYS(v4);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(result) = v4;
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (0045E9D1) --------------------------------------------------------
__int16 __usercall sub_45E9D1@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045EA30) --------------------------------------------------------
int __usercall sub_45EA30@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045EA71) --------------------------------------------------------
__int16 __usercall sub_45EA71@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = *(_DWORD *)(a2 + a3 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a1;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a1;
	*(_DWORD *)(v7 + 2 * a2) = v9;
	return v9;
}

//----- (0045EAC5) --------------------------------------------------------
int __usercall sub_45EAC5@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045EB08) --------------------------------------------------------
__int16 __usercall sub_45EB08@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	return v7;
}

//----- (0045EB78) --------------------------------------------------------
__int16 __usercall sub_45EB78@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045EBB9) --------------------------------------------------------
__int16 __usercall sub_45EBB9@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v6 + 2 * a3) = v7;
	return v7;
}

//----- (0045EC25) --------------------------------------------------------
int __usercall sub_45EC25@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	v7 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a4 + 2 * a3 + 2);
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	v9 = a3 + a4;
	*(_DWORD *)(v8 + 2 * a3 + 4) = *(_DWORD *)(v9 + 2 * a3 + 4);
	result = *(_DWORD *)(v9 + 2 * a3);
	*(_DWORD *)(v8 + 2 * a3) = result;
	return result;
}

//----- (0045EC7C) --------------------------------------------------------
__int16 __usercall sub_45EC7C@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2 * a2 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	return v7;
}

//----- (0045ECD2) --------------------------------------------------------
__int16 __usercall sub_45ECD2@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	v5 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v8 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v7 + 2 * a2) = v8;
	return v8;
}

//----- (0045ED25) --------------------------------------------------------
int __usercall sub_45ED25@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	char *v8; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)&a4[2 * a3];
	v7 = a3 + a5;
	v8 = &a4[a3];
	*(_DWORD *)(v7 + 2 * a3 + 4) = *(_DWORD *)&v8[2 * a3 + 4];
	result = *(_DWORD *)&v8[2 * a3];
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045ED79) --------------------------------------------------------
__int16 __usercall sub_45ED79@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	v7 = *(_DWORD *)(a3 + a4 + 2 * a3 + 4);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v8 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}

//----- (0045EDCD) --------------------------------------------------------
__int16 __usercall sub_45EDCD@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045EE20) --------------------------------------------------------
__int16 __usercall sub_45EE20@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045EE71) --------------------------------------------------------
int __usercall sub_45EE71@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045EEC3) --------------------------------------------------------
__int16 __usercall sub_45EEC3@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = *(_DWORD *)(a3 + a4 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a2;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045EF10) --------------------------------------------------------
__int16 __usercall sub_45EF10@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (0045EF5C) --------------------------------------------------------
__int16 __usercall sub_45EF5C@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v9;
	return v9;
}

//----- (0045EFA6) --------------------------------------------------------
int __usercall sub_45EFA6@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045EFF1) --------------------------------------------------------
__int16 __usercall sub_45EFF1@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	*(_DWORD *)(a3 + a5 + 4) = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5) = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045F032) --------------------------------------------------------
__int16 __usercall sub_45F032@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(v7 + 2 * a3 + 4);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(v7 + 2 * a3 + 2);
	v8 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}

//----- (0045F0A9) --------------------------------------------------------
__int16 __usercall sub_45F0A9@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	*(_DWORD *)(a3 + a5 + 4) = *(_DWORD *)(a3 + a4 + 4);
	v6 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045F0EC) --------------------------------------------------------
__int16 __usercall sub_45F0EC@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045F12F) --------------------------------------------------------
__int16 __usercall sub_45F12F@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 2);
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	return v7;
}

//----- (0045F19F) --------------------------------------------------------
__int16 __usercall sub_45F19F@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2 * a3 + 4);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	return v7;
}

//----- (0045F20F) --------------------------------------------------------
int __usercall sub_45F20F@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045F25F) --------------------------------------------------------
__int16 __usercall sub_45F25F@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	v7 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a3 + a4 + 2 * a3 + 6);
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	return v9;
}

//----- (0045F2C1) --------------------------------------------------------
__int16 __usercall sub_45F2C1@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045F30F) --------------------------------------------------------
__int16 __usercall sub_45F30F@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	v7 = *(_DWORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v9) = *(_WORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v8 + 2 * a3) = v9;
	return v9;
}

//----- (0045F36D) --------------------------------------------------------
int __usercall sub_45F36D@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int result; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v4;
	result = *(_DWORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (0045F3CD) --------------------------------------------------------
__int16 __usercall sub_45F3CD@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[2 * a3 + 6];
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = *(_DWORD *)(&a4[2 * a3 + 4] + a3);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a2;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045F42D) --------------------------------------------------------
int __usercall sub_45F42D@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v6;
	result = *(_DWORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v7 + 2 * a2) = result;
	return result;
}

//----- (0045F47F) --------------------------------------------------------
__int16 __usercall sub_45F47F@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(v7 + 2 * a3 + 4);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(v7 + 2 * a3 + 2);
	v8 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}

//----- (0045F4DE) --------------------------------------------------------
__int16 __usercall sub_45F4DE@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	v7 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v9;
	return v9;
}

//----- (0045F52B) --------------------------------------------------------
__int16 __usercall sub_45F52B@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045F588) --------------------------------------------------------
__int16 __usercall sub_45F588@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	v7 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v9;
	return v9;
}

//----- (0045F5D3) --------------------------------------------------------
int __usercall sub_45F5D3@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045F622) --------------------------------------------------------
__int16 __usercall sub_45F622@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1
	int v7; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	v6 = *(_DWORD *)(a2 + a3 + 2 * a2 + 4);
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v7 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v7;
	return v7;
}

//----- (0045F684) --------------------------------------------------------
__int16 __usercall sub_45F684@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045F6D1) --------------------------------------------------------
int __usercall sub_45F6D1@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045F781) --------------------------------------------------------
__int16 __usercall sub_45F781@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045F7DC) --------------------------------------------------------
__int16 __usercall sub_45F7DC@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045F82C) --------------------------------------------------------
__int16 __usercall sub_45F82C@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	LOWORD_HEXRAYS(v5) = a2;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v7;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	return v7;
}

//----- (0045F885) --------------------------------------------------------
__int16 __usercall sub_45F885@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = *(_DWORD *)(a3 + a4 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a2;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045F8E7) --------------------------------------------------------
int __usercall sub_45F8E7@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = a3 + a4;
	*(_DWORD *)(v7 + 2 * a3 + 4) = *(_DWORD *)(v8 + 2 * a3 + 4);
	result = *(_DWORD *)(v8 + 2 * a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045F92E) --------------------------------------------------------
__int16 __usercall sub_45F92E@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0045F973) --------------------------------------------------------
__int16 __usercall sub_45F973@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + 2 * a2 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2 * a2 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	return v7;
}

//----- (0045F9D5) --------------------------------------------------------
__int16 __usercall sub_45F9D5@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	v5 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (0045FA19) --------------------------------------------------------
__int16 __usercall sub_45FA19@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v9) = *(_WORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v8 + 2 * a3) = v9;
	return v9;
}

//----- (0045FA77) --------------------------------------------------------
int __usercall sub_45FA77@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = *(_DWORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045FAD5) --------------------------------------------------------
int __usercall sub_45FAD5@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0045FB1B) --------------------------------------------------------
__int16 __usercall sub_45FB1B@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a3 + a5 + 4) = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5) = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 2);
	v9 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045FB74) --------------------------------------------------------
__int16 __usercall sub_45FB74@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, _DWORD *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *a4;
	*(_DWORD *)a5 = *a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *((_WORD *)a4 + a3 + 2);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *((_WORD *)a4 + a3 + 1);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045FBC8) --------------------------------------------------------
__int16 __usercall sub_45FBC8@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a4 + 2 * a3 + 6);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045FC27) --------------------------------------------------------
__int16 __usercall sub_45FC27@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3 + 4];
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3 + 2];
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	v7 = *(_DWORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(&a4[2 * a3 + 6] + a3);
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	return v9;
}

//----- (0045FC8A) --------------------------------------------------------
__int16 __usercall sub_45FC8A@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[2 * a3 + 2];
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = *(_DWORD *)(&a4[2 * a3 + 4] + a3);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a2;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045FCEC) --------------------------------------------------------
__int16 __usercall sub_45FCEC@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 2);
	v9 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045FD4B) --------------------------------------------------------
__int16 __usercall sub_45FD4B@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = a3 + a5;
	v7 = *(_DWORD *)(a3 + a4 + 2 * a3 + 4);
	*(_DWORD *)(v6 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v8 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}

//----- (0045FDA1) --------------------------------------------------------
__int16 __usercall sub_45FDA1@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	v6 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v8 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v8;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v8;
	return v8;
}

//----- (0045FDFE) --------------------------------------------------------
__int16 __usercall sub_45FDFE@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = v7;
	return v7;
}

//----- (0045FE60) --------------------------------------------------------
int __usercall sub_45FE60@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	v6 = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a4 + 2 * a3 + 2);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (0045FEC3) --------------------------------------------------------
__int16 __usercall sub_45FEC3@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 2);
	v9 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v9;
	return v9;
}

//----- (0045FF24) --------------------------------------------------------
int __usercall sub_45FF24@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int result; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v4;
	result = *(_DWORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (0045FF85) --------------------------------------------------------
int __usercall sub_45FF85@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	v6 = a2 + a3;
	*(_DWORD *)(v5 + 2 * a2 + 4) = *(_DWORD *)(v6 + 2 * a2 + 4);
	result = *(_DWORD *)(v6 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (0045FFDC) --------------------------------------------------------
__int16 __usercall sub_45FFDC@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (0046001B) --------------------------------------------------------
int __usercall sub_46001B@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	LOWORD_HEXRAYS(v8) = a2;
	v8 = __ROR4__(v8, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (0046006B) --------------------------------------------------------
__int16 __usercall sub_46006B@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4) = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a4 + 2 * a2 + 4) = *(_DWORD *)(a3 + 2 * a2 + 4);
	v4 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (004600A8) --------------------------------------------------------
int __usercall sub_4600A8@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	int v10; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	v10 = a3 + a4;
	LOWORD_HEXRAYS(v8) = a2;
	v8 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(v10 + 2 * a3 + 4);
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)(v10 + 2 * a3);
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (004600FF) --------------------------------------------------------
int __usercall sub_4600FF@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	*(_DWORD *)(a3 + a5 + 4) = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5) = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (0046013E) --------------------------------------------------------
__int16 __usercall sub_46013E@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1
	int v10; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + 2 * a2 + 2);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = a2 + a3;
	v9 = *(_DWORD *)(v8 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v9;
	LOWORD_HEXRAYS(v9) = *(_WORD *)(v8 + 2 * a2 + 2);
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = a1;
	*(_DWORD *)(v7 + 2 * a2) = v10;
	return v10;
}

//----- (00460199) --------------------------------------------------------
__int16 __usercall sub_460199@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	LOWORD_HEXRAYS(v7) = a2;
	v9 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v9) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v9;
	*(_DWORD *)(v8 + 2 * a3 + 4) = v9;
	return v9;
}

//----- (004601EE) --------------------------------------------------------
int __usercall sub_4601EE@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = a3 + a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(v8 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v6;
	result = *(_DWORD *)(v8 + 2 * a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (00460245) --------------------------------------------------------
__int16 __usercall sub_460245@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1
	int v10; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	v6 = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v6;
	v7 = a3 + a5;
	v8 = a3 + a4;
	v9 = *(_DWORD *)(v8 + 2 * a3 + 4);
	*(_DWORD *)(v7 + 2 * a3 + 4) = v9;
	LOWORD_HEXRAYS(v9) = *(_WORD *)(v8 + 2 * a3 + 2);
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = a2;
	*(_DWORD *)(v7 + 2 * a3) = v10;
	return v10;
}

//----- (0046029F) --------------------------------------------------------
__int16 __usercall sub_46029F@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + 2 * a2 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (004602F7) --------------------------------------------------------
int __usercall sub_4602F7@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v5;
	result = *(_DWORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (0046033E) --------------------------------------------------------
int __usercall sub_46033E@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	char *v8; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3 + 4];
	*(_DWORD *)(a3 + a5 + 4) = v6;
	*(_DWORD *)(a3 + a5) = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)&a4[2 * a3];
	v7 = a3 + a5;
	v8 = &a4[a3];
	*(_DWORD *)(v7 + 2 * a3 + 4) = *(_DWORD *)&v8[2 * a3 + 4];
	result = *(_DWORD *)&v8[2 * a3];
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (00460386) --------------------------------------------------------
int __usercall sub_460386@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	*(_DWORD *)(a4 + 2 * a2 + 4) = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2) = *(_DWORD *)(a3 + 2 * a2);
	v6 = a2 + a4;
	v7 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = *(_DWORD *)(v7 + 2 * a2 + 4);
	result = *(_DWORD *)(v7 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (004603D0) --------------------------------------------------------
__int16 __usercall sub_4603D0@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4) = *(_DWORD *)(a2 + a3);
	v4 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	v6 = *(_DWORD *)(a2 + a3 + 2 * a2 + 4);
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v7 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v7;
	return v7;
}

//----- (00460419) --------------------------------------------------------
int __usercall sub_460419@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v5;
	result = *(_DWORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (0046045E) --------------------------------------------------------
int __usercall sub_46045E@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	char *v8; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	*(_DWORD *)(a3 + a5) = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)&a4[2 * a3];
	v7 = a3 + a5;
	v8 = &a4[a3];
	*(_DWORD *)(v7 + 2 * a3 + 4) = *(_DWORD *)&v8[2 * a3 + 4];
	result = *(_DWORD *)&v8[2 * a3];
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (004604A4) --------------------------------------------------------
int __usercall sub_4604A4@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	*(_DWORD *)(a4 + 2 * a2 + 4) = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2) = *(_DWORD *)(a3 + 2 * a2);
	v6 = a2 + a4;
	v7 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = *(_DWORD *)(v7 + 2 * a2 + 4);
	result = *(_DWORD *)(v7 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (004604EC) --------------------------------------------------------
__int16 __usercall sub_4604EC@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4) = *(_DWORD *)(a2 + a3);
	v4 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	v6 = *(_DWORD *)(a2 + a3 + 2 * a2 + 4);
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v7 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v7;
	return v7;
}

//----- (00460533) --------------------------------------------------------
int __usercall sub_460533@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	v6 = a2 + a3;
	*(_DWORD *)(v5 + 2 * a2 + 4) = *(_DWORD *)(v6 + 2 * a2 + 4);
	result = *(_DWORD *)(v6 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (00460572) --------------------------------------------------------
__int16 __usercall sub_460572@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(v7 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v8 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}

//----- (004605E5) --------------------------------------------------------
int __usercall sub_4605E5@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2) = *(_DWORD *)(a3 + 2 * a2);
	v5 = a2 + a4;
	v6 = a2 + a3;
	*(_DWORD *)(v5 + 2 * a2 + 4) = *(_DWORD *)(v6 + 2 * a2 + 4);
	result = *(_DWORD *)(v6 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (00460622) --------------------------------------------------------
int __usercall sub_460622@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = a2 + a4;
	v6 = a2 + a3;
	*(_DWORD *)(v5 + 2 * a2 + 4) = *(_DWORD *)(v6 + 2 * a2 + 4);
	result = *(_DWORD *)(v6 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = result;
	return result;
}

//----- (0046065F) --------------------------------------------------------
__int16 __usercall sub_46065F@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1
	int v10; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)a3;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = a2 + a3;
	v9 = *(_DWORD *)(v8 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v9;
	LOWORD_HEXRAYS(v9) = a1;
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = *(_WORD *)(v8 + 2 * a2);
	*(_DWORD *)(v7 + 2 * a2) = v10;
	return v10;
}

//----- (004606B6) --------------------------------------------------------
int __usercall sub_4606B6@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	int v10; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 6);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = *(_WORD *)(a4 + 2 * a3 + 6);
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	v10 = a3 + a4;
	LOWORD_HEXRAYS(v8) = *(_WORD *)(v10 + 2 * a3 + 6);
	v8 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)(v10 + 2 * a3);
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (0046070D) --------------------------------------------------------
__int16 __usercall sub_46070D@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (00460758) --------------------------------------------------------
int __usercall sub_460758@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	int v10; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	v10 = a3 + a4;
	LOWORD_HEXRAYS(v8) = a2;
	v8 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(v10 + 2 * a3 + 4);
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)(v10 + 2 * a3);
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (004607AB) --------------------------------------------------------
int __usercall sub_4607AB@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (004607F8) --------------------------------------------------------
__int16 __usercall sub_4607F8@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1
	int v10; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = a2 + a3;
	v9 = *(_DWORD *)(v8 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v9;
	LOWORD_HEXRAYS(v9) = *(_WORD *)(v8 + 2 * a2 + 2);
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = a1;
	*(_DWORD *)(v7 + 2 * a2) = v10;
	return v10;
}

//----- (0046084F) --------------------------------------------------------
__int16 __usercall sub_46084F@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1
	int v10; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3 + 4];
	*(_DWORD *)(a3 + a5 + 4) = v6;
	*(_DWORD *)(a3 + a5) = *(_DWORD *)&a4[a3];
	v7 = *(_DWORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = *(_WORD *)&a4[2 * a3 + 2];
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	v9 = *(_DWORD *)(&a4[2 * a3 + 4] + a3);
	*(_DWORD *)(v8 + 2 * a3 + 4) = v9;
	LOWORD_HEXRAYS(v9) = a2;
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v10;
	return v10;
}

//----- (004608A5) --------------------------------------------------------
int __usercall sub_4608A5@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int result; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v7 + 2 * a2 + 4) = v6;
	result = *(_DWORD *)(a2 + a3 + 2 * a2);
	*(_DWORD *)(v7 + 2 * a2) = result;
	return result;
}

//----- (004608FB) --------------------------------------------------------
__int16 __usercall sub_4608FB@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // esi@1
	int v9; // eax@1
	int v10; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	*(_DWORD *)(a3 + a5) = *(_DWORD *)&a4[a3];
	v7 = *(_DWORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v7;
	v8 = a3 + a5;
	v9 = *(_DWORD *)(&a4[2 * a3 + 4] + a3);
	*(_DWORD *)(v8 + 2 * a3 + 4) = v9;
	LOWORD_HEXRAYS(v9) = a2;
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = a2;
	*(_DWORD *)(v8 + 2 * a3) = v10;
	return v10;
}

//----- (0046094D) --------------------------------------------------------
__int16 __usercall sub_46094D@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edi@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(v6 + 2 * a2 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v7 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)(v6 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = v7;
	return v7;
}

//----- (004609A4) --------------------------------------------------------
int __usercall sub_4609A4@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4 + 4) = v4;
	v5 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	*(_DWORD *)(a4 + 2 * a2) = *(_DWORD *)(a3 + 2 * a2);
	v6 = a2 + a4;
	v7 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = *(_DWORD *)(v7 + 2 * a2 + 4);
	result = *(_DWORD *)(v7 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (004609E9) --------------------------------------------------------
int __usercall sub_4609E9@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (00460A40) --------------------------------------------------------
int __usercall sub_460A40@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	v7 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = *(_DWORD *)(v7 + 2 * a2 + 4);
	result = *(_DWORD *)(v7 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (00460A87) --------------------------------------------------------
__int16 __usercall sub_460A87@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2 * a2 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (00460AD3) --------------------------------------------------------
int __usercall sub_460AD3@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)&a4[a3 + 4];
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	LOWORD_HEXRAYS(v8) = a2;
	v8 = __ROR4__(v8, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)(&a4[2 * a3] + a3);
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (00460B27) --------------------------------------------------------
int __usercall sub_460B27@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + a4 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (00460B75) --------------------------------------------------------
__int16 __usercall sub_460B75@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + 2 * a2 + 2);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = *(_DWORD *)(a2 + a3 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a1;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a1;
	*(_DWORD *)(v7 + 2 * a2) = v9;
	return v9;
}

//----- (00460BCD) --------------------------------------------------------
__int16 __usercall sub_460BCD@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // edi@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4) = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a4 + 2 * a2 + 4) = *(_DWORD *)(a3 + 2 * a2 + 4);
	v4 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	v6 = a2 + a3;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(v6 + 2 * a2 + 6);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v7 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)(v6 + 2 * a2);
	*(_DWORD *)(v5 + 2 * a2) = v7;
	return v7;
}

//----- (00460C16) --------------------------------------------------------
int __usercall sub_460C16@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	v4 = *(_DWORD *)a3;
	*(_DWORD *)a4 = *(_DWORD *)a3;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	v5 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	*(_DWORD *)(a4 + 2 * a2) = *(_DWORD *)(a3 + 2 * a2);
	v6 = a2 + a4;
	v7 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = *(_DWORD *)(v7 + 2 * a2 + 4);
	result = *(_DWORD *)(v7 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (00460C5F) --------------------------------------------------------
int __usercall sub_460C5F@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a3 + a5 + 4) = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5) = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (00460CA8) --------------------------------------------------------
int __usercall sub_460CA8@<eax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	v4 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a2 + a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a2 + a4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a3 + 2 * a2 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	v7 = a2 + a3;
	*(_DWORD *)(v6 + 2 * a2 + 4) = *(_DWORD *)(v7 + 2 * a2 + 4);
	result = *(_DWORD *)(v7 + 2 * a2);
	*(_DWORD *)(v6 + 2 * a2) = result;
	return result;
}

//----- (00460CF3) --------------------------------------------------------
int __usercall sub_460CF3@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a4 + 4);
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROR4__(v7, 16);
	LOWORD_HEXRAYS(v7) = a2;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)(a4 + 2 * a3);
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	LOWORD_HEXRAYS(v8) = a2;
	v8 = __ROR4__(v8, 16);
	LOWORD_HEXRAYS(v8) = a2;
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)(a3 + a4 + 2 * a3);
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (00460D46) --------------------------------------------------------
__int16 __usercall sub_460D46@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // esi@1
	int v7; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	v4 = *(_DWORD *)(a2 + a3);
	*(_DWORD *)(a2 + a4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	v5 = *(_DWORD *)(a3 + 2 * a2);
	*(_DWORD *)(a4 + 2 * a2) = v5;
	v6 = a2 + a4;
	LOWORD_HEXRAYS(v5) = a1;
	v7 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v7) = a1;
	*(_DWORD *)(v6 + 2 * a2) = v7;
	*(_DWORD *)(v6 + 2 * a2 + 4) = v7;
	return v7;
}

//----- (00460D88) --------------------------------------------------------
int __usercall sub_460D88@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	*(_DWORD *)(a3 + a5) = *(_DWORD *)(a3 + a4);
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v6 = a3 + a5;
	v7 = a3 + a4;
	*(_DWORD *)(v6 + 2 * a3 + 4) = *(_DWORD *)(v7 + 2 * a3 + 4);
	result = *(_DWORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = result;
	return result;
}

//----- (00460DCC) --------------------------------------------------------
int __usercall sub_460DCC@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, char *a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // eax@1
	int v8; // eax@1
	int v9; // esi@1
	char *v10; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)a4;
	*(_DWORD *)a5 = *(_DWORD *)a4;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROR4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5 + 4) = v6;
	v7 = *(_DWORD *)&a4[a3];
	*(_DWORD *)(a3 + a5) = v7;
	LOWORD_HEXRAYS(v7) = a2;
	v7 = __ROL4__(v7, 16);
	LOWORD_HEXRAYS(v7) = *(_WORD *)&a4[2 * a3 + 4];
	*(_DWORD *)(a5 + 2 * a3 + 4) = v7;
	v8 = *(_DWORD *)&a4[2 * a3];
	*(_DWORD *)(a5 + 2 * a3) = v8;
	v9 = a3 + a5;
	v10 = &a4[a3];
	LOWORD_HEXRAYS(v8) = a2;
	v8 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)&v10[2 * a3 + 4];
	*(_DWORD *)(v9 + 2 * a3 + 4) = v8;
	result = *(_DWORD *)&v10[2 * a3];
	*(_DWORD *)(v9 + 2 * a3) = result;
	return result;
}

//----- (00460E20) --------------------------------------------------------
int __usercall sub_460E20@<eax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int result; // eax@1

	LOWORD_HEXRAYS(a1) = a2;
	v5 = __ROR4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)a5 = v5;
	*(_DWORD *)(a5 + 4) = v5;
	v6 = *(_DWORD *)(a3 + a4 + 4);
	*(_DWORD *)(a3 + a5 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a2;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a2;
	*(_DWORD *)(a3 + a5) = v6;
	*(_DWORD *)(a5 + 2 * a3 + 4) = *(_DWORD *)(a4 + 2 * a3 + 4);
	*(_DWORD *)(a5 + 2 * a3) = *(_DWORD *)(a4 + 2 * a3);
	v7 = a3 + a5;
	v8 = a3 + a4;
	*(_DWORD *)(v7 + 2 * a3 + 4) = *(_DWORD *)(v8 + 2 * a3 + 4);
	result = *(_DWORD *)(v8 + 2 * a3);
	*(_DWORD *)(v7 + 2 * a3) = result;
	return result;
}

//----- (00460E65) --------------------------------------------------------
__int16 __usercall sub_460E65@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // edi@1
	int v9; // eax@1
	int v10; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a1;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = *(_WORD *)(a3 + 2 * a2 + 2);
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = a2 + a3;
	v9 = *(_DWORD *)(v8 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v9;
	LOWORD_HEXRAYS(v9) = *(_WORD *)(v8 + 2 * a2 + 2);
	v10 = __ROL4__(v9, 16);
	LOWORD_HEXRAYS(v10) = a1;
	*(_DWORD *)(v7 + 2 * a2) = v10;
	return v10;
}

//----- (00460EBD) --------------------------------------------------------
__int16 __usercall sub_460EBD@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // eax@1
	int v6; // eax@1
	int v7; // esi@1
	int v8; // eax@1
	int v9; // eax@1

	v4 = *(_DWORD *)(a3 + 4);
	*(_DWORD *)(a4 + 4) = v4;
	LOWORD_HEXRAYS(v4) = *(_WORD *)(a3 + 2);
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)a4 = v4;
	v5 = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4 + 4) = v5;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(a2 + a3 + 2);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a1;
	*(_DWORD *)(a2 + a4) = v5;
	v6 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v6;
	LOWORD_HEXRAYS(v6) = a1;
	v6 = __ROL4__(v6, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v6;
	v7 = a2 + a4;
	v8 = *(_DWORD *)(a2 + a3 + 2 * a2 + 4);
	*(_DWORD *)(v7 + 2 * a2 + 4) = v8;
	LOWORD_HEXRAYS(v8) = a1;
	v9 = __ROL4__(v8, 16);
	LOWORD_HEXRAYS(v9) = a1;
	*(_DWORD *)(v7 + 2 * a2) = v9;
	return v9;
}

//----- (00460F14) --------------------------------------------------------
__int16 __usercall sub_460F14@<ax>(__int16 a1@<dx>, int a2@<ecx>, int a3@<edi>, int a4@<esi>)
{
	int v4; // eax@1
	int v5; // esi@1
	int v6; // eax@1

	*(_DWORD *)(a4 + 4) = *(_DWORD *)(a3 + 4);
	*(_DWORD *)a4 = *(_DWORD *)a3;
	*(_DWORD *)(a2 + a4 + 4) = *(_DWORD *)(a2 + a3 + 4);
	*(_DWORD *)(a2 + a4) = *(_DWORD *)(a2 + a3);
	v4 = *(_DWORD *)(a3 + 2 * a2 + 4);
	*(_DWORD *)(a4 + 2 * a2 + 4) = v4;
	LOWORD_HEXRAYS(v4) = a1;
	v4 = __ROL4__(v4, 16);
	LOWORD_HEXRAYS(v4) = a1;
	*(_DWORD *)(a4 + 2 * a2) = v4;
	v5 = a2 + a4;
	LOWORD_HEXRAYS(v4) = a1;
	v6 = __ROR4__(v4, 16);
	LOWORD_HEXRAYS(v6) = a1;
	*(_DWORD *)(v5 + 2 * a2) = v6;
	*(_DWORD *)(v5 + 2 * a2 + 4) = v6;
	return v6;
}

//----- (00460F57) --------------------------------------------------------
__int16 __usercall sub_460F57@<ax>(int a1@<eax>, __int16 a2@<dx>, int a3@<ecx>, int a4@<edi>, int a5@<esi>)
{
	int v5; // eax@1
	int v6; // esi@1
	int v7; // edi@1
	int v8; // eax@1

	LOWORD_HEXRAYS(a1) = *(_WORD *)(a4 + 6);
	v5 = __ROL4__(a1, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = *(_WORD *)a4;
	*(_DWORD *)a5 = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a3 + a5) = v5;
	*(_DWORD *)(a3 + a5 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v5 = __ROR4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(a5 + 2 * a3) = v5;
	*(_DWORD *)(a5 + 2 * a3 + 4) = v5;
	v6 = a3 + a5;
	v7 = a3 + a4;
	LOWORD_HEXRAYS(v5) = *(_WORD *)(v7 + 2 * a3 + 6);
	v5 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v5) = a2;
	*(_DWORD *)(v6 + 2 * a3 + 4) = v5;
	LOWORD_HEXRAYS(v5) = a2;
	v8 = __ROL4__(v5, 16);
	LOWORD_HEXRAYS(v8) = *(_WORD *)(v7 + 2 * a3);
	*(_DWORD *)(v6 + 2 * a3) = v8;
	return v8;
}*/